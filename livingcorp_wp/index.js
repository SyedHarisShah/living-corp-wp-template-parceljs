// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"2Rr7r":[function(require,module,exports) {
"use strict";
var global = arguments[3];
var HMR_HOST = null;
var HMR_PORT = null;
var HMR_SECURE = false;
var HMR_ENV_HASH = "42036d7a98ade5a7";
module.bundle.HMR_BUNDLE_ID = "a54048edd87bb407";
/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: mixed;
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
interface ExtensionContext {
  runtime: {|
    reload(): void,
    getURL(url: string): string;
    getManifest(): {manifest_version: number, ...};
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
declare var chrome: ExtensionContext;
declare var browser: ExtensionContext;
declare var __parcel__import__: (string) => Promise<void>;
declare var __parcel__importScripts__: (string) => Promise<void>;
declare var globalThis: typeof self;
declare var ServiceWorkerGlobalScope: Object;
*/ var OVERLAY_ID = "__parcel__error__overlay__";
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData,
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function(fn) {
            this._acceptCallbacks.push(fn || function() {});
        },
        dispose: function(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData = undefined;
}
module.bundle.Module = Module;
var checkedAssets, acceptedAssets, assetsToAccept /*: Array<[ParcelRequire, string]> */ ;
function getHostname() {
    return HMR_HOST || (location.protocol.indexOf("http") === 0 ? location.hostname : "localhost");
}
function getPort() {
    return HMR_PORT || location.port;
} // eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== "undefined") {
    var hostname = getHostname();
    var port = getPort();
    var protocol = HMR_SECURE || location.protocol == "https:" && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? "wss" : "ws";
    var ws = new WebSocket(protocol + "://" + hostname + (port ? ":" + port : "") + "/"); // Web extension context
    var extCtx = typeof chrome === "undefined" ? typeof browser === "undefined" ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.
    // eval may also be disabled via CSP, so do a quick check.
    var supportsSourceURL = false;
    try {
        (0, eval)('throw new Error("test"); //# sourceURL=test.js');
    } catch (err) {
        supportsSourceURL = err.stack.includes("test.js");
    } // $FlowFixMe
    ws.onmessage = async function(event) {
        checkedAssets = {} /*: {|[string]: boolean|} */ ;
        acceptedAssets = {} /*: {|[string]: boolean|} */ ;
        assetsToAccept = [];
        var data = JSON.parse(event.data);
        if (data.type === "update") {
            // Remove error overlay if there is one
            if (typeof document !== "undefined") removeErrorOverlay();
            let assets = data.assets.filter((asset)=>asset.envHash === HMR_ENV_HASH); // Handle HMR Update
            let handled = assets.every((asset)=>{
                return asset.type === "css" || asset.type === "js" && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
            });
            if (handled) {
                console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.
                if (typeof window !== "undefined" && typeof CustomEvent !== "undefined") window.dispatchEvent(new CustomEvent("parcelhmraccept"));
                await hmrApplyUpdates(assets);
                for(var i = 0; i < assetsToAccept.length; i++){
                    var id = assetsToAccept[i][1];
                    if (!acceptedAssets[id]) hmrAcceptRun(assetsToAccept[i][0], id);
                }
            } else fullReload();
        }
        if (data.type === "error") {
            // Log parcel errors to console
            for (let ansiDiagnostic of data.diagnostics.ansi){
                let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
                console.error("\uD83D\uDEA8 [parcel]: " + ansiDiagnostic.message + "\n" + stack + "\n\n" + ansiDiagnostic.hints.join("\n"));
            }
            if (typeof document !== "undefined") {
                // Render the fancy html overlay
                removeErrorOverlay();
                var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe
                document.body.appendChild(overlay);
            }
        }
    };
    ws.onerror = function(e) {
        console.error(e.message);
    };
    ws.onclose = function() {
        console.warn("[parcel] \uD83D\uDEA8 Connection to the HMR server was lost");
    };
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log("[parcel] ✨ Error resolved");
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement("div");
    overlay.id = OVERLAY_ID;
    let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    for (let diagnostic of diagnostics){
        let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame)=>{
            return `${p}
<a href="/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}" style="text-decoration: underline; color: #888" onclick="fetch(this.href); return false">${frame.location}</a>
${frame.code}`;
        }, "") : diagnostic.stack;
        errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          🚨 ${diagnostic.message}
        </div>
        <pre>${stack}</pre>
        <div>
          ${diagnostic.hints.map((hint)=>"<div>\uD83D\uDCA1 " + hint + "</div>").join("")}
        </div>
        ${diagnostic.documentation ? `<div>📝 <a style="color: violet" href="${diagnostic.documentation}" target="_blank">Learn more</a></div>` : ""}
      </div>
    `;
    }
    errorHTML += "</div>";
    overlay.innerHTML = errorHTML;
    return overlay;
}
function fullReload() {
    if ("reload" in location) location.reload();
    else if (extCtx && extCtx.runtime && extCtx.runtime.reload) extCtx.runtime.reload();
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute("href", link.getAttribute("href").split("?")[0] + "?" + Date.now()); // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout) return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href = links[i].getAttribute("href");
            var hostname = getHostname();
            var servedFromHMRServer = hostname === "localhost" ? new RegExp("^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):" + getPort()).test(href) : href.indexOf(hostname + ":" + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrDownload(asset) {
    if (asset.type === "js") {
        if (typeof document !== "undefined") {
            let script = document.createElement("script");
            script.src = asset.url + "?t=" + Date.now();
            if (asset.outputFormat === "esmodule") script.type = "module";
            return new Promise((resolve, reject)=>{
                var _document$head;
                script.onload = ()=>resolve(script);
                script.onerror = reject;
                (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);
            });
        } else if (typeof importScripts === "function") {
            // Worker scripts
            if (asset.outputFormat === "esmodule") return import(asset.url + "?t=" + Date.now());
            else return new Promise((resolve, reject)=>{
                try {
                    importScripts(asset.url + "?t=" + Date.now());
                    resolve();
                } catch (err) {
                    reject(err);
                }
            });
        }
    }
}
async function hmrApplyUpdates(assets) {
    global.parcelHotUpdate = Object.create(null);
    let scriptsToRemove;
    try {
        // If sourceURL comments aren't supported in eval, we need to load
        // the update from the dev server over HTTP so that stack traces
        // are correct in errors/logs. This is much slower than eval, so
        // we only do it if needed (currently just Safari).
        // https://bugs.webkit.org/show_bug.cgi?id=137297
        // This path is also taken if a CSP disallows eval.
        if (!supportsSourceURL) {
            let promises = assets.map((asset)=>{
                var _hmrDownload;
                return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch((err)=>{
                    // Web extension bugfix for Chromium
                    // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12
                    if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {
                        if (typeof ServiceWorkerGlobalScope != "undefined" && global instanceof ServiceWorkerGlobalScope) {
                            extCtx.runtime.reload();
                            return;
                        }
                        asset.url = extCtx.runtime.getURL("/__parcel_hmr_proxy__?url=" + encodeURIComponent(asset.url + "?t=" + Date.now()));
                        return hmrDownload(asset);
                    }
                    throw err;
                });
            });
            scriptsToRemove = await Promise.all(promises);
        }
        assets.forEach(function(asset) {
            hmrApply(module.bundle.root, asset);
        });
    } finally{
        delete global.parcelHotUpdate;
        if (scriptsToRemove) scriptsToRemove.forEach((script)=>{
            if (script) {
                var _document$head2;
                (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);
            }
        });
    }
}
function hmrApply(bundle, asset) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === "css") reloadCSS();
    else if (asset.type === "js") {
        let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                let oldDeps = modules[asset.id][1];
                for(let dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    let id = oldDeps[dep];
                    let parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            if (supportsSourceURL) // Global eval. We would use `new Function` here but browser
            // support for source maps is better with eval.
            (0, eval)(asset.output);
             // $FlowFixMe
            let fn = global.parcelHotUpdate[asset.id];
            modules[asset.id] = [
                fn,
                deps
            ];
        } else if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id) {
    let modules = bundle.modules;
    if (!modules) return;
    if (modules[id]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        let deps = modules[id][1];
        let orphans = [];
        for(let dep in deps){
            let parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id];
        delete bundle.cache[id]; // Now delete the orphans.
        orphans.forEach((id)=>{
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id);
}
function hmrAcceptCheck(bundle, id, depsByBundle) {
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
     // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    let parents = getParents(module.bundle.root, id);
    let accepted = false;
    while(parents.length > 0){
        let v = parents.shift();
        let a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else {
            // Otherwise, queue the parents in the next level upward.
            let p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push(...p);
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle, id, depsByBundle) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) return true;
        return hmrAcceptCheck(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return true;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    assetsToAccept.push([
        bundle,
        id
    ]);
    if (!cached || cached.hot && cached.hot._acceptCallbacks.length) return true;
}
function hmrAcceptRun(bundle, id) {
    var cached = bundle.cache[id];
    bundle.hotData = {};
    if (cached && cached.hot) cached.hot.data = bundle.hotData;
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData);
    });
    delete bundle.cache[id];
    bundle(id);
    cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {
        var assetsToAlsoAccept = cb(function() {
            return getParents(module.bundle.root, id);
        });
        if (assetsToAlsoAccept && assetsToAccept.length) // $FlowFixMe[method-unbinding]
        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
    });
    acceptedAssets[id] = true;
}

},{}],"hXVIw":[function(require,module,exports) {
var _appScss = require("./app\uD83D\uDD8C️.scss");
var _constructorJs = require("./js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/constructor\uD83E\uDEC0.js");
// //  console.log('%c 💀 CssKiller ','background-color:#111; font-weight:800; color:white; text-transform:uppercase;font-size:30px;');
(function(url) {
    // Create a new `Image` instance
    var image = new Image();
    image.onload = function() {
        // Inside here we already have the dimensions of the loaded image
        var style = [
            // Hacky way of forcing image's viewport using `font-size` and `line-height`
            "font-size: 1px;",
            "line-height: 100px;",
            // Hacky way of forcing a middle/center anchor point for the image
            "padding: 0px 50px;",
            // Set image dimensions
            "background-size: 100px 100px;",
            // Set image URL
            "background-color:rgb(36,36,36);",
            "background-image: url(" + url + ");"
        ].join(" ");
    // notice the space after %c
    // //  console.log('%c ', style);
    };
    // Actually loads the image
    image.src = url;
})("https://csskiller.es/ses.png");

},{"./app🖌️.scss":"gEkXb","./js🧠🧠🧠/constructor🫀.js":"aFKmD"}],"gEkXb":[function() {},{}],"aFKmD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _browserJs = require("./basic/browser.js");
var _browserJsDefault = parcelHelpers.interopDefault(_browserJs);
var _iconsJs = require("./basic/icons\uD83D\uDD30.js");
var _iconsJsDefault = parcelHelpers.interopDefault(_iconsJs);
var _mainJs = require("./basic/main\uD83D\uDC19.js");
var _mainJsDefault = parcelHelpers.interopDefault(_mainJs);
var _fontfaceobserver = require("fontfaceobserver");
var _fontfaceobserverDefault = parcelHelpers.interopDefault(_fontfaceobserver);
// import Login from '../views👁️👁️👁️/Login🥸/index.js'
const global = (0, _browserJsDefault.default).browserCheck();
global.icons = (0, _iconsJsDefault.default);
// //  console.log(navigator.userAgentData.mobile)
// //  console.log(process.env.APP_ENV)
if (window.history.scrollRestoration) window.history.scrollRestoration = "manual";
document.documentElement.style.setProperty("--app-height", window.innerHeight + "px");
async function getuser() {
    if (document.body.dataset.nonce) {
        // const usertest = await fetch(document.body.dataset.js+'/wp-json/wp/v2/users/me',{
        const usertest = await fetch(document.body.dataset.js + "/wp-json/csskiller/v1/getuser", {
            method: "post",
            headers: {
                "Content-Type": "application/json",
                "X-WP-Nonce": document.body.dataset.nonce // here you used the wrong name
            }
        });
        const userdata = await usertest.json();
        // //  console.log(userdata)
        document.body.dataset.user = userdata.user.id;
        document.documentElement.classList.add("logged");
        return userdata;
    }
}
async function login() {
    let formdata = new FormData();
    formdata.set("username", "usertest");
    formdata.set("password", encodeURIComponent("c"));
    const logtest = await fetch(document.body.dataset.js + "/wp-json/csskiller/v1/login", {
        method: "post",
        body: formdata
    });
    const datalog = await logtest.json();
    // //  console.log(datalog)
    document.body.dataset.nonce = datalog.nonce;
    document.body.dataset.user = datalog.user.ID;
    document.documentElement.classList.add("logged");
    return datalog;
}
async function start(main) {
    // //  console.log(document.body.dataset.js+'/wp-json/csskiller/v1/options')
    const response = await fetch(document.body.dataset.js + "/wp-json/csskiller/v1/options");
    const data = await response.json();
    global.user = null;
    if (document.documentElement.classList.contains("logme")) global.user = await login();
    else global.user = await getuser();
    // await 
    global.acf = data;
    // //  console.log(main)
    return global;
}
start(global).then((data)=>{
    Promise.all([
        new (0, _fontfaceobserverDefault.default)("roboto", {
            weight: 400
        }).load(),
        new (0, _fontfaceobserverDefault.default)("bureau", {
            weight: 700
        }).load(),
        new (0, _fontfaceobserverDefault.default)("bureau", {
            weight: 500
        }).load(),
        new (0, _fontfaceobserverDefault.default)("bureau", {
            weight: 400
        }).load(),
        new (0, _fontfaceobserverDefault.default)("bureau", {
            weight: 500
        }).load(),
        new (0, _fontfaceobserverDefault.default)("Berling").load(),
        new (0, _fontfaceobserverDefault.default)("Berling serif").load()
    ]).then(()=>{
        new (0, _mainJsDefault.default)(data);
    });
});

},{"./basic/browser.js":"apbKa","./basic/icons🔰.js":"kmKjG","./basic/main🐙.js":"3iw0Q","fontfaceobserver":"h4C4A","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"apbKa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function browserCheck() {
    var isMobile = /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || navigator.platform === "MacIntel" && navigator.maxTouchPoints > 1 || window.innerWidth < 1181;
    if (!isMobile) {
        var devicec = "desktop";
        document.documentElement.classList.add("smooth");
    } else {
        var devicec = "mobile";
        document.documentElement.classList.add("touch");
        document.documentElement.classList.add(devicec);
    }
    //No memoria scroll
    if (window.history.scrollRestoration) window.history.scrollRestoration = "manual";
    return {
        "device": devicec,
        "isTouch": isMobile
    };
}
exports.default = {
    browserCheck
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"i4gup":[function(require,module,exports) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, "__esModule", {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === "default" || key === "__esModule" || dest.hasOwnProperty(key)) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"kmKjG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _logoSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/logo.svg");
var _logoSvgDefault = parcelHelpers.interopDefault(_logoSvg);
var _logoxsSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/logoxs.svg");
var _logoxsSvgDefault = parcelHelpers.interopDefault(_logoxsSvg);
var _searchSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/search.svg");
var _searchSvgDefault = parcelHelpers.interopDefault(_searchSvg);
var _elipseSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/elipse.svg");
var _elipseSvgDefault = parcelHelpers.interopDefault(_elipseSvg);
var _blockSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/block.svg");
var _blockSvgDefault = parcelHelpers.interopDefault(_blockSvg);
var _listSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/list.svg");
var _listSvgDefault = parcelHelpers.interopDefault(_listSvg);
var _shareSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/share.svg");
var _shareSvgDefault = parcelHelpers.interopDefault(_shareSvg);
var _radarSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/social/radar.svg");
var _radarSvgDefault = parcelHelpers.interopDefault(_radarSvg);
var _spotifySvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/social/spotify.svg");
var _spotifySvgDefault = parcelHelpers.interopDefault(_spotifySvg);
var _trianguloSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/social/triangulo.svg");
var _trianguloSvgDefault = parcelHelpers.interopDefault(_trianguloSvg);
var _cuadraditosSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/social/cuadraditos.svg");
var _cuadraditosSvgDefault = parcelHelpers.interopDefault(_cuadraditosSvg);
var _slackSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/social/slack.svg");
var _slackSvgDefault = parcelHelpers.interopDefault(_slackSvg);
var _twSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/social/tw.svg");
var _twSvgDefault = parcelHelpers.interopDefault(_twSvg);
var _igSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/social/ig.svg");
var _igSvgDefault = parcelHelpers.interopDefault(_igSvg);
var _inSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/social/in.svg");
var _inSvgDefault = parcelHelpers.interopDefault(_inSvg);
var _fbSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/social/fb.svg");
var _fbSvgDefault = parcelHelpers.interopDefault(_fbSvg);
var _tumblerSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/social/tumbler.svg");
var _tumblerSvgDefault = parcelHelpers.interopDefault(_tumblerSvg);
var _redditSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/social/reddit.svg");
var _redditSvgDefault = parcelHelpers.interopDefault(_redditSvg);
var _markerSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/marker.svg");
var _markerSvgDefault = parcelHelpers.interopDefault(_markerSvg);
var _folderSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/folder.svg");
var _folderSvgDefault = parcelHelpers.interopDefault(_folderSvg);
var _closeSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/close.svg");
var _closeSvgDefault = parcelHelpers.interopDefault(_closeSvg);
var _tooltipSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/tooltip.svg");
var _tooltipSvgDefault = parcelHelpers.interopDefault(_tooltipSvg);
var _repeatSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/repeat.svg");
var _repeatSvgDefault = parcelHelpers.interopDefault(_repeatSvg);
var _rewindSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/rewind.svg");
var _rewindSvgDefault = parcelHelpers.interopDefault(_rewindSvg);
var _volumeSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/volume.svg");
var _volumeSvgDefault = parcelHelpers.interopDefault(_volumeSvg);
var _filterSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/filter.svg");
var _filterSvgDefault = parcelHelpers.interopDefault(_filterSvg);
var _regularSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/mouse/regular.svg");
var _regularSvgDefault = parcelHelpers.interopDefault(_regularSvg);
var _dragSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/mouse/drag.svg");
var _dragSvgDefault = parcelHelpers.interopDefault(_dragSvg);
var _draginSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/mouse/dragin.svg");
var _draginSvgDefault = parcelHelpers.interopDefault(_draginSvg);
var _hoverSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/mouse/hover.svg");
var _hoverSvgDefault = parcelHelpers.interopDefault(_hoverSvg);
var _gridSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/player/grid.svg");
var _gridSvgDefault = parcelHelpers.interopDefault(_gridSvg);
var _bookSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/player/book.svg");
var _bookSvgDefault = parcelHelpers.interopDefault(_bookSvg);
var _historySvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/player/history.svg");
var _historySvgDefault = parcelHelpers.interopDefault(_historySvg);
var _plusSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/player/plus.svg");
var _plusSvgDefault = parcelHelpers.interopDefault(_plusSvg);
var _heartSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/player/heart.svg");
var _heartSvgDefault = parcelHelpers.interopDefault(_heartSvg);
var _heartFilledSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/player/heart-filled.svg");
var _heartFilledSvgDefault = parcelHelpers.interopDefault(_heartFilledSvg);
var _shareSvg1 = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/player/share.svg");
var _shareSvgDefault1 = parcelHelpers.interopDefault(_shareSvg1);
var _loopSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/player/loop.svg");
var _loopSvgDefault = parcelHelpers.interopDefault(_loopSvg);
var _menuSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/player/menu.svg");
var _menuSvgDefault = parcelHelpers.interopDefault(_menuSvg);
var _shuffleSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/player/shuffle.svg");
var _shuffleSvgDefault = parcelHelpers.interopDefault(_shuffleSvg);
var _playSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/player/play.svg");
var _playSvgDefault = parcelHelpers.interopDefault(_playSvg);
var _pauseSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/player/pause.svg");
var _pauseSvgDefault = parcelHelpers.interopDefault(_pauseSvg);
var _playbtnSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/player/playbtn.svg");
var _playbtnSvgDefault = parcelHelpers.interopDefault(_playbtnSvg);
var _downarrowSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/downarrow.svg");
var _downarrowSvgDefault = parcelHelpers.interopDefault(_downarrowSvg);
var _droparrowSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/droparrow.svg");
var _droparrowSvgDefault = parcelHelpers.interopDefault(_droparrowSvg);
var _checkSvg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/check.svg");
var _checkSvgDefault = parcelHelpers.interopDefault(_checkSvg);
var _menu2Svg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/menu-2.svg");
var _menu2SvgDefault = parcelHelpers.interopDefault(_menu2Svg);
var _search2Svg = require("bundle-text:/src/svg\uD83D\uDD30\uD83D\uDD30\uD83D\uDD30/search-2.svg");
var _search2SvgDefault = parcelHelpers.interopDefault(_search2Svg);
const icons = {
    logo: (0, _logoSvgDefault.default),
    logoxs: (0, _logoxsSvgDefault.default),
    search: (0, _searchSvgDefault.default),
    elipse: (0, _elipseSvgDefault.default),
    block: (0, _blockSvgDefault.default),
    list: (0, _listSvgDefault.default),
    share: (0, _shareSvgDefault1.default),
    radar: (0, _radarSvgDefault.default),
    spotify: (0, _spotifySvgDefault.default),
    triangulo: (0, _trianguloSvgDefault.default),
    cuadraditos: (0, _cuadraditosSvgDefault.default),
    slack: (0, _slackSvgDefault.default),
    tw: (0, _twSvgDefault.default),
    ig: (0, _igSvgDefault.default),
    in: (0, _inSvgDefault.default),
    fb: (0, _fbSvgDefault.default),
    tumbler: (0, _tumblerSvgDefault.default),
    reddit: (0, _redditSvgDefault.default),
    marker: (0, _markerSvgDefault.default),
    folder: (0, _folderSvgDefault.default),
    tooltip: (0, _tooltipSvgDefault.default),
    repeat: (0, _repeatSvgDefault.default),
    rewind: (0, _rewindSvgDefault.default),
    volume: (0, _volumeSvgDefault.default),
    filter: (0, _filterSvgDefault.default),
    mhover: (0, _hoverSvgDefault.default),
    mdrag: (0, _dragSvgDefault.default),
    mdragin: (0, _draginSvgDefault.default),
    mreg: (0, _regularSvgDefault.default),
    grid: (0, _gridSvgDefault.default),
    book: (0, _bookSvgDefault.default),
    history: (0, _historySvgDefault.default),
    plus: (0, _plusSvgDefault.default),
    heart: (0, _heartSvgDefault.default),
    share: (0, _shareSvgDefault1.default),
    loop: (0, _loopSvgDefault.default),
    menu: (0, _menuSvgDefault.default),
    shuffle: (0, _shuffleSvgDefault.default),
    play: (0, _playSvgDefault.default),
    pause: (0, _pauseSvgDefault.default),
    heart_filled: (0, _heartFilledSvgDefault.default),
    playbtn: (0, _playbtnSvgDefault.default),
    close: (0, _closeSvgDefault.default),
    downarrow: (0, _downarrowSvgDefault.default),
    droparrow: (0, _droparrowSvgDefault.default),
    check: (0, _checkSvgDefault.default),
    menu_2: (0, _menu2SvgDefault.default),
    search_2: (0, _search2SvgDefault.default)
};
exports.default = icons;

},{"bundle-text:/src/svg🔰🔰🔰/logo.svg":"24zPe","bundle-text:/src/svg🔰🔰🔰/logoxs.svg":"k4Tqf","bundle-text:/src/svg🔰🔰🔰/search.svg":"iOZDt","bundle-text:/src/svg🔰🔰🔰/elipse.svg":"fQQYe","bundle-text:/src/svg🔰🔰🔰/block.svg":"gTaww","bundle-text:/src/svg🔰🔰🔰/list.svg":"7CteJ","bundle-text:/src/svg🔰🔰🔰/share.svg":"lxprO","bundle-text:/src/svg🔰🔰🔰/social/radar.svg":"lK1zD","bundle-text:/src/svg🔰🔰🔰/social/spotify.svg":"hAPEw","bundle-text:/src/svg🔰🔰🔰/social/triangulo.svg":"jbvrU","bundle-text:/src/svg🔰🔰🔰/social/cuadraditos.svg":"83JuM","bundle-text:/src/svg🔰🔰🔰/social/slack.svg":"5twL5","bundle-text:/src/svg🔰🔰🔰/social/tw.svg":"g37Y8","bundle-text:/src/svg🔰🔰🔰/social/ig.svg":"lNyI5","bundle-text:/src/svg🔰🔰🔰/social/in.svg":"6AhvX","bundle-text:/src/svg🔰🔰🔰/social/fb.svg":"53Vdp","bundle-text:/src/svg🔰🔰🔰/social/tumbler.svg":"zcLmN","bundle-text:/src/svg🔰🔰🔰/social/reddit.svg":"ivkCF","bundle-text:/src/svg🔰🔰🔰/marker.svg":"90xRO","bundle-text:/src/svg🔰🔰🔰/folder.svg":"hI3YG","bundle-text:/src/svg🔰🔰🔰/close.svg":"9VM9X","bundle-text:/src/svg🔰🔰🔰/tooltip.svg":"30Qfk","bundle-text:/src/svg🔰🔰🔰/repeat.svg":"5vfi2","bundle-text:/src/svg🔰🔰🔰/rewind.svg":"2QfAE","bundle-text:/src/svg🔰🔰🔰/volume.svg":"5CCV3","bundle-text:/src/svg🔰🔰🔰/filter.svg":"gH9Bh","bundle-text:/src/svg🔰🔰🔰/mouse/regular.svg":"7cCbx","bundle-text:/src/svg🔰🔰🔰/mouse/drag.svg":"jA7hH","bundle-text:/src/svg🔰🔰🔰/mouse/dragin.svg":"i9RYh","bundle-text:/src/svg🔰🔰🔰/mouse/hover.svg":"39j6j","bundle-text:/src/svg🔰🔰🔰/player/grid.svg":"9WTWB","bundle-text:/src/svg🔰🔰🔰/player/book.svg":"4uiY7","bundle-text:/src/svg🔰🔰🔰/player/history.svg":"1iu93","bundle-text:/src/svg🔰🔰🔰/player/plus.svg":"8kpix","bundle-text:/src/svg🔰🔰🔰/player/heart.svg":"3wjZR","bundle-text:/src/svg🔰🔰🔰/player/heart-filled.svg":"6Dcc4","bundle-text:/src/svg🔰🔰🔰/player/share.svg":"bfB2a","bundle-text:/src/svg🔰🔰🔰/player/loop.svg":"156Bc","bundle-text:/src/svg🔰🔰🔰/player/menu.svg":"sKDsC","bundle-text:/src/svg🔰🔰🔰/player/shuffle.svg":"dN4XP","bundle-text:/src/svg🔰🔰🔰/player/play.svg":"3GGHp","bundle-text:/src/svg🔰🔰🔰/player/pause.svg":"8I1wq","bundle-text:/src/svg🔰🔰🔰/player/playbtn.svg":"h3Uf2","bundle-text:/src/svg🔰🔰🔰/downarrow.svg":"iHF58","bundle-text:/src/svg🔰🔰🔰/droparrow.svg":"ebFW9","bundle-text:/src/svg🔰🔰🔰/check.svg":"4lWCi","bundle-text:/src/svg🔰🔰🔰/menu-2.svg":"7VUCE","bundle-text:/src/svg🔰🔰🔰/search-2.svg":"gNbAr","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"24zPe":[function(require,module,exports) {
module.exports = "<svg class=\"logolg\" viewBox=\"0 0 201 38\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M6.12628 0.150391H0V16.9703H14.0562V12.9226H6.12628V0.150391Z\" fill=\"black\"></path>\n<path d=\"M23.0045 0.150391H16.9155V16.9726H23.0045V0.150391Z\" fill=\"black\"></path>\n<path d=\"M35.88 13.3978L31.9897 0.150391H25.7646L31.2941 16.9703H40.455L45.9471 0.150391H39.7572L35.88 13.3978Z\" fill=\"black\"></path>\n<path d=\"M54.7462 0.150391H48.6572V16.9726H54.7462V0.150391Z\" fill=\"black\"></path>\n<path d=\"M64.1173 4.49067L70.169 16.9703H79.9508V0.150391H73.8355L73.8158 12.1725L67.9703 0.150391H58.0151V16.9703H64.1173V4.49067Z\" fill=\"black\"></path>\n<path d=\"M91.8435 17.0707C94.2557 17.0707 96.1281 16.5846 97.4608 15.6122L97.7482 16.9695H101.825V7.62464H92.64V11.0652H95.5233C95.4223 11.7955 95.1371 12.3037 94.6653 12.5853C94.1936 12.8668 93.3883 13.0252 92.3043 13.0252C91.1531 13.0252 90.233 12.7202 89.544 12.1101C88.855 11.5 88.5112 10.3392 88.5127 8.62776C88.5127 6.60831 88.8565 5.33901 89.544 4.81984C90.2315 4.30068 91.1472 4.0411 92.2912 4.0411C93.3605 4.0411 94.1811 4.19289 94.7531 4.49647C95.325 4.80005 95.6395 5.37494 95.6966 6.22114H101.825C101.825 4.56833 101.025 3.11937 99.4246 1.87426C97.8243 0.629154 95.4384 0.00439967 92.267 0C88.7563 0 86.2227 0.733279 84.6662 2.19984C83.1098 3.6664 82.333 5.76357 82.3359 8.49137C82.3359 11.181 83.0842 13.2826 84.5806 14.7961C86.0771 16.3096 88.4981 17.0678 91.8435 17.0707Z\" fill=\"black\"></path>\n<path d=\"M26.831 25.6958C27.5346 25.1855 28.4255 24.9303 29.5036 24.9303C30.5466 24.9303 31.3752 25.1334 31.9896 25.5396C32.604 25.9459 32.9119 26.7224 32.9134 27.8693H39.1384C39.1384 26.0595 38.4407 24.4397 37.0451 23.0098C35.6496 21.5799 33.1577 20.8657 29.5694 20.8672C26.0147 20.8672 23.4548 21.6173 21.8896 23.1176C20.3244 24.6179 19.544 26.7048 19.5484 29.3784C19.5484 32.0592 20.3273 34.1564 21.8852 35.6699C23.4431 37.1834 26.0074 37.9394 29.5782 37.9379C33.1577 37.9379 35.6445 37.2113 37.0385 35.7579C38.4326 34.3045 39.1304 32.6913 39.1318 30.9183H32.9134C32.9134 32.0402 32.6047 32.813 31.9874 33.2369C31.3701 33.6607 30.5422 33.8741 29.5036 33.877C28.5553 33.9128 27.6207 33.6422 26.8376 33.1049C26.1296 32.5901 25.7756 31.3487 25.7756 29.3806C25.7756 27.4344 26.1274 26.2062 26.831 25.6958Z\" fill=\"black\"></path>\n<path d=\"M58.6845 22.9856C57.0754 21.5733 54.4986 20.8672 50.9542 20.8672C47.4098 20.8672 44.8338 21.5733 43.2261 22.9856C41.617 24.3979 40.8125 26.5494 40.8125 29.44C40.8125 32.3305 41.617 34.4761 43.2261 35.8767C44.8352 37.2919 47.412 37.9995 50.9564 37.9995C54.5008 37.9995 57.0776 37.2919 58.6867 35.8767C60.2958 34.46 61.1003 32.3144 61.1003 29.44C61.1003 26.5655 60.295 24.4141 58.6845 22.9856ZM53.8923 33.1533C53.1609 33.6768 52.1815 33.9386 50.9542 33.9386C49.7269 33.9386 48.7512 33.6768 48.0271 33.1533C47.2957 32.6297 46.93 31.3919 46.93 29.44C46.93 27.4469 47.2957 26.1967 48.0271 25.6892C48.7585 25.1818 49.7342 24.9288 50.9542 24.9303C52.1874 24.9303 53.1667 25.1833 53.8923 25.6892C54.6178 26.1952 54.9836 27.4454 54.9894 29.44C54.9836 31.3919 54.6178 32.6297 53.8923 33.1533Z\" fill=\"black\"></path>\n<path d=\"M80.0739 30.4505C80.9837 29.4782 81.4394 28.1737 81.4409 26.537C81.4423 24.9003 81.013 23.5672 80.1529 22.5377C79.2971 21.5228 77.8167 21.0161 75.7117 21.0176H63.0708V37.8375H69.2146V31.898H71.4637L75.1807 37.8375H81.9412L77.6558 31.689C78.7061 31.4587 79.5121 31.0459 80.0739 30.4505ZM69.2102 25.0785H73.5724C74.2028 25.0785 74.6483 25.2068 74.9087 25.4635C75.0494 25.6223 75.1568 25.8081 75.2243 26.0096C75.2918 26.211 75.318 26.4241 75.3014 26.636C75.3014 27.1757 75.1705 27.5702 74.9087 27.8195C74.6468 28.0688 74.2014 28.1935 73.5724 28.1935H69.2102V25.0785Z\" fill=\"black\"></path>\n<path d=\"M95.4841 21.0176H83.6353V37.8375H89.7615V33.8008H95.4907C97.935 33.8008 99.607 33.2142 100.507 32.041C101.406 30.8677 101.855 29.3278 101.854 27.4213C101.854 25.5148 101.403 23.9749 100.5 22.8016C99.5975 21.6284 97.9255 21.0337 95.4841 21.0176ZM95.2866 29.2714C94.9619 29.5837 94.4616 29.7399 93.7814 29.7399H89.755V25.0785H93.7814C94.4616 25.0785 94.9619 25.2347 95.2866 25.5514C95.6113 25.8682 95.7693 26.4864 95.7693 27.4081C95.7693 28.3298 95.6092 28.9612 95.2866 29.2714Z\" fill=\"black\"></path>\n<path d=\"M121.198 22.9856C119.589 21.5733 117.012 20.8672 113.468 20.8672C109.923 20.8672 107.349 21.5733 105.744 22.9856C104.135 24.3979 103.331 26.5494 103.331 29.44C103.331 32.3305 104.135 34.4761 105.744 35.8767C107.353 37.2919 109.93 37.9995 113.474 37.9995C117.019 37.9995 119.596 37.2919 121.205 35.8767C122.814 34.46 123.618 32.3144 123.618 29.44C123.618 26.5655 122.812 24.4141 121.198 22.9856ZM116.408 33.1533C115.677 33.6768 114.697 33.9386 113.468 33.9386C112.239 33.9386 111.263 33.6768 110.541 33.1533C109.809 32.6297 109.444 31.3919 109.444 29.44C109.444 27.4469 109.809 26.1967 110.541 25.6892C111.272 25.1818 112.248 24.9288 113.468 24.9303C114.704 24.9303 115.684 25.1833 116.408 25.6892C117.132 26.1952 117.498 27.4454 117.505 29.44C117.498 31.3919 117.132 32.6297 116.408 33.1533Z\" fill=\"black\"></path>\n<path d=\"M142.588 30.4505C143.499 29.4782 143.955 28.1737 143.955 26.537C143.955 24.9003 143.526 23.5672 142.669 22.5377C141.81 21.5228 140.329 21.0161 138.225 21.0176H125.587V37.8375H131.731V31.898H133.98L137.694 37.8375H144.457L140.167 31.6912C141.221 31.4595 142.027 31.0459 142.588 30.4505ZM131.726 25.0785H136.088C136.719 25.0785 137.164 25.2068 137.425 25.4635C137.685 25.7201 137.815 26.1109 137.815 26.636C137.815 27.1757 137.685 27.5702 137.425 27.8195C137.164 28.0688 136.719 28.1935 136.088 28.1935H131.726V25.0785Z\" fill=\"black\"></path>\n<path d=\"M151.485 21.0176L145.372 37.8375H151.722L152.841 34.3354H159.18L160.297 37.8375H166.636L160.534 21.0176H151.485ZM154.046 30.4505L155.986 24.3701H156.06L157.998 30.4505H154.046Z\" fill=\"black\"></path>\n<path d=\"M165.083 25.0807H171.073V37.8397H177.199V25.0807H183.165V21.0176H165.083V25.0807Z\" fill=\"black\"></path>\n<path d=\"M201 25.0807V21.0176H185.302V37.8397H201V33.7766H191.442V31.3106H200.179V27.4851H191.442V25.0807H201Z\" fill=\"black\"></path>\n</svg>\n";

},{}],"k4Tqf":[function(require,module,exports) {
module.exports = "<svg class=\"logoxs\" viewBox=\"0 0 44 31\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M8.27112 0H0V22.7087H18.9774V17.2439H8.27112V0Z\" fill=\"black\"></path>\n<path d=\"M27.3837 14.4166C28.3337 13.7276 29.5364 13.3831 30.992 13.3831C32.4001 13.3831 33.5189 13.6573 34.3484 14.2058C35.1779 14.7542 35.5936 15.8026 35.5956 17.351H44C44 14.9077 43.058 12.7208 41.1738 10.7903C39.2897 8.85975 35.9254 7.89548 31.0808 7.89746C26.2817 7.89746 22.8255 8.91024 20.7123 10.9358C18.5991 12.9613 17.5455 15.7789 17.5514 19.3884C17.5514 23.0079 18.6031 25.8393 20.7064 27.8827C22.8097 29.926 26.2718 30.9467 31.0927 30.9448C35.9254 30.9448 39.2828 29.9637 41.165 28.0015C43.0471 26.0393 43.9891 23.8613 43.9911 21.4674H35.5956C35.5956 22.9822 35.1789 24.0256 34.3454 24.5978C33.512 25.1701 32.3942 25.4582 30.992 25.4621C29.7117 25.5105 28.4499 25.145 27.3926 24.4196C26.4367 23.7247 25.9588 22.0486 25.9588 19.3914C25.9588 16.7639 26.4338 15.1057 27.3837 14.4166Z\" fill=\"black\"></path>\n</svg>\n";

},{}],"iOZDt":[function(require,module,exports) {
module.exports = "<svg viewBox=\"0 0 35 38\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M26 15.5C26 21.299 21.299 26 15.5 26C9.70101 26 5 21.299 5 15.5C5 9.70101 9.70101 5 15.5 5C21.299 5 26 9.70101 26 15.5ZM22.7851 29.1847C20.6133 30.3433 18.1334 31 15.5 31C6.93959 31 0 24.0604 0 15.5C0 6.93959 6.93959 0 15.5 0C24.0604 0 31 6.93959 31 15.5C31 19.2601 29.6611 22.7074 27.4342 25.3913L34.4526 33.8262L29.8404 37.6639L22.7851 29.1847Z\" fill=\"black\"></path>\n</svg>\n";

},{}],"fQQYe":[function(require,module,exports) {
module.exports = "<svg viewBox=\"0 0 810 810\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M342.941 690.825C269.987 707.143 202.158 695.855 157.898 651.595C113.639 607.336 102.35 539.507 118.668 466.553C135.002 393.528 179.093 314.604 246.849 246.849C314.604 179.093 393.528 135.002 466.553 118.668C539.507 102.35 607.336 113.639 651.595 157.898C695.855 202.158 707.144 269.987 690.826 342.941C674.492 415.966 630.401 494.889 562.645 562.645C494.89 630.401 415.966 674.491 342.941 690.825ZM161.434 648.06C246.686 733.312 424.732 693.488 559.11 559.109C693.488 424.731 733.312 246.686 648.06 161.434C562.808 76.1816 384.762 116.006 250.384 250.384C116.006 384.762 76.1818 562.808 161.434 648.06Z\" fill=\"#FEF9F3\"></path>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M342.068 686.922C269.905 703.063 203.68 691.72 160.727 648.767C117.774 605.815 106.431 539.589 122.572 467.426C138.716 395.249 182.375 316.98 249.677 249.677C316.979 182.375 395.249 138.716 467.426 122.572C539.589 106.431 605.814 117.774 648.767 160.727C691.72 203.68 703.063 269.905 686.922 342.068C670.778 414.245 627.119 492.515 559.817 559.817C492.514 627.119 414.245 670.778 342.068 686.922ZM161.434 648.06C246.686 733.312 424.732 693.488 559.11 559.11C693.488 424.732 733.312 246.686 648.06 161.434C562.808 76.182 384.762 116.006 250.384 250.384C116.006 384.763 76.1818 562.808 161.434 648.06Z\" fill=\"black\"></path>\n</svg>\n";

},{}],"gTaww":[function(require,module,exports) {
module.exports = "<svg viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<rect width=\"7\" height=\"7\" fill=\"black\"></rect>\n<rect y=\"9\" width=\"7\" height=\"7\" fill=\"black\"></rect>\n<rect x=\"9\" width=\"7\" height=\"7\" fill=\"black\"></rect>\n<rect x=\"9\" y=\"9\" width=\"7\" height=\"7\" fill=\"black\"></rect>\n</svg>\n";

},{}],"7CteJ":[function(require,module,exports) {
module.exports = "<svg viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<rect width=\"4\" height=\"4\" fill=\"black\"></rect>\n<rect x=\"6\" width=\"10\" height=\"4\" fill=\"black\"></rect>\n<rect x=\"6\" y=\"6\" width=\"10\" height=\"4\" fill=\"black\"></rect>\n<rect x=\"6\" y=\"12\" width=\"10\" height=\"4\" fill=\"black\"></rect>\n<rect y=\"6\" width=\"4\" height=\"4\" fill=\"black\"></rect>\n<rect y=\"12\" width=\"4\" height=\"4\" fill=\"black\"></rect>\n</svg>\n";

},{}],"lxprO":[function(require,module,exports) {
module.exports = "<svg width=\"19\" height=\"24\" viewBox=\"0 0 19 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M6.85202 7.74726V8.80065C6.75449 8.80065 6.65695 8.81425 6.55942 8.81425H2.88677C2.28699 8.81425 2.08072 9.02152 2.08072 9.62637C2.08072 13.4435 2.08072 17.2606 2.08072 21.0778C2.08072 21.7053 2.25785 21.882 2.88229 21.882H16.1424C16.7478 21.882 16.9271 21.6996 16.9271 21.0891C16.9271 17.2538 16.9271 13.4182 16.9271 9.5822C16.9271 8.97621 16.7478 8.80065 16.1334 8.80065H11.6491V7.74047C11.7074 7.74047 11.7691 7.72461 11.8307 7.72461C13.3072 7.72461 14.7836 7.72461 16.2601 7.72461C17.1054 7.72461 17.7175 8.17768 17.9271 8.96149C17.9745 9.16287 17.9956 9.36963 17.9899 9.57654C17.9899 13.4276 17.9798 17.2855 18 21.14C18.0067 22.3531 17.1413 22.9954 16.1592 22.9942C11.7205 22.9942 7.28176 22.9942 2.84305 22.9942C1.94619 22.9942 1.28251 22.5412 1.07063 21.7664C1.02012 21.5563 0.997506 21.3403 1.00336 21.1242C0.998879 17.2784 0.998879 13.4333 1.00336 9.58899C1.00336 8.42687 1.68273 7.74613 2.8352 7.74386C4.16928 7.745 5.49552 7.74726 6.85202 7.74726Z\" fill=\"black\" stroke=\"black\" stroke-width=\"0.5\"></path>\n<path d=\"M5.60059 3.92004L9.50865 1L13.41 3.91665C13.1992 4.20321 12.9997 4.47165 12.7755 4.77521L10.0614 2.76358V16.7612H8.98288V2.74319L6.24408 4.77521L5.60059 3.92004Z\" fill=\"black\" stroke=\"black\" stroke-width=\"0.5\"></path>\n</svg>\n";

},{}],"lK1zD":[function(require,module,exports) {
module.exports = "<svg width=\"22\" height=\"24\" viewBox=\"0 0 22 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M7.34298 21.0927C3.87595 20.2132 -0.0729068 16.1968 0.00102251 10.7681C0.0825996 4.68166 4.81534 0.479177 9.71507 0.0470727C12.6773 -0.207856 15.3376 0.57094 17.6587 2.42554C19.9798 4.28015 21.3487 6.67776 21.6648 9.63366C22.3315 15.8437 18.0053 20.2132 14.2617 21.1743C14.3267 20.7332 14.3777 20.2935 14.4644 19.8627C14.4835 19.7696 14.6225 19.6778 14.7257 19.6268C16.2553 18.8812 17.5707 17.8742 18.5649 16.4772C19.1801 15.6509 19.6337 14.716 19.902 13.7214C20.12 12.8445 20.3201 11.9446 20.3673 11.0447C20.4093 9.87751 20.2088 8.71436 19.7784 7.62864C19.3895 6.57286 18.8182 5.5935 18.0907 4.73518C16.8416 3.27572 15.3184 2.2369 13.4447 1.73215C11.8874 1.29455 10.2438 1.26384 8.67114 1.64293C5.54827 2.40771 3.33422 4.298 2.07487 7.27046C1.50656 8.56507 1.25407 9.97621 1.33815 11.3876C1.4396 13.0549 1.9714 14.6675 2.88173 16.068C3.81999 17.5299 5.14672 18.7017 6.71331 19.4522C6.82657 19.4974 6.92604 19.5713 7.00185 19.6668C7.07765 19.7623 7.12717 19.876 7.14543 19.9965C7.20407 20.3585 7.27415 20.7167 7.34298 21.0927Z\" fill=\"#FEF9F3\"></path>\n<path d=\"M14.7111 16.8509C14.7111 16.3067 14.6984 15.7981 14.7213 15.292C14.7213 15.1773 14.8488 15.055 14.9355 14.9594C15.7181 14.1347 16.2777 13.1876 16.4842 12.0608C16.7391 10.6587 16.4778 9.31908 15.8086 8.06993C15.0273 6.60919 13.7692 5.79723 12.1886 5.34601C9.067 4.45376 5.82306 6.68186 5.16917 9.60589C4.72049 11.6134 5.21763 13.4005 6.59424 14.9301C6.79181 15.1493 6.90525 15.3545 6.87848 15.6592C6.85172 15.9638 6.89121 16.2506 6.89504 16.5514C6.89504 16.6508 6.87972 16.7515 6.86952 16.865C4.84029 15.8911 3.35793 12.9493 3.60138 10.4573C3.99652 6.43074 7.25829 3.89293 10.5341 3.85979C14.0547 3.82282 17.0858 6.28161 17.7474 9.56254C18.4089 12.8435 16.5186 15.9676 14.7111 16.8509Z\" fill=\"#FEF9F3\"></path>\n<path d=\"M13.4276 17.1522C13.2887 18.2993 13.2046 19.4669 12.993 20.6051C12.812 21.5777 12.5532 22.5605 11.856 23.3201C11.5908 23.6163 11.258 23.8441 10.886 23.9842C10.6858 24.0531 10.3456 23.8733 10.1327 23.7178C9.58714 23.3214 9.2481 22.7504 9.02503 22.1245C8.55545 20.787 8.29988 19.3838 8.26784 17.9666C8.24872 17.2898 8.22578 16.6117 8.26784 15.9374C8.33157 14.8986 8.94213 14.2103 9.8637 13.833C10.2601 13.6602 10.6961 13.5987 11.1248 13.6551C11.5535 13.7114 11.9588 13.8836 12.297 14.1529C12.6176 14.3806 12.8797 14.681 13.0618 15.0295C13.2439 15.378 13.3409 15.7647 13.3448 16.1579C13.355 16.4855 13.3448 16.8144 13.3448 17.1419L13.4276 17.1522Z\" fill=\"#FEF9F3\"></path>\n<path d=\"M10.861 7.53591C12.2376 7.53591 13.3987 8.72513 13.3987 10.1349C13.3988 10.6519 13.2449 11.1571 12.9565 11.5862C12.668 12.0152 12.2582 12.3485 11.7795 12.5435C11.3007 12.7386 10.7747 12.7865 10.2686 12.6811C9.76246 12.5758 9.29922 12.3219 8.93805 11.9521C8.57688 11.5822 8.33419 11.113 8.24092 10.6045C8.14765 10.0961 8.20805 9.57133 8.41444 9.09734C8.62082 8.62336 8.96377 8.22163 9.39955 7.94351C9.83532 7.66538 10.3441 7.52349 10.861 7.53591V7.53591Z\" fill=\"#FEF9F3\"></path>\n</svg>\n";

},{}],"hAPEw":[function(require,module,exports) {
module.exports = "<svg width=\"22\" height=\"23\" viewBox=\"0 0 22 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M10.8641 0.358399C8.71481 0.358912 6.61395 0.996766 4.82719 2.1913C3.04043 3.38583 1.64803 5.08338 0.826064 7.06928C0.00410373 9.05517 -0.210495 11.2402 0.209407 13.3481C0.629308 15.4559 1.66485 17.392 3.18508 18.9113C4.7053 20.4306 6.64193 21.465 8.75004 21.8836C10.8582 22.3023 13.0431 22.0864 15.0285 21.2632C17.0139 20.4401 18.7106 19.0466 19.9041 17.2592C21.0975 15.4717 21.7341 13.3705 21.7334 11.2212C21.7323 8.33939 20.5866 5.57601 18.5483 3.53888C16.5099 1.50175 13.7459 0.35771 10.8641 0.358399V0.358399ZM15.8465 16.0311C15.8002 16.1071 15.7394 16.1733 15.6675 16.2258C15.5956 16.2783 15.5141 16.3161 15.4275 16.3371C15.341 16.3581 15.2512 16.3618 15.1632 16.348C15.0753 16.3342 14.9909 16.3032 14.9149 16.2568C12.364 14.6998 9.15267 14.3443 5.37041 15.2084C5.28253 15.2319 5.19082 15.2374 5.10077 15.2246C5.01071 15.2118 4.92415 15.181 4.84626 15.134C4.76836 15.0871 4.70072 15.0249 4.64737 14.9512C4.59403 14.8776 4.55606 14.7939 4.53575 14.7053C4.51544 14.6166 4.51319 14.5247 4.52915 14.4352C4.5451 14.3457 4.57893 14.2602 4.62861 14.184C4.67829 14.1079 4.74281 14.0425 4.81832 13.9917C4.89382 13.941 4.97877 13.906 5.06809 13.8889C9.20716 12.9417 12.7585 13.3491 15.6221 15.0995C15.6983 15.1455 15.7647 15.2062 15.8175 15.278C15.8703 15.3498 15.9084 15.4313 15.9296 15.5179C15.9508 15.6044 15.9547 15.6943 15.9411 15.7824C15.9276 15.8704 15.8967 15.9549 15.8504 16.0311H15.8465ZM17.1765 13.0727C17.1182 13.1678 17.0417 13.2504 16.9514 13.3158C16.8612 13.3813 16.7589 13.4283 16.6504 13.4542C16.542 13.4801 16.4295 13.4844 16.3194 13.4668C16.2093 13.4492 16.1037 13.4101 16.0087 13.3517C13.088 11.5559 8.63626 11.0369 5.18098 12.0853C5.07448 12.1176 4.96267 12.1286 4.85192 12.1177C4.74118 12.1068 4.63367 12.0741 4.53554 12.0217C4.33734 11.9157 4.18936 11.7353 4.12415 11.5203C4.05894 11.3052 4.08184 11.073 4.18781 10.8748C4.29378 10.6766 4.47414 10.5286 4.68922 10.4634C8.63496 9.26713 13.5409 9.84712 16.8949 11.9076C17.0872 12.0243 17.2253 12.2126 17.2788 12.4311C17.3324 12.6495 17.297 12.8803 17.1804 13.0727H17.1765ZM17.2907 9.99114C13.7874 7.91512 8.01085 7.72049 4.66716 8.73515C4.40907 8.81326 4.13052 8.78565 3.89278 8.65839C3.65505 8.53113 3.47761 8.31464 3.39949 8.05655C3.32137 7.79846 3.34898 7.5199 3.47625 7.28217C3.60351 7.04443 3.82 6.86699 4.07809 6.78888C7.91614 5.62111 14.296 5.84818 18.3287 8.24209C18.4434 8.31025 18.5437 8.40034 18.6236 8.50723C18.7035 8.61411 18.7616 8.7357 18.7946 8.86504C18.8275 8.99438 18.8347 9.12894 18.8156 9.26105C18.7966 9.39315 18.7517 9.52021 18.6836 9.63497C18.6154 9.74973 18.5253 9.84994 18.4184 9.92988C18.3115 10.0098 18.1899 10.0679 18.0606 10.1009C17.9313 10.1338 17.7967 10.141 17.6646 10.1219C17.5325 10.1029 17.4054 10.058 17.2907 9.98984V9.99114Z\" fill=\"#FEF9F3\"></path>\n</svg>\n";

},{}],"jbvrU":[function(require,module,exports) {
module.exports = "<svg width=\"20\" height=\"23\" viewBox=\"0 0 20 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M0.883426 22.0918C0.872792 22.0756 0.865986 22.0531 0.850675 22.0437C0.2331 21.6694 -0.00253148 21.111 2.04848e-05 20.4019C0.00739282 14.2622 0.00809339 8.12261 0.00213881 1.98316C0.00213881 1.2601 0.286699 0.717374 0.944255 0.358398L12.0793 11.2787C11.9942 11.3212 11.9036 11.3442 11.8454 11.4012C8.26838 14.9053 4.69307 18.4114 1.11947 21.9195C1.06503 21.9727 1.01825 22.0343 0.96764 22.0918H0.883426Z\" fill=\"#FEF9F3\"></path>\n<path d=\"M12.9867 12.1201L15.4817 14.7406L3.5836 21.4573L3.55469 21.4207L12.9867 12.1201Z\" fill=\"#FEF9F3\"></path>\n<path d=\"M12.9823 10.3294L3.58984 1.06577L3.6243 1.01855L15.4735 7.70725L12.9823 10.3294Z\" fill=\"#FEF9F3\"></path>\n<path d=\"M13.9307 11.2188C14.7949 10.3843 15.6443 9.56469 16.4937 8.74551C16.7578 8.49031 16.7587 8.4903 17.0798 8.6732C17.7795 9.07088 18.4834 9.46516 19.1783 9.86794C19.7083 10.175 19.9261 10.671 19.9231 11.2545C19.9201 11.8381 19.707 12.3268 19.1622 12.6262C18.4136 13.0379 17.6693 13.4573 16.9241 13.8754C16.8276 13.9294 16.757 13.9711 16.6498 13.8664C15.7698 13.0069 14.8825 12.1549 13.9979 11.3004C13.974 11.2744 13.9516 11.2472 13.9307 11.2188V11.2188Z\" fill=\"#FEF9F3\"></path>\n</svg>\n";

},{}],"83JuM":[function(require,module,exports) {
module.exports = "<svg viewBox=\"0 0 58 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<rect y=\"4.57715\" width=\"10.1581\" height=\"18.4186\" fill=\"#FEF9F3\"></rect>\n<rect x=\"11.7207\" y=\"1.33984\" width=\"10.1581\" height=\"20.3163\" fill=\"#FEF9F3\"></rect>\n<rect x=\"23.4414\" y=\"3.12598\" width=\"10.1581\" height=\"20.8744\" fill=\"#FEF9F3\"></rect>\n<rect x=\"35.1631\" width=\"10.1581\" height=\"21.6558\" fill=\"#FEF9F3\"></rect>\n<rect x=\"46.8838\" y=\"3.68359\" width=\"10.1581\" height=\"16.6326\" fill=\"#FEF9F3\"></rect>\n</svg>\n";

},{}],"5twL5":[function(require,module,exports) {
module.exports = "<svg width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g clip-path=\"url('#clip0_201_1449')\">\n<path d=\"M16.6384 16.2438C15.7435 16.2438 14.8485 16.2552 13.9536 16.2438C12.4893 16.221 11.4333 15.2536 11.4316 13.9381C11.43 12.6227 12.4795 11.6454 13.9504 11.6341C15.7402 11.621 17.53 11.6178 19.3198 11.6341C20.8314 11.6503 21.8255 12.5788 21.8255 13.9316C21.8255 15.2845 20.8314 16.208 19.3231 16.2406C18.4282 16.2568 17.5333 16.2422 16.6384 16.2438Z\" fill=\"#FEF9F3\"></path>\n<path d=\"M10.2982 16.5157C10.2982 17.4637 10.3096 18.4117 10.2982 19.3596C10.2987 19.9474 10.0717 20.5126 9.66468 20.9369C9.25769 21.3612 8.70225 21.6117 8.1146 21.6361C6.97564 21.6897 5.81877 20.7596 5.77646 19.5922C5.70162 17.5092 5.67884 15.4214 5.75043 13.3385C5.79436 12.0605 6.97238 11.1466 8.19108 11.2377C9.40978 11.3288 10.2965 12.3044 10.3063 13.584C10.3063 14.5596 10.3063 15.5353 10.3063 16.5109L10.2982 16.5157Z\" fill=\"#FEF9F3\"></path>\n<path d=\"M5.4504 5.79395H8.28968C9.6239 5.79395 10.6408 6.76142 10.6555 8.05736C10.6605 8.36317 10.6043 8.6669 10.4903 8.95074C10.3763 9.23457 10.2067 9.4928 9.99148 9.71028C9.77628 9.92776 9.5198 10.1001 9.23707 10.2172C8.95434 10.3343 8.65105 10.3939 8.345 10.3923C6.42394 10.4021 4.50125 10.3896 2.57694 10.3549C1.19879 10.3305 0.284358 9.36955 0.299001 8.02972C0.318527 6.73866 1.2476 5.84273 2.59484 5.82809C3.54344 5.81834 4.49203 5.82809 5.439 5.82809L5.4504 5.79395Z\" fill=\"#FEF9F3\"></path>\n<path d=\"M11.5317 5.31537C11.5317 4.3674 11.5219 3.41944 11.5317 2.47147C11.548 1.14952 12.4038 0.217809 13.6469 0.156021C14.9486 0.0893542 16.042 0.934883 16.0876 2.22919C16.164 4.28448 16.164 6.34626 16.0876 8.40805C16.0371 9.70887 14.9486 10.5414 13.6469 10.4796C12.4119 10.4194 11.5528 9.4861 11.5317 8.16578C11.5235 7.20968 11.5317 6.26334 11.5317 5.31537Z\" fill=\"#FEF9F3\"></path>\n<path d=\"M17.3105 10.2801C17.3512 9.39558 17.335 8.53054 17.444 7.67851C17.5904 6.53217 18.7635 5.64111 19.87 5.7468C20.4418 5.7878 20.9776 6.04145 21.3716 6.45772C21.7655 6.874 21.9891 7.42269 21.9982 7.99558C22.0243 9.23135 21.227 10.1923 19.9953 10.3143C19.2745 10.3842 18.5406 10.3533 17.8133 10.3566C17.644 10.3444 17.4759 10.3188 17.3105 10.2801Z\" fill=\"#FEF9F3\"></path>\n<path d=\"M11.5671 17.4142C12.3937 17.4142 13.1177 17.4029 13.845 17.4142C15.2004 17.4403 16.1653 18.3898 16.1783 19.6907C16.2013 20.2761 15.9919 20.8469 15.5957 21.2787C15.1995 21.7106 14.6487 21.9685 14.0631 21.9963C12.724 22.0663 11.6712 21.1492 11.5834 19.7785C11.528 19.0305 11.5671 18.276 11.5671 17.4142Z\" fill=\"#FEF9F3\"></path>\n<path d=\"M4.577 11.5725C4.577 12.3709 4.577 13.0685 4.577 13.766C4.5591 15.1774 3.6105 16.1644 2.28279 16.1644C1.69596 16.1746 1.12855 15.9542 0.702581 15.5507C0.276606 15.1473 0.0260752 14.5928 0.00485199 14.0067C-0.0455881 12.6766 0.901383 11.649 2.28279 11.579C3.00848 11.5416 3.73416 11.5725 4.577 11.5725Z\" fill=\"#FEF9F3\"></path>\n<path d=\"M10.2919 4.57705C9.36769 4.57705 8.52974 4.63558 7.70317 4.56241C6.51539 4.45835 5.62211 3.30876 5.70672 2.11201C5.75292 1.54075 6.01094 1.00733 6.43022 0.616305C6.8495 0.225278 7.39981 0.00483582 7.97327 -0.0018133C9.22776 -0.0148214 10.2235 0.881114 10.2837 2.12502C10.3228 2.90713 10.2919 3.69087 10.2919 4.57705Z\" fill=\"#FEF9F3\"></path>\n</g>\n<defs>\n<clipPath id=\"clip0_201_1449\">\n<rect width=\"22\" height=\"22\" fill=\"white\"></rect>\n</clipPath>\n</defs>\n</svg>\n";

},{}],"g37Y8":[function(require,module,exports) {
module.exports = "<svg width=\"23\" height=\"21\" viewBox=\"0 0 23 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 17.954C2.07718 19.3313 4.54475 20.1348 7.19511 20.1348C15.91 20.1348 20.8339 12.5266 20.5383 5.70204C21.4544 5.01866 22.251 4.16384 22.8795 3.19008C22.0378 3.57609 21.1329 3.83731 20.184 3.95393C21.1532 3.35451 21.8967 2.40407 22.2476 1.26937C21.3405 1.82564 20.3352 2.23031 19.2678 2.44722C18.4103 1.50494 17.1906 0.916016 15.8401 0.916016C12.8106 0.916016 10.5834 3.83731 11.2682 6.8729C7.36661 6.67114 3.90727 4.73877 1.59315 1.80348C0.363309 3.98425 0.954533 6.83791 3.04525 8.28165C2.27576 8.25599 1.5514 8.03675 0.918428 7.67407C0.867655 9.92247 2.42582 12.0239 4.68353 12.4927C4.02235 12.6793 3.29912 12.7213 2.5646 12.5755C3.16034 14.5044 4.89452 15.9062 6.94914 15.9458C4.97576 17.5447 2.49014 18.2584 0 17.954Z\" fill=\"black\"></path>\n</svg>\n";

},{}],"lNyI5":[function(require,module,exports) {
module.exports = "<svg width=\"22\" height=\"23\" viewBox=\"0 0 22 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M16.6157 4.2373C16.3635 4.2373 16.1171 4.31207 15.9074 4.45215C15.6978 4.59223 15.5344 4.79134 15.4379 5.02429C15.3414 5.25724 15.3161 5.51357 15.3653 5.76086C15.4145 6.00816 15.5359 6.23531 15.7142 6.4136C15.8925 6.59189 16.1196 6.7133 16.3669 6.76249C16.6142 6.81168 16.8706 6.78644 17.1035 6.68995C17.3365 6.59346 17.5356 6.43006 17.6756 6.22042C17.8157 6.01077 17.8905 5.76429 17.8905 5.51215C17.8905 5.34473 17.8575 5.17896 17.7935 5.02429C17.7294 4.86962 17.6355 4.72907 17.5171 4.61069C17.3987 4.49231 17.2582 4.39841 17.1035 4.33434C16.9489 4.27028 16.7831 4.2373 16.6157 4.2373V4.2373Z\" fill=\"#FEF9F3\"></path>\n<path d=\"M10.9544 5.90332C9.89495 5.90212 8.85891 6.21519 7.97739 6.80294C7.09587 7.39068 6.40848 8.22668 6.0022 9.20517C5.59591 10.1837 5.48898 11.2607 5.69494 12.3C5.9009 13.3393 6.41048 14.2941 7.15923 15.0437C7.90797 15.7933 8.86223 16.304 9.90128 16.5111C10.9403 16.7182 12.0175 16.6125 12.9964 16.2074C13.9754 15.8022 14.8122 15.1158 15.4009 14.2349C15.9897 13.3541 16.3039 12.3184 16.3039 11.2589C16.3023 9.84006 15.7384 8.47971 14.7357 7.47587C13.733 6.47203 12.3733 5.90655 10.9544 5.90332V5.90332ZM10.9544 14.6869C10.2764 14.6869 9.61365 14.4859 9.04991 14.1092C8.48617 13.7325 8.04679 13.1971 7.78733 12.5708C7.52787 11.9444 7.45997 11.2551 7.59225 10.5901C7.72452 9.92514 8.05102 9.31432 8.53044 8.83489C9.00986 8.35547 9.6207 8.02898 10.2857 7.89671C10.9507 7.76444 11.6399 7.83233 12.2663 8.09179C12.8927 8.35125 13.4281 8.79063 13.8048 9.35437C14.1814 9.91811 14.3825 10.5809 14.3825 11.2589C14.3729 12.1623 14.0076 13.0255 13.366 13.6614C12.7243 14.2974 11.8579 14.6549 10.9544 14.6565V14.6869Z\" fill=\"#FEF9F3\"></path>\n<path d=\"M15.2005 22.0918H6.52669C4.79619 22.0901 3.13704 21.402 1.91339 20.1783C0.689743 18.9547 0.00161502 17.2955 0 15.565V6.88512C0.00161502 5.15462 0.689743 3.49546 1.91339 2.27181C3.13704 1.04816 4.79619 0.360013 6.52669 0.358398H15.2005C16.931 0.360013 18.5902 1.04816 19.8138 2.27181C21.0375 3.49546 21.7256 5.15462 21.7273 6.88512V15.565C21.7256 17.2955 21.0375 18.9547 19.8138 20.1783C18.5902 21.402 16.931 22.0901 15.2005 22.0918V22.0918ZM6.52669 2.40181C5.33814 2.40342 4.19875 2.87628 3.35832 3.71672C2.51788 4.55715 2.04501 5.69656 2.0434 6.88512V15.565C2.04501 16.7536 2.51788 17.893 3.35832 18.7334C4.19875 19.5739 5.33814 20.0467 6.52669 20.0484H15.2005C16.3891 20.0467 17.5285 19.5739 18.3689 18.7334C19.2093 17.893 19.6822 16.7536 19.6838 15.565V6.88512C19.6822 5.69656 19.2093 4.55715 18.3689 3.71672C17.5285 2.87628 16.3891 2.40342 15.2005 2.40181H6.52669Z\" fill=\"#FEF9F3\"></path>\n</svg>\n";

},{}],"6AhvX":[function(require,module,exports) {
module.exports = "<svg width=\"23\" height=\"23\" viewBox=\"0 0 23 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5.16157 22.0913V7.42724H0.287462V22.0913H5.16157ZM2.7255 5.4253C4.42477 5.4253 5.48289 4.29948 5.48289 2.89209C5.451 1.45331 4.42477 0.358398 2.75787 0.358398C1.09098 0.358398 0 1.45331 0 2.89209C0 4.29948 1.05763 5.4253 2.69362 5.4253H2.7255V5.4253ZM7.85911 22.0913H12.7327V13.903C12.7327 13.4654 12.7651 13.0269 12.8936 12.7139C13.2459 11.8378 14.0479 10.9312 15.3954 10.9312C17.1585 10.9312 17.8644 12.2758 17.8644 14.2474V22.0913H22.738V13.6832C22.738 9.17948 20.3343 7.08336 17.1271 7.08336C14.4982 7.08336 13.3435 8.55501 12.7018 9.55377H12.7342V7.42773H7.86059C7.92436 8.80127 7.86059 22.0918 7.86059 22.0918L7.85911 22.0913Z\" fill=\"#FEF9F3\"></path>\n</svg>\n";

},{}],"53Vdp":[function(require,module,exports) {
module.exports = "<svg width=\"12\" height=\"23\" viewBox=\"0 0 12 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M10.8697 12.5876L11.4794 8.65548H7.71185V6.10722C7.71185 5.02818 8.23614 3.9857 9.92482 3.9857H11.6379V0.626633C10.6299 0.462043 9.61101 0.372388 8.58972 0.358398C5.4806 0.358398 3.45054 2.24216 3.45054 5.65V8.64329H0V12.5876H3.45054V22.0918H7.71796V12.5876H10.8697Z\" fill=\"#FEF9F3\"></path>\n</svg>\n";

},{}],"zcLmN":[function(require,module,exports) {
module.exports = "<svg width=\"11\" height=\"21\" viewBox=\"0 0 11 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g clip-path=\"url('#clip0_102_1704')\">\n<path d=\"M3.87761 0.916016H6.88404V4.98912H10.9976V9.07239H6.93033C6.91591 9.14178 6.9062 9.21205 6.90126 9.28274C6.90126 11.0318 6.90126 12.7808 6.90126 14.5299C6.90126 14.5924 6.90126 14.6543 6.90665 14.7162C6.94271 15.5096 7.29254 15.8694 8.0907 15.8908C8.9583 15.9111 9.82643 15.9052 10.6946 15.91H11.0003V20.0141C10.4082 20.0477 9.81889 20.0851 9.23171 20.1134C8.10147 20.1668 6.98146 20.155 5.88782 19.7931C4.02346 19.1748 2.80657 17.587 2.78343 15.6335C2.75921 13.5737 2.7759 11.5134 2.77428 9.45358V9.10121H0.0493324C0.0364102 9.02378 0.0276073 8.94572 0.0229602 8.86736C0.0229602 7.74618 0.0267277 6.6298 0.0175781 5.51128C0.0175781 5.3148 0.0837777 5.25447 0.271612 5.23258C2.13489 5.01902 3.24683 3.99287 3.63703 2.13864C3.72045 1.73768 3.79472 1.33726 3.87761 0.916016Z\" fill=\"black\"></path>\n</g>\n<defs>\n<clipPath id=\"clip0_102_1704\">\n<rect width=\"10.9821\" height=\"19.2188\" fill=\"white\" transform=\"translate(0.0175781 0.916016)\"></rect>\n</clipPath>\n</defs>\n</svg>\n";

},{}],"ivkCF":[function(require,module,exports) {
module.exports = "<svg width=\"23\" height=\"21\" viewBox=\"0 0 23 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g clip-path=\"url('#clip0_102_1702')\">\n<path d=\"M21.4143 8.01768C20.5112 7.54511 19.6314 7.66955 18.8271 8.28625C18.6769 8.40164 18.5972 8.39298 18.4547 8.29768C16.7952 7.17689 14.9621 6.5783 12.9922 6.39597L12.2404 6.32705C12.6098 4.55057 12.9718 2.80757 13.3355 1.05827C14.495 1.31267 15.6284 1.55919 16.7595 1.81596C16.7973 1.83007 16.8312 1.85327 16.8585 1.88362C16.8858 1.91397 16.9056 1.95059 16.9162 1.99042C17.0312 2.94304 17.9186 3.63418 18.8436 3.50068C19.8399 3.35772 20.5273 2.35863 20.2958 1.36898C20.133 0.670758 19.5896 0.12927 18.9478 0.0260918C18.2022 -0.0940202 17.5389 0.20449 17.1576 0.840493C17.0998 0.93737 17.0546 0.971627 16.9335 0.944454C15.6767 0.665637 14.4172 0.397061 13.1588 0.124938C12.8381 0.0552341 12.6561 0.167077 12.5868 0.499452C12.2802 1.95681 11.9771 3.41496 11.6775 4.87389C11.5753 5.36537 11.4731 5.85684 11.3709 6.34832C9.01213 6.46016 6.81501 7.05324 4.85431 8.44496C4.12628 7.78927 3.50324 7.70026 2.8461 7.79163C1.79812 7.93734 0.972763 8.77182 0.8034 9.80006C0.624841 10.8815 1.10496 11.8971 2.05101 12.422C2.15294 12.4784 2.18283 12.5347 2.16827 12.6489C2.03186 13.7319 2.24298 14.7495 2.75835 15.6962C3.60632 17.2541 4.92252 18.2768 6.47016 18.9975C8.54121 19.9619 10.7211 20.2837 12.9841 20.0722C14.3927 19.9403 15.7468 19.6059 17.0343 19.0002C18.2876 18.4095 19.3954 17.6219 20.2422 16.4866C21.089 15.3512 21.512 14.0922 21.3408 12.6532C21.3243 12.5154 21.3791 12.4595 21.486 12.398C22.3125 11.9152 22.7359 11.1682 22.7317 10.2049C22.7275 9.21919 22.2707 8.46387 21.4143 8.01768ZM6.2529 11.9861C6.2506 11.0185 7.02116 10.2329 7.97373 10.2313C8.90139 10.2313 9.65433 11.0256 9.65203 12.0034C9.64935 12.969 8.89756 13.7204 7.9335 13.7204C7.71195 13.7214 7.4924 13.6772 7.28761 13.5903C7.08282 13.5034 6.89686 13.3756 6.74052 13.2143C6.58418 13.0529 6.46057 12.8613 6.37686 12.6504C6.29316 12.4396 6.25102 12.2138 6.2529 11.9861ZM15.7491 16.7047C15.2697 17.1604 14.6927 17.4289 14.0746 17.6105C13.3163 17.8354 12.5389 17.9181 11.6905 17.9314C10.7709 17.9074 9.80913 17.7869 8.88913 17.414C8.46578 17.2452 8.07615 16.998 7.73961 16.6846C7.52887 16.4877 7.49706 16.2337 7.65531 16.0412C7.81357 15.8486 8.09596 15.819 8.3025 16.0081C8.96769 16.6165 9.78499 16.8221 10.6299 16.9532C11.5849 17.0989 12.5581 17.0588 13.4987 16.8351C14.1118 16.6917 14.698 16.4807 15.1747 16.0301C15.3832 15.8332 15.6659 15.8356 15.8227 16.0195C15.9897 16.2156 15.9598 16.5043 15.7491 16.7047ZM15.6142 13.7472C14.618 13.7961 13.8428 13.0482 13.8087 12.0089C13.7788 11.1114 14.526 10.2974 15.4115 10.2636C16.4143 10.2242 17.163 10.9437 17.2048 11.9853C17.2404 12.8765 16.4932 13.7043 15.6142 13.7472Z\" fill=\"black\"></path>\n</g>\n<defs>\n<clipPath id=\"clip0_102_1702\">\n<rect width=\"21.9643\" height=\"20.1339\" fill=\"white\" transform=\"translate(0.767578)\"></rect>\n</clipPath>\n</defs>\n</svg>\n";

},{}],"90xRO":[function(require,module,exports) {
module.exports = "<svg width=\"12\" height=\"16\" viewBox=\"0 0 12 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g clip-path=\"url('#clip0_167_1737')\">\n<path d=\"M0 5.81598C0.0546519 3.96371 0.906528 2.23116 2.70223 1.03736C4.47452 -0.141898 6.40121 -0.330888 8.35827 0.548214C10.4836 1.50514 11.6547 3.19493 11.9549 5.46537C12.1162 6.672 11.8343 7.81278 11.2366 8.85094C10.7508 9.69584 10.1627 10.4834 9.60225 11.2847C8.57862 12.747 7.5463 14.2039 6.50531 15.6554C6.3997 15.8028 6.25161 15.9154 6.08024 15.9787C5.8278 16.0582 5.6465 15.8932 5.5077 15.6922C4.91 14.8465 4.30796 14.0033 3.70939 13.1584C2.81327 11.8936 1.90067 10.6399 1.02711 9.36061C0.356539 8.37804 0.00520494 7.28172 0 5.81598ZM8.49447 6.02464C8.48968 5.5352 8.33807 5.0581 8.05874 4.65344C7.77941 4.24877 7.38485 3.93464 6.92476 3.7506C6.46467 3.56657 5.95962 3.52086 5.47323 3.61924C4.98684 3.71761 4.54086 3.95567 4.19145 4.30344C3.84205 4.6512 3.60485 5.09311 3.50973 5.57351C3.41462 6.05391 3.46583 6.55131 3.65693 7.00307C3.84804 7.45483 4.17048 7.84075 4.58364 8.1122C4.99681 8.38366 5.48222 8.52852 5.97875 8.52854C6.64875 8.52402 7.28965 8.25801 7.76114 7.78873C8.23264 7.31945 8.49632 6.68514 8.49447 6.02464Z\" fill=\"black\"></path>\n</g>\n<defs>\n<clipPath id=\"clip0_167_1737\">\n<rect width=\"12\" height=\"16\" fill=\"white\"></rect>\n</clipPath>\n</defs>\n</svg>\n";

},{}],"hI3YG":[function(require,module,exports) {
module.exports = "<svg width=\"65\" height=\"60\" viewBox=\"0 0 65 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g clip-path=\"url('#clip0_167_3226')\">\n<path d=\"M32.424 59.9928C23.5002 59.9928 14.5785 59.9928 5.65888 59.9928C3.41383 59.9928 1.61716 59.1814 0.58556 57.1467C0.220793 56.4031 0.0299873 55.5868 0.0274421 54.7593C-0.00391337 38.3024 -0.0101837 21.8466 0.0086296 5.39178C0.0086296 2.22419 2.15648 0.0458923 5.35788 0.0178054C10.3904 -0.0290062 15.4261 -0.000919268 20.4587 0.0178054C21.2954 -0.007576 22.1264 0.162723 22.885 0.515022C23.6436 0.86732 24.3086 1.39179 24.8265 2.04631C26.2281 3.75337 27.7551 5.36057 29.1379 7.08324C30.3921 8.64362 31.9599 9.26778 33.9134 9.26778C42.3919 9.2553 50.8704 9.2553 59.3489 9.26778C62.0142 9.26778 64.0523 10.6815 64.7421 13.0408C64.9108 13.6389 64.9942 14.2577 64.9898 14.8789C65.0044 28.0403 65.0044 41.1995 64.9898 54.3567C64.9898 57.8426 62.8357 59.9991 59.3458 60.0022C50.3698 60.0022 41.3958 59.9991 32.424 59.9928ZM51.5916 18.4865C53.5983 18.4865 55.602 18.4865 57.6087 18.4865C59.1765 18.4865 60.1924 17.5971 60.2018 16.2115C60.2112 14.8259 59.2298 13.9146 57.6432 13.9084C53.5837 13.8959 49.5221 13.8959 45.4585 13.9084C45.0181 13.9023 44.581 13.984 44.1729 14.1487C43.708 14.3648 43.3315 14.733 43.1062 15.1918C42.8808 15.6506 42.8202 16.1724 42.9343 16.6703C43.0466 17.1814 43.3311 17.639 43.7406 17.9671C44.1501 18.2951 44.66 18.474 45.1856 18.4741C47.321 18.4865 49.4563 18.4709 51.5916 18.4709V18.4865Z\" fill=\"black\"></path>\n</g>\n<defs>\n<clipPath id=\"clip0_167_3226\">\n<rect width=\"65\" height=\"60\" fill=\"white\"></rect>\n</clipPath>\n</defs>\n</svg>\n";

},{}],"9VM9X":[function(require,module,exports) {
module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"14\" viewBox=\"0 96 960 960\" width=\"16\"><path d=\"m249 849-42-42 231-231-231-231 42-42 231 231 231-231 42 42-231 231 231 231-42 42-231-231-231 231Z\"></path></svg>";

},{}],"30Qfk":[function(require,module,exports) {
module.exports = "<svg width=\"31\" height=\"31\" viewBox=\"0 0 31 31\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<circle cx=\"15.5\" cy=\"15.5\" r=\"15\" fill=\"black\" stroke=\"black\"></circle>\n<path d=\"M20.19 13.332C20.19 12.114 19.812 11.246 19.07 10.756C18.328 10.252 17.32 10 16.074 10C13.372 10 12 10.896 12 12.394C12 12.856 12.112 13.318 12.322 13.584L15.234 13.444C15.08 13.276 14.982 12.926 14.982 12.59C14.982 12.156 15.262 11.764 15.892 11.764C16.578 11.764 16.928 12.226 16.928 13.458C16.928 14.62 16.69 15.012 16.13 15.012C15.738 15.012 15.43 14.76 15.332 14.354H12.938V17.56H15.276V16.16C15.542 16.482 16.144 16.762 16.886 16.762C17.726 16.762 18.482 16.524 19.168 16.062C19.854 15.586 20.19 14.676 20.19 13.332ZM15.598 18.47H12.756V20.962H15.598V18.47Z\" fill=\"#FEF9F3\"></path>\n</svg>\n";

},{}],"5vfi2":[function(require,module,exports) {
module.exports = "<svg viewBox=\"0 0 37 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<rect x=\"0.5\" y=\"5.5\" width=\"36\" height=\"19\" rx=\"9.5\" stroke=\"black\"></rect>\n<rect y=\"5\" width=\"12\" height=\"12\" fill=\"#FEF9F3\"></rect>\n<path d=\"M8 5.5L16.25 0.736861L16.25 10.2631L8 5.5Z\" fill=\"black\"></path>\n</svg>\n";

},{}],"2QfAE":[function(require,module,exports) {
module.exports = "<svg viewBox=\"0 0 15 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M1 7L11.5 0.937821L11.5 13.0622L1 7Z\" fill=\"black\"></path>\n<rect width=\"1\" height=\"14\" fill=\"black\"></rect>\n</svg>\n";

},{}],"5CCV3":[function(require,module,exports) {
module.exports = "<svg viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g>\n<path d=\"M12.392 9.99562C12.392 13.1144 12.392 16.2332 12.392 19.352C12.392 19.6055 12.3633 19.8378 12.1022 19.9553C12.0221 19.9934 11.9327 20.0076 11.8448 19.9962C11.7568 19.9848 11.674 19.9483 11.6062 19.891C11.535 19.8335 11.4678 19.7711 11.4051 19.7043C9.32873 17.6287 7.25319 15.5522 5.17849 13.4749C5.13462 13.4265 5.08059 13.3883 5.02026 13.3632C4.95993 13.3381 4.8948 13.3266 4.82951 13.3296C3.87892 13.3363 2.92832 13.3414 1.97772 13.3296C1.175 13.3203 0.541265 12.9916 0.191445 12.2464C0.0734622 11.9843 0.0107573 11.7007 0.00724074 11.4134C-0.00627887 10.3792 -0.00205492 9.3442 0.0300542 8.31005C0.0537135 7.54457 0.828557 6.74699 1.59917 6.70475C2.36979 6.6625 3.16069 6.67349 3.94145 6.66335C4.24395 6.66335 4.54729 6.65659 4.8498 6.66335C4.91166 6.66696 4.97353 6.65635 5.03066 6.63233C5.08778 6.60831 5.13864 6.57152 5.17934 6.52478C7.26643 4.42944 9.35605 2.3372 11.4482 0.248054C11.5542 0.138542 11.6866 0.0582208 11.8327 0.014862C12.0955 -0.0527297 12.3211 0.117095 12.3709 0.384927C12.3863 0.482146 12.3928 0.580555 12.3904 0.678949C12.392 3.78535 12.3926 6.89091 12.392 9.99562Z\" fill=\"black\"></path>\n<path d=\"M19.9994 10.2254C19.9749 11.7014 19.3952 13.2036 18.3939 14.5403C17.9934 15.0768 17.494 15.5415 17.0276 16.0264C16.954 16.1086 16.8543 16.1628 16.7453 16.18C16.6364 16.1973 16.5248 16.1764 16.4294 16.1211C16.3409 16.0751 16.271 16.0002 16.2311 15.9089C16.1913 15.8175 16.184 15.7153 16.2105 15.6192C16.2522 15.4943 16.3263 15.3826 16.4252 15.2956C17.1706 14.6486 17.7889 13.8684 18.2486 12.995C19.1308 11.3136 19.3091 9.58242 18.6094 7.79124C18.157 6.61896 17.4252 5.57485 16.4775 4.74962C16.3742 4.66592 16.2881 4.5629 16.2241 4.4463C16.1845 4.35523 16.1768 4.25345 16.2022 4.15747C16.2277 4.06148 16.2848 3.97689 16.3643 3.9174C16.4406 3.84819 16.5389 3.80833 16.6419 3.80493C16.7448 3.80152 16.8456 3.83479 16.9262 3.89881C17.2111 4.12787 17.481 4.37509 17.734 4.63893C18.6066 5.56423 19.2626 6.67183 19.6547 7.88165C19.8811 8.57108 19.9994 9.28248 19.9994 10.2254Z\" fill=\"black\"></path>\n<path d=\"M17.1403 9.89052C17.1448 10.4568 17.0376 11.0183 16.8249 11.5431C16.6122 12.0679 16.2981 12.5457 15.9007 12.949C15.6375 13.2123 15.3599 13.4608 15.0692 13.6934C14.9873 13.7612 14.886 13.8016 14.7799 13.8087C14.6737 13.8158 14.568 13.7894 14.4777 13.7331C14.3087 13.6123 14.2133 13.4408 14.2826 13.2405C14.3328 13.1121 14.4172 12.9999 14.5267 12.9161C14.9737 12.5672 15.3793 12.1802 15.681 11.6978C16.4575 10.4558 16.3358 8.97719 15.3472 7.8577C15.0844 7.55945 14.7684 7.30683 14.471 7.039C14.3197 6.90297 14.2369 6.72723 14.318 6.55149C14.3858 6.40363 14.5063 6.28642 14.656 6.22283C14.7292 6.2086 14.8045 6.20966 14.8772 6.22594C14.9499 6.24223 15.0184 6.27339 15.0785 6.31746C16.1009 7.07786 16.8462 8.03429 17.0777 9.3236C17.1183 9.54496 17.1293 9.77055 17.1403 9.89052Z\" fill=\"black\"></path>\n</g>\n</svg>\n";

},{}],"gH9Bh":[function(require,module,exports) {
module.exports = "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g clip-path=\"url('#clip0_202_3079')\">\n<path d=\"M5.9794 19.2314C7.53261 19.2314 9.08585 19.2314 10.6391 19.2314C10.7551 19.2472 10.873 19.2237 10.9742 19.1645C11.0755 19.1053 11.1542 19.0138 11.1979 18.9046C11.4445 18.3895 11.8097 17.941 12.2631 17.5963C12.7165 17.2516 13.2451 17.0206 13.8051 16.9225C14.365 16.8244 14.9402 16.862 15.4828 17.0322C16.0254 17.2025 16.5198 17.5004 16.925 17.9013C17.2092 18.2082 17.4467 18.5557 17.6301 18.9324C17.6674 19.0295 17.7352 19.1116 17.8232 19.1665C17.9111 19.2213 18.0144 19.2458 18.1175 19.2363C19.6431 19.2233 21.1687 19.2363 22.6943 19.2363C23.1931 19.2363 23.5911 19.3998 23.8413 19.8557C23.9366 20.0241 23.9896 20.2134 23.9958 20.4071C24.002 20.6009 23.9612 20.7932 23.8769 20.9675C23.7926 21.1418 23.6673 21.2928 23.5119 21.4074C23.3565 21.522 23.1757 21.5969 22.9851 21.6254C22.7978 21.6518 22.6088 21.6644 22.4197 21.663C20.9878 21.663 19.5565 21.663 18.1257 21.663C18.0285 21.6468 17.9286 21.6636 17.8419 21.7106C17.7552 21.7576 17.6864 21.8322 17.6463 21.9228C16.6 23.9393 14.4782 24.5766 12.5058 23.4638C11.9556 23.1628 11.5155 22.6927 11.2499 22.1222C11.0874 21.7578 10.8763 21.6516 10.4831 21.6548C7.49798 21.6744 4.51344 21.6744 1.52942 21.6548C1.20871 21.6609 0.890695 21.595 0.59847 21.462C0.369801 21.3388 0.189812 21.1407 0.0884524 20.9006C-0.0129071 20.6604 -0.0295746 20.3926 0.0411713 20.1416C0.101671 19.8808 0.249769 19.6489 0.460514 19.4852C0.671259 19.3215 0.931764 19.2359 1.19797 19.2429C2.7918 19.2314 4.38561 19.2429 5.97781 19.2429L5.9794 19.2314ZM14.4181 19.2429C14.1057 19.2419 13.8053 19.3633 13.5805 19.5815C13.3557 19.7996 13.2244 20.0973 13.2142 20.4113C13.2121 20.5704 13.2412 20.7285 13.3001 20.8763C13.359 21.024 13.4465 21.1586 13.5573 21.2723C13.6682 21.3859 13.8003 21.4763 13.9461 21.5383C14.0919 21.6004 14.2484 21.6327 14.4067 21.6336C14.7201 21.6306 15.0198 21.5042 15.2415 21.2815C15.4633 21.0587 15.5893 20.7575 15.5927 20.4423C15.5907 20.1279 15.4668 19.8267 15.2475 19.6028C15.0281 19.3788 14.7306 19.2497 14.4181 19.2429Z\" fill=\"black\"></path>\n<path d=\"M7.85783 2.33379C9.97805 2.33379 12.0983 2.33379 14.2185 2.33379C14.3477 2.35074 14.4788 2.32334 14.5906 2.25602C14.7023 2.1887 14.7881 2.08541 14.8343 1.96287C15.4841 0.665397 16.576 0.00195312 17.9911 0.00195312C19.4062 0.00195312 20.5223 0.685006 21.1966 1.96287C21.3477 2.25047 21.5053 2.35177 21.8139 2.33543C22.1932 2.31388 22.5736 2.32373 22.9512 2.36485C23.2493 2.39733 23.524 2.54247 23.7198 2.7709C23.9155 2.99933 24.0177 3.29401 24.0057 3.59533C23.9975 3.8961 23.8751 4.18227 23.6635 4.39503C23.452 4.60778 23.1674 4.73096 22.8684 4.7392C22.4769 4.75881 22.0837 4.76208 21.6938 4.7392C21.596 4.72784 21.4974 4.75074 21.4145 4.80403C21.3316 4.85732 21.2696 4.93772 21.2388 5.03169C20.3858 6.73606 18.7141 7.47141 16.9042 6.92072C16.4476 6.79208 16.0246 6.56452 15.6648 6.254C15.305 5.94347 15.017 5.55752 14.8212 5.12321C14.7783 4.99832 14.6941 4.89204 14.5826 4.82214C14.4711 4.75224 14.3391 4.72297 14.2087 4.7392C9.94228 4.75064 5.67428 4.73919 1.40783 4.75063C0.813195 4.75063 0.346907 4.56924 0.108077 3.9875C0.0413784 3.82386 0.0117086 3.64734 0.0212892 3.47074C0.0308698 3.29415 0.0794444 3.12192 0.16345 2.96655C0.247456 2.81118 0.364781 2.67656 0.506953 2.57249C0.649124 2.46841 0.812575 2.39749 0.985397 2.36485C1.18521 2.33269 1.38742 2.31847 1.58974 2.32237C3.67476 2.32781 5.76414 2.33162 7.85783 2.33379ZM18.0203 4.749C18.3336 4.74222 18.6319 4.61304 18.852 4.38884C19.0722 4.16465 19.197 3.86305 19.1998 3.54794C19.1964 3.23197 19.069 2.93015 18.8453 2.70825C18.6216 2.48635 18.3198 2.36234 18.0057 2.36322C17.6916 2.36231 17.3897 2.48573 17.1654 2.70679C16.941 2.92786 16.8122 3.22882 16.8067 3.54467C16.8066 3.70421 16.8381 3.86215 16.8993 4.00934C16.9605 4.15654 17.0502 4.29004 17.1631 4.40209C17.276 4.51414 17.41 4.60251 17.5571 4.66207C17.7043 4.72162 17.8617 4.75116 18.0203 4.749Z\" fill=\"black\"></path>\n<path d=\"M16.7903 13.2126C14.8309 13.2126 12.8731 13.2126 10.9154 13.2126C10.8115 13.2005 10.7066 13.2243 10.618 13.2801C10.5294 13.336 10.4624 13.4205 10.428 13.5199C9.75858 14.8484 8.65379 15.5674 7.17857 15.5608C5.70334 15.5543 4.62617 14.8631 3.96979 13.5362C3.93337 13.4298 3.86167 13.3392 3.76671 13.2797C3.67174 13.2202 3.55929 13.1954 3.44827 13.2094C2.71878 13.2306 1.98601 13.2339 1.25977 13.2094C0.257335 13.1783 -0.299913 12.2763 0.145253 11.4217C0.392207 10.9478 0.832467 10.7942 1.33125 10.7877C2.04774 10.7877 2.76264 10.7762 3.47913 10.7877C3.58293 10.803 3.68881 10.7822 3.77924 10.7287C3.86967 10.6752 3.93923 10.5922 3.9763 10.4935C4.62618 9.14864 5.73586 8.43945 7.20459 8.43945C8.67331 8.43945 9.77158 9.17151 10.4312 10.5049C10.5514 10.75 10.696 10.786 10.93 10.786C14.8065 10.786 18.6825 10.786 22.558 10.786C23.1526 10.786 23.6546 10.9494 23.8999 11.5573C23.9646 11.7109 23.9958 11.8766 23.9914 12.0433C23.987 12.21 23.9471 12.3739 23.8745 12.5238C23.8018 12.6737 23.698 12.8061 23.5701 12.9123C23.4422 13.0184 23.2932 13.0958 23.1331 13.1391C22.9239 13.1922 22.7086 13.2169 22.4929 13.2126C20.5953 13.2159 18.6944 13.2159 16.7903 13.2126ZM8.37757 11.9952C8.38037 11.8389 8.35218 11.6835 8.29467 11.5382C8.23716 11.3929 8.15152 11.2606 8.04264 11.149C7.93375 11.0373 7.80383 10.9486 7.6605 10.888C7.51717 10.8273 7.36333 10.796 7.20784 10.7958C6.89442 10.799 6.5943 10.9239 6.37026 11.1444C6.14623 11.3648 6.01554 11.6638 6.0055 11.9789C6.00549 12.3008 6.13211 12.6096 6.35765 12.838C6.58319 13.0664 6.88939 13.1958 7.20942 13.1979C7.36512 13.1978 7.51919 13.1663 7.66264 13.1055C7.8061 13.0446 7.93606 12.9556 8.04486 12.8436C8.15366 12.7315 8.23912 12.5988 8.29626 12.4531C8.35339 12.3075 8.38103 12.1518 8.37757 11.9952Z\" fill=\"black\"></path>\n</g>\n<defs>\n<clipPath id=\"clip0_202_3079\">\n<rect width=\"24\" height=\"24\" fill=\"white\"></rect>\n</clipPath>\n</defs>\n</svg>\n";

},{}],"7cCbx":[function(require,module,exports) {
module.exports = "<svg id=\"a\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 136.03 175.74\"><defs><style>.b {\n  fill: #fff;\n}\n\n</style></defs><path d=\"M112.62,49.63c-5.6,0-10.4,3.46-12.41,8.34-2-4.89-6.81-8.34-12.41-8.34s-10.4,3.46-12.41,8.34c-2-4.89-6.81-8.34-12.41-8.34-4.82,0-9.04,2.57-11.41,6.4V13.41c0-7.39-6.01-13.41-13.41-13.41s-13.41,6.01-13.41,13.41l-.04,71.81L3.92,106.02c-2.53,2.53-3.92,5.9-3.92,9.48v19.89c0,3.58,1.39,6.94,3.92,9.48l19.68,19.68c7.22,7.22,16.82,11.19,27.02,11.19h37.23v-.04c21.06-.02,38.18-17.16,38.18-38.22V63.04c0-7.39-6.01-13.41-13.41-13.41Z\"></path><path d=\"M122.62,49.63c-5.6,0-10.4,3.46-12.41,8.34-2-4.89-6.81-8.34-12.41-8.34s-10.4,3.46-12.41,8.34c-2-4.89-6.81-8.34-12.41-8.34-4.82,0-9.04,2.57-11.41,6.4V13.41c0-7.39-6.01-13.41-13.41-13.41s-13.41,6.01-13.41,13.41l-.04,71.81-20.81,20.81c-2.53,2.53-3.92,5.9-3.92,9.48v19.89c0,3.58,1.39,6.94,3.92,9.48l19.68,19.68c7.22,7.22,16.82,11.19,27.02,11.19h37.23v-.04c21.06-.02,38.18-17.16,38.18-38.22V63.04c0-7.39-6.01-13.41-13.41-13.41Zm11.41,87.85c0,19.97-16.25,36.22-36.22,36.22v.04H60.62c-9.67,0-18.77-3.77-25.61-10.61l-19.68-19.68c-2.15-2.15-3.34-5.02-3.34-8.06v-19.89c0-3.04,1.19-5.91,3.34-8.06l19.4-19.4v27.66h1.99l.05-102.29c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v62.04h2v-12.41c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v12.41h2v-12.41c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v12.41h2v-12.41c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v74.44Z\"></path><path class=\"b\" d=\"M134.03,137.48c0,19.97-16.25,36.22-36.22,36.22v.04H60.62c-9.67,0-18.77-3.77-25.61-10.61l-19.68-19.68c-2.15-2.15-3.34-5.02-3.34-8.06v-19.89c0-3.04,1.19-5.91,3.34-8.06l19.4-19.4v27.66h1.99l.05-102.29c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v62.04h2v-12.41c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v12.41h2v-12.41c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v12.41h2v-12.41c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v74.44Z\"></path></svg>";

},{}],"jA7hH":[function(require,module,exports) {
module.exports = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg id=\"a\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 136.07 175.7\"><defs><style>.b {\n  fill: #fff;\n}\n\n</style></defs><path d=\"M112.67,40.49c-4.82,0-9.04,2.57-11.41,6.4V28.81c0-7.39-6.01-13.41-13.41-13.41-4.82,0-9.04,2.57-11.41,6.4V13.41c0-7.39-6.01-13.41-13.41-13.41s-13.41,6.01-13.41,13.41v8.39c-2.36-3.83-6.59-6.4-11.41-6.4-7.39,0-13.41,6.01-13.41,13.41v52.03c-2.36-3.83-6.59-6.4-11.41-6.4-7.39,0-13.41,6.01-13.41,13.41v47.5c0,3.58,1.39,6.94,3.92,9.47l19.68,19.68c7.22,7.22,16.81,11.19,27.02,11.19h37.23c21.08,0,38.22-17.14,38.22-38.22V53.9c0-7.39-6.01-13.41-13.41-13.41Z\"></path><path d=\"M122.67,40.49c-4.82,0-9.04,2.57-11.41,6.4V28.81c0-7.39-6.01-13.41-13.41-13.41-4.82,0-9.04,2.57-11.41,6.4V13.41c0-7.39-6.01-13.41-13.41-13.41s-13.41,6.01-13.41,13.41v8.39c-2.36-3.83-6.59-6.4-11.41-6.4-7.39,0-13.41,6.01-13.41,13.41v52.03c-2.36-3.83-6.59-6.4-11.41-6.4-7.39,0-13.41,6.01-13.41,13.41v47.5c0,3.58,1.39,6.94,3.92,9.47l19.68,19.68c7.22,7.22,16.81,11.19,27.02,11.19h37.23c21.08,0,38.22-17.14,38.22-38.22V53.9c0-7.39-6.01-13.41-13.41-13.41Zm11.41,96.99c0,19.97-16.25,36.22-36.22,36.22H60.62c-9.67,0-18.77-3.77-25.61-10.61l-19.68-19.68c-2.15-2.15-3.34-5.02-3.34-8.06v-47.5c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v37.22h2V28.81c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v46.63h2V13.41c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v62.04h2V28.81c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v46.63h2v-21.55c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v83.58Z\"></path><path class=\"b\" d=\"M134.07,137.48c0,19.97-16.25,36.22-36.22,36.22H60.62c-9.67,0-18.77-3.77-25.61-10.61l-19.68-19.68c-2.15-2.15-3.34-5.02-3.34-8.06v-47.5c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v37.22h2V28.81c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v46.63h2V13.41c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v62.04h2V28.81c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v46.63h2v-21.55c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v83.58Z\"></path></svg>";

},{}],"i9RYh":[function(require,module,exports) {
module.exports = "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generator: Adobe Illustrator 26.2.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg version=\"1.1\" id=\"a\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 136.1 155.7\" style=\"enable-background: new 0 0 136.1 155.7\" xml:space=\"preserve\">\n<style>.st0 {\n  fill: #fff;\n}\n\n</style>\n<g>\n\t<path d=\"M112.7,40.5c-4.8,0-9,2.6-11.4,6.4V28.8c0-7.4-6-13.4-13.4-13.4c-4.8,0-9,2.6-11.4,6.4v-8.4C76.5,6,70.4,0,63,0\n\t\tS49.6,6,49.6,13.4v8.4c-2.4-3.8-6.6-6.4-11.4-6.4c-7.4,0-13.4,6-13.4,13.4v32c-2.4-3.8-6.6-6.4-11.4-6.4C6,54.4,0,60.4,0,67.8v47.5\n\t\tc0,3.6,1.4,6.9,3.9,9.5l19.7,19.7c7.2,7.2,16.8,11.2,27,11.2h37.2c21.1,0,38.2-17.1,38.2-38.2V53.9\n\t\tC126.1,46.5,120.1,40.5,112.7,40.5L112.7,40.5z\"></path>\n\t<path d=\"M122.7,40.5c-4.8,0-9,2.6-11.4,6.4V28.8c0-7.4-6-13.4-13.4-13.4c-4.8,0-9,2.6-11.4,6.4v-8.4C86.5,6,80.4,0,73,0\n\t\tS59.6,6,59.6,13.4v8.4c-2.4-3.8-6.6-6.4-11.4-6.4c-7.4,0-13.4,6-13.4,13.4v32c-2.4-3.8-6.6-6.4-11.4-6.4c-7.4,0-13.4,6-13.4,13.4\n\t\tv47.5c0,3.6,1.4,6.9,3.9,9.5l19.7,19.7c7.2,7.2,16.8,11.2,27,11.2h37.2c21.1,0,38.2-17.1,38.2-38.2V53.9\n\t\tC136.1,46.5,130.1,40.5,122.7,40.5L122.7,40.5z M134.1,117.5c0,20-16.2,36.2-36.2,36.2H60.6c-9.7,0-18.8-3.8-25.6-10.6l-19.7-19.7\n\t\tc-2.1-2.1-3.3-5-3.3-8.1V67.9c0-6.3,5.1-11.4,11.4-11.4s11.4,5.1,11.4,11.4v37.2h2V28.8c0-6.3,5.1-11.4,11.4-11.4\n\t\ts11.4,5.1,11.4,11.4v26.6h2v-42C61.7,7.1,66.8,2,73.1,2s11.4,5.1,11.4,11.4v42h2V28.8c0-6.3,5.1-11.4,11.4-11.4s11.4,5.1,11.4,11.4\n\t\tv26.6h2v-1.5c0-6.3,5.1-11.4,11.4-11.4s11.4,5.1,11.4,11.4L134.1,117.5L134.1,117.5z\"></path>\n\t<path class=\"st0\" d=\"M134.1,117.5c0,20-16.3,36.2-36.2,36.2H60.6c-9.7,0-18.8-3.8-25.6-10.6l-19.7-19.7c-2.1-2.1-3.3-5-3.3-8.1\n\t\tV67.9c0-6.3,5.1-11.4,11.4-11.4s11.4,5.1,11.4,11.4v37.2h2V28.8c0-6.3,5.1-11.4,11.4-11.4s11.4,5.1,11.4,11.4v26.6h2v-42\n\t\tC61.7,7.1,66.8,2,73.1,2s11.4,5.1,11.4,11.4v42h2V28.8c0-6.3,5.1-11.4,11.4-11.4s11.4,5.1,11.4,11.4v26.6h2v-1.5\n\t\tc0-6.3,5.1-11.4,11.4-11.4s11.4,5.1,11.4,11.4L134.1,117.5L134.1,117.5z\"></path>\n</g>\n</svg>\n";

},{}],"39j6j":[function(require,module,exports) {
module.exports = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg id=\"a\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 158.74 175.7\"><defs><style>.b {\n  fill: #fff;\n}\n\n</style></defs><path d=\"M135.33,49.63c-5.6,0-10.4,3.46-12.41,8.34-2-4.89-6.81-8.34-12.41-8.34s-10.4,3.46-12.41,8.34c-2-4.89-6.81-8.34-12.41-8.34-4.82,0-9.04,2.57-11.41,6.4V13.41c0-7.39-6.01-13.41-13.41-13.41s-13.41,6.01-13.41,13.41l-.05,92.05c0,3.8-2.19,7.07-5.7,8.53-3.52,1.45-7.37,.69-10.06-2l-8.77-8.77c-2.53-2.53-5.9-3.93-9.48-3.93s-6.95,1.39-9.48,3.93-3.93,5.9-3.93,9.48,1.39,6.95,3.93,9.48l8.77,8.77,33.57,33.57c7.22,7.22,16.82,11.2,27.03,11.2h37.22c21.08,0,38.22-17.15,38.22-38.22V63.04c0-7.39-6.01-13.41-13.41-13.41Z\"></path><path d=\"M145.33,49.63c-5.6,0-10.4,3.46-12.41,8.34-2-4.89-6.81-8.34-12.41-8.34s-10.4,3.46-12.41,8.34c-2-4.89-6.81-8.34-12.41-8.34-4.82,0-9.04,2.57-11.41,6.4V13.41c0-7.39-6.01-13.41-13.41-13.41s-13.41,6.01-13.41,13.41l-.05,92.05c0,3.8-2.19,7.07-5.7,8.53-3.52,1.45-7.37,.69-10.06-2l-8.77-8.77c-2.53-2.53-5.9-3.93-9.48-3.93s-6.95,1.39-9.48,3.93-3.93,5.9-3.93,9.48,1.39,6.95,3.93,9.48l8.77,8.77,33.57,33.57c7.22,7.22,16.82,11.2,27.03,11.2h37.22c21.08,0,38.22-17.15,38.22-38.22V63.04c0-7.39-6.01-13.41-13.41-13.41Zm11.41,87.85c0,19.97-16.25,36.22-36.22,36.22h-37.22c-9.67,0-18.77-3.77-25.61-10.61l-33.57-33.57-8.77-8.77c-2.15-2.15-3.34-5.02-3.34-8.07s1.19-5.91,3.34-8.07c2.15-2.15,5.02-3.34,8.07-3.34s5.91,1.19,8.07,3.34l8.77,8.77c2.18,2.18,4.98,3.32,7.87,3.32,1.46,0,2.93-.29,4.37-.88,4.28-1.77,6.93-5.75,6.94-10.37l.05-92.05c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v62.04h2v-12.41c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v12.41h2v-12.41c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v12.41h2v-12.41c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v74.44Z\"></path><path class=\"b\" d=\"M156.74,137.48c0,19.97-16.25,36.22-36.22,36.22h-37.22c-9.67,0-18.77-3.77-25.61-10.61l-33.57-33.57-8.77-8.77c-2.15-2.15-3.34-5.02-3.34-8.07s1.19-5.91,3.34-8.07c2.15-2.15,5.02-3.34,8.07-3.34s5.91,1.19,8.07,3.34l8.77,8.77c2.18,2.18,4.98,3.32,7.87,3.32,1.46,0,2.93-.29,4.37-.88,4.28-1.77,6.93-5.75,6.94-10.37l.05-92.05c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v62.04h2v-12.41c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v12.41h2v-12.41c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v12.41h2v-12.41c0-6.29,5.12-11.41,11.41-11.41s11.41,5.12,11.41,11.41v74.44Z\"></path></svg>";

},{}],"9WTWB":[function(require,module,exports) {
module.exports = "<svg width=\"21\" height=\"18\" viewBox=\"0 0 21 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M0.0839844 8H9.01784V0H0.0839844V8ZM2.31745 2H6.78437V6H2.31745V2Z\" fill=\"#9A9AB0\"></path>\n<path d=\"M0.0839844 18H9.01784V10H0.0839844V18ZM2.31745 12H6.78437V16H2.31745V12Z\" fill=\"#9A9AB0\"></path>\n<path d=\"M11.252 18H20.1858V10H11.252V18ZM13.4854 12H17.9523V16H13.4854V12Z\" fill=\"#9A9AB0\"></path>\n<path d=\"M11.252 0V8H20.1858V0H11.252ZM17.9523 6H13.4854V2H17.9523V6Z\" fill=\"#9A9AB0\"></path>\n</svg>\n";

},{}],"4uiY7":[function(require,module,exports) {
module.exports = "<svg width=\"20\" height=\"17\" viewBox=\"0 0 20 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M19.515 2.14262C18.1085 1.228 16.4791 0.71457 14.8024 0.657652C13.1257 0.600733 11.4652 1.00249 10 1.81962C8.53459 1.00302 6.87421 0.601574 5.1976 0.658489C3.52099 0.715404 1.89166 1.22853 0.485 2.14262L0 2.43362V16.7656L1.515 15.8566C2.68087 15.08 4.04819 14.6609 5.44899 14.6508C6.84978 14.6407 8.22303 15.04 9.4 15.7996L10 16.2416L10.6 15.8026C11.7773 15.0422 13.1511 14.6422 14.5526 14.6518C15.9541 14.6614 17.3222 15.0801 18.489 15.8566L20 16.7656V2.43362L19.515 2.14262ZM5.559 12.6556C4.33675 12.6601 3.12736 12.9054 2 13.3776V3.58462C3.06746 2.98382 4.27055 2.66529 5.49546 2.65916C6.72037 2.65304 7.92658 2.95952 9 3.54962V13.3416C7.90847 12.8916 6.73968 12.6585 5.559 12.6556ZM18 13.3776C16.8941 12.9072 15.7056 12.6615 14.5038 12.655C13.302 12.6485 12.111 12.8812 11 13.3396V3.54962C12.0734 2.95952 13.2796 2.65304 14.5045 2.65916C15.7294 2.66529 16.9325 2.98382 18 3.58462V13.3776Z\" fill=\"#9A9AB0\"></path>\n</svg>\n";

},{}],"1iu93":[function(require,module,exports) {
module.exports = "<svg width=\"21\" height=\"18\" viewBox=\"0 0 21 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M11.2512 4H4.55078V6H11.2512V4Z\" fill=\"#92929D\"></path>\n<path d=\"M11.2512 8H4.55078V10H11.2512V8Z\" fill=\"#92929D\"></path>\n<path d=\"M9.01771 12H4.55078V14H9.01771V12Z\" fill=\"#92929D\"></path>\n<path d=\"M15.7182 10V0H0.0839844V15C0.0839844 15.7956 0.43695 16.5587 1.06523 17.1213C1.69352 17.6839 2.54565 18 3.43418 18H16.835C17.7235 18 18.5756 17.6839 19.2039 17.1213C19.8322 16.5587 20.1852 15.7956 20.1852 15V10H15.7182ZM2.31745 15V2H13.4848V15C13.4885 15.3414 13.558 15.6797 13.6902 16H3.43418C3.138 16 2.85396 15.8946 2.64453 15.7071C2.4351 15.5196 2.31745 15.2652 2.31745 15ZM17.9517 15C17.9517 15.2652 17.834 15.5196 17.6246 15.7071C17.4152 15.8946 17.1311 16 16.835 16C16.5388 16 16.2547 15.8946 16.0453 15.7071C15.8359 15.5196 15.7182 15.2652 15.7182 15V12H17.9517V15Z\" fill=\"#92929D\"></path>\n</svg>\n";

},{}],"8kpix":[function(require,module,exports) {
module.exports = "<svg width=\"14\" height=\"12\" viewBox=\"0 0 14 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M13.8383 5H8.25462V0H6.02116V5H0.4375V7H6.02116V12H8.25462V7H13.8383V5Z\" fill=\"#9A9AB0\"></path>\n</svg>\n";

},{}],"3wjZR":[function(require,module,exports) {
module.exports = "<svg width=\"24\" height=\"20\" viewBox=\"0 0 24 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M21.6133 2.59988C20.356 1.47597 18.6521 0.844727 16.8756 0.844727C15.099 0.844727 13.3951 1.47597 12.1378 2.59988C10.8778 1.4898 9.17897 0.870533 7.41139 0.876978C5.6438 0.883423 3.95066 1.51505 2.70078 2.63429C1.4509 3.75352 0.745534 5.26967 0.738337 6.8525C0.731139 8.43532 1.42269 9.95657 2.66235 11.0849L12.1378 19.5709L21.6133 11.0859C22.8687 9.95998 23.5739 8.43395 23.5739 6.84288C23.5739 5.25181 22.8687 3.72577 21.6133 2.59988ZM20.0342 9.67088L12.1378 16.7429L4.24141 9.67188C3.78786 9.27479 3.43396 8.79575 3.20325 8.26665C2.97254 7.73755 2.87031 7.17051 2.90338 6.60328C2.93644 6.03605 3.10403 5.48162 3.395 4.9769C3.68597 4.47218 4.09364 4.02874 4.59089 3.67609C5.08814 3.32344 5.66356 3.06966 6.27886 2.93165C6.89416 2.79364 7.53523 2.77455 8.15941 2.87566C8.78358 2.97677 9.37656 3.19577 9.89886 3.51807C10.4212 3.84036 10.8608 4.25858 11.1886 4.74488L12.1378 6.11688L13.087 4.74488C13.2647 4.48054 13.4761 4.23557 13.7169 4.01488C14.5683 3.28828 15.6994 2.88297 16.8756 2.88297C18.0517 2.88297 19.1828 3.28828 20.0342 4.01488C20.449 4.38631 20.7781 4.82728 21.0026 5.3126C21.2271 5.79791 21.3426 6.31807 21.3426 6.84338C21.3426 7.36868 21.2271 7.88884 21.0026 8.37416C20.7781 8.85947 20.449 9.30044 20.0342 9.67188V9.67088Z\" fill=\"#9A9AB0\"></path>\n</svg>\n";

},{}],"6Dcc4":[function(require,module,exports) {
module.exports = "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M20.8401 4.60987C20.3294 4.09888 19.7229 3.69352 19.0555 3.41696C18.388 3.14039 17.6726 2.99805 16.9501 2.99805C16.2276 2.99805 15.5122 3.14039 14.8448 3.41696C14.1773 3.69352 13.5709 4.09888 13.0601 4.60987L12.0001 5.66987L10.9401 4.60987C9.90843 3.57818 8.50915 2.99858 7.05012 2.99858C5.59109 2.99858 4.19181 3.57818 3.16012 4.60987C2.12843 5.64156 1.54883 7.04084 1.54883 8.49987C1.54883 9.95891 2.12843 11.3582 3.16012 12.3899L4.22012 13.4499L12.0001 21.2299L19.7801 13.4499L20.8401 12.3899C21.3511 11.8791 21.7565 11.2727 22.033 10.6052C22.3096 9.93777 22.4519 9.22236 22.4519 8.49987C22.4519 7.77738 22.3096 7.06198 22.033 6.39452C21.7565 5.72706 21.3511 5.12063 20.8401 4.60987V4.60987Z\" fill=\"#FF6698\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n</svg>\n";

},{}],"bfB2a":[function(require,module,exports) {
module.exports = "<svg width=\"16\" height=\"14\" viewBox=\"0 0 16 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M11.7258 4.66699C12.8051 4.66699 13.68 3.88349 13.68 2.91699C13.68 1.95049 12.8051 1.16699 11.7258 1.16699C10.6464 1.16699 9.77148 1.95049 9.77148 2.91699C9.77148 3.88349 10.6464 4.66699 11.7258 4.66699Z\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n<path d=\"M3.90936 8.75C4.98868 8.75 5.86364 7.9665 5.86364 7C5.86364 6.0335 4.98868 5.25 3.90936 5.25C2.83004 5.25 1.95508 6.0335 1.95508 7C1.95508 7.9665 2.83004 8.75 3.90936 8.75Z\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n<path d=\"M11.7258 12.833C12.8051 12.833 13.68 12.0495 13.68 11.083C13.68 10.1165 12.8051 9.33301 11.7258 9.33301C10.6464 9.33301 9.77148 10.1165 9.77148 11.083C9.77148 12.0495 10.6464 12.833 11.7258 12.833Z\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n<path d=\"M5.5957 7.88086L10.0449 10.2025\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n<path d=\"M10.0384 3.79785L5.5957 6.11952\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n</svg>\n";

},{}],"156Bc":[function(require,module,exports) {
module.exports = "<svg width=\"24\" height=\"25\" viewBox=\"0 0 24 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g clip-path=\"url('#clip0_930_10055')\">\n<path d=\"M17 1.89453L21 5.89453L17 9.89453\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n<path d=\"M3 11.8945V9.89453C3 8.83367 3.42143 7.81625 4.17157 7.0661C4.92172 6.31596 5.93913 5.89453 7 5.89453H21\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n<path d=\"M7 23.8945L3 19.8945L7 15.8945\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n<path d=\"M21 13.8945V15.8945C21 16.9554 20.5786 17.9728 19.8284 18.723C19.0783 19.4731 18.0609 19.8945 17 19.8945H3\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n</g>\n<defs>\n<clipPath id=\"clip0_930_10055\">\n<rect width=\"24\" height=\"24\" fill=\"white\" transform=\"translate(0 0.894531)\"></rect>\n</clipPath>\n</defs>\n</svg>\n";

},{}],"sKDsC":[function(require,module,exports) {
module.exports = "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M8 6H21\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n<path d=\"M8 12H21\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n<path d=\"M8 18H21\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n<path d=\"M3 6H3.01\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n<path d=\"M3 12H3.01\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n<path d=\"M3 18H3.01\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n</svg>\n";

},{}],"dN4XP":[function(require,module,exports) {
module.exports = "<svg width=\"24\" height=\"25\" viewBox=\"0 0 24 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M16 3.89453H21V8.89453\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n<path d=\"M4 20.8945L21 3.89453\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n<path d=\"M21 16.8945V21.8945H16\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n<path d=\"M15 15.8945L21 21.8945\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n<path d=\"M4 4.89453L9 9.89453\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n</svg>\n";

},{}],"3GGHp":[function(require,module,exports) {
module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"40\" width=\"40\"><path d=\"M13.333 31.583V8.25l18.334 11.667Z\"></path></svg>";

},{}],"8I1wq":[function(require,module,exports) {
module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"40\" width=\"40\"><path d=\"M23.458 31.667V8.333H30v23.334Zm-13.458 0V8.333h6.542v23.334Z\"></path></svg>";

},{}],"h3Uf2":[function(require,module,exports) {
module.exports = "<svg width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M21.5 11C21.5 16.799 16.799 21.5 11 21.5C5.20101 21.5 0.5 16.799 0.5 11C0.5 5.20101 5.20101 0.5 11 0.5C16.799 0.5 21.5 5.20101 21.5 11Z\" stroke=\"black\"></path>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.1453 12.7732L8.07184 14.5489V7.45279L11.1453 9.21552L11.1582 9.24134L14.2252 11.0041L11.1453 12.7732ZM11.7006 8.3051L11.6683 8.29218L7.83939 6.0904C7.75545 6.02583 7.64569 6 7.54238 6C7.2389 6 7 6.2389 7 6.52946V15.4722H7.00646C7.00646 15.5561 7.01937 15.6465 7.08394 15.724C7.22599 15.9888 7.55529 16.0792 7.80711 15.9242L11.6683 13.6901L15.536 11.4625C15.6199 11.4108 15.6845 11.3334 15.7361 11.2559C15.8782 11.0041 15.7942 10.6812 15.5489 10.5392L11.7006 8.3051Z\" fill=\"black\"></path>\n</svg>\n";

},{}],"iHF58":[function(require,module,exports) {
module.exports = "<svg width=\"32\" height=\"44\" viewBox=\"0 0 32 44\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M16 43.907L2.1436 19.907L29.8564 19.907L16 43.907Z\" fill=\"black\"></path>\n<path d=\"M16 32L2.1436 8L29.8564 8L16 32Z\" fill=\"#FEF9F3\"></path>\n</svg>\n";

},{}],"ebFW9":[function(require,module,exports) {
module.exports = "<svg width=\"30\" height=\"30\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g>\r\n<path fill=\"none\" d=\"M0 0h24v24H0z\"></path>\r\n<path d=\"M12 14l-4-4h8z\"></path>\r\n</g>\r\n</svg>";

},{}],"4lWCi":[function(require,module,exports) {
module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"48\" viewBox=\"0 -960 960 960\" width=\"48\"><path d=\"M378-246 154-470l43-43 181 181 384-384 43 43-427 427Z\"></path></svg>";

},{}],"7VUCE":[function(require,module,exports) {
module.exports = "<svg width=\"20\" height=\"14\" viewBox=\"0 0 20 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M1 7H19\" stroke=\"#1E2022\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n<path d=\"M1 1H19\" stroke=\"#1E2022\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n<path d=\"M1 13H19\" stroke=\"#1E2022\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n</svg>\n";

},{}],"gNbAr":[function(require,module,exports) {
module.exports = "<svg width=\"17\" height=\"16\" viewBox=\"0 0 17 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.5234 11.5137L11.5137 11.5234C10.9631 12.0594 10.3053 12.5028 9.58904 12.8097C8.8874 13.0923 8.1078 13.2678 7.30384 13.2678C6.49501 13.2678 5.72029 13.0923 5.02353 12.8097C4.29753 12.5028 3.63974 12.0594 3.08428 11.5137C2.53856 10.9631 2.09029 10.3053 1.79307 9.57442L1.77845 9.54519C1.49098 8.85817 1.33993 8.09806 1.33993 7.29897C1.33993 6.4804 1.50072 5.71054 1.79307 5.01378C2.09029 4.29265 2.52882 3.63487 3.08428 3.07453C4.16597 1.99772 5.65695 1.33019 7.30384 1.33019C8.1078 1.33019 8.8874 1.49585 9.58904 1.77845C10.3102 2.08542 10.9679 2.52882 11.5234 3.07453L11.5526 3.11351C12.0935 3.65436 12.5223 4.29265 12.8146 5.01378L12.8292 5.04302C13.1118 5.73978 13.2629 6.49989 13.2629 7.29897C13.2629 8.09806 13.1118 8.86791 12.8146 9.57442C12.5223 10.3053 12.074 10.9631 11.5234 11.5137ZM15.8112 14.8562L12.9169 11.9619C13.3798 11.4016 13.7648 10.773 14.0522 10.086C14.403 9.22847 14.6028 8.27834 14.6028 7.29897C14.6028 6.32935 14.4128 5.39383 14.0668 4.54115L14.0522 4.50217C13.6917 3.61538 13.1508 2.83578 12.5028 2.16825L12.4687 2.12927C11.7963 1.46662 10.9874 0.911153 10.1055 0.540845H10.0958C9.23822 0.180282 8.28321 0 7.30384 0C5.28664 0 3.45946 0.808831 2.13902 2.12927C1.47149 2.7968 0.925771 3.60563 0.560335 4.51191C0.194899 5.36947 0 6.30986 0 7.29897C0 8.2686 0.194899 9.20411 0.540845 10.047L0.560335 10.086C0.925771 10.9826 1.47149 11.7914 2.13902 12.4589H2.14876C2.81142 13.1313 3.62025 13.6673 4.51679 14.0474C5.37434 14.3982 6.3196 14.5979 7.30384 14.5979C8.29296 14.5979 9.23822 14.3982 10.1055 14.0474C10.7779 13.7599 11.4065 13.3798 11.9668 12.9121L14.8659 15.8063C15.129 16.0646 15.5529 16.0646 15.8112 15.8063C16.0792 15.5383 16.0792 15.1193 15.8112 14.8562Z\" fill=\"#1E2022\"></path>\n</svg>\n";

},{}],"3iw0Q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _autoBind = require("auto-bind");
var _autoBindDefault = parcelHelpers.interopDefault(_autoBind);
var _normalizeWheel = require("normalize-wheel");
var _normalizeWheelDefault = parcelHelpers.interopDefault(_normalizeWheel);
var _loader = require("./Loader");
var _loaderDefault = parcelHelpers.interopDefault(_loader);
var _gsap = require("gsap");
var _customEase = require("gsap/CustomEase");
var _customEaseDefault = parcelHelpers.interopDefault(_customEase);
// import Scroll from './Scroll'
// import Canvas from '../defaults/Canvas'
var _mouseJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Mouse\uD83D\uDC2D.js");
var _mouseJsDefault = parcelHelpers.interopDefault(_mouseJs);
var _nav = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Nav\uD83C\uDF24️");
var _navDefault = parcelHelpers.interopDefault(_nav);
var _footer = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Footer\uD83D\uDD25");
var _footerDefault = parcelHelpers.interopDefault(_footer);
var _introJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/intro.js");
var _introJsDefault = parcelHelpers.interopDefault(_introJs);
var _home = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Home⚪");
var _homeDefault = parcelHelpers.interopDefault(_home);
var _podcast = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Podcast\uD83D\uDD34");
var _podcastDefault = parcelHelpers.interopDefault(_podcast);
var _learn = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Learn");
var _learnDefault = parcelHelpers.interopDefault(_learn);
var _network = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Network\uD83D\uDFE1");
var _networkDefault = parcelHelpers.interopDefault(_network);
var _article = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Article\uD83D\uDD35");
var _articleDefault = parcelHelpers.interopDefault(_article);
var _tag = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Tag");
var _tagDefault = parcelHelpers.interopDefault(_tag);
var _mediaPlayer = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/MediaPlayer");
var _mediaPlayerDefault = parcelHelpers.interopDefault(_mediaPlayer);
var _sharedPlayer = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/SharedPlayer");
var _sharedPlayerDefault = parcelHelpers.interopDefault(_sharedPlayer);
var _job = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Job\uD83D\uDFE3");
var _jobDefault = parcelHelpers.interopDefault(_job);
var _job1 = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Job\uD83D\uDFE3\uD83D\uDFE3\uD83D\uDFE3");
var _jobDefault1 = parcelHelpers.interopDefault(_job1);
var _apply = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Apply\uD83D\uDFE3");
var _applyDefault = parcelHelpers.interopDefault(_apply);
var _show = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Show\uD83D\uDFE0");
var _showDefault = parcelHelpers.interopDefault(_show);
var _contact = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Contact\uD83D\uDFE2");
var _contactDefault = parcelHelpers.interopDefault(_contact);
var _archive = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Archive⚫");
var _archiveDefault = parcelHelpers.interopDefault(_archive);
var _simple = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Simple");
var _simpleDefault = parcelHelpers.interopDefault(_simple);
var _player = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Player⏯️");
var _playerDefault = parcelHelpers.interopDefault(_player);
var _list = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/List\uD83D\uDCDD");
var _listDefault = parcelHelpers.interopDefault(_list);
var _search = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Search\uD83D\uDD0D");
var _searchDefault = parcelHelpers.interopDefault(_search);
var _login = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Login\uD83E\uDD78");
var _loginDefault = parcelHelpers.interopDefault(_login);
var _404 = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404");
var _404Default = parcelHelpers.interopDefault(_404);
var _home1 = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Content Hub/Home");
var _homeDefault1 = parcelHelpers.interopDefault(_home1);
var _actions = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Content Hub/Actions");
var _actionsDefault = parcelHelpers.interopDefault(_actions);
var _ceos = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Content Hub/CEOs");
var _ceosDefault = parcelHelpers.interopDefault(_ceos);
var _ceoSingle = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Content Hub/CEO-Single");
var _ceoSingleDefault = parcelHelpers.interopDefault(_ceoSingle);
var _media = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Content Hub/Media");
var _mediaDefault = parcelHelpers.interopDefault(_media);
var _resources = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Content Hub/Resources");
var _resourcesDefault = parcelHelpers.interopDefault(_resources);
var _resourceSingle = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Content Hub/Resource-Single");
var _resourceSingleDefault = parcelHelpers.interopDefault(_resourceSingle);
var _purpose = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Content Hub/Purpose");
var _purposeDefault = parcelHelpers.interopDefault(_purpose);
var _latest = require("/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/Content Hub/Latest");
var _latestDefault = parcelHelpers.interopDefault(_latest);
//🟠🔴🔵🟢🟣🟡⚪
class App {
    constructor(main){
        (0, _autoBindDefault.default)(this);
        this.content = document.querySelector("#content");
        this.main = main;
        this.main.colors = [
            "#DF80AC",
            "#E5855E",
            "#895434"
        ];
        this.isMobile = this.main.isTouch;
        this.speed = 0;
        // this.createCanvas()
        (0, _gsap.gsap).registerPlugin((0, _customEaseDefault.default));
        // CustomEase.create("bounceTrans","M0,0 C0,0 0.112,0.043 0.168,0.17 0.242,0.34 0.282,0.484 0.282,0.818 0.284,0.926 0.29,1.022 0.394,1.022 0.47,1.022 0.498,0.974 0.546,0.974 0.599,0.974 0.622,0.999 0.68,1 0.728,1 0.771,1 0.8,1 0.853,0.999 1,1 1,1")
        (0, _customEaseDefault.default).create("bounceTrans", "M0,0 C0,0 0.08,0.05 0.224,0.21 0.332,0.33 0.394,0.462 0.424,0.784 0.424,0.99 0.542,1.038 0.76,1.01 0.834,1 0.859,1 0.888,1 0.941,0.999 1,1 1,1");
        (0, _customEaseDefault.default).create("bounceNew", "M0,0 C0,0 0.102,0.164 0.13,0.64 0.142,0.845 0.138,1.042 0.232,1.042 0.322,1.042 0.354,0.99 0.46,0.99 0.558,0.99 0.613,1.004 0.676,1.004 0.733,1.004 0.832,1 0.893,0.999 0.935,0.998 1,1 1,1 ");
        this.createNav();
        this.url = window.location.pathname;
        this.links = [];
        this.createViews();
        this.createLoader();
        this.addEventListeners();
    }
    createViews() {
        // CREATE VIEWS
        this.pages = new Map();
        this.pages.set("home", new (0, _homeDefault.default)(this.main, this.footer.string));
        this.pages.set("simple", new (0, _simpleDefault.default)(this.main, this.footer.string));
        this.pages.set("article", new (0, _articleDefault.default)(this.main, this.footer.string));
        this.pages.set("podcast", new (0, _podcastDefault.default)(this.main, this.footer.string));
        this.pages.set("learn", new (0, _learnDefault.default)(this.main, this.footer.string));
        this.pages.set("network", new (0, _networkDefault.default)(this.main, this.footer.string));
        this.pages.set("job", new (0, _jobDefault.default)(this.main, this.footer.string));
        this.pages.set("jobs", new (0, _jobDefault1.default)(this.main, this.footer.string));
        this.pages.set("apply", new (0, _applyDefault.default)(this.main, this.footer.string));
        this.pages.set("contact", new (0, _contactDefault.default)(this.main, this.footer.string));
        this.pages.set("show", new (0, _showDefault.default)(this.main, this.footer.string));
        this.pages.set("archive", new (0, _archiveDefault.default)(this.main, this.footer.string));
        this.pages.set("list", new (0, _listDefault.default)(this.main, this.footer.string));
        this.pages.set("search", new (0, _searchDefault.default)(this.main, this.footer.string));
        this.pages.set("login", new (0, _loginDefault.default)(this.main, this.footer.string));
        this.pages.set("error404", new (0, _404Default.default)(this.main, this.footer.string));
        this.pages.set("tag", new (0, _tagDefault.default)(this.main, this.footer.string));
        this.pages.set("player", new (0, _mediaPlayerDefault.default)(this.main, this.footer.string));
        this.pages.set("shared-player", new (0, _sharedPlayerDefault.default)(this.main, this.footer.string));
        this.pages.set("content-hub", new (0, _homeDefault1.default)(this.main, this.footer.string));
        this.pages.set("ch-actions", new (0, _actionsDefault.default)(this.main, this.footer.string));
        this.pages.set("ch-ceos", new (0, _ceosDefault.default)(this.main, this.footer.string));
        this.pages.set("ch-media", new (0, _mediaDefault.default)(this.main, this.footer.string));
        this.pages.set("ch-resources", new (0, _resourcesDefault.default)(this.main, this.footer.string));
        this.pages.set("ch-purpose", new (0, _purposeDefault.default)(this.main, this.footer.string));
        this.pages.set("ch-latest", new (0, _latestDefault.default)(this.main, this.footer.string));
        this.pages.set("ch-ceos-single", new (0, _ceoSingleDefault.default)(this.main, this.footer.string));
        this.pages.set("ch-resource-single", new (0, _resourceSingleDefault.default)(this.main, this.footer.string));
        // this.pages.set('home', new Home(this.main,this.footer.string))
        this.pages.get("login").on("reset", ()=>{
            let url = window.location;
            url = "http://localhost:1234/login.html";
            // this.onChange({
            //   url: url,
            //   id: '',
            //   link:null
            // })
            this.toUser();
        });
        this.pages.get("apply").on("toJob", (content)=>{
            content.url = "http://localhost:1234/job.html";
            this.toJob({
                content: content
            });
        });
        this.pages.get("login").on("gotohome", ()=>{
            let url = this.main.acf.home;
            // if(process.env.APP_ENV=='local'){
            //   url='http://localhost:1234/index.html'
            // }
            this.onChange({
                url: url,
                id: "",
                link: null
            });
        });
        this.pages.get("job").on("toApply", (id)=>{
            this.toApply(id);
        });
        for (let pa of this.pages){
            pa[1].on("linkseventlisteners", ()=>{
                this.addLinksEventsListeners();
            });
            pa[1].on("globalchange", ()=>{
                this.main = this.page.main;
            // //  console.log('reset global')
            // //  console.log(this.main)
            });
            pa[1].on("mousereset", ()=>{
                if (this.mouse) this.mouse.reset();
            });
        }
    }
    createLoader() {
        this.loader = new (0, _loaderDefault.default)();
        this.loader.on("complete", this.loaderReady);
        this.loaderReady();
    }
    async loaderReady() {
        this.template = this.content.dataset.template;
        this.page = this.pages.get(this.template);
        await this.page.create(this.content, this.main);
        this.addLinksEventsListeners();
        if (this.introstate == true) {
            this.update();
            if (this.mouse) this.mouse.reset();
        } else {
            await this.nav.create();
            await this.page.show();
            this.update();
            if (this.mouse) this.mouse.reset();
        }
    // this.onResize()
    }
    async makeStart() {
        await this.nav.create();
        await this.page.show();
        if (this.mouse) this.mouse.reset();
    }
    createCanvas() {
        this.canvas = new Canvas({
            url: this.url
        });
    }
    async createNav() {
        this.nav = new (0, _navDefault.default)(this.main);
        this.footer = new (0, _footerDefault.default)(this.main);
        this.player = new (0, _playerDefault.default)(this.main);
        this.intro = new (0, _introJsDefault.default)(this.main);
        await this.nav.generate();
        await this.footer.create();
        this.introstate = await this.intro.init();
        if (!this.isMobile) this.mouse = new (0, _mouseJsDefault.default)(this.main);
        this.intro.on("closeintro", ()=>{
            this.makeStart();
        });
        this.intro.on("tochange", ()=>{
            let url = this.main.acf.login;
            url = "http://localhost:1234/login.html";
            this.onChange({
                url: url,
                id: "",
                link: null
            });
        });
        this.intro.on("linkseventlisteners", ()=>{
            this.addLinksEventsListeners();
        });
        this.nav.on("search", ()=>{
            let url = this.main.acf.search + "?search=" + this.nav.field.DOM.npt.value;
            this.nav.closeSearchFn();
            url = "http://localhost:1234/search.html";
            this.onChange({
                url: url,
                id: "",
                link: null
            });
        });
    }
    update() {
        if (this.page) this.page.update(this.speed);
        if (this.mouse) this.mouse.update();
        // if (this.canvas) {
        //   this.canvas.update()
        // }
        if (this.speed > 0.005 || this.speed < -0.005) {
            document.documentElement.classList.add("is-scrolling");
            // this.speed=parseFloat(0.8*this.speed)
            this.speed = Math.round(0.9 * this.speed * 1000) / 1000;
        } else {
            this.speed = 0;
            document.documentElement.classList.remove("is-scrolling");
        }
        window.requestAnimationFrame(this.update);
    }
    /**
   * Page creations
   */ timeout(ms) {
        return new Promise((resolve)=>setTimeout(resolve, ms));
    }
    async loadImage(img) {
        return new Promise((resolve, reject)=>{
            const image = new Image();
            image.onload = ()=>resolve(image);
            img.onerror = reject;
            image.src = img.getAttribute("src");
        });
    }
    async toJob(content) {
        if (this.isLoading) return;
        this.page.isVisible = false;
        this.isLoading = true;
        // //  console.log(content.content)
        document.body.style.pointerEvents = "none";
        let mainold = document.querySelector("#content main");
        mainold.classList.add("old");
        mainold.style.zIndex = 1;
        this.page.hide();
        this.newpage = this.pages.get("job");
        await this.newpage.create(content.content.content, this.main);
        await (0, _gsap.gsap).to("main.old", {
            opacity: 0,
            duration: .6,
            ease: (0, _gsap.Power3).easeInOut
        });
        await this.newpage.show();
        if (this.isMobile) {
            window.scrollY = 0;
            document.body.scroll({
                top: 0,
                left: 0,
                behavior: "instant"
            });
        }
        document.querySelector("#content").removeChild(document.querySelector("main.old"));
        if (this.mouse) this.mouse.reset();
        this.addLinksEventsListeners();
        document.body.style.pointerEvents = "";
        this.isLoading = false;
        this.page = this.newpage;
    }
    async toApply(id) {
        if (this.isLoading) return;
        this.page.isVisible = false;
        this.isLoading = true;
        document.body.style.pointerEvents = "none";
        let mainold = document.querySelector("#content main");
        mainold.classList.add("old");
        mainold.style.zIndex = 1;
        this.page.hide();
        this.newpage = this.pages.get("apply");
        await this.newpage.create(id, this.main);
        await (0, _gsap.gsap).to("main.old", {
            opacity: 0,
            duration: .6,
            ease: (0, _gsap.Power3).easeInOut
        });
        await this.newpage.show();
        window.scrollY = 0;
        if (this.isMobile) document.body.scroll({
            top: 0,
            left: 0,
            behavior: "instant"
        });
        document.querySelector("#content").removeChild(document.querySelector("main.old"));
        if (this.mouse) this.mouse.reset();
        this.addLinksEventsListeners();
        document.body.style.pointerEvents = "";
        this.isLoading = false;
        this.page = this.newpage;
    }
    async toUser() {
        if (this.isLoading) return;
        this.page.isVisible = false;
        this.isLoading = true;
        document.body.style.pointerEvents = "none";
        let mainold = document.querySelector("#content main");
        mainold.classList.add("old");
        mainold.style.zIndex = 1;
        this.page.hide();
        this.newpage = this.pages.get("login");
        await this.newpage.create("", this.main);
        await (0, _gsap.gsap).to("main.old", {
            opacity: 0,
            duration: .6,
            ease: (0, _gsap.Power3).easeInOut
        });
        await this.newpage.show();
        document.querySelector("#content").removeChild(document.querySelector("main.old"));
        window.scrollY = 0;
        if (this.isMobile) document.body.scroll({
            top: 0,
            left: 0,
            behavior: "instant"
        });
        if (this.mouse) this.mouse.reset();
        this.addLinksEventsListeners();
        document.body.style.pointerEvents = "";
        this.isLoading = false;
        this.page = this.newpage;
    }
    async onChange({ url =null , link =null , id =null , img =null  }) {
        url = url.replace(window.location.origin, "");
        if (this.isLoading || this.url === url) return;
        this.page.isVisible = false;
        this.isLoading = true;
        this.url = url;
        // if (this.canvas) {
        //   this.canvas.onChange(this.url)
        // }
        if (this.mouse) this.mouse.clear();
        if (this.nav.isOpen == 1) {
            this.nav.isOpen = 0;
            this.nav.closeMenu();
            await this.timeout(600);
        }
        document.body.style.pointerEvents = "none";
        let mainold = document.querySelector("#content main");
        mainold.classList.add("old");
        mainold.style.zIndex = 1;
        const request = await window.fetch(url, {
            headers: {
                "X-Requested-With": "XMLHttpRequest"
            }
        });
        const response = await request.text();
        var push = true;
        this.onRequest({
            push,
            response,
            url,
            id
        });
        this.page.hide();
        await this.newpage.create(this.content, this.main);
        // //  console.log(this.page.isVisible)
        // //  console.log(mainold)
        // gsap.to('main.old',{y:'-='+window.innerHeight*.8+'px',duration:.9,ease:Power3.easeInOut})
        (0, _gsap.gsap).to("main.old", {
            opacity: 0,
            duration: 1.2,
            ease: (0, _gsap.Power3).easeInOut
        });
        await this.newpage.show();
        if (this.isMobile) {
            window.scrollY = 0;
            document.body.scroll({
                top: 0,
                left: 0,
                behavior: "instant"
            });
        }
        // //  console.log(mainold)
        if (this.mouse) this.mouse.reset();
        // document.querySelector('main.old').remove()
        document.querySelector("#content").removeChild(document.querySelector("main.old"));
        this.addLinksEventsListeners();
        document.body.style.pointerEvents = "";
        this.isLoading = false;
        this.page = this.newpage;
    // window.location.reload();
    }
    async onRequest({ push , response , url , id  }) {
        const html = document.createElement("div");
        html.innerHTML = response;
        this.content = html.querySelector("#content");
        document.title = html.querySelector("title").textContent;
        if (push) window.history.pushState({}, document.title, url);
        this.template = this.content.dataset.template;
        this.newpage = this.pages.get(this.template);
    }
    /**
   * Events.
   */ onContextMenu(event) {
        event.preventDefault();
        event.stopPropagation();
        return false;
    }
    onPopState() {
        // if we're in the player, use the popstate defined in the media player view
        if (window.history.state?.player_href && document.querySelector(".media-player")) return;
        this.onChange({
            url: window.location.pathname,
            push: false
        });
    }
    onResize() {
        document.documentElement.style.setProperty("--app-height", window.innerHeight + "px");
        if (this.isMobile) {
            if (document.documentElement.classList.contains("touch")) location.reload();
        } else {
            var isMobile = /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || navigator.platform === "MacIntel" && navigator.maxTouchPoints > 1 || window.innerWidth < 1181;
            // //  console.log(isMobile)
            if (isMobile) location.reload();
        }
        if (this.page) this.page.onResize();
    // if (this.canvas && this.canvas.onResize) {
    //   this.canvas.onResize()
    // }
    }
    onTouchDown(event) {
        event.stopPropagation();
        if (this.isMobile) return;
        this.mouse.position.x = event.touches ? event.touches[0].clientX : event.clientX;
        this.mouse.position.y = event.touches ? event.touches[0].clientY : event.clientY;
        // if (event.target.tagName === 'A') return
        // this.mouse.x = event.touches ? event.touches[0].clientX : event.clientX
        // this.mouse.y = event.touches ? event.touches[0].clientY : event.clientY
        if (this.page && this.page.onTouchDown) this.page.onTouchDown(event);
    }
    onTouchMove(event) {
        event.stopPropagation();
        if (this.isMobile) return;
        this.mouse.position.x = event.touches ? event.touches[0].clientX : event.clientX;
        this.mouse.position.y = event.touches ? event.touches[0].clientY : event.clientY;
        if (this.page && this.page.onTouchMove) this.page.onTouchMove(event);
    }
    onTouchUp(event) {
        event.stopPropagation();
        if (this.isMobile) return;
        this.mouse.position.x = event.changedTouches ? event.changedTouches[0].clientX : event.clientX;
        this.mouse.position.y = event.changedTouches ? event.changedTouches[0].clientY : event.clientY;
        if (this.page && this.page.onTouchUp) this.page.onTouchUp(event);
    }
    onScroll(event) {
        // const {pageYOffset: e} = window;
        this.page && this.page.onScroll && this.page.onScroll(event.scrollY);
    }
    onWheel(event) {
        if (this.isMobile) return;
        const normalized = (0, _normalizeWheelDefault.default)(event);
        // const speed = normalized.pixelY
        this.speed += normalized.pixelY * .12;
        if (this.page && this.page.onWheel) this.page.onWheel();
        if (this.canvas && this.canvas.onWheel) this.canvas.onWheel();
    }
    onInteract() {
        window.removeEventListener("mousemove", this.onInteract);
        window.removeEventListener("touchstart", this.onInteract);
        this.update();
    }
    /**
   * Listeners.
   */ addEventListeners() {
        window.addEventListener("popstate", this.onPopState, {
            passive: true
        });
        // window.addEventListener('resize', this.onResize, { passive: true })
        this.res = "";
        window.onresize = ()=>{
            clearTimeout(this.res);
            this.res = setTimeout(this.onResize, 400);
        };
        if (this.isMobile) window.addEventListener("orientationchange", (event)=>{
            location.reload();
        });
        window.addEventListener("mousedown", this.onTouchDown, {
            passive: true
        });
        window.addEventListener("mousemove", this.onTouchMove, {
            passive: true
        });
        window.addEventListener("mouseup", this.onTouchUp, {
            passive: true
        });
        window.addEventListener("touchstart", this.onTouchDown, {
            passive: true
        });
        window.addEventListener("touchmove", this.onTouchMove, {
            passive: true
        });
        window.addEventListener("touchend", this.onTouchUp, {
            passive: true
        });
        window.addEventListener("mousewheel", this.onWheel, {
            passive: true
        });
        window.addEventListener("wheel", this.onWheel, {
            passive: true
        });
        // window.addEventListener('keydown', this.onKeyDown)
        // window.addEventListener('focusin', this.onFocusIn)
        if (!this.isMobile) window.oncontextmenu = this.onContextMenu;
        else document.body.addEventListener("scroll", this.onScroll, {
            passive: true
        });
    }
    addLinksEventsListeners() {
        const links = document.querySelectorAll("a");
        for (let link of links){
            if (!this.links.includes(link)) {
                let isLocal = link.href.indexOf(this.main.acf.base) == 0;
                if (link.dataset.type) {
                    isLocal = true;
                    link.dataset.type;
                    link.removeAttribute("data-type");
                }
                const isAnchor = link.href.indexOf("#") > -1;
                if (isLocal) link.onclick = (event)=>{
                    if (link.target == "_blank") return;
                    event.preventDefault();
                    //remove content hub header
                    document.querySelector(".nav_box").classList.remove("nav_box--ch");
                    if (!isAnchor) this.onChange({
                        url: link.href,
                        id: link.dataset.id,
                        link: link
                    });
                };
                else if (link.href.indexOf("mailto") === -1 && link.href.indexOf("tel") === -1) {
                    link.rel = "noopener";
                    link.target = "_blank";
                }
            }
            this.links.push(link);
        }
        const pods = document.querySelectorAll("*[data-player]");
        for (let link1 of pods)if (link1.dataset.player) link1.onclick = (event)=>{
            this.player.start(link1);
        };
        const shares = document.querySelectorAll(".shareclick_close");
        for (let share of shares)share.onclick = (event)=>{
            if (share.parentNode.classList.contains("act")) share.parentNode.classList.remove("act");
            else share.parentNode.classList.add("act");
        };
    }
}
exports.default = App;

},{"auto-bind":"iS0Jy","normalize-wheel":"jF9cc","./Loader":"fgxwh","gsap":"gS77a","gsap/CustomEase":"2VbO1","/src/js🧠🧠🧠/defaults/Mouse🐭.js":"cKv5m","/src/views👁️👁️👁️/Nav🌤️":"5uhxP","/src/views👁️👁️👁️/Footer🔥":"h1Iyh","/src/js🧠🧠🧠/basic/intro.js":"gMG9h","/src/views👁️👁️👁️/Home⚪":"auzbB","/src/views👁️👁️👁️/Podcast🔴":"dwOfZ","/src/views👁️👁️👁️/Learn":"10SkD","/src/views👁️👁️👁️/Network🟡":"2g5Po","/src/views👁️👁️👁️/Article🔵":"4WMaS","/src/views👁️👁️👁️/Tag":"i1fEn","/src/views👁️👁️👁️/MediaPlayer":"dKpTi","/src/views👁️👁️👁️/SharedPlayer":"3Vxxk","/src/views👁️👁️👁️/Job🟣":"1LKNP","/src/views👁️👁️👁️/Job🟣🟣🟣":"lRMJY","/src/views👁️👁️👁️/Apply🟣":"hmZuY","/src/views👁️👁️👁️/Show🟠":"e0fqc","/src/views👁️👁️👁️/Contact🟢":"7rEA1","/src/views👁️👁️👁️/Archive⚫":"ay4ky","/src/views👁️👁️👁️/Simple":"fPp1z","/src/views👁️👁️👁️/Player⏯️":"7vdFL","/src/views👁️👁️👁️/List📝":"kKRn2","/src/views👁️👁️👁️/Search🔍":"gJu8G","/src/views👁️👁️👁️/Login🥸":"9oVGw","/src/views👁️👁️👁️/404":"1Ektz","/src/views👁️👁️👁️/Content Hub/Home":"52vPY","/src/views👁️👁️👁️/Content Hub/Actions":"dzThK","/src/views👁️👁️👁️/Content Hub/CEOs":"4U0Pg","/src/views👁️👁️👁️/Content Hub/CEO-Single":"dSZAX","/src/views👁️👁️👁️/Content Hub/Media":"jGp45","/src/views👁️👁️👁️/Content Hub/Resources":"e7xCJ","/src/views👁️👁️👁️/Content Hub/Resource-Single":"5LEDn","/src/views👁️👁️👁️/Content Hub/Purpose":"fr4mY","/src/views👁️👁️👁️/Content Hub/Latest":"a3LP2","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"iS0Jy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// Gets all non-builtin properties up the prototype chain.
const getAllProperties = (object)=>{
    const properties = new Set();
    do for (const key of Reflect.ownKeys(object))properties.add([
        object,
        key
    ]);
    while ((object = Reflect.getPrototypeOf(object)) && object !== Object.prototype);
    return properties;
};
function autoBind(self, { include , exclude  } = {}) {
    const filter = (key)=>{
        const match = (pattern)=>typeof pattern === "string" ? key === pattern : pattern.test(key);
        if (include) return include.some(match); // eslint-disable-line unicorn/no-array-callback-reference
        if (exclude) return !exclude.some(match); // eslint-disable-line unicorn/no-array-callback-reference
        return true;
    };
    for (const [object, key] of getAllProperties(self.constructor.prototype)){
        if (key === "constructor" || !filter(key)) continue;
        const descriptor = Reflect.getOwnPropertyDescriptor(object, key);
        if (descriptor && typeof descriptor.value === "function") self[key] = self[key].bind(self);
    }
    return self;
}
exports.default = autoBind;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"jF9cc":[function(require,module,exports) {
module.exports = require("./src/normalizeWheel.js");

},{"./src/normalizeWheel.js":"1EVrN"}],"1EVrN":[function(require,module,exports) {
/**
 * Copyright (c) 2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule normalizeWheel
 * @typechecks
 */ "use strict";
var UserAgent_DEPRECATED = require("./UserAgent_DEPRECATED");
var isEventSupported = require("./isEventSupported");
// Reasonable defaults
var PIXEL_STEP = 10;
var LINE_HEIGHT = 40;
var PAGE_HEIGHT = 800;
/**
 * Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is
 * complicated, thus this doc is long and (hopefully) detailed enough to answer
 * your questions.
 *
 * If you need to react to the mouse wheel in a predictable way, this code is
 * like your bestest friend. * hugs *
 *
 * As of today, there are 4 DOM event types you can listen to:
 *
 *   'wheel'                -- Chrome(31+), FF(17+), IE(9+)
 *   'mousewheel'           -- Chrome, IE(6+), Opera, Safari
 *   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!
 *   'DOMMouseScroll'       -- FF(0.9.7+) since 2003
 *
 * So what to do?  The is the best:
 *
 *   normalizeWheel.getEventType();
 *
 * In your event callback, use this code to get sane interpretation of the
 * deltas.  This code will return an object with properties:
 *
 *   spinX   -- normalized spin speed (use for zoom) - x plane
 *   spinY   -- " - y plane
 *   pixelX  -- normalized distance (to pixels) - x plane
 *   pixelY  -- " - y plane
 *
 * Wheel values are provided by the browser assuming you are using the wheel to
 * scroll a web page by a number of lines or pixels (or pages).  Values can vary
 * significantly on different platforms and browsers, forgetting that you can
 * scroll at different speeds.  Some devices (like trackpads) emit more events
 * at smaller increments with fine granularity, and some emit massive jumps with
 * linear speed or acceleration.
 *
 * This code does its best to normalize the deltas for you:
 *
 *   - spin is trying to normalize how far the wheel was spun (or trackpad
 *     dragged).  This is super useful for zoom support where you want to
 *     throw away the chunky scroll steps on the PC and make those equal to
 *     the slow and smooth tiny steps on the Mac. Key data: This code tries to
 *     resolve a single slow step on a wheel to 1.
 *
 *   - pixel is normalizing the desired scroll delta in pixel units.  You'll
 *     get the crazy differences between browsers, but at least it'll be in
 *     pixels!
 *
 *   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This
 *     should translate to positive value zooming IN, negative zooming OUT.
 *     This matches the newer 'wheel' event.
 *
 * Why are there spinX, spinY (or pixels)?
 *
 *   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn
 *     with a mouse.  It results in side-scrolling in the browser by default.
 *
 *   - spinY is what you expect -- it's the classic axis of a mouse wheel.
 *
 *   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and
 *     probably is by browsers in conjunction with fancy 3D controllers .. but
 *     you know.
 *
 * Implementation info:
 *
 * Examples of 'wheel' event if you scroll slowly (down) by one step with an
 * average mouse:
 *
 *   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)
 *   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)
 *   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)
 *   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)
 *   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)
 *
 * On the trackpad:
 *
 *   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)
 *   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)
 *
 * On other/older browsers.. it's more complicated as there can be multiple and
 * also missing delta values.
 *
 * The 'wheel' event is more standard:
 *
 * http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents
 *
 * The basics is that it includes a unit, deltaMode (pixels, lines, pages), and
 * deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain
 * backward compatibility with older events.  Those other values help us
 * better normalize spin speed.  Example of what the browsers provide:
 *
 *                          | event.wheelDelta | event.detail
 *        ------------------+------------------+--------------
 *          Safari v5/OS X  |       -120       |       0
 *          Safari v5/Win7  |       -120       |       0
 *         Chrome v17/OS X  |       -120       |       0
 *         Chrome v17/Win7  |       -120       |       0
 *                IE9/Win7  |       -120       |   undefined
 *         Firefox v4/OS X  |     undefined    |       1
 *         Firefox v4/Win7  |     undefined    |       3
 *
 */ function normalizeWheel(/*object*/ event) /*object*/ {
    var sX = 0, sY = 0, pX = 0, pY = 0; // pixelX, pixelY
    // Legacy
    if ("detail" in event) sY = event.detail;
    if ("wheelDelta" in event) sY = -event.wheelDelta / 120;
    if ("wheelDeltaY" in event) sY = -event.wheelDeltaY / 120;
    if ("wheelDeltaX" in event) sX = -event.wheelDeltaX / 120;
    // side scrolling on FF with DOMMouseScroll
    if ("axis" in event && event.axis === event.HORIZONTAL_AXIS) {
        sX = sY;
        sY = 0;
    }
    pX = sX * PIXEL_STEP;
    pY = sY * PIXEL_STEP;
    if ("deltaY" in event) pY = event.deltaY;
    if ("deltaX" in event) pX = event.deltaX;
    if ((pX || pY) && event.deltaMode) {
        if (event.deltaMode == 1) {
            pX *= LINE_HEIGHT;
            pY *= LINE_HEIGHT;
        } else {
            pX *= PAGE_HEIGHT;
            pY *= PAGE_HEIGHT;
        }
    }
    // Fall-back if spin cannot be determined
    if (pX && !sX) sX = pX < 1 ? -1 : 1;
    if (pY && !sY) sY = pY < 1 ? -1 : 1;
    return {
        spinX: sX,
        spinY: sY,
        pixelX: pX,
        pixelY: pY
    };
}
/**
 * The best combination if you prefer spinX + spinY normalization.  It favors
 * the older DOMMouseScroll for Firefox, as FF does not include wheelDelta with
 * 'wheel' event, making spin speed determination impossible.
 */ normalizeWheel.getEventType = function() /*string*/ {
    return UserAgent_DEPRECATED.firefox() ? "DOMMouseScroll" : isEventSupported("wheel") ? "wheel" : "mousewheel";
};
module.exports = normalizeWheel;

},{"./UserAgent_DEPRECATED":"gsbsZ","./isEventSupported":"kSbZq"}],"gsbsZ":[function(require,module,exports) {
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 * @providesModule UserAgent_DEPRECATED
 */ /**
 *  Provides entirely client-side User Agent and OS detection. You should prefer
 *  the non-deprecated UserAgent module when possible, which exposes our
 *  authoritative server-side PHP-based detection to the client.
 *
 *  Usage is straightforward:
 *
 *    if (UserAgent_DEPRECATED.ie()) {
 *      //  IE
 *    }
 *
 *  You can also do version checks:
 *
 *    if (UserAgent_DEPRECATED.ie() >= 7) {
 *      //  IE7 or better
 *    }
 *
 *  The browser functions will return NaN if the browser does not match, so
 *  you can also do version compares the other way:
 *
 *    if (UserAgent_DEPRECATED.ie() < 7) {
 *      //  IE6 or worse
 *    }
 *
 *  Note that the version is a float and may include a minor version number,
 *  so you should always use range operators to perform comparisons, not
 *  strict equality.
 *
 *  **Note:** You should **strongly** prefer capability detection to browser
 *  version detection where it's reasonable:
 *
 *    http://www.quirksmode.org/js/support.html
 *
 *  Further, we have a large number of mature wrapper functions and classes
 *  which abstract away many browser irregularities. Check the documentation,
 *  grep for things, or ask on javascript@lists.facebook.com before writing yet
 *  another copy of "event || window.event".
 *
 */ var _populated = false;
// Browsers
var _ie, _firefox, _opera, _webkit, _chrome;
// Actual IE browser for compatibility mode
var _ie_real_version;
// Platforms
var _osx, _windows, _linux, _android;
// Architectures
var _win64;
// Devices
var _iphone, _ipad, _native;
var _mobile;
function _populate() {
    if (_populated) return;
    _populated = true;
    // To work around buggy JS libraries that can't handle multi-digit
    // version numbers, Opera 10's user agent string claims it's Opera
    // 9, then later includes a Version/X.Y field:
    //
    // Opera/9.80 (foo) Presto/2.2.15 Version/10.10
    var uas = navigator.userAgent;
    var agent = /(?:MSIE.(\d+\.\d+))|(?:(?:Firefox|GranParadiso|Iceweasel).(\d+\.\d+))|(?:Opera(?:.+Version.|.)(\d+\.\d+))|(?:AppleWebKit.(\d+(?:\.\d+)?))|(?:Trident\/\d+\.\d+.*rv:(\d+\.\d+))/.exec(uas);
    var os = /(Mac OS X)|(Windows)|(Linux)/.exec(uas);
    _iphone = /\b(iPhone|iP[ao]d)/.exec(uas);
    _ipad = /\b(iP[ao]d)/.exec(uas);
    _android = /Android/i.exec(uas);
    _native = /FBAN\/\w+;/i.exec(uas);
    _mobile = /Mobile/i.exec(uas);
    // Note that the IE team blog would have you believe you should be checking
    // for 'Win64; x64'.  But MSDN then reveals that you can actually be coming
    // from either x64 or ia64;  so ultimately, you should just check for Win64
    // as in indicator of whether you're in 64-bit IE.  32-bit IE on 64-bit
    // Windows will send 'WOW64' instead.
    _win64 = !!/Win64/.exec(uas);
    if (agent) {
        _ie = agent[1] ? parseFloat(agent[1]) : agent[5] ? parseFloat(agent[5]) : NaN;
        // IE compatibility mode
        if (_ie && document && document.documentMode) _ie = document.documentMode;
        // grab the "true" ie version from the trident token if available
        var trident = /(?:Trident\/(\d+.\d+))/.exec(uas);
        _ie_real_version = trident ? parseFloat(trident[1]) + 4 : _ie;
        _firefox = agent[2] ? parseFloat(agent[2]) : NaN;
        _opera = agent[3] ? parseFloat(agent[3]) : NaN;
        _webkit = agent[4] ? parseFloat(agent[4]) : NaN;
        if (_webkit) {
            // We do not add the regexp to the above test, because it will always
            // match 'safari' only since 'AppleWebKit' appears before 'Chrome' in
            // the userAgent string.
            agent = /(?:Chrome\/(\d+\.\d+))/.exec(uas);
            _chrome = agent && agent[1] ? parseFloat(agent[1]) : NaN;
        } else _chrome = NaN;
    } else _ie = _firefox = _opera = _chrome = _webkit = NaN;
    if (os) {
        if (os[1]) {
            // Detect OS X version.  If no version number matches, set _osx to true.
            // Version examples:  10, 10_6_1, 10.7
            // Parses version number as a float, taking only first two sets of
            // digits.  If only one set of digits is found, returns just the major
            // version number.
            var ver = /(?:Mac OS X (\d+(?:[._]\d+)?))/.exec(uas);
            _osx = ver ? parseFloat(ver[1].replace("_", ".")) : true;
        } else _osx = false;
        _windows = !!os[2];
        _linux = !!os[3];
    } else _osx = _windows = _linux = false;
}
var UserAgent_DEPRECATED = {
    /**
   *  Check if the UA is Internet Explorer.
   *
   *
   *  @return float|NaN Version number (if match) or NaN.
   */ ie: function() {
        return _populate() || _ie;
    },
    /**
   * Check if we're in Internet Explorer compatibility mode.
   *
   * @return bool true if in compatibility mode, false if
   * not compatibility mode or not ie
   */ ieCompatibilityMode: function() {
        return _populate() || _ie_real_version > _ie;
    },
    /**
   * Whether the browser is 64-bit IE.  Really, this is kind of weak sauce;  we
   * only need this because Skype can't handle 64-bit IE yet.  We need to remove
   * this when we don't need it -- tracked by #601957.
   */ ie64: function() {
        return UserAgent_DEPRECATED.ie() && _win64;
    },
    /**
   *  Check if the UA is Firefox.
   *
   *
   *  @return float|NaN Version number (if match) or NaN.
   */ firefox: function() {
        return _populate() || _firefox;
    },
    /**
   *  Check if the UA is Opera.
   *
   *
   *  @return float|NaN Version number (if match) or NaN.
   */ opera: function() {
        return _populate() || _opera;
    },
    /**
   *  Check if the UA is WebKit.
   *
   *
   *  @return float|NaN Version number (if match) or NaN.
   */ webkit: function() {
        return _populate() || _webkit;
    },
    /**
   *  For Push
   *  WILL BE REMOVED VERY SOON. Use UserAgent_DEPRECATED.webkit
   */ safari: function() {
        return UserAgent_DEPRECATED.webkit();
    },
    /**
   *  Check if the UA is a Chrome browser.
   *
   *
   *  @return float|NaN Version number (if match) or NaN.
   */ chrome: function() {
        return _populate() || _chrome;
    },
    /**
   *  Check if the user is running Windows.
   *
   *  @return bool `true' if the user's OS is Windows.
   */ windows: function() {
        return _populate() || _windows;
    },
    /**
   *  Check if the user is running Mac OS X.
   *
   *  @return float|bool   Returns a float if a version number is detected,
   *                       otherwise true/false.
   */ osx: function() {
        return _populate() || _osx;
    },
    /**
   * Check if the user is running Linux.
   *
   * @return bool `true' if the user's OS is some flavor of Linux.
   */ linux: function() {
        return _populate() || _linux;
    },
    /**
   * Check if the user is running on an iPhone or iPod platform.
   *
   * @return bool `true' if the user is running some flavor of the
   *    iPhone OS.
   */ iphone: function() {
        return _populate() || _iphone;
    },
    mobile: function() {
        return _populate() || _iphone || _ipad || _android || _mobile;
    },
    nativeApp: function() {
        // webviews inside of the native apps
        return _populate() || _native;
    },
    android: function() {
        return _populate() || _android;
    },
    ipad: function() {
        return _populate() || _ipad;
    }
};
module.exports = UserAgent_DEPRECATED;

},{}],"kSbZq":[function(require,module,exports) {
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isEventSupported
 */ "use strict";
var ExecutionEnvironment = require("./ExecutionEnvironment");
var useHasFeature;
if (ExecutionEnvironment.canUseDOM) useHasFeature = document.implementation && document.implementation.hasFeature && // always returns true in newer browsers as per the standard.
// @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
document.implementation.hasFeature("", "") !== true;
/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */ function isEventSupported(eventNameSuffix, capture) {
    if (!ExecutionEnvironment.canUseDOM || capture && !("addEventListener" in document)) return false;
    var eventName = "on" + eventNameSuffix;
    var isSupported = eventName in document;
    if (!isSupported) {
        var element = document.createElement("div");
        element.setAttribute(eventName, "return;");
        isSupported = typeof element[eventName] === "function";
    }
    if (!isSupported && useHasFeature && eventNameSuffix === "wheel") // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature("Events.wheel", "3.0");
    return isSupported;
}
module.exports = isEventSupported;

},{"./ExecutionEnvironment":"8VicW"}],"8VicW":[function(require,module,exports) {
/**
 * Copyright (c) 2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ExecutionEnvironment
 */ /*jslint evil: true */ "use strict";
var canUseDOM = !!(typeof window !== "undefined" && window.document && window.document.createElement);
/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */ var ExecutionEnvironment = {
    canUseDOM: canUseDOM,
    canUseWorkers: typeof Worker !== "undefined",
    canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
    canUseViewport: canUseDOM && !!window.screen,
    isInWorker: !canUseDOM // For now, this is true - might change in the future.
};
module.exports = ExecutionEnvironment;

},{}],"fgxwh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _gsap = require("gsap");
var _gsapDefault = parcelHelpers.interopDefault(_gsap);
var _component = require("../defaults/Component");
var _componentDefault = parcelHelpers.interopDefault(_component);
exports.default = class extends (0, _componentDefault.default) {
    constructor(){
        super({
            element: document.documentElement
        });
        this.counter = 0;
        this.index = 0;
        this.onComplete();
    }
    onComplete() {
        let string = '<div class="loader"></div>';
        document.querySelector("body").insertAdjacentHTML("afterbegin", string);
        this.emit("complete");
    // this.timeline = gsap.timeline()
    // this.timeline.to(this.element, {
    //   autoAlpha: 0,
    //   duration: 1
    // })
    // this.timeline.call(_ => {
    // //  console.log('compit')
    //   this.emit('complete')
    // })
    }
};

},{"gsap":"gS77a","../defaults/Component":"1K7Kz","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"gS77a":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "gsap", ()=>gsapWithCSS);
parcelHelpers.export(exports, "default", ()=>gsapWithCSS);
parcelHelpers.export(exports, "CSSPlugin", ()=>(0, _csspluginJs.CSSPlugin));
parcelHelpers.export(exports, "TweenMax", ()=>TweenMaxWithCSS);
parcelHelpers.export(exports, "TweenLite", ()=>(0, _gsapCoreJs.TweenLite));
parcelHelpers.export(exports, "TimelineMax", ()=>(0, _gsapCoreJs.TimelineMax));
parcelHelpers.export(exports, "TimelineLite", ()=>(0, _gsapCoreJs.TimelineLite));
parcelHelpers.export(exports, "Power0", ()=>(0, _gsapCoreJs.Power0));
parcelHelpers.export(exports, "Power1", ()=>(0, _gsapCoreJs.Power1));
parcelHelpers.export(exports, "Power2", ()=>(0, _gsapCoreJs.Power2));
parcelHelpers.export(exports, "Power3", ()=>(0, _gsapCoreJs.Power3));
parcelHelpers.export(exports, "Power4", ()=>(0, _gsapCoreJs.Power4));
parcelHelpers.export(exports, "Linear", ()=>(0, _gsapCoreJs.Linear));
parcelHelpers.export(exports, "Quad", ()=>(0, _gsapCoreJs.Quad));
parcelHelpers.export(exports, "Cubic", ()=>(0, _gsapCoreJs.Cubic));
parcelHelpers.export(exports, "Quart", ()=>(0, _gsapCoreJs.Quart));
parcelHelpers.export(exports, "Quint", ()=>(0, _gsapCoreJs.Quint));
parcelHelpers.export(exports, "Strong", ()=>(0, _gsapCoreJs.Strong));
parcelHelpers.export(exports, "Elastic", ()=>(0, _gsapCoreJs.Elastic));
parcelHelpers.export(exports, "Back", ()=>(0, _gsapCoreJs.Back));
parcelHelpers.export(exports, "SteppedEase", ()=>(0, _gsapCoreJs.SteppedEase));
parcelHelpers.export(exports, "Bounce", ()=>(0, _gsapCoreJs.Bounce));
parcelHelpers.export(exports, "Sine", ()=>(0, _gsapCoreJs.Sine));
parcelHelpers.export(exports, "Expo", ()=>(0, _gsapCoreJs.Expo));
parcelHelpers.export(exports, "Circ", ()=>(0, _gsapCoreJs.Circ));
var _gsapCoreJs = require("./gsap-core.js");
var _csspluginJs = require("./CSSPlugin.js");
var gsapWithCSS = (0, _gsapCoreJs.gsap).registerPlugin((0, _csspluginJs.CSSPlugin)) || (0, _gsapCoreJs.gsap), // to protect from tree shaking
TweenMaxWithCSS = gsapWithCSS.core.Tween;

},{"./gsap-core.js":"4cDHE","./CSSPlugin.js":"jUeMG","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"4cDHE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "GSCache", ()=>GSCache);
parcelHelpers.export(exports, "Animation", ()=>Animation);
parcelHelpers.export(exports, "Timeline", ()=>Timeline);
parcelHelpers.export(exports, "Tween", ()=>Tween);
parcelHelpers.export(exports, "PropTween", ()=>PropTween);
parcelHelpers.export(exports, "gsap", ()=>gsap);
parcelHelpers.export(exports, "Power0", ()=>Power0);
parcelHelpers.export(exports, "Power1", ()=>Power1);
parcelHelpers.export(exports, "Power2", ()=>Power2);
parcelHelpers.export(exports, "Power3", ()=>Power3);
parcelHelpers.export(exports, "Power4", ()=>Power4);
parcelHelpers.export(exports, "Linear", ()=>Linear);
parcelHelpers.export(exports, "Quad", ()=>Quad);
parcelHelpers.export(exports, "Cubic", ()=>Cubic);
parcelHelpers.export(exports, "Quart", ()=>Quart);
parcelHelpers.export(exports, "Quint", ()=>Quint);
parcelHelpers.export(exports, "Strong", ()=>Strong);
parcelHelpers.export(exports, "Elastic", ()=>Elastic);
parcelHelpers.export(exports, "Back", ()=>Back);
parcelHelpers.export(exports, "SteppedEase", ()=>SteppedEase);
parcelHelpers.export(exports, "Bounce", ()=>Bounce);
parcelHelpers.export(exports, "Sine", ()=>Sine);
parcelHelpers.export(exports, "Expo", ()=>Expo);
parcelHelpers.export(exports, "Circ", ()=>Circ);
parcelHelpers.export(exports, "TweenMax", ()=>Tween) //export some internal methods/orojects for use in CSSPlugin so that we can externalize that file and allow custom builds that exclude it.
;
parcelHelpers.export(exports, "TweenLite", ()=>Tween);
parcelHelpers.export(exports, "TimelineMax", ()=>Timeline);
parcelHelpers.export(exports, "TimelineLite", ()=>Timeline);
parcelHelpers.export(exports, "default", ()=>gsap);
parcelHelpers.export(exports, "wrap", ()=>wrap);
parcelHelpers.export(exports, "wrapYoyo", ()=>wrapYoyo);
parcelHelpers.export(exports, "distribute", ()=>distribute);
parcelHelpers.export(exports, "random", ()=>random);
parcelHelpers.export(exports, "snap", ()=>snap);
parcelHelpers.export(exports, "normalize", ()=>normalize);
parcelHelpers.export(exports, "getUnit", ()=>getUnit);
parcelHelpers.export(exports, "clamp", ()=>clamp);
parcelHelpers.export(exports, "splitColor", ()=>splitColor);
parcelHelpers.export(exports, "toArray", ()=>toArray);
parcelHelpers.export(exports, "selector", ()=>selector);
parcelHelpers.export(exports, "mapRange", ()=>mapRange);
parcelHelpers.export(exports, "pipe", ()=>pipe);
parcelHelpers.export(exports, "unitize", ()=>unitize);
parcelHelpers.export(exports, "interpolate", ()=>interpolate);
parcelHelpers.export(exports, "shuffle", ()=>shuffle);
parcelHelpers.export(exports, "_getProperty", ()=>_getProperty);
parcelHelpers.export(exports, "_numExp", ()=>_numExp);
parcelHelpers.export(exports, "_numWithUnitExp", ()=>_numWithUnitExp);
parcelHelpers.export(exports, "_isString", ()=>_isString);
parcelHelpers.export(exports, "_isUndefined", ()=>_isUndefined);
parcelHelpers.export(exports, "_renderComplexString", ()=>_renderComplexString);
parcelHelpers.export(exports, "_relExp", ()=>_relExp);
parcelHelpers.export(exports, "_setDefaults", ()=>_setDefaults);
parcelHelpers.export(exports, "_removeLinkedListItem", ()=>_removeLinkedListItem);
parcelHelpers.export(exports, "_forEachName", ()=>_forEachName);
parcelHelpers.export(exports, "_sortPropTweensByPriority", ()=>_sortPropTweensByPriority);
parcelHelpers.export(exports, "_colorStringFilter", ()=>_colorStringFilter);
parcelHelpers.export(exports, "_replaceRandom", ()=>_replaceRandom);
parcelHelpers.export(exports, "_checkPlugin", ()=>_checkPlugin);
parcelHelpers.export(exports, "_plugins", ()=>_plugins);
parcelHelpers.export(exports, "_ticker", ()=>_ticker);
parcelHelpers.export(exports, "_config", ()=>_config);
parcelHelpers.export(exports, "_roundModifier", ()=>_roundModifier);
parcelHelpers.export(exports, "_round", ()=>_round);
parcelHelpers.export(exports, "_missingPlugin", ()=>_missingPlugin);
parcelHelpers.export(exports, "_getSetter", ()=>_getSetter);
parcelHelpers.export(exports, "_getCache", ()=>_getCache);
parcelHelpers.export(exports, "_colorExp", ()=>_colorExp);
parcelHelpers.export(exports, "_parseRelative", ()=>_parseRelative);
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
}
/*!
 * GSAP 3.12.5
 * https://gsap.com
 *
 * @license Copyright 2008-2024, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license or for
 * Club GSAP members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/ /* eslint-disable */ var _config = {
    autoSleep: 120,
    force3D: "auto",
    nullTargetWarn: 1,
    units: {
        lineHeight: ""
    }
}, _defaults = {
    duration: .5,
    overwrite: false,
    delay: 0
}, _suppressOverwrites, _reverting, _context, _bigNum = 1e8, _tinyNum = 1 / _bigNum, _2PI = Math.PI * 2, _HALF_PI = _2PI / 4, _gsID = 0, _sqrt = Math.sqrt, _cos = Math.cos, _sin = Math.sin, _isString = function _isString(value) {
    return typeof value === "string";
}, _isFunction = function _isFunction(value) {
    return typeof value === "function";
}, _isNumber = function _isNumber(value) {
    return typeof value === "number";
}, _isUndefined = function _isUndefined(value) {
    return typeof value === "undefined";
}, _isObject = function _isObject(value) {
    return typeof value === "object";
}, _isNotFalse = function _isNotFalse(value) {
    return value !== false;
}, _windowExists = function _windowExists() {
    return typeof window !== "undefined";
}, _isFuncOrString = function _isFuncOrString(value) {
    return _isFunction(value) || _isString(value);
}, _isTypedArray = typeof ArrayBuffer === "function" && ArrayBuffer.isView || function() {}, // note: IE10 has ArrayBuffer, but NOT ArrayBuffer.isView().
_isArray = Array.isArray, _strictNumExp = /(?:-?\.?\d|\.)+/gi, //only numbers (including negatives and decimals) but NOT relative values.
_numExp = /[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g, //finds any numbers, including ones that start with += or -=, negative numbers, and ones in scientific notation like 1e-8.
_numWithUnitExp = /[-+=.]*\d+[.e-]*\d*[a-z%]*/g, _complexStringNumExp = /[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi, //duplicate so that while we're looping through matches from exec(), it doesn't contaminate the lastIndex of _numExp which we use to search for colors too.
_relExp = /[+-]=-?[.\d]+/, _delimitedValueExp = /[^,'"\[\]\s]+/gi, // previously /[#\-+.]*\b[a-z\d\-=+%.]+/gi but didn't catch special characters.
_unitExp = /^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i, _globalTimeline, _win, _coreInitted, _doc, _globals = {}, _installScope = {}, _coreReady, _install = function _install(scope) {
    return (_installScope = _merge(scope, _globals)) && gsap;
}, _missingPlugin = function _missingPlugin(property, value) {
    return console.warn("Invalid property", property, "set to", value, "Missing plugin? gsap.registerPlugin()");
}, _warn = function _warn(message, suppress) {
    return !suppress && console.warn(message);
}, _addGlobal = function _addGlobal(name, obj) {
    return name && (_globals[name] = obj) && _installScope && (_installScope[name] = obj) || _globals;
}, _emptyFunc = function _emptyFunc() {
    return 0;
}, _startAtRevertConfig = {
    suppressEvents: true,
    isStart: true,
    kill: false
}, _revertConfigNoKill = {
    suppressEvents: true,
    kill: false
}, _revertConfig = {
    suppressEvents: true
}, _reservedProps = {}, _lazyTweens = [], _lazyLookup = {}, _lastRenderedFrame, _plugins = {}, _effects = {}, _nextGCFrame = 30, _harnessPlugins = [], _callbackNames = "", _harness = function _harness(targets) {
    var target = targets[0], harnessPlugin, i;
    _isObject(target) || _isFunction(target) || (targets = [
        targets
    ]);
    if (!(harnessPlugin = (target._gsap || {}).harness)) {
        // find the first target with a harness. We assume targets passed into an animation will be of similar type, meaning the same kind of harness can be used for them all (performance optimization)
        i = _harnessPlugins.length;
        while((i--) && !_harnessPlugins[i].targetTest(target));
        harnessPlugin = _harnessPlugins[i];
    }
    i = targets.length;
    while(i--)targets[i] && (targets[i]._gsap || (targets[i]._gsap = new GSCache(targets[i], harnessPlugin))) || targets.splice(i, 1);
    return targets;
}, _getCache = function _getCache(target) {
    return target._gsap || _harness(toArray(target))[0]._gsap;
}, _getProperty = function _getProperty(target, property, v) {
    return (v = target[property]) && _isFunction(v) ? target[property]() : _isUndefined(v) && target.getAttribute && target.getAttribute(property) || v;
}, _forEachName = function _forEachName(names, func) {
    return (names = names.split(",")).forEach(func) || names;
}, //split a comma-delimited list of names into an array, then run a forEach() function and return the split array (this is just a way to consolidate/shorten some code).
_round = function _round(value) {
    return Math.round(value * 100000) / 100000 || 0;
}, _roundPrecise = function _roundPrecise(value) {
    return Math.round(value * 10000000) / 10000000 || 0;
}, // increased precision mostly for timing values.
_parseRelative = function _parseRelative(start, value) {
    var operator = value.charAt(0), end = parseFloat(value.substr(2));
    start = parseFloat(start);
    return operator === "+" ? start + end : operator === "-" ? start - end : operator === "*" ? start * end : start / end;
}, _arrayContainsAny = function _arrayContainsAny(toSearch, toFind) {
    //searches one array to find matches for any of the items in the toFind array. As soon as one is found, it returns true. It does NOT return all the matches; it's simply a boolean search.
    var l = toFind.length, i = 0;
    for(; toSearch.indexOf(toFind[i]) < 0 && ++i < l;);
    return i < l;
}, _lazyRender = function _lazyRender() {
    var l = _lazyTweens.length, a = _lazyTweens.slice(0), i, tween;
    _lazyLookup = {};
    _lazyTweens.length = 0;
    for(i = 0; i < l; i++){
        tween = a[i];
        tween && tween._lazy && (tween.render(tween._lazy[0], tween._lazy[1], true)._lazy = 0);
    }
}, _lazySafeRender = function _lazySafeRender(animation, time, suppressEvents, force) {
    _lazyTweens.length && !_reverting && _lazyRender();
    animation.render(time, suppressEvents, force || _reverting && time < 0 && (animation._initted || animation._startAt));
    _lazyTweens.length && !_reverting && _lazyRender(); //in case rendering caused any tweens to lazy-init, we should render them because typically when someone calls seek() or time() or progress(), they expect an immediate render.
}, _numericIfPossible = function _numericIfPossible(value) {
    var n = parseFloat(value);
    return (n || n === 0) && (value + "").match(_delimitedValueExp).length < 2 ? n : _isString(value) ? value.trim() : value;
}, _passThrough = function _passThrough(p) {
    return p;
}, _setDefaults = function _setDefaults(obj, defaults) {
    for(var p in defaults)p in obj || (obj[p] = defaults[p]);
    return obj;
}, _setKeyframeDefaults = function _setKeyframeDefaults(excludeDuration) {
    return function(obj, defaults) {
        for(var p in defaults)p in obj || p === "duration" && excludeDuration || p === "ease" || (obj[p] = defaults[p]);
    };
}, _merge = function _merge(base, toMerge) {
    for(var p in toMerge)base[p] = toMerge[p];
    return base;
}, _mergeDeep = function _mergeDeep(base, toMerge) {
    for(var p in toMerge)p !== "__proto__" && p !== "constructor" && p !== "prototype" && (base[p] = _isObject(toMerge[p]) ? _mergeDeep(base[p] || (base[p] = {}), toMerge[p]) : toMerge[p]);
    return base;
}, _copyExcluding = function _copyExcluding(obj, excluding) {
    var copy = {}, p;
    for(p in obj)p in excluding || (copy[p] = obj[p]);
    return copy;
}, _inheritDefaults = function _inheritDefaults(vars) {
    var parent = vars.parent || _globalTimeline, func = vars.keyframes ? _setKeyframeDefaults(_isArray(vars.keyframes)) : _setDefaults;
    if (_isNotFalse(vars.inherit)) while(parent){
        func(vars, parent.vars.defaults);
        parent = parent.parent || parent._dp;
    }
    return vars;
}, _arraysMatch = function _arraysMatch(a1, a2) {
    var i = a1.length, match = i === a2.length;
    while(match && i-- && a1[i] === a2[i]);
    return i < 0;
}, _addLinkedListItem = function _addLinkedListItem(parent, child, firstProp, lastProp, sortBy) {
    if (firstProp === void 0) firstProp = "_first";
    if (lastProp === void 0) lastProp = "_last";
    var prev = parent[lastProp], t;
    if (sortBy) {
        t = child[sortBy];
        while(prev && prev[sortBy] > t)prev = prev._prev;
    }
    if (prev) {
        child._next = prev._next;
        prev._next = child;
    } else {
        child._next = parent[firstProp];
        parent[firstProp] = child;
    }
    if (child._next) child._next._prev = child;
    else parent[lastProp] = child;
    child._prev = prev;
    child.parent = child._dp = parent;
    return child;
}, _removeLinkedListItem = function _removeLinkedListItem(parent, child, firstProp, lastProp) {
    if (firstProp === void 0) firstProp = "_first";
    if (lastProp === void 0) lastProp = "_last";
    var prev = child._prev, next = child._next;
    if (prev) prev._next = next;
    else if (parent[firstProp] === child) parent[firstProp] = next;
    if (next) next._prev = prev;
    else if (parent[lastProp] === child) parent[lastProp] = prev;
    child._next = child._prev = child.parent = null; // don't delete the _dp just so we can revert if necessary. But parent should be null to indicate the item isn't in a linked list.
}, _removeFromParent = function _removeFromParent(child, onlyIfParentHasAutoRemove) {
    child.parent && (!onlyIfParentHasAutoRemove || child.parent.autoRemoveChildren) && child.parent.remove && child.parent.remove(child);
    child._act = 0;
}, _uncache = function _uncache(animation, child) {
    if (animation && (!child || child._end > animation._dur || child._start < 0)) {
        // performance optimization: if a child animation is passed in we should only uncache if that child EXTENDS the animation (its end time is beyond the end)
        var a = animation;
        while(a){
            a._dirty = 1;
            a = a.parent;
        }
    }
    return animation;
}, _recacheAncestors = function _recacheAncestors(animation) {
    var parent = animation.parent;
    while(parent && parent.parent){
        //sometimes we must force a re-sort of all children and update the duration/totalDuration of all ancestor timelines immediately in case, for example, in the middle of a render loop, one tween alters another tween's timeScale which shoves its startTime before 0, forcing the parent timeline to shift around and shiftChildren() which could affect that next tween's render (startTime). Doesn't matter for the root timeline though.
        parent._dirty = 1;
        parent.totalDuration();
        parent = parent.parent;
    }
    return animation;
}, _rewindStartAt = function _rewindStartAt(tween, totalTime, suppressEvents, force) {
    return tween._startAt && (_reverting ? tween._startAt.revert(_revertConfigNoKill) : tween.vars.immediateRender && !tween.vars.autoRevert || tween._startAt.render(totalTime, true, force));
}, _hasNoPausedAncestors = function _hasNoPausedAncestors(animation) {
    return !animation || animation._ts && _hasNoPausedAncestors(animation.parent);
}, _elapsedCycleDuration = function _elapsedCycleDuration(animation) {
    return animation._repeat ? _animationCycle(animation._tTime, animation = animation.duration() + animation._rDelay) * animation : 0;
}, // feed in the totalTime and cycleDuration and it'll return the cycle (iteration minus 1) and if the playhead is exactly at the very END, it will NOT bump up to the next cycle.
_animationCycle = function _animationCycle(tTime, cycleDuration) {
    var whole = Math.floor(tTime /= cycleDuration);
    return tTime && whole === tTime ? whole - 1 : whole;
}, _parentToChildTotalTime = function _parentToChildTotalTime(parentTime, child) {
    return (parentTime - child._start) * child._ts + (child._ts >= 0 ? 0 : child._dirty ? child.totalDuration() : child._tDur);
}, _setEnd = function _setEnd(animation) {
    return animation._end = _roundPrecise(animation._start + (animation._tDur / Math.abs(animation._ts || animation._rts || _tinyNum) || 0));
}, _alignPlayhead = function _alignPlayhead(animation, totalTime) {
    // adjusts the animation's _start and _end according to the provided totalTime (only if the parent's smoothChildTiming is true and the animation isn't paused). It doesn't do any rendering or forcing things back into parent timelines, etc. - that's what totalTime() is for.
    var parent = animation._dp;
    if (parent && parent.smoothChildTiming && animation._ts) {
        animation._start = _roundPrecise(parent._time - (animation._ts > 0 ? totalTime / animation._ts : ((animation._dirty ? animation.totalDuration() : animation._tDur) - totalTime) / -animation._ts));
        _setEnd(animation);
        parent._dirty || _uncache(parent, animation); //for performance improvement. If the parent's cache is already dirty, it already took care of marking the ancestors as dirty too, so skip the function call here.
    }
    return animation;
}, /*
_totalTimeToTime = (clampedTotalTime, duration, repeat, repeatDelay, yoyo) => {
	let cycleDuration = duration + repeatDelay,
		time = _round(clampedTotalTime % cycleDuration);
	if (time > duration) {
		time = duration;
	}
	return (yoyo && (~~(clampedTotalTime / cycleDuration) & 1)) ? duration - time : time;
},
*/ _postAddChecks = function _postAddChecks(timeline, child) {
    var t;
    if (child._time || !child._dur && child._initted || child._start < timeline._time && (child._dur || !child.add)) {
        // in case, for example, the _start is moved on a tween that has already rendered, or if it's being inserted into a timeline BEFORE where the playhead is currently. Imagine it's at its end state, then the startTime is moved WAY later (after the end of this timeline), it should render at its beginning. Special case: if it's a timeline (has .add() method) and no duration, we can skip rendering because the user may be populating it AFTER adding it to a parent timeline (unconventional, but possible, and we wouldn't want it to get removed if the parent's autoRemoveChildren is true).
        t = _parentToChildTotalTime(timeline.rawTime(), child);
        if (!child._dur || _clamp(0, child.totalDuration(), t) - child._tTime > _tinyNum) child.render(t, true);
    } //if the timeline has already ended but the inserted tween/timeline extends the duration, we should enable this timeline again so that it renders properly. We should also align the playhead with the parent timeline's when appropriate.
    if (_uncache(timeline, child)._dp && timeline._initted && timeline._time >= timeline._dur && timeline._ts) {
        //in case any of the ancestors had completed but should now be enabled...
        if (timeline._dur < timeline.duration()) {
            t = timeline;
            while(t._dp){
                t.rawTime() >= 0 && t.totalTime(t._tTime); //moves the timeline (shifts its startTime) if necessary, and also enables it. If it's currently zero, though, it may not be scheduled to render until later so there's no need to force it to align with the current playhead position. Only move to catch up with the playhead.
                t = t._dp;
            }
        }
        timeline._zTime = -_tinyNum; // helps ensure that the next render() will be forced (crossingStart = true in render()), even if the duration hasn't changed (we're adding a child which would need to get rendered). Definitely an edge case. Note: we MUST do this AFTER the loop above where the totalTime() might trigger a render() because this _addToTimeline() method gets called from the Animation constructor, BEFORE tweens even record their targets, etc. so we wouldn't want things to get triggered in the wrong order.
    }
}, _addToTimeline = function _addToTimeline(timeline, child, position, skipChecks) {
    child.parent && _removeFromParent(child);
    child._start = _roundPrecise((_isNumber(position) ? position : position || timeline !== _globalTimeline ? _parsePosition(timeline, position, child) : timeline._time) + child._delay);
    child._end = _roundPrecise(child._start + (child.totalDuration() / Math.abs(child.timeScale()) || 0));
    _addLinkedListItem(timeline, child, "_first", "_last", timeline._sort ? "_start" : 0);
    _isFromOrFromStart(child) || (timeline._recent = child);
    skipChecks || _postAddChecks(timeline, child);
    timeline._ts < 0 && _alignPlayhead(timeline, timeline._tTime); // if the timeline is reversed and the new child makes it longer, we may need to adjust the parent's _start (push it back)
    return timeline;
}, _scrollTrigger = function _scrollTrigger(animation, trigger) {
    return (_globals.ScrollTrigger || _missingPlugin("scrollTrigger", trigger)) && _globals.ScrollTrigger.create(trigger, animation);
}, _attemptInitTween = function _attemptInitTween(tween, time, force, suppressEvents, tTime) {
    _initTween(tween, time, tTime);
    if (!tween._initted) return 1;
    if (!force && tween._pt && !_reverting && (tween._dur && tween.vars.lazy !== false || !tween._dur && tween.vars.lazy) && _lastRenderedFrame !== _ticker.frame) {
        _lazyTweens.push(tween);
        tween._lazy = [
            tTime,
            suppressEvents
        ];
        return 1;
    }
}, _parentPlayheadIsBeforeStart = function _parentPlayheadIsBeforeStart(_ref) {
    var parent = _ref.parent;
    return parent && parent._ts && parent._initted && !parent._lock && (parent.rawTime() < 0 || _parentPlayheadIsBeforeStart(parent));
}, // check parent's _lock because when a timeline repeats/yoyos and does its artificial wrapping, we shouldn't force the ratio back to 0
_isFromOrFromStart = function _isFromOrFromStart(_ref2) {
    var data = _ref2.data;
    return data === "isFromStart" || data === "isStart";
}, _renderZeroDurationTween = function _renderZeroDurationTween(tween, totalTime, suppressEvents, force) {
    var prevRatio = tween.ratio, ratio = totalTime < 0 || !totalTime && (!tween._start && _parentPlayheadIsBeforeStart(tween) && !(!tween._initted && _isFromOrFromStart(tween)) || (tween._ts < 0 || tween._dp._ts < 0) && !_isFromOrFromStart(tween)) ? 0 : 1, // if the tween or its parent is reversed and the totalTime is 0, we should go to a ratio of 0. Edge case: if a from() or fromTo() stagger tween is placed later in a timeline, the "startAt" zero-duration tween could initially render at a time when the parent timeline's playhead is technically BEFORE where this tween is, so make sure that any "from" and "fromTo" startAt tweens are rendered the first time at a ratio of 1.
    repeatDelay = tween._rDelay, tTime = 0, pt, iteration, prevIteration;
    if (repeatDelay && tween._repeat) {
        // in case there's a zero-duration tween that has a repeat with a repeatDelay
        tTime = _clamp(0, tween._tDur, totalTime);
        iteration = _animationCycle(tTime, repeatDelay);
        tween._yoyo && iteration & 1 && (ratio = 1 - ratio);
        if (iteration !== _animationCycle(tween._tTime, repeatDelay)) {
            // if iteration changed
            prevRatio = 1 - ratio;
            tween.vars.repeatRefresh && tween._initted && tween.invalidate();
        }
    }
    if (ratio !== prevRatio || _reverting || force || tween._zTime === _tinyNum || !totalTime && tween._zTime) {
        if (!tween._initted && _attemptInitTween(tween, totalTime, force, suppressEvents, tTime)) // if we render the very beginning (time == 0) of a fromTo(), we must force the render (normal tweens wouldn't need to render at a time of 0 when the prevTime was also 0). This is also mandatory to make sure overwriting kicks in immediately.
        return;
        prevIteration = tween._zTime;
        tween._zTime = totalTime || (suppressEvents ? _tinyNum : 0); // when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect.
        suppressEvents || (suppressEvents = totalTime && !prevIteration); // if it was rendered previously at exactly 0 (_zTime) and now the playhead is moving away, DON'T fire callbacks otherwise they'll seem like duplicates.
        tween.ratio = ratio;
        tween._from && (ratio = 1 - ratio);
        tween._time = 0;
        tween._tTime = tTime;
        pt = tween._pt;
        while(pt){
            pt.r(ratio, pt.d);
            pt = pt._next;
        }
        totalTime < 0 && _rewindStartAt(tween, totalTime, suppressEvents, true);
        tween._onUpdate && !suppressEvents && _callback(tween, "onUpdate");
        tTime && tween._repeat && !suppressEvents && tween.parent && _callback(tween, "onRepeat");
        if ((totalTime >= tween._tDur || totalTime < 0) && tween.ratio === ratio) {
            ratio && _removeFromParent(tween, 1);
            if (!suppressEvents && !_reverting) {
                _callback(tween, ratio ? "onComplete" : "onReverseComplete", true);
                tween._prom && tween._prom();
            }
        }
    } else if (!tween._zTime) tween._zTime = totalTime;
}, _findNextPauseTween = function _findNextPauseTween(animation, prevTime, time) {
    var child;
    if (time > prevTime) {
        child = animation._first;
        while(child && child._start <= time){
            if (child.data === "isPause" && child._start > prevTime) return child;
            child = child._next;
        }
    } else {
        child = animation._last;
        while(child && child._start >= time){
            if (child.data === "isPause" && child._start < prevTime) return child;
            child = child._prev;
        }
    }
}, _setDuration = function _setDuration(animation, duration, skipUncache, leavePlayhead) {
    var repeat = animation._repeat, dur = _roundPrecise(duration) || 0, totalProgress = animation._tTime / animation._tDur;
    totalProgress && !leavePlayhead && (animation._time *= dur / animation._dur);
    animation._dur = dur;
    animation._tDur = !repeat ? dur : repeat < 0 ? 1e10 : _roundPrecise(dur * (repeat + 1) + animation._rDelay * repeat);
    totalProgress > 0 && !leavePlayhead && _alignPlayhead(animation, animation._tTime = animation._tDur * totalProgress);
    animation.parent && _setEnd(animation);
    skipUncache || _uncache(animation.parent, animation);
    return animation;
}, _onUpdateTotalDuration = function _onUpdateTotalDuration(animation) {
    return animation instanceof Timeline ? _uncache(animation) : _setDuration(animation, animation._dur);
}, _zeroPosition = {
    _start: 0,
    endTime: _emptyFunc,
    totalDuration: _emptyFunc
}, _parsePosition = function _parsePosition(animation, position, percentAnimation) {
    var labels = animation.labels, recent = animation._recent || _zeroPosition, clippedDuration = animation.duration() >= _bigNum ? recent.endTime(false) : animation._dur, //in case there's a child that infinitely repeats, users almost never intend for the insertion point of a new child to be based on a SUPER long value like that so we clip it and assume the most recently-added child's endTime should be used instead.
    i, offset, isPercent;
    if (_isString(position) && (isNaN(position) || position in labels)) {
        //if the string is a number like "1", check to see if there's a label with that name, otherwise interpret it as a number (absolute value).
        offset = position.charAt(0);
        isPercent = position.substr(-1) === "%";
        i = position.indexOf("=");
        if (offset === "<" || offset === ">") {
            i >= 0 && (position = position.replace(/=/, ""));
            return (offset === "<" ? recent._start : recent.endTime(recent._repeat >= 0)) + (parseFloat(position.substr(1)) || 0) * (isPercent ? (i < 0 ? recent : percentAnimation).totalDuration() / 100 : 1);
        }
        if (i < 0) {
            position in labels || (labels[position] = clippedDuration);
            return labels[position];
        }
        offset = parseFloat(position.charAt(i - 1) + position.substr(i + 1));
        if (isPercent && percentAnimation) offset = offset / 100 * (_isArray(percentAnimation) ? percentAnimation[0] : percentAnimation).totalDuration();
        return i > 1 ? _parsePosition(animation, position.substr(0, i - 1), percentAnimation) + offset : clippedDuration + offset;
    }
    return position == null ? clippedDuration : +position;
}, _createTweenType = function _createTweenType(type, params, timeline) {
    var isLegacy = _isNumber(params[1]), varsIndex = (isLegacy ? 2 : 1) + (type < 2 ? 0 : 1), vars = params[varsIndex], irVars, parent;
    isLegacy && (vars.duration = params[1]);
    vars.parent = timeline;
    if (type) {
        irVars = vars;
        parent = timeline;
        while(parent && !("immediateRender" in irVars)){
            // inheritance hasn't happened yet, but someone may have set a default in an ancestor timeline. We could do vars.immediateRender = _isNotFalse(_inheritDefaults(vars).immediateRender) but that'd exact a slight performance penalty because _inheritDefaults() also runs in the Tween constructor. We're paying a small kb price here to gain speed.
            irVars = parent.vars.defaults || {};
            parent = _isNotFalse(parent.vars.inherit) && parent.parent;
        }
        vars.immediateRender = _isNotFalse(irVars.immediateRender);
        type < 2 ? vars.runBackwards = 1 : vars.startAt = params[varsIndex - 1]; // "from" vars
    }
    return new Tween(params[0], vars, params[varsIndex + 1]);
}, _conditionalReturn = function _conditionalReturn(value, func) {
    return value || value === 0 ? func(value) : func;
}, _clamp = function _clamp(min, max, value) {
    return value < min ? min : value > max ? max : value;
}, getUnit = function getUnit(value, v) {
    return !_isString(value) || !(v = _unitExp.exec(value)) ? "" : v[1];
}, // note: protect against padded numbers as strings, like "100.100". That shouldn't return "00" as the unit. If it's numeric, return no unit.
clamp = function clamp(min, max, value) {
    return _conditionalReturn(value, function(v) {
        return _clamp(min, max, v);
    });
}, _slice = [].slice, _isArrayLike = function _isArrayLike(value, nonEmpty) {
    return value && _isObject(value) && "length" in value && (!nonEmpty && !value.length || value.length - 1 in value && _isObject(value[0])) && !value.nodeType && value !== _win;
}, _flatten = function _flatten(ar, leaveStrings, accumulator) {
    if (accumulator === void 0) accumulator = [];
    return ar.forEach(function(value) {
        var _accumulator;
        return _isString(value) && !leaveStrings || _isArrayLike(value, 1) ? (_accumulator = accumulator).push.apply(_accumulator, toArray(value)) : accumulator.push(value);
    }) || accumulator;
}, //takes any value and returns an array. If it's a string (and leaveStrings isn't true), it'll use document.querySelectorAll() and convert that to an array. It'll also accept iterables like jQuery objects.
toArray = function toArray(value, scope, leaveStrings) {
    return _context && !scope && _context.selector ? _context.selector(value) : _isString(value) && !leaveStrings && (_coreInitted || !_wake()) ? _slice.call((scope || _doc).querySelectorAll(value), 0) : _isArray(value) ? _flatten(value, leaveStrings) : _isArrayLike(value) ? _slice.call(value, 0) : value ? [
        value
    ] : [];
}, selector = function selector(value) {
    value = toArray(value)[0] || _warn("Invalid scope") || {};
    return function(v) {
        var el = value.current || value.nativeElement || value;
        return toArray(v, el.querySelectorAll ? el : el === value ? _warn("Invalid scope") || _doc.createElement("div") : value);
    };
}, shuffle = function shuffle(a) {
    return a.sort(function() {
        return .5 - Math.random();
    });
}, // alternative that's a bit faster and more reliably diverse but bigger:   for (let j, v, i = a.length; i; j = Math.floor(Math.random() * i), v = a[--i], a[i] = a[j], a[j] = v); return a;
//for distributing values across an array. Can accept a number, a function or (most commonly) a function which can contain the following properties: {base, amount, from, ease, grid, axis, length, each}. Returns a function that expects the following parameters: index, target, array. Recognizes the following
distribute = function distribute(v) {
    if (_isFunction(v)) return v;
    var vars = _isObject(v) ? v : {
        each: v
    }, //n:1 is just to indicate v was a number; we leverage that later to set v according to the length we get. If a number is passed in, we treat it like the old stagger value where 0.1, for example, would mean that things would be distributed with 0.1 between each element in the array rather than a total "amount" that's chunked out among them all.
    ease = _parseEase(vars.ease), from = vars.from || 0, base = parseFloat(vars.base) || 0, cache = {}, isDecimal = from > 0 && from < 1, ratios = isNaN(from) || isDecimal, axis = vars.axis, ratioX = from, ratioY = from;
    if (_isString(from)) ratioX = ratioY = ({
        center: .5,
        edges: .5,
        end: 1
    })[from] || 0;
    else if (!isDecimal && ratios) {
        ratioX = from[0];
        ratioY = from[1];
    }
    return function(i, target, a) {
        var l = (a || vars).length, distances = cache[l], originX, originY, x, y, d, j, max, min, wrapAt;
        if (!distances) {
            wrapAt = vars.grid === "auto" ? 0 : (vars.grid || [
                1,
                _bigNum
            ])[1];
            if (!wrapAt) {
                max = -_bigNum;
                while(max < (max = a[wrapAt++].getBoundingClientRect().left) && wrapAt < l);
                wrapAt < l && wrapAt--;
            }
            distances = cache[l] = [];
            originX = ratios ? Math.min(wrapAt, l) * ratioX - .5 : from % wrapAt;
            originY = wrapAt === _bigNum ? 0 : ratios ? l * ratioY / wrapAt - .5 : from / wrapAt | 0;
            max = 0;
            min = _bigNum;
            for(j = 0; j < l; j++){
                x = j % wrapAt - originX;
                y = originY - (j / wrapAt | 0);
                distances[j] = d = !axis ? _sqrt(x * x + y * y) : Math.abs(axis === "y" ? y : x);
                d > max && (max = d);
                d < min && (min = d);
            }
            from === "random" && shuffle(distances);
            distances.max = max - min;
            distances.min = min;
            distances.v = l = (parseFloat(vars.amount) || parseFloat(vars.each) * (wrapAt > l ? l - 1 : !axis ? Math.max(wrapAt, l / wrapAt) : axis === "y" ? l / wrapAt : wrapAt) || 0) * (from === "edges" ? -1 : 1);
            distances.b = l < 0 ? base - l : base;
            distances.u = getUnit(vars.amount || vars.each) || 0; //unit
            ease = ease && l < 0 ? _invertEase(ease) : ease;
        }
        l = (distances[i] - distances.min) / distances.max || 0;
        return _roundPrecise(distances.b + (ease ? ease(l) : l) * distances.v) + distances.u; //round in order to work around floating point errors
    };
}, _roundModifier = function _roundModifier(v) {
    //pass in 0.1 get a function that'll round to the nearest tenth, or 5 to round to the closest 5, or 0.001 to the closest 1000th, etc.
    var p = Math.pow(10, ((v + "").split(".")[1] || "").length); //to avoid floating point math errors (like 24 * 0.1 == 2.4000000000000004), we chop off at a specific number of decimal places (much faster than toFixed())
    return function(raw) {
        var n = _roundPrecise(Math.round(parseFloat(raw) / v) * v * p);
        return (n - n % 1) / p + (_isNumber(raw) ? 0 : getUnit(raw)); // n - n % 1 replaces Math.floor() in order to handle negative values properly. For example, Math.floor(-150.00000000000003) is 151!
    };
}, snap = function snap(snapTo, value) {
    var isArray = _isArray(snapTo), radius, is2D;
    if (!isArray && _isObject(snapTo)) {
        radius = isArray = snapTo.radius || _bigNum;
        if (snapTo.values) {
            snapTo = toArray(snapTo.values);
            if (is2D = !_isNumber(snapTo[0])) radius *= radius; //performance optimization so we don't have to Math.sqrt() in the loop.
        } else snapTo = _roundModifier(snapTo.increment);
    }
    return _conditionalReturn(value, !isArray ? _roundModifier(snapTo) : _isFunction(snapTo) ? function(raw) {
        is2D = snapTo(raw);
        return Math.abs(is2D - raw) <= radius ? is2D : raw;
    } : function(raw) {
        var x = parseFloat(is2D ? raw.x : raw), y = parseFloat(is2D ? raw.y : 0), min = _bigNum, closest = 0, i = snapTo.length, dx, dy;
        while(i--){
            if (is2D) {
                dx = snapTo[i].x - x;
                dy = snapTo[i].y - y;
                dx = dx * dx + dy * dy;
            } else dx = Math.abs(snapTo[i] - x);
            if (dx < min) {
                min = dx;
                closest = i;
            }
        }
        closest = !radius || min <= radius ? snapTo[closest] : raw;
        return is2D || closest === raw || _isNumber(raw) ? closest : closest + getUnit(raw);
    });
}, random = function random(min, max, roundingIncrement, returnFunction) {
    return _conditionalReturn(_isArray(min) ? !max : roundingIncrement === true ? (roundingIncrement = 0, false) : !returnFunction, function() {
        return _isArray(min) ? min[~~(Math.random() * min.length)] : (roundingIncrement = roundingIncrement || 1e-5, returnFunction = roundingIncrement < 1 ? Math.pow(10, (roundingIncrement + "").length - 2) : 1) && Math.floor(Math.round((min - roundingIncrement / 2 + Math.random() * (max - min + roundingIncrement * .99)) / roundingIncrement) * roundingIncrement * returnFunction) / returnFunction;
    });
}, pipe = function pipe() {
    for(var _len = arguments.length, functions = new Array(_len), _key = 0; _key < _len; _key++)functions[_key] = arguments[_key];
    return function(value) {
        return functions.reduce(function(v, f) {
            return f(v);
        }, value);
    };
}, unitize = function unitize(func, unit) {
    return function(value) {
        return func(parseFloat(value)) + (unit || getUnit(value));
    };
}, normalize = function normalize(min, max, value) {
    return mapRange(min, max, 0, 1, value);
}, _wrapArray = function _wrapArray(a, wrapper, value) {
    return _conditionalReturn(value, function(index) {
        return a[~~wrapper(index)];
    });
}, wrap = function wrap(min, max, value) {
    // NOTE: wrap() CANNOT be an arrow function! A very odd compiling bug causes problems (unrelated to GSAP).
    var range = max - min;
    return _isArray(min) ? _wrapArray(min, wrap(0, min.length), max) : _conditionalReturn(value, function(value) {
        return (range + (value - min) % range) % range + min;
    });
}, wrapYoyo = function wrapYoyo(min, max, value) {
    var range = max - min, total = range * 2;
    return _isArray(min) ? _wrapArray(min, wrapYoyo(0, min.length - 1), max) : _conditionalReturn(value, function(value) {
        value = (total + (value - min) % total) % total || 0;
        return min + (value > range ? total - value : value);
    });
}, _replaceRandom = function _replaceRandom(value) {
    //replaces all occurrences of random(...) in a string with the calculated random value. can be a range like random(-100, 100, 5) or an array like random([0, 100, 500])
    var prev = 0, s = "", i, nums, end, isArray;
    while(~(i = value.indexOf("random(", prev))){
        end = value.indexOf(")", i);
        isArray = value.charAt(i + 7) === "[";
        nums = value.substr(i + 7, end - i - 7).match(isArray ? _delimitedValueExp : _strictNumExp);
        s += value.substr(prev, i - prev) + random(isArray ? nums : +nums[0], isArray ? 0 : +nums[1], +nums[2] || 1e-5);
        prev = end + 1;
    }
    return s + value.substr(prev, value.length - prev);
}, mapRange = function mapRange(inMin, inMax, outMin, outMax, value) {
    var inRange = inMax - inMin, outRange = outMax - outMin;
    return _conditionalReturn(value, function(value) {
        return outMin + ((value - inMin) / inRange * outRange || 0);
    });
}, interpolate = function interpolate(start, end, progress, mutate) {
    var func = isNaN(start + end) ? 0 : function(p) {
        return (1 - p) * start + p * end;
    };
    if (!func) {
        var isString = _isString(start), master = {}, p, i, interpolators, l, il;
        progress === true && (mutate = 1) && (progress = null);
        if (isString) {
            start = {
                p: start
            };
            end = {
                p: end
            };
        } else if (_isArray(start) && !_isArray(end)) {
            interpolators = [];
            l = start.length;
            il = l - 2;
            for(i = 1; i < l; i++)interpolators.push(interpolate(start[i - 1], start[i])); //build the interpolators up front as a performance optimization so that when the function is called many times, it can just reuse them.
            l--;
            func = function func(p) {
                p *= l;
                var i = Math.min(il, ~~p);
                return interpolators[i](p - i);
            };
            progress = end;
        } else if (!mutate) start = _merge(_isArray(start) ? [] : {}, start);
        if (!interpolators) {
            for(p in end)_addPropTween.call(master, start, p, "get", end[p]);
            func = function func(p) {
                return _renderPropTweens(p, master) || (isString ? start.p : start);
            };
        }
    }
    return _conditionalReturn(progress, func);
}, _getLabelInDirection = function _getLabelInDirection(timeline, fromTime, backward) {
    //used for nextLabel() and previousLabel()
    var labels = timeline.labels, min = _bigNum, p, distance, label;
    for(p in labels){
        distance = labels[p] - fromTime;
        if (distance < 0 === !!backward && distance && min > (distance = Math.abs(distance))) {
            label = p;
            min = distance;
        }
    }
    return label;
}, _callback = function _callback(animation, type, executeLazyFirst) {
    var v = animation.vars, callback = v[type], prevContext = _context, context = animation._ctx, params, scope, result;
    if (!callback) return;
    params = v[type + "Params"];
    scope = v.callbackScope || animation;
    executeLazyFirst && _lazyTweens.length && _lazyRender(); //in case rendering caused any tweens to lazy-init, we should render them because typically when a timeline finishes, users expect things to have rendered fully. Imagine an onUpdate on a timeline that reports/checks tweened values.
    context && (_context = context);
    result = params ? callback.apply(scope, params) : callback.call(scope);
    _context = prevContext;
    return result;
}, _interrupt = function _interrupt(animation) {
    _removeFromParent(animation);
    animation.scrollTrigger && animation.scrollTrigger.kill(!!_reverting);
    animation.progress() < 1 && _callback(animation, "onInterrupt");
    return animation;
}, _quickTween, _registerPluginQueue = [], _createPlugin = function _createPlugin(config) {
    if (!config) return;
    config = !config.name && config["default"] || config; // UMD packaging wraps things oddly, so for example MotionPathHelper becomes {MotionPathHelper:MotionPathHelper, default:MotionPathHelper}.
    if (_windowExists() || config.headless) {
        // edge case: some build tools may pass in a null/undefined value
        var name = config.name, isFunc = _isFunction(config), Plugin = name && !isFunc && config.init ? function() {
            this._props = [];
        } : config, //in case someone passes in an object that's not a plugin, like CustomEase
        instanceDefaults = {
            init: _emptyFunc,
            render: _renderPropTweens,
            add: _addPropTween,
            kill: _killPropTweensOf,
            modifier: _addPluginModifier,
            rawVars: 0
        }, statics = {
            targetTest: 0,
            get: 0,
            getSetter: _getSetter,
            aliases: {},
            register: 0
        };
        _wake();
        if (config !== Plugin) {
            if (_plugins[name]) return;
            _setDefaults(Plugin, _setDefaults(_copyExcluding(config, instanceDefaults), statics)); //static methods
            _merge(Plugin.prototype, _merge(instanceDefaults, _copyExcluding(config, statics))); //instance methods
            _plugins[Plugin.prop = name] = Plugin;
            if (config.targetTest) {
                _harnessPlugins.push(Plugin);
                _reservedProps[name] = 1;
            }
            name = (name === "css" ? "CSS" : name.charAt(0).toUpperCase() + name.substr(1)) + "Plugin"; //for the global name. "motionPath" should become MotionPathPlugin
        }
        _addGlobal(name, Plugin);
        config.register && config.register(gsap, Plugin, PropTween);
    } else _registerPluginQueue.push(config);
}, /*
 * --------------------------------------------------------------------------------------
 * COLORS
 * --------------------------------------------------------------------------------------
 */ _255 = 255, _colorLookup = {
    aqua: [
        0,
        _255,
        _255
    ],
    lime: [
        0,
        _255,
        0
    ],
    silver: [
        192,
        192,
        192
    ],
    black: [
        0,
        0,
        0
    ],
    maroon: [
        128,
        0,
        0
    ],
    teal: [
        0,
        128,
        128
    ],
    blue: [
        0,
        0,
        _255
    ],
    navy: [
        0,
        0,
        128
    ],
    white: [
        _255,
        _255,
        _255
    ],
    olive: [
        128,
        128,
        0
    ],
    yellow: [
        _255,
        _255,
        0
    ],
    orange: [
        _255,
        165,
        0
    ],
    gray: [
        128,
        128,
        128
    ],
    purple: [
        128,
        0,
        128
    ],
    green: [
        0,
        128,
        0
    ],
    red: [
        _255,
        0,
        0
    ],
    pink: [
        _255,
        192,
        203
    ],
    cyan: [
        0,
        _255,
        _255
    ],
    transparent: [
        _255,
        _255,
        _255,
        0
    ]
}, // possible future idea to replace the hard-coded color name values - put this in the ticker.wake() where we set the _doc:
// let ctx = _doc.createElement("canvas").getContext("2d");
// _forEachName("aqua,lime,silver,black,maroon,teal,blue,navy,white,olive,yellow,orange,gray,purple,green,red,pink,cyan", color => {ctx.fillStyle = color; _colorLookup[color] = splitColor(ctx.fillStyle)});
_hue = function _hue(h, m1, m2) {
    h += h < 0 ? 1 : h > 1 ? -1 : 0;
    return (h * 6 < 1 ? m1 + (m2 - m1) * h * 6 : h < .5 ? m2 : h * 3 < 2 ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * _255 + .5 | 0;
}, splitColor = function splitColor(v, toHSL, forceAlpha) {
    var a = !v ? _colorLookup.black : _isNumber(v) ? [
        v >> 16,
        v >> 8 & _255,
        v & _255
    ] : 0, r, g, b, h, s, l, max, min, d, wasHSL;
    if (!a) {
        if (v.substr(-1) === ",") //sometimes a trailing comma is included and we should chop it off (typically from a comma-delimited list of values like a textShadow:"2px 2px 2px blue, 5px 5px 5px rgb(255,0,0)" - in this example "blue," has a trailing comma. We could strip it out inside parseComplex() but we'd need to do it to the beginning and ending values plus it wouldn't provide protection from other potential scenarios like if the user passes in a similar value.
        v = v.substr(0, v.length - 1);
        if (_colorLookup[v]) a = _colorLookup[v];
        else if (v.charAt(0) === "#") {
            if (v.length < 6) {
                //for shorthand like #9F0 or #9F0F (could have alpha)
                r = v.charAt(1);
                g = v.charAt(2);
                b = v.charAt(3);
                v = "#" + r + r + g + g + b + b + (v.length === 5 ? v.charAt(4) + v.charAt(4) : "");
            }
            if (v.length === 9) {
                // hex with alpha, like #fd5e53ff
                a = parseInt(v.substr(1, 6), 16);
                return [
                    a >> 16,
                    a >> 8 & _255,
                    a & _255,
                    parseInt(v.substr(7), 16) / 255
                ];
            }
            v = parseInt(v.substr(1), 16);
            a = [
                v >> 16,
                v >> 8 & _255,
                v & _255
            ];
        } else if (v.substr(0, 3) === "hsl") {
            a = wasHSL = v.match(_strictNumExp);
            if (!toHSL) {
                h = +a[0] % 360 / 360;
                s = +a[1] / 100;
                l = +a[2] / 100;
                g = l <= .5 ? l * (s + 1) : l + s - l * s;
                r = l * 2 - g;
                a.length > 3 && (a[3] *= 1); //cast as number
                a[0] = _hue(h + 1 / 3, r, g);
                a[1] = _hue(h, r, g);
                a[2] = _hue(h - 1 / 3, r, g);
            } else if (~v.indexOf("=")) {
                //if relative values are found, just return the raw strings with the relative prefixes in place.
                a = v.match(_numExp);
                forceAlpha && a.length < 4 && (a[3] = 1);
                return a;
            }
        } else a = v.match(_strictNumExp) || _colorLookup.transparent;
        a = a.map(Number);
    }
    if (toHSL && !wasHSL) {
        r = a[0] / _255;
        g = a[1] / _255;
        b = a[2] / _255;
        max = Math.max(r, g, b);
        min = Math.min(r, g, b);
        l = (max + min) / 2;
        if (max === min) h = s = 0;
        else {
            d = max - min;
            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
            h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;
            h *= 60;
        }
        a[0] = ~~(h + .5);
        a[1] = ~~(s * 100 + .5);
        a[2] = ~~(l * 100 + .5);
    }
    forceAlpha && a.length < 4 && (a[3] = 1);
    return a;
}, _colorOrderData = function _colorOrderData(v) {
    // strips out the colors from the string, finds all the numeric slots (with units) and returns an array of those. The Array also has a "c" property which is an Array of the index values where the colors belong. This is to help work around issues where there's a mis-matched order of color/numeric data like drop-shadow(#f00 0px 1px 2px) and drop-shadow(0x 1px 2px #f00). This is basically a helper function used in _formatColors()
    var values = [], c = [], i = -1;
    v.split(_colorExp).forEach(function(v) {
        var a = v.match(_numWithUnitExp) || [];
        values.push.apply(values, a);
        c.push(i += a.length + 1);
    });
    values.c = c;
    return values;
}, _formatColors = function _formatColors(s, toHSL, orderMatchData) {
    var result = "", colors = (s + result).match(_colorExp), type = toHSL ? "hsla(" : "rgba(", i = 0, c, shell, d, l;
    if (!colors) return s;
    colors = colors.map(function(color) {
        return (color = splitColor(color, toHSL, 1)) && type + (toHSL ? color[0] + "," + color[1] + "%," + color[2] + "%," + color[3] : color.join(",")) + ")";
    });
    if (orderMatchData) {
        d = _colorOrderData(s);
        c = orderMatchData.c;
        if (c.join(result) !== d.c.join(result)) {
            shell = s.replace(_colorExp, "1").split(_numWithUnitExp);
            l = shell.length - 1;
            for(; i < l; i++)result += shell[i] + (~c.indexOf(i) ? colors.shift() || type + "0,0,0,0)" : (d.length ? d : colors.length ? colors : orderMatchData).shift());
        }
    }
    if (!shell) {
        shell = s.split(_colorExp);
        l = shell.length - 1;
        for(; i < l; i++)result += shell[i] + colors[i];
    }
    return result + shell[l];
}, _colorExp = function() {
    var s = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b", //we'll dynamically build this Regular Expression to conserve file size. After building it, it will be able to find rgb(), rgba(), # (hexadecimal), and named color values like red, blue, purple, etc.,
    p;
    for(p in _colorLookup)s += "|" + p + "\\b";
    return new RegExp(s + ")", "gi");
}(), _hslExp = /hsl[a]?\(/, _colorStringFilter = function _colorStringFilter(a) {
    var combined = a.join(" "), toHSL;
    _colorExp.lastIndex = 0;
    if (_colorExp.test(combined)) {
        toHSL = _hslExp.test(combined);
        a[1] = _formatColors(a[1], toHSL);
        a[0] = _formatColors(a[0], toHSL, _colorOrderData(a[1])); // make sure the order of numbers/colors match with the END value.
        return true;
    }
}, /*
 * --------------------------------------------------------------------------------------
 * TICKER
 * --------------------------------------------------------------------------------------
 */ _tickerActive, _ticker = function() {
    var _getTime = Date.now, _lagThreshold = 500, _adjustedLag = 33, _startTime = _getTime(), _lastUpdate = _startTime, _gap = 1000 / 240, _nextTime = _gap, _listeners = [], _id, _req, _raf, _self, _delta, _i, _tick = function _tick(v) {
        var elapsed = _getTime() - _lastUpdate, manual = v === true, overlap, dispatch, time, frame;
        (elapsed > _lagThreshold || elapsed < 0) && (_startTime += elapsed - _adjustedLag);
        _lastUpdate += elapsed;
        time = _lastUpdate - _startTime;
        overlap = time - _nextTime;
        if (overlap > 0 || manual) {
            frame = ++_self.frame;
            _delta = time - _self.time * 1000;
            _self.time = time = time / 1000;
            _nextTime += overlap + (overlap >= _gap ? 4 : _gap - overlap);
            dispatch = 1;
        }
        manual || (_id = _req(_tick)); //make sure the request is made before we dispatch the "tick" event so that timing is maintained. Otherwise, if processing the "tick" requires a bunch of time (like 15ms) and we're using a setTimeout() that's based on 16.7ms, it'd technically take 31.7ms between frames otherwise.
        if (dispatch) for(_i = 0; _i < _listeners.length; _i++)// use _i and check _listeners.length instead of a variable because a listener could get removed during the loop, and if that happens to an element less than the current index, it'd throw things off in the loop.
        _listeners[_i](time, _delta, frame, v);
    };
    _self = {
        time: 0,
        frame: 0,
        tick: function tick() {
            _tick(true);
        },
        deltaRatio: function deltaRatio(fps) {
            return _delta / (1000 / (fps || 60));
        },
        wake: function wake() {
            if (_coreReady) {
                if (!_coreInitted && _windowExists()) {
                    _win = _coreInitted = window;
                    _doc = _win.document || {};
                    _globals.gsap = gsap;
                    (_win.gsapVersions || (_win.gsapVersions = [])).push(gsap.version);
                    _install(_installScope || _win.GreenSockGlobals || !_win.gsap && _win || {});
                    _registerPluginQueue.forEach(_createPlugin);
                }
                _raf = typeof requestAnimationFrame !== "undefined" && requestAnimationFrame;
                _id && _self.sleep();
                _req = _raf || function(f) {
                    return setTimeout(f, _nextTime - _self.time * 1000 + 1 | 0);
                };
                _tickerActive = 1;
                _tick(2);
            }
        },
        sleep: function sleep() {
            (_raf ? cancelAnimationFrame : clearTimeout)(_id);
            _tickerActive = 0;
            _req = _emptyFunc;
        },
        lagSmoothing: function lagSmoothing(threshold, adjustedLag) {
            _lagThreshold = threshold || Infinity; // zero should be interpreted as basically unlimited
            _adjustedLag = Math.min(adjustedLag || 33, _lagThreshold);
        },
        fps: function fps(_fps) {
            _gap = 1000 / (_fps || 240);
            _nextTime = _self.time * 1000 + _gap;
        },
        add: function add(callback, once, prioritize) {
            var func = once ? function(t, d, f, v) {
                callback(t, d, f, v);
                _self.remove(func);
            } : callback;
            _self.remove(callback);
            _listeners[prioritize ? "unshift" : "push"](func);
            _wake();
            return func;
        },
        remove: function remove(callback, i) {
            ~(i = _listeners.indexOf(callback)) && _listeners.splice(i, 1) && _i >= i && _i--;
        },
        _listeners: _listeners
    };
    return _self;
}(), _wake = function _wake() {
    return !_tickerActive && _ticker.wake();
}, //also ensures the core classes are initialized.
/*
* -------------------------------------------------
* EASING
* -------------------------------------------------
*/ _easeMap = {}, _customEaseExp = /^[\d.\-M][\d.\-,\s]/, _quotesExp = /["']/g, _parseObjectInString = function _parseObjectInString(value) {
    //takes a string like "{wiggles:10, type:anticipate})" and turns it into a real object. Notice it ends in ")" and includes the {} wrappers. This is because we only use this function for parsing ease configs and prioritized optimization rather than reusability.
    var obj = {}, split = value.substr(1, value.length - 3).split(":"), key = split[0], i = 1, l = split.length, index, val, parsedVal;
    for(; i < l; i++){
        val = split[i];
        index = i !== l - 1 ? val.lastIndexOf(",") : val.length;
        parsedVal = val.substr(0, index);
        obj[key] = isNaN(parsedVal) ? parsedVal.replace(_quotesExp, "").trim() : +parsedVal;
        key = val.substr(index + 1).trim();
    }
    return obj;
}, _valueInParentheses = function _valueInParentheses(value) {
    var open = value.indexOf("(") + 1, close = value.indexOf(")"), nested = value.indexOf("(", open);
    return value.substring(open, ~nested && nested < close ? value.indexOf(")", close + 1) : close);
}, _configEaseFromString = function _configEaseFromString(name) {
    //name can be a string like "elastic.out(1,0.5)", and pass in _easeMap as obj and it'll parse it out and call the actual function like _easeMap.Elastic.easeOut.config(1,0.5). It will also parse custom ease strings as long as CustomEase is loaded and registered (internally as _easeMap._CE).
    var split = (name + "").split("("), ease = _easeMap[split[0]];
    return ease && split.length > 1 && ease.config ? ease.config.apply(null, ~name.indexOf("{") ? [
        _parseObjectInString(split[1])
    ] : _valueInParentheses(name).split(",").map(_numericIfPossible)) : _easeMap._CE && _customEaseExp.test(name) ? _easeMap._CE("", name) : ease;
}, _invertEase = function _invertEase(ease) {
    return function(p) {
        return 1 - ease(1 - p);
    };
}, // allow yoyoEase to be set in children and have those affected when the parent/ancestor timeline yoyos.
_propagateYoyoEase = function _propagateYoyoEase(timeline, isYoyo) {
    var child = timeline._first, ease;
    while(child){
        if (child instanceof Timeline) _propagateYoyoEase(child, isYoyo);
        else if (child.vars.yoyoEase && (!child._yoyo || !child._repeat) && child._yoyo !== isYoyo) {
            if (child.timeline) _propagateYoyoEase(child.timeline, isYoyo);
            else {
                ease = child._ease;
                child._ease = child._yEase;
                child._yEase = ease;
                child._yoyo = isYoyo;
            }
        }
        child = child._next;
    }
}, _parseEase = function _parseEase(ease, defaultEase) {
    return !ease ? defaultEase : (_isFunction(ease) ? ease : _easeMap[ease] || _configEaseFromString(ease)) || defaultEase;
}, _insertEase = function _insertEase(names, easeIn, easeOut, easeInOut) {
    if (easeOut === void 0) easeOut = function easeOut(p) {
        return 1 - easeIn(1 - p);
    };
    if (easeInOut === void 0) easeInOut = function easeInOut(p) {
        return p < .5 ? easeIn(p * 2) / 2 : 1 - easeIn((1 - p) * 2) / 2;
    };
    var ease = {
        easeIn: easeIn,
        easeOut: easeOut,
        easeInOut: easeInOut
    }, lowercaseName;
    _forEachName(names, function(name) {
        _easeMap[name] = _globals[name] = ease;
        _easeMap[lowercaseName = name.toLowerCase()] = easeOut;
        for(var p in ease)_easeMap[lowercaseName + (p === "easeIn" ? ".in" : p === "easeOut" ? ".out" : ".inOut")] = _easeMap[name + "." + p] = ease[p];
    });
    return ease;
}, _easeInOutFromOut = function _easeInOutFromOut(easeOut) {
    return function(p) {
        return p < .5 ? (1 - easeOut(1 - p * 2)) / 2 : .5 + easeOut((p - .5) * 2) / 2;
    };
}, _configElastic = function _configElastic(type, amplitude, period) {
    var p1 = amplitude >= 1 ? amplitude : 1, //note: if amplitude is < 1, we simply adjust the period for a more natural feel. Otherwise the math doesn't work right and the curve starts at 1.
    p2 = (period || (type ? .3 : .45)) / (amplitude < 1 ? amplitude : 1), p3 = p2 / _2PI * (Math.asin(1 / p1) || 0), easeOut = function easeOut(p) {
        return p === 1 ? 1 : p1 * Math.pow(2, -10 * p) * _sin((p - p3) * p2) + 1;
    }, ease = type === "out" ? easeOut : type === "in" ? function(p) {
        return 1 - easeOut(1 - p);
    } : _easeInOutFromOut(easeOut);
    p2 = _2PI / p2; //precalculate to optimize
    ease.config = function(amplitude, period) {
        return _configElastic(type, amplitude, period);
    };
    return ease;
}, _configBack = function _configBack(type, overshoot) {
    if (overshoot === void 0) overshoot = 1.70158;
    var easeOut = function easeOut(p) {
        return p ? --p * p * ((overshoot + 1) * p + overshoot) + 1 : 0;
    }, ease = type === "out" ? easeOut : type === "in" ? function(p) {
        return 1 - easeOut(1 - p);
    } : _easeInOutFromOut(easeOut);
    ease.config = function(overshoot) {
        return _configBack(type, overshoot);
    };
    return ease;
}; // a cheaper (kb and cpu) but more mild way to get a parameterized weighted ease by feeding in a value between -1 (easeIn) and 1 (easeOut) where 0 is linear.
// _weightedEase = ratio => {
// 	let y = 0.5 + ratio / 2;
// 	return p => (2 * (1 - p) * p * y + p * p);
// },
// a stronger (but more expensive kb/cpu) parameterized weighted ease that lets you feed in a value between -1 (easeIn) and 1 (easeOut) where 0 is linear.
// _weightedEaseStrong = ratio => {
// 	ratio = .5 + ratio / 2;
// 	let o = 1 / 3 * (ratio < .5 ? ratio : 1 - ratio),
// 		b = ratio - o,
// 		c = ratio + o;
// 	return p => p === 1 ? p : 3 * b * (1 - p) * (1 - p) * p + 3 * c * (1 - p) * p * p + p * p * p;
// };
_forEachName("Linear,Quad,Cubic,Quart,Quint,Strong", function(name, i) {
    var power = i < 5 ? i + 1 : i;
    _insertEase(name + ",Power" + (power - 1), i ? function(p) {
        return Math.pow(p, power);
    } : function(p) {
        return p;
    }, function(p) {
        return 1 - Math.pow(1 - p, power);
    }, function(p) {
        return p < .5 ? Math.pow(p * 2, power) / 2 : 1 - Math.pow((1 - p) * 2, power) / 2;
    });
});
_easeMap.Linear.easeNone = _easeMap.none = _easeMap.Linear.easeIn;
_insertEase("Elastic", _configElastic("in"), _configElastic("out"), _configElastic());
(function(n, c) {
    var n1 = 1 / c, n2 = 2 * n1, n3 = 2.5 * n1, easeOut = function easeOut(p) {
        return p < n1 ? n * p * p : p < n2 ? n * Math.pow(p - 1.5 / c, 2) + .75 : p < n3 ? n * (p -= 2.25 / c) * p + .9375 : n * Math.pow(p - 2.625 / c, 2) + .984375;
    };
    _insertEase("Bounce", function(p) {
        return 1 - easeOut(1 - p);
    }, easeOut);
})(7.5625, 2.75);
_insertEase("Expo", function(p) {
    return p ? Math.pow(2, 10 * (p - 1)) : 0;
});
_insertEase("Circ", function(p) {
    return -(_sqrt(1 - p * p) - 1);
});
_insertEase("Sine", function(p) {
    return p === 1 ? 1 : -_cos(p * _HALF_PI) + 1;
});
_insertEase("Back", _configBack("in"), _configBack("out"), _configBack());
_easeMap.SteppedEase = _easeMap.steps = _globals.SteppedEase = {
    config: function config(steps, immediateStart) {
        if (steps === void 0) steps = 1;
        var p1 = 1 / steps, p2 = steps + (immediateStart ? 0 : 1), p3 = immediateStart ? 1 : 0, max = 1 - _tinyNum;
        return function(p) {
            return ((p2 * _clamp(0, max, p) | 0) + p3) * p1;
        };
    }
};
_defaults.ease = _easeMap["quad.out"];
_forEachName("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt", function(name) {
    return _callbackNames += name + "," + name + "Params,";
});
var GSCache = function GSCache(target, harness) {
    this.id = _gsID++;
    target._gsap = this;
    this.target = target;
    this.harness = harness;
    this.get = harness ? harness.get : _getProperty;
    this.set = harness ? harness.getSetter : _getSetter;
};
var Animation = /*#__PURE__*/ function() {
    function Animation(vars) {
        this.vars = vars;
        this._delay = +vars.delay || 0;
        if (this._repeat = vars.repeat === Infinity ? -2 : vars.repeat || 0) {
            // TODO: repeat: Infinity on a timeline's children must flag that timeline internally and affect its totalDuration, otherwise it'll stop in the negative direction when reaching the start.
            this._rDelay = vars.repeatDelay || 0;
            this._yoyo = !!vars.yoyo || !!vars.yoyoEase;
        }
        this._ts = 1;
        _setDuration(this, +vars.duration, 1, 1);
        this.data = vars.data;
        if (_context) {
            this._ctx = _context;
            _context.data.push(this);
        }
        _tickerActive || _ticker.wake();
    }
    var _proto = Animation.prototype;
    _proto.delay = function delay(value) {
        if (value || value === 0) {
            this.parent && this.parent.smoothChildTiming && this.startTime(this._start + value - this._delay);
            this._delay = value;
            return this;
        }
        return this._delay;
    };
    _proto.duration = function duration(value) {
        return arguments.length ? this.totalDuration(this._repeat > 0 ? value + (value + this._rDelay) * this._repeat : value) : this.totalDuration() && this._dur;
    };
    _proto.totalDuration = function totalDuration(value) {
        if (!arguments.length) return this._tDur;
        this._dirty = 0;
        return _setDuration(this, this._repeat < 0 ? value : (value - this._repeat * this._rDelay) / (this._repeat + 1));
    };
    _proto.totalTime = function totalTime(_totalTime, suppressEvents) {
        _wake();
        if (!arguments.length) return this._tTime;
        var parent = this._dp;
        if (parent && parent.smoothChildTiming && this._ts) {
            _alignPlayhead(this, _totalTime);
            !parent._dp || parent.parent || _postAddChecks(parent, this); // edge case: if this is a child of a timeline that already completed, for example, we must re-activate the parent.
            //in case any of the ancestor timelines had completed but should now be enabled, we should reset their totalTime() which will also ensure that they're lined up properly and enabled. Skip for animations that are on the root (wasteful). Example: a TimelineLite.exportRoot() is performed when there's a paused tween on the root, the export will not complete until that tween is unpaused, but imagine a child gets restarted later, after all [unpaused] tweens have completed. The start of that child would get pushed out, but one of the ancestors may have completed.
            while(parent && parent.parent){
                if (parent.parent._time !== parent._start + (parent._ts >= 0 ? parent._tTime / parent._ts : (parent.totalDuration() - parent._tTime) / -parent._ts)) parent.totalTime(parent._tTime, true);
                parent = parent.parent;
            }
            if (!this.parent && this._dp.autoRemoveChildren && (this._ts > 0 && _totalTime < this._tDur || this._ts < 0 && _totalTime > 0 || !this._tDur && !_totalTime)) //if the animation doesn't have a parent, put it back into its last parent (recorded as _dp for exactly cases like this). Limit to parents with autoRemoveChildren (like globalTimeline) so that if the user manually removes an animation from a timeline and then alters its playhead, it doesn't get added back in.
            _addToTimeline(this._dp, this, this._start - this._delay);
        }
        if (this._tTime !== _totalTime || !this._dur && !suppressEvents || this._initted && Math.abs(this._zTime) === _tinyNum || !_totalTime && !this._initted && (this.add || this._ptLookup)) {
            // check for _ptLookup on a Tween instance to ensure it has actually finished being instantiated, otherwise if this.reverse() gets called in the Animation constructor, it could trigger a render() here even though the _targets weren't populated, thus when _init() is called there won't be any PropTweens (it'll act like the tween is non-functional)
            this._ts || (this._pTime = _totalTime); // otherwise, if an animation is paused, then the playhead is moved back to zero, then resumed, it'd revert back to the original time at the pause
            //if (!this._lock) { // avoid endless recursion (not sure we need this yet or if it's worth the performance hit)
            //   this._lock = 1;
            _lazySafeRender(this, _totalTime, suppressEvents); //   this._lock = 0;
        //}
        }
        return this;
    };
    _proto.time = function time(value, suppressEvents) {
        return arguments.length ? this.totalTime(Math.min(this.totalDuration(), value + _elapsedCycleDuration(this)) % (this._dur + this._rDelay) || (value ? this._dur : 0), suppressEvents) : this._time; // note: if the modulus results in 0, the playhead could be exactly at the end or the beginning, and we always defer to the END with a non-zero value, otherwise if you set the time() to the very end (duration()), it would render at the START!
    };
    _proto.totalProgress = function totalProgress(value, suppressEvents) {
        return arguments.length ? this.totalTime(this.totalDuration() * value, suppressEvents) : this.totalDuration() ? Math.min(1, this._tTime / this._tDur) : this.rawTime() > 0 ? 1 : 0;
    };
    _proto.progress = function progress(value, suppressEvents) {
        return arguments.length ? this.totalTime(this.duration() * (this._yoyo && !(this.iteration() & 1) ? 1 - value : value) + _elapsedCycleDuration(this), suppressEvents) : this.duration() ? Math.min(1, this._time / this._dur) : this.rawTime() > 0 ? 1 : 0;
    };
    _proto.iteration = function iteration(value, suppressEvents) {
        var cycleDuration = this.duration() + this._rDelay;
        return arguments.length ? this.totalTime(this._time + (value - 1) * cycleDuration, suppressEvents) : this._repeat ? _animationCycle(this._tTime, cycleDuration) + 1 : 1;
    } // potential future addition:
    ;
    _proto.timeScale = function timeScale(value, suppressEvents) {
        if (!arguments.length) return this._rts === -_tinyNum ? 0 : this._rts; // recorded timeScale. Special case: if someone calls reverse() on an animation with timeScale of 0, we assign it -_tinyNum to remember it's reversed.
        if (this._rts === value) return this;
        var tTime = this.parent && this._ts ? _parentToChildTotalTime(this.parent._time, this) : this._tTime; // make sure to do the parentToChildTotalTime() BEFORE setting the new _ts because the old one must be used in that calculation.
        // future addition? Up side: fast and minimal file size. Down side: only works on this animation; if a timeline is reversed, for example, its childrens' onReverse wouldn't get called.
        //(+value < 0 && this._rts >= 0) && _callback(this, "onReverse", true);
        // prioritize rendering where the parent's playhead lines up instead of this._tTime because there could be a tween that's animating another tween's timeScale in the same rendering loop (same parent), thus if the timeScale tween renders first, it would alter _start BEFORE _tTime was set on that tick (in the rendering loop), effectively freezing it until the timeScale tween finishes.
        this._rts = +value || 0;
        this._ts = this._ps || value === -_tinyNum ? 0 : this._rts; // _ts is the functional timeScale which would be 0 if the animation is paused.
        this.totalTime(_clamp(-Math.abs(this._delay), this._tDur, tTime), suppressEvents !== false);
        _setEnd(this); // if parent.smoothChildTiming was false, the end time didn't get updated in the _alignPlayhead() method, so do it here.
        return _recacheAncestors(this);
    };
    _proto.paused = function paused(value) {
        if (!arguments.length) return this._ps;
        if (this._ps !== value) {
            this._ps = value;
            if (value) {
                this._pTime = this._tTime || Math.max(-this._delay, this.rawTime()); // if the pause occurs during the delay phase, make sure that's factored in when resuming.
                this._ts = this._act = 0; // _ts is the functional timeScale, so a paused tween would effectively have a timeScale of 0. We record the "real" timeScale as _rts (recorded time scale)
            } else {
                _wake();
                this._ts = this._rts; //only defer to _pTime (pauseTime) if tTime is zero. Remember, someone could pause() an animation, then scrub the playhead and resume(). If the parent doesn't have smoothChildTiming, we render at the rawTime() because the startTime won't get updated.
                this.totalTime(this.parent && !this.parent.smoothChildTiming ? this.rawTime() : this._tTime || this._pTime, this.progress() === 1 && Math.abs(this._zTime) !== _tinyNum && (this._tTime -= _tinyNum)); // edge case: animation.progress(1).pause().play() wouldn't render again because the playhead is already at the end, but the call to totalTime() below will add it back to its parent...and not remove it again (since removing only happens upon rendering at a new time). Offsetting the _tTime slightly is done simply to cause the final render in totalTime() that'll pop it off its timeline (if autoRemoveChildren is true, of course). Check to make sure _zTime isn't -_tinyNum to avoid an edge case where the playhead is pushed to the end but INSIDE a tween/callback, the timeline itself is paused thus halting rendering and leaving a few unrendered. When resuming, it wouldn't render those otherwise.
            }
        }
        return this;
    };
    _proto.startTime = function startTime(value) {
        if (arguments.length) {
            this._start = value;
            var parent = this.parent || this._dp;
            parent && (parent._sort || !this.parent) && _addToTimeline(parent, this, value - this._delay);
            return this;
        }
        return this._start;
    };
    _proto.endTime = function endTime(includeRepeats) {
        return this._start + (_isNotFalse(includeRepeats) ? this.totalDuration() : this.duration()) / Math.abs(this._ts || 1);
    };
    _proto.rawTime = function rawTime(wrapRepeats) {
        var parent = this.parent || this._dp; // _dp = detached parent
        return !parent ? this._tTime : wrapRepeats && (!this._ts || this._repeat && this._time && this.totalProgress() < 1) ? this._tTime % (this._dur + this._rDelay) : !this._ts ? this._tTime : _parentToChildTotalTime(parent.rawTime(wrapRepeats), this);
    };
    _proto.revert = function revert(config) {
        if (config === void 0) config = _revertConfig;
        var prevIsReverting = _reverting;
        _reverting = config;
        if (this._initted || this._startAt) {
            this.timeline && this.timeline.revert(config);
            this.totalTime(-0.01, config.suppressEvents);
        }
        this.data !== "nested" && config.kill !== false && this.kill();
        _reverting = prevIsReverting;
        return this;
    };
    _proto.globalTime = function globalTime(rawTime) {
        var animation = this, time = arguments.length ? rawTime : animation.rawTime();
        while(animation){
            time = animation._start + time / (Math.abs(animation._ts) || 1);
            animation = animation._dp;
        }
        return !this.parent && this._sat ? this._sat.globalTime(rawTime) : time; // the _startAt tweens for .fromTo() and .from() that have immediateRender should always be FIRST in the timeline (important for context.revert()). "_sat" stands for _startAtTween, referring to the parent tween that created the _startAt. We must discern if that tween had immediateRender so that we can know whether or not to prioritize it in revert().
    };
    _proto.repeat = function repeat(value) {
        if (arguments.length) {
            this._repeat = value === Infinity ? -2 : value;
            return _onUpdateTotalDuration(this);
        }
        return this._repeat === -2 ? Infinity : this._repeat;
    };
    _proto.repeatDelay = function repeatDelay(value) {
        if (arguments.length) {
            var time = this._time;
            this._rDelay = value;
            _onUpdateTotalDuration(this);
            return time ? this.time(time) : this;
        }
        return this._rDelay;
    };
    _proto.yoyo = function yoyo(value) {
        if (arguments.length) {
            this._yoyo = value;
            return this;
        }
        return this._yoyo;
    };
    _proto.seek = function seek(position, suppressEvents) {
        return this.totalTime(_parsePosition(this, position), _isNotFalse(suppressEvents));
    };
    _proto.restart = function restart(includeDelay, suppressEvents) {
        return this.play().totalTime(includeDelay ? -this._delay : 0, _isNotFalse(suppressEvents));
    };
    _proto.play = function play(from, suppressEvents) {
        from != null && this.seek(from, suppressEvents);
        return this.reversed(false).paused(false);
    };
    _proto.reverse = function reverse(from, suppressEvents) {
        from != null && this.seek(from || this.totalDuration(), suppressEvents);
        return this.reversed(true).paused(false);
    };
    _proto.pause = function pause(atTime, suppressEvents) {
        atTime != null && this.seek(atTime, suppressEvents);
        return this.paused(true);
    };
    _proto.resume = function resume() {
        return this.paused(false);
    };
    _proto.reversed = function reversed(value) {
        if (arguments.length) {
            !!value !== this.reversed() && this.timeScale(-this._rts || (value ? -_tinyNum : 0)); // in case timeScale is zero, reversing would have no effect so we use _tinyNum.
            return this;
        }
        return this._rts < 0;
    };
    _proto.invalidate = function invalidate() {
        this._initted = this._act = 0;
        this._zTime = -_tinyNum;
        return this;
    };
    _proto.isActive = function isActive() {
        var parent = this.parent || this._dp, start = this._start, rawTime;
        return !!(!parent || this._ts && this._initted && parent.isActive() && (rawTime = parent.rawTime(true)) >= start && rawTime < this.endTime(true) - _tinyNum);
    };
    _proto.eventCallback = function eventCallback(type, callback, params) {
        var vars = this.vars;
        if (arguments.length > 1) {
            if (!callback) delete vars[type];
            else {
                vars[type] = callback;
                params && (vars[type + "Params"] = params);
                type === "onUpdate" && (this._onUpdate = callback);
            }
            return this;
        }
        return vars[type];
    };
    _proto.then = function then(onFulfilled) {
        var self = this;
        return new Promise(function(resolve) {
            var f = _isFunction(onFulfilled) ? onFulfilled : _passThrough, _resolve = function _resolve() {
                var _then = self.then;
                self.then = null; // temporarily null the then() method to avoid an infinite loop (see https://github.com/greensock/GSAP/issues/322)
                _isFunction(f) && (f = f(self)) && (f.then || f === self) && (self.then = _then);
                resolve(f);
                self.then = _then;
            };
            if (self._initted && self.totalProgress() === 1 && self._ts >= 0 || !self._tTime && self._ts < 0) _resolve();
            else self._prom = _resolve;
        });
    };
    _proto.kill = function kill() {
        _interrupt(this);
    };
    return Animation;
}();
_setDefaults(Animation.prototype, {
    _time: 0,
    _start: 0,
    _end: 0,
    _tTime: 0,
    _tDur: 0,
    _dirty: 0,
    _repeat: 0,
    _yoyo: false,
    parent: null,
    _initted: false,
    _rDelay: 0,
    _ts: 1,
    _dp: 0,
    ratio: 0,
    _zTime: -_tinyNum,
    _prom: 0,
    _ps: false,
    _rts: 1
});
var Timeline = /*#__PURE__*/ function(_Animation) {
    _inheritsLoose(Timeline, _Animation);
    function Timeline(vars, position) {
        var _this;
        if (vars === void 0) vars = {};
        _this = _Animation.call(this, vars) || this;
        _this.labels = {};
        _this.smoothChildTiming = !!vars.smoothChildTiming;
        _this.autoRemoveChildren = !!vars.autoRemoveChildren;
        _this._sort = _isNotFalse(vars.sortChildren);
        _globalTimeline && _addToTimeline(vars.parent || _globalTimeline, _assertThisInitialized(_this), position);
        vars.reversed && _this.reverse();
        vars.paused && _this.paused(true);
        vars.scrollTrigger && _scrollTrigger(_assertThisInitialized(_this), vars.scrollTrigger);
        return _this;
    }
    var _proto2 = Timeline.prototype;
    _proto2.to = function to(targets, vars, position) {
        _createTweenType(0, arguments, this);
        return this;
    };
    _proto2.from = function from(targets, vars, position) {
        _createTweenType(1, arguments, this);
        return this;
    };
    _proto2.fromTo = function fromTo(targets, fromVars, toVars, position) {
        _createTweenType(2, arguments, this);
        return this;
    };
    _proto2.set = function set(targets, vars, position) {
        vars.duration = 0;
        vars.parent = this;
        _inheritDefaults(vars).repeatDelay || (vars.repeat = 0);
        vars.immediateRender = !!vars.immediateRender;
        new Tween(targets, vars, _parsePosition(this, position), 1);
        return this;
    };
    _proto2.call = function call(callback, params, position) {
        return _addToTimeline(this, Tween.delayedCall(0, callback, params), position);
    } //ONLY for backward compatibility! Maybe delete?
    ;
    _proto2.staggerTo = function staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams) {
        vars.duration = duration;
        vars.stagger = vars.stagger || stagger;
        vars.onComplete = onCompleteAll;
        vars.onCompleteParams = onCompleteAllParams;
        vars.parent = this;
        new Tween(targets, vars, _parsePosition(this, position));
        return this;
    };
    _proto2.staggerFrom = function staggerFrom(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams) {
        vars.runBackwards = 1;
        _inheritDefaults(vars).immediateRender = _isNotFalse(vars.immediateRender);
        return this.staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams);
    };
    _proto2.staggerFromTo = function staggerFromTo(targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams) {
        toVars.startAt = fromVars;
        _inheritDefaults(toVars).immediateRender = _isNotFalse(toVars.immediateRender);
        return this.staggerTo(targets, duration, toVars, stagger, position, onCompleteAll, onCompleteAllParams);
    };
    _proto2.render = function render(totalTime, suppressEvents, force) {
        var prevTime = this._time, tDur = this._dirty ? this.totalDuration() : this._tDur, dur = this._dur, tTime = totalTime <= 0 ? 0 : _roundPrecise(totalTime), // if a paused timeline is resumed (or its _start is updated for another reason...which rounds it), that could result in the playhead shifting a **tiny** amount and a zero-duration child at that spot may get rendered at a different ratio, like its totalTime in render() may be 1e-17 instead of 0, for example.
        crossingStart = this._zTime < 0 !== totalTime < 0 && (this._initted || !dur), time, child, next, iteration, cycleDuration, prevPaused, pauseTween, timeScale, prevStart, prevIteration, yoyo, isYoyo;
        this !== _globalTimeline && tTime > tDur && totalTime >= 0 && (tTime = tDur);
        if (tTime !== this._tTime || force || crossingStart) {
            if (prevTime !== this._time && dur) {
                //if totalDuration() finds a child with a negative startTime and smoothChildTiming is true, things get shifted around internally so we need to adjust the time accordingly. For example, if a tween starts at -30 we must shift EVERYTHING forward 30 seconds and move this timeline's startTime backward by 30 seconds so that things align with the playhead (no jump).
                tTime += this._time - prevTime;
                totalTime += this._time - prevTime;
            }
            time = tTime;
            prevStart = this._start;
            timeScale = this._ts;
            prevPaused = !timeScale;
            if (crossingStart) {
                dur || (prevTime = this._zTime); //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect.
                (totalTime || !suppressEvents) && (this._zTime = totalTime);
            }
            if (this._repeat) {
                //adjust the time for repeats and yoyos
                yoyo = this._yoyo;
                cycleDuration = dur + this._rDelay;
                if (this._repeat < -1 && totalTime < 0) return this.totalTime(cycleDuration * 100 + totalTime, suppressEvents, force);
                time = _roundPrecise(tTime % cycleDuration); //round to avoid floating point errors. (4 % 0.8 should be 0 but some browsers report it as 0.79999999!)
                if (tTime === tDur) {
                    // the tDur === tTime is for edge cases where there's a lengthy decimal on the duration and it may reach the very end but the time is rendered as not-quite-there (remember, tDur is rounded to 4 decimals whereas dur isn't)
                    iteration = this._repeat;
                    time = dur;
                } else {
                    iteration = ~~(tTime / cycleDuration);
                    if (iteration && iteration === tTime / cycleDuration) {
                        time = dur;
                        iteration--;
                    }
                    time > dur && (time = dur);
                }
                prevIteration = _animationCycle(this._tTime, cycleDuration);
                !prevTime && this._tTime && prevIteration !== iteration && this._tTime - prevIteration * cycleDuration - this._dur <= 0 && (prevIteration = iteration); // edge case - if someone does addPause() at the very beginning of a repeating timeline, that pause is technically at the same spot as the end which causes this._time to get set to 0 when the totalTime would normally place the playhead at the end. See https://gsap.com/forums/topic/23823-closing-nav-animation-not-working-on-ie-and-iphone-6-maybe-other-older-browser/?tab=comments#comment-113005 also, this._tTime - prevIteration * cycleDuration - this._dur <= 0 just checks to make sure it wasn't previously in the "repeatDelay" portion
                if (yoyo && iteration & 1) {
                    time = dur - time;
                    isYoyo = 1;
                }
                /*
        make sure children at the end/beginning of the timeline are rendered properly. If, for example,
        a 3-second long timeline rendered at 2.9 seconds previously, and now renders at 3.2 seconds (which
        would get translated to 2.8 seconds if the timeline yoyos or 0.2 seconds if it just repeats), there
        could be a callback or a short tween that's at 2.95 or 3 seconds in which wouldn't render. So
        we need to push the timeline to the end (and/or beginning depending on its yoyo value). Also we must
        ensure that zero-duration tweens at the very beginning or end of the Timeline work.
        */ if (iteration !== prevIteration && !this._lock) {
                    var rewinding = yoyo && prevIteration & 1, doesWrap = rewinding === (yoyo && iteration & 1);
                    iteration < prevIteration && (rewinding = !rewinding);
                    prevTime = rewinding ? 0 : tTime % dur ? dur : tTime; // if the playhead is landing exactly at the end of an iteration, use that totalTime rather than only the duration, otherwise it'll skip the 2nd render since it's effectively at the same time.
                    this._lock = 1;
                    this.render(prevTime || (isYoyo ? 0 : _roundPrecise(iteration * cycleDuration)), suppressEvents, !dur)._lock = 0;
                    this._tTime = tTime; // if a user gets the iteration() inside the onRepeat, for example, it should be accurate.
                    !suppressEvents && this.parent && _callback(this, "onRepeat");
                    this.vars.repeatRefresh && !isYoyo && (this.invalidate()._lock = 1);
                    if (prevTime && prevTime !== this._time || prevPaused !== !this._ts || this.vars.onRepeat && !this.parent && !this._act) // if prevTime is 0 and we render at the very end, _time will be the end, thus won't match. So in this edge case, prevTime won't match _time but that's okay. If it gets killed in the onRepeat, eject as well.
                    return this;
                    dur = this._dur; // in case the duration changed in the onRepeat
                    tDur = this._tDur;
                    if (doesWrap) {
                        this._lock = 2;
                        prevTime = rewinding ? dur : -0.0001;
                        this.render(prevTime, true);
                        this.vars.repeatRefresh && !isYoyo && this.invalidate();
                    }
                    this._lock = 0;
                    if (!this._ts && !prevPaused) return this;
                     //in order for yoyoEase to work properly when there's a stagger, we must swap out the ease in each sub-tween.
                    _propagateYoyoEase(this, isYoyo);
                }
            }
            if (this._hasPause && !this._forcing && this._lock < 2) {
                pauseTween = _findNextPauseTween(this, _roundPrecise(prevTime), _roundPrecise(time));
                if (pauseTween) tTime -= time - (time = pauseTween._start);
            }
            this._tTime = tTime;
            this._time = time;
            this._act = !timeScale; //as long as it's not paused, force it to be active so that if the user renders independent of the parent timeline, it'll be forced to re-render on the next tick.
            if (!this._initted) {
                this._onUpdate = this.vars.onUpdate;
                this._initted = 1;
                this._zTime = totalTime;
                prevTime = 0; // upon init, the playhead should always go forward; someone could invalidate() a completed timeline and then if they restart(), that would make child tweens render in reverse order which could lock in the wrong starting values if they build on each other, like tl.to(obj, {x: 100}).to(obj, {x: 0}).
            }
            if (!prevTime && time && !suppressEvents && !iteration) {
                _callback(this, "onStart");
                if (this._tTime !== tTime) // in case the onStart triggered a render at a different spot, eject. Like if someone did animation.pause(0.5) or something inside the onStart.
                return this;
            }
            if (time >= prevTime && totalTime >= 0) {
                child = this._first;
                while(child){
                    next = child._next;
                    if ((child._act || time >= child._start) && child._ts && pauseTween !== child) {
                        if (child.parent !== this) // an extreme edge case - the child's render could do something like kill() the "next" one in the linked list, or reparent it. In that case we must re-initiate the whole render to be safe.
                        return this.render(totalTime, suppressEvents, force);
                        child.render(child._ts > 0 ? (time - child._start) * child._ts : (child._dirty ? child.totalDuration() : child._tDur) + (time - child._start) * child._ts, suppressEvents, force);
                        if (time !== this._time || !this._ts && !prevPaused) {
                            //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete
                            pauseTween = 0;
                            next && (tTime += this._zTime = -_tinyNum); // it didn't finish rendering, so flag zTime as negative so that so that the next time render() is called it'll be forced (to render any remaining children)
                            break;
                        }
                    }
                    child = next;
                }
            } else {
                child = this._last;
                var adjustedTime = totalTime < 0 ? totalTime : time; //when the playhead goes backward beyond the start of this timeline, we must pass that information down to the child animations so that zero-duration tweens know whether to render their starting or ending values.
                while(child){
                    next = child._prev;
                    if ((child._act || adjustedTime <= child._end) && child._ts && pauseTween !== child) {
                        if (child.parent !== this) // an extreme edge case - the child's render could do something like kill() the "next" one in the linked list, or reparent it. In that case we must re-initiate the whole render to be safe.
                        return this.render(totalTime, suppressEvents, force);
                        child.render(child._ts > 0 ? (adjustedTime - child._start) * child._ts : (child._dirty ? child.totalDuration() : child._tDur) + (adjustedTime - child._start) * child._ts, suppressEvents, force || _reverting && (child._initted || child._startAt)); // if reverting, we should always force renders of initted tweens (but remember that .fromTo() or .from() may have a _startAt but not _initted yet). If, for example, a .fromTo() tween with a stagger (which creates an internal timeline) gets reverted BEFORE some of its child tweens render for the first time, it may not properly trigger them to revert.
                        if (time !== this._time || !this._ts && !prevPaused) {
                            //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete
                            pauseTween = 0;
                            next && (tTime += this._zTime = adjustedTime ? -_tinyNum : _tinyNum); // it didn't finish rendering, so adjust zTime so that so that the next time render() is called it'll be forced (to render any remaining children)
                            break;
                        }
                    }
                    child = next;
                }
            }
            if (pauseTween && !suppressEvents) {
                this.pause();
                pauseTween.render(time >= prevTime ? 0 : -_tinyNum)._zTime = time >= prevTime ? 1 : -1;
                if (this._ts) {
                    //the callback resumed playback! So since we may have held back the playhead due to where the pause is positioned, go ahead and jump to where it's SUPPOSED to be (if no pause happened).
                    this._start = prevStart; //if the pause was at an earlier time and the user resumed in the callback, it could reposition the timeline (changing its startTime), throwing things off slightly, so we make sure the _start doesn't shift.
                    _setEnd(this);
                    return this.render(totalTime, suppressEvents, force);
                }
            }
            this._onUpdate && !suppressEvents && _callback(this, "onUpdate", true);
            if (tTime === tDur && this._tTime >= this.totalDuration() || !tTime && prevTime) {
                if (prevStart === this._start || Math.abs(timeScale) !== Math.abs(this._ts)) {
                    if (!this._lock) {
                        // remember, a child's callback may alter this timeline's playhead or timeScale which is why we need to add some of these checks.
                        (totalTime || !dur) && (tTime === tDur && this._ts > 0 || !tTime && this._ts < 0) && _removeFromParent(this, 1); // don't remove if the timeline is reversed and the playhead isn't at 0, otherwise tl.progress(1).reverse() won't work. Only remove if the playhead is at the end and timeScale is positive, or if the playhead is at 0 and the timeScale is negative.
                        if (!suppressEvents && !(totalTime < 0 && !prevTime) && (tTime || prevTime || !tDur)) {
                            _callback(this, tTime === tDur && totalTime >= 0 ? "onComplete" : "onReverseComplete", true);
                            this._prom && !(tTime < tDur && this.timeScale() > 0) && this._prom();
                        }
                    }
                }
            }
        }
        return this;
    };
    _proto2.add = function add(child, position) {
        var _this2 = this;
        _isNumber(position) || (position = _parsePosition(this, position, child));
        if (!(child instanceof Animation)) {
            if (_isArray(child)) {
                child.forEach(function(obj) {
                    return _this2.add(obj, position);
                });
                return this;
            }
            if (_isString(child)) return this.addLabel(child, position);
            if (_isFunction(child)) child = Tween.delayedCall(0, child);
            else return this;
        }
        return this !== child ? _addToTimeline(this, child, position) : this; //don't allow a timeline to be added to itself as a child!
    };
    _proto2.getChildren = function getChildren(nested, tweens, timelines, ignoreBeforeTime) {
        if (nested === void 0) nested = true;
        if (tweens === void 0) tweens = true;
        if (timelines === void 0) timelines = true;
        if (ignoreBeforeTime === void 0) ignoreBeforeTime = -_bigNum;
        var a = [], child = this._first;
        while(child){
            if (child._start >= ignoreBeforeTime) {
                if (child instanceof Tween) tweens && a.push(child);
                else {
                    timelines && a.push(child);
                    nested && a.push.apply(a, child.getChildren(true, tweens, timelines));
                }
            }
            child = child._next;
        }
        return a;
    };
    _proto2.getById = function getById(id) {
        var animations = this.getChildren(1, 1, 1), i = animations.length;
        while(i--){
            if (animations[i].vars.id === id) return animations[i];
        }
    };
    _proto2.remove = function remove(child) {
        if (_isString(child)) return this.removeLabel(child);
        if (_isFunction(child)) return this.killTweensOf(child);
        _removeLinkedListItem(this, child);
        if (child === this._recent) this._recent = this._last;
        return _uncache(this);
    };
    _proto2.totalTime = function totalTime(_totalTime2, suppressEvents) {
        if (!arguments.length) return this._tTime;
        this._forcing = 1;
        if (!this._dp && this._ts) //special case for the global timeline (or any other that has no parent or detached parent).
        this._start = _roundPrecise(_ticker.time - (this._ts > 0 ? _totalTime2 / this._ts : (this.totalDuration() - _totalTime2) / -this._ts));
        _Animation.prototype.totalTime.call(this, _totalTime2, suppressEvents);
        this._forcing = 0;
        return this;
    };
    _proto2.addLabel = function addLabel(label, position) {
        this.labels[label] = _parsePosition(this, position);
        return this;
    };
    _proto2.removeLabel = function removeLabel(label) {
        delete this.labels[label];
        return this;
    };
    _proto2.addPause = function addPause(position, callback, params) {
        var t = Tween.delayedCall(0, callback || _emptyFunc, params);
        t.data = "isPause";
        this._hasPause = 1;
        return _addToTimeline(this, t, _parsePosition(this, position));
    };
    _proto2.removePause = function removePause(position) {
        var child = this._first;
        position = _parsePosition(this, position);
        while(child){
            if (child._start === position && child.data === "isPause") _removeFromParent(child);
            child = child._next;
        }
    };
    _proto2.killTweensOf = function killTweensOf(targets, props, onlyActive) {
        var tweens = this.getTweensOf(targets, onlyActive), i = tweens.length;
        while(i--)_overwritingTween !== tweens[i] && tweens[i].kill(targets, props);
        return this;
    };
    _proto2.getTweensOf = function getTweensOf(targets, onlyActive) {
        var a = [], parsedTargets = toArray(targets), child = this._first, isGlobalTime = _isNumber(onlyActive), // a number is interpreted as a global time. If the animation spans
        children;
        while(child){
            if (child instanceof Tween) {
                if (_arrayContainsAny(child._targets, parsedTargets) && (isGlobalTime ? (!_overwritingTween || child._initted && child._ts) && child.globalTime(0) <= onlyActive && child.globalTime(child.totalDuration()) > onlyActive : !onlyActive || child.isActive())) // note: if this is for overwriting, it should only be for tweens that aren't paused and are initted.
                a.push(child);
            } else if ((children = child.getTweensOf(parsedTargets, onlyActive)).length) a.push.apply(a, children);
            child = child._next;
        }
        return a;
    } // potential future feature - targets() on timelines
    ;
    _proto2.tweenTo = function tweenTo(position, vars) {
        vars = vars || {};
        var tl = this, endTime = _parsePosition(tl, position), _vars = vars, startAt = _vars.startAt, _onStart = _vars.onStart, onStartParams = _vars.onStartParams, immediateRender = _vars.immediateRender, initted, tween = Tween.to(tl, _setDefaults({
            ease: vars.ease || "none",
            lazy: false,
            immediateRender: false,
            time: endTime,
            overwrite: "auto",
            duration: vars.duration || Math.abs((endTime - (startAt && "time" in startAt ? startAt.time : tl._time)) / tl.timeScale()) || _tinyNum,
            onStart: function onStart() {
                tl.pause();
                if (!initted) {
                    var duration = vars.duration || Math.abs((endTime - (startAt && "time" in startAt ? startAt.time : tl._time)) / tl.timeScale());
                    tween._dur !== duration && _setDuration(tween, duration, 0, 1).render(tween._time, true, true);
                    initted = 1;
                }
                _onStart && _onStart.apply(tween, onStartParams || []); //in case the user had an onStart in the vars - we don't want to overwrite it.
            }
        }, vars));
        return immediateRender ? tween.render(0) : tween;
    };
    _proto2.tweenFromTo = function tweenFromTo(fromPosition, toPosition, vars) {
        return this.tweenTo(toPosition, _setDefaults({
            startAt: {
                time: _parsePosition(this, fromPosition)
            }
        }, vars));
    };
    _proto2.recent = function recent() {
        return this._recent;
    };
    _proto2.nextLabel = function nextLabel(afterTime) {
        if (afterTime === void 0) afterTime = this._time;
        return _getLabelInDirection(this, _parsePosition(this, afterTime));
    };
    _proto2.previousLabel = function previousLabel(beforeTime) {
        if (beforeTime === void 0) beforeTime = this._time;
        return _getLabelInDirection(this, _parsePosition(this, beforeTime), 1);
    };
    _proto2.currentLabel = function currentLabel(value) {
        return arguments.length ? this.seek(value, true) : this.previousLabel(this._time + _tinyNum);
    };
    _proto2.shiftChildren = function shiftChildren(amount, adjustLabels, ignoreBeforeTime) {
        if (ignoreBeforeTime === void 0) ignoreBeforeTime = 0;
        var child = this._first, labels = this.labels, p;
        while(child){
            if (child._start >= ignoreBeforeTime) {
                child._start += amount;
                child._end += amount;
            }
            child = child._next;
        }
        if (adjustLabels) {
            for(p in labels)if (labels[p] >= ignoreBeforeTime) labels[p] += amount;
        }
        return _uncache(this);
    };
    _proto2.invalidate = function invalidate(soft) {
        var child = this._first;
        this._lock = 0;
        while(child){
            child.invalidate(soft);
            child = child._next;
        }
        return _Animation.prototype.invalidate.call(this, soft);
    };
    _proto2.clear = function clear(includeLabels) {
        if (includeLabels === void 0) includeLabels = true;
        var child = this._first, next;
        while(child){
            next = child._next;
            this.remove(child);
            child = next;
        }
        this._dp && (this._time = this._tTime = this._pTime = 0);
        includeLabels && (this.labels = {});
        return _uncache(this);
    };
    _proto2.totalDuration = function totalDuration(value) {
        var max = 0, self = this, child = self._last, prevStart = _bigNum, prev, start, parent;
        if (arguments.length) return self.timeScale((self._repeat < 0 ? self.duration() : self.totalDuration()) / (self.reversed() ? -value : value));
        if (self._dirty) {
            parent = self.parent;
            while(child){
                prev = child._prev; //record it here in case the tween changes position in the sequence...
                child._dirty && child.totalDuration(); //could change the tween._startTime, so make sure the animation's cache is clean before analyzing it.
                start = child._start;
                if (start > prevStart && self._sort && child._ts && !self._lock) {
                    //in case one of the tweens shifted out of order, it needs to be re-inserted into the correct position in the sequence
                    self._lock = 1; //prevent endless recursive calls - there are methods that get triggered that check duration/totalDuration when we add().
                    _addToTimeline(self, child, start - child._delay, 1)._lock = 0;
                } else prevStart = start;
                if (start < 0 && child._ts) {
                    //children aren't allowed to have negative startTimes unless smoothChildTiming is true, so adjust here if one is found.
                    max -= start;
                    if (!parent && !self._dp || parent && parent.smoothChildTiming) {
                        self._start += start / self._ts;
                        self._time -= start;
                        self._tTime -= start;
                    }
                    self.shiftChildren(-start, false, -Infinity);
                    prevStart = 0;
                }
                child._end > max && child._ts && (max = child._end);
                child = prev;
            }
            _setDuration(self, self === _globalTimeline && self._time > max ? self._time : max, 1, 1);
            self._dirty = 0;
        }
        return self._tDur;
    };
    Timeline.updateRoot = function updateRoot(time) {
        if (_globalTimeline._ts) {
            _lazySafeRender(_globalTimeline, _parentToChildTotalTime(time, _globalTimeline));
            _lastRenderedFrame = _ticker.frame;
        }
        if (_ticker.frame >= _nextGCFrame) {
            _nextGCFrame += _config.autoSleep || 120;
            var child = _globalTimeline._first;
            if (!child || !child._ts) {
                if (_config.autoSleep && _ticker._listeners.length < 2) {
                    while(child && !child._ts)child = child._next;
                    child || _ticker.sleep();
                }
            }
        }
    };
    return Timeline;
}(Animation);
_setDefaults(Timeline.prototype, {
    _lock: 0,
    _hasPause: 0,
    _forcing: 0
});
var _addComplexStringPropTween = function _addComplexStringPropTween(target, prop, start, end, setter, stringFilter, funcParam) {
    //note: we call _addComplexStringPropTween.call(tweenInstance...) to ensure that it's scoped properly. We may call it from within a plugin too, thus "this" would refer to the plugin.
    var pt = new PropTween(this._pt, target, prop, 0, 1, _renderComplexString, null, setter), index = 0, matchIndex = 0, result, startNums, color, endNum, chunk, startNum, hasRandom, a;
    pt.b = start;
    pt.e = end;
    start += ""; //ensure values are strings
    end += "";
    if (hasRandom = ~end.indexOf("random(")) end = _replaceRandom(end);
    if (stringFilter) {
        a = [
            start,
            end
        ];
        stringFilter(a, target, prop); //pass an array with the starting and ending values and let the filter do whatever it needs to the values.
        start = a[0];
        end = a[1];
    }
    startNums = start.match(_complexStringNumExp) || [];
    while(result = _complexStringNumExp.exec(end)){
        endNum = result[0];
        chunk = end.substring(index, result.index);
        if (color) color = (color + 1) % 5;
        else if (chunk.substr(-5) === "rgba(") color = 1;
        if (endNum !== startNums[matchIndex++]) {
            startNum = parseFloat(startNums[matchIndex - 1]) || 0; //these nested PropTweens are handled in a special way - we'll never actually call a render or setter method on them. We'll just loop through them in the parent complex string PropTween's render method.
            pt._pt = {
                _next: pt._pt,
                p: chunk || matchIndex === 1 ? chunk : ",",
                //note: SVG spec allows omission of comma/space when a negative sign is wedged between two numbers, like 2.5-5.3 instead of 2.5,-5.3 but when tweening, the negative value may switch to positive, so we insert the comma just in case.
                s: startNum,
                c: endNum.charAt(1) === "=" ? _parseRelative(startNum, endNum) - startNum : parseFloat(endNum) - startNum,
                m: color && color < 4 ? Math.round : 0
            };
            index = _complexStringNumExp.lastIndex;
        }
    }
    pt.c = index < end.length ? end.substring(index, end.length) : ""; //we use the "c" of the PropTween to store the final part of the string (after the last number)
    pt.fp = funcParam;
    if (_relExp.test(end) || hasRandom) pt.e = 0; //if the end string contains relative values or dynamic random(...) values, delete the end it so that on the final render we don't actually set it to the string with += or -= characters (forces it to use the calculated value).
    this._pt = pt; //start the linked list with this new PropTween. Remember, we call _addComplexStringPropTween.call(tweenInstance...) to ensure that it's scoped properly. We may call it from within a plugin too, thus "this" would refer to the plugin.
    return pt;
}, _addPropTween = function _addPropTween(target, prop, start, end, index, targets, modifier, stringFilter, funcParam, optional) {
    _isFunction(end) && (end = end(index || 0, target, targets));
    var currentValue = target[prop], parsedStart = start !== "get" ? start : !_isFunction(currentValue) ? currentValue : funcParam ? target[prop.indexOf("set") || !_isFunction(target["get" + prop.substr(3)]) ? prop : "get" + prop.substr(3)](funcParam) : target[prop](), setter = !_isFunction(currentValue) ? _setterPlain : funcParam ? _setterFuncWithParam : _setterFunc, pt;
    if (_isString(end)) {
        if (~end.indexOf("random(")) end = _replaceRandom(end);
        if (end.charAt(1) === "=") {
            pt = _parseRelative(parsedStart, end) + (getUnit(parsedStart) || 0);
            if (pt || pt === 0) // to avoid isNaN, like if someone passes in a value like "!= whatever"
            end = pt;
        }
    }
    if (!optional || parsedStart !== end || _forceAllPropTweens) {
        if (!isNaN(parsedStart * end) && end !== "") {
            // fun fact: any number multiplied by "" is evaluated as the number 0!
            pt = new PropTween(this._pt, target, prop, +parsedStart || 0, end - (parsedStart || 0), typeof currentValue === "boolean" ? _renderBoolean : _renderPlain, 0, setter);
            funcParam && (pt.fp = funcParam);
            modifier && pt.modifier(modifier, this, target);
            return this._pt = pt;
        }
        !currentValue && !(prop in target) && _missingPlugin(prop, end);
        return _addComplexStringPropTween.call(this, target, prop, parsedStart, end, setter, stringFilter || _config.stringFilter, funcParam);
    }
}, //creates a copy of the vars object and processes any function-based values (putting the resulting values directly into the copy) as well as strings with "random()" in them. It does NOT process relative values.
_processVars = function _processVars(vars, index, target, targets, tween) {
    _isFunction(vars) && (vars = _parseFuncOrString(vars, tween, index, target, targets));
    if (!_isObject(vars) || vars.style && vars.nodeType || _isArray(vars) || _isTypedArray(vars)) return _isString(vars) ? _parseFuncOrString(vars, tween, index, target, targets) : vars;
    var copy = {}, p;
    for(p in vars)copy[p] = _parseFuncOrString(vars[p], tween, index, target, targets);
    return copy;
}, _checkPlugin = function _checkPlugin(property, vars, tween, index, target, targets) {
    var plugin, pt, ptLookup, i;
    if (_plugins[property] && (plugin = new _plugins[property]()).init(target, plugin.rawVars ? vars[property] : _processVars(vars[property], index, target, targets, tween), tween, index, targets) !== false) {
        tween._pt = pt = new PropTween(tween._pt, target, property, 0, 1, plugin.render, plugin, 0, plugin.priority);
        if (tween !== _quickTween) {
            ptLookup = tween._ptLookup[tween._targets.indexOf(target)]; //note: we can't use tween._ptLookup[index] because for staggered tweens, the index from the fullTargets array won't match what it is in each individual tween that spawns from the stagger.
            i = plugin._props.length;
            while(i--)ptLookup[plugin._props[i]] = pt;
        }
    }
    return plugin;
}, _overwritingTween, //store a reference temporarily so we can avoid overwriting itself.
_forceAllPropTweens, _initTween = function _initTween(tween, time, tTime) {
    var vars = tween.vars, ease = vars.ease, startAt = vars.startAt, immediateRender = vars.immediateRender, lazy = vars.lazy, onUpdate = vars.onUpdate, runBackwards = vars.runBackwards, yoyoEase = vars.yoyoEase, keyframes = vars.keyframes, autoRevert = vars.autoRevert, dur = tween._dur, prevStartAt = tween._startAt, targets = tween._targets, parent = tween.parent, fullTargets = parent && parent.data === "nested" ? parent.vars.targets : targets, autoOverwrite = tween._overwrite === "auto" && !_suppressOverwrites, tl = tween.timeline, cleanVars, i, p, pt, target, hasPriority, gsData, harness, plugin, ptLookup, index, harnessVars, overwritten;
    tl && (!keyframes || !ease) && (ease = "none");
    tween._ease = _parseEase(ease, _defaults.ease);
    tween._yEase = yoyoEase ? _invertEase(_parseEase(yoyoEase === true ? ease : yoyoEase, _defaults.ease)) : 0;
    if (yoyoEase && tween._yoyo && !tween._repeat) {
        //there must have been a parent timeline with yoyo:true that is currently in its yoyo phase, so flip the eases.
        yoyoEase = tween._yEase;
        tween._yEase = tween._ease;
        tween._ease = yoyoEase;
    }
    tween._from = !tl && !!vars.runBackwards; //nested timelines should never run backwards - the backwards-ness is in the child tweens.
    if (!tl || keyframes && !vars.stagger) {
        //if there's an internal timeline, skip all the parsing because we passed that task down the chain.
        harness = targets[0] ? _getCache(targets[0]).harness : 0;
        harnessVars = harness && vars[harness.prop]; //someone may need to specify CSS-specific values AND non-CSS values, like if the element has an "x" property plus it's a standard DOM element. We allow people to distinguish by wrapping plugin-specific stuff in a css:{} object for example.
        cleanVars = _copyExcluding(vars, _reservedProps);
        if (prevStartAt) {
            prevStartAt._zTime < 0 && prevStartAt.progress(1); // in case it's a lazy startAt that hasn't rendered yet.
            time < 0 && runBackwards && immediateRender && !autoRevert ? prevStartAt.render(-1, true) : prevStartAt.revert(runBackwards && dur ? _revertConfigNoKill : _startAtRevertConfig); // if it's a "startAt" (not "from()" or runBackwards: true), we only need to do a shallow revert (keep transforms cached in CSSPlugin)
            // don't just _removeFromParent(prevStartAt.render(-1, true)) because that'll leave inline styles. We're creating a new _startAt for "startAt" tweens that re-capture things to ensure that if the pre-tween values changed since the tween was created, they're recorded.
            prevStartAt._lazy = 0;
        }
        if (startAt) {
            _removeFromParent(tween._startAt = Tween.set(targets, _setDefaults({
                data: "isStart",
                overwrite: false,
                parent: parent,
                immediateRender: true,
                lazy: !prevStartAt && _isNotFalse(lazy),
                startAt: null,
                delay: 0,
                onUpdate: onUpdate && function() {
                    return _callback(tween, "onUpdate");
                },
                stagger: 0
            }, startAt))); //copy the properties/values into a new object to avoid collisions, like var to = {x:0}, from = {x:500}; timeline.fromTo(e, from, to).fromTo(e, to, from);
            tween._startAt._dp = 0; // don't allow it to get put back into root timeline! Like when revert() is called and totalTime() gets set.
            tween._startAt._sat = tween; // used in globalTime(). _sat stands for _startAtTween
            time < 0 && (_reverting || !immediateRender && !autoRevert) && tween._startAt.revert(_revertConfigNoKill); // rare edge case, like if a render is forced in the negative direction of a non-initted tween.
            if (immediateRender) {
                if (dur && time <= 0 && tTime <= 0) {
                    // check tTime here because in the case of a yoyo tween whose playhead gets pushed to the end like tween.progress(1), we should allow it through so that the onComplete gets fired properly.
                    time && (tween._zTime = time);
                    return; //we skip initialization here so that overwriting doesn't occur until the tween actually begins. Otherwise, if you create several immediateRender:true tweens of the same target/properties to drop into a Timeline, the last one created would overwrite the first ones because they didn't get placed into the timeline yet before the first render occurs and kicks in overwriting.
                }
            }
        } else if (runBackwards && dur) //from() tweens must be handled uniquely: their beginning values must be rendered but we don't want overwriting to occur yet (when time is still 0). Wait until the tween actually begins before doing all the routines like overwriting. At that time, we should render at the END of the tween to ensure that things initialize correctly (remember, from() tweens go backwards)
        {
            if (!prevStartAt) {
                time && (immediateRender = false); //in rare cases (like if a from() tween runs and then is invalidate()-ed), immediateRender could be true but the initial forced-render gets skipped, so there's no need to force the render in this context when the _time is greater than 0
                p = _setDefaults({
                    overwrite: false,
                    data: "isFromStart",
                    //we tag the tween with as "isFromStart" so that if [inside a plugin] we need to only do something at the very END of a tween, we have a way of identifying this tween as merely the one that's setting the beginning values for a "from()" tween. For example, clearProps in CSSPlugin should only get applied at the very END of a tween and without this tag, from(...{height:100, clearProps:"height", delay:1}) would wipe the height at the beginning of the tween and after 1 second, it'd kick back in.
                    lazy: immediateRender && !prevStartAt && _isNotFalse(lazy),
                    immediateRender: immediateRender,
                    //zero-duration tweens render immediately by default, but if we're not specifically instructed to render this tween immediately, we should skip this and merely _init() to record the starting values (rendering them immediately would push them to completion which is wasteful in that case - we'd have to render(-1) immediately after)
                    stagger: 0,
                    parent: parent //ensures that nested tweens that had a stagger are handled properly, like gsap.from(".class", {y: gsap.utils.wrap([-100,100]), stagger: 0.5})
                }, cleanVars);
                harnessVars && (p[harness.prop] = harnessVars); // in case someone does something like .from(..., {css:{}})
                _removeFromParent(tween._startAt = Tween.set(targets, p));
                tween._startAt._dp = 0; // don't allow it to get put back into root timeline!
                tween._startAt._sat = tween; // used in globalTime()
                time < 0 && (_reverting ? tween._startAt.revert(_revertConfigNoKill) : tween._startAt.render(-1, true));
                tween._zTime = time;
                if (!immediateRender) _initTween(tween._startAt, _tinyNum, _tinyNum); //ensures that the initial values are recorded
                else if (!time) return;
            }
        }
        tween._pt = tween._ptCache = 0;
        lazy = dur && _isNotFalse(lazy) || lazy && !dur;
        for(i = 0; i < targets.length; i++){
            target = targets[i];
            gsData = target._gsap || _harness(targets)[i]._gsap;
            tween._ptLookup[i] = ptLookup = {};
            _lazyLookup[gsData.id] && _lazyTweens.length && _lazyRender(); //if other tweens of the same target have recently initted but haven't rendered yet, we've got to force the render so that the starting values are correct (imagine populating a timeline with a bunch of sequential tweens and then jumping to the end)
            index = fullTargets === targets ? i : fullTargets.indexOf(target);
            if (harness && (plugin = new harness()).init(target, harnessVars || cleanVars, tween, index, fullTargets) !== false) {
                tween._pt = pt = new PropTween(tween._pt, target, plugin.name, 0, 1, plugin.render, plugin, 0, plugin.priority);
                plugin._props.forEach(function(name) {
                    ptLookup[name] = pt;
                });
                plugin.priority && (hasPriority = 1);
            }
            if (!harness || harnessVars) {
                for(p in cleanVars)if (_plugins[p] && (plugin = _checkPlugin(p, cleanVars, tween, index, target, fullTargets))) plugin.priority && (hasPriority = 1);
                else ptLookup[p] = pt = _addPropTween.call(tween, target, p, "get", cleanVars[p], index, fullTargets, 0, vars.stringFilter);
            }
            tween._op && tween._op[i] && tween.kill(target, tween._op[i]);
            if (autoOverwrite && tween._pt) {
                _overwritingTween = tween;
                _globalTimeline.killTweensOf(target, ptLookup, tween.globalTime(time)); // make sure the overwriting doesn't overwrite THIS tween!!!
                overwritten = !tween.parent;
                _overwritingTween = 0;
            }
            tween._pt && lazy && (_lazyLookup[gsData.id] = 1);
        }
        hasPriority && _sortPropTweensByPriority(tween);
        tween._onInit && tween._onInit(tween); //plugins like RoundProps must wait until ALL of the PropTweens are instantiated. In the plugin's init() function, it sets the _onInit on the tween instance. May not be pretty/intuitive, but it's fast and keeps file size down.
    }
    tween._onUpdate = onUpdate;
    tween._initted = (!tween._op || tween._pt) && !overwritten; // if overwrittenProps resulted in the entire tween being killed, do NOT flag it as initted or else it may render for one tick.
    keyframes && time <= 0 && tl.render(_bigNum, true, true); // if there's a 0% keyframe, it'll render in the "before" state for any staggered/delayed animations thus when the following tween initializes, it'll use the "before" state instead of the "after" state as the initial values.
}, _updatePropTweens = function _updatePropTweens(tween, property, value, start, startIsRelative, ratio, time, skipRecursion) {
    var ptCache = (tween._pt && tween._ptCache || (tween._ptCache = {}))[property], pt, rootPT, lookup, i;
    if (!ptCache) {
        ptCache = tween._ptCache[property] = [];
        lookup = tween._ptLookup;
        i = tween._targets.length;
        while(i--){
            pt = lookup[i][property];
            if (pt && pt.d && pt.d._pt) {
                // it's a plugin, so find the nested PropTween
                pt = pt.d._pt;
                while(pt && pt.p !== property && pt.fp !== property)// "fp" is functionParam for things like setting CSS variables which require .setProperty("--var-name", value)
                pt = pt._next;
            }
            if (!pt) {
                // there is no PropTween associated with that property, so we must FORCE one to be created and ditch out of this
                // if the tween has other properties that already rendered at new positions, we'd normally have to rewind to put them back like tween.render(0, true) before forcing an _initTween(), but that can create another edge case like tweening a timeline's progress would trigger onUpdates to fire which could move other things around. It's better to just inform users that .resetTo() should ONLY be used for tweens that already have that property. For example, you can't gsap.to(...{ y: 0 }) and then tween.restTo("x", 200) for example.
                _forceAllPropTweens = 1; // otherwise, when we _addPropTween() and it finds no change between the start and end values, it skips creating a PropTween (for efficiency...why tween when there's no difference?) but in this case we NEED that PropTween created so we can edit it.
                tween.vars[property] = "+=0";
                _initTween(tween, time);
                _forceAllPropTweens = 0;
                return skipRecursion ? _warn(property + " not eligible for reset") : 1; // if someone tries to do a quickTo() on a special property like borderRadius which must get split into 4 different properties, that's not eligible for .resetTo().
            }
            ptCache.push(pt);
        }
    }
    i = ptCache.length;
    while(i--){
        rootPT = ptCache[i];
        pt = rootPT._pt || rootPT; // complex values may have nested PropTweens. We only accommodate the FIRST value.
        pt.s = (start || start === 0) && !startIsRelative ? start : pt.s + (start || 0) + ratio * pt.c;
        pt.c = value - pt.s;
        rootPT.e && (rootPT.e = _round(value) + getUnit(rootPT.e)); // mainly for CSSPlugin (end value)
        rootPT.b && (rootPT.b = pt.s + getUnit(rootPT.b)); // (beginning value)
    }
}, _addAliasesToVars = function _addAliasesToVars(targets, vars) {
    var harness = targets[0] ? _getCache(targets[0]).harness : 0, propertyAliases = harness && harness.aliases, copy, p, i, aliases;
    if (!propertyAliases) return vars;
    copy = _merge({}, vars);
    for(p in propertyAliases)if (p in copy) {
        aliases = propertyAliases[p].split(",");
        i = aliases.length;
        while(i--)copy[aliases[i]] = copy[p];
    }
    return copy;
}, // parses multiple formats, like {"0%": {x: 100}, {"50%": {x: -20}} and { x: {"0%": 100, "50%": -20} }, and an "ease" can be set on any object. We populate an "allProps" object with an Array for each property, like {x: [{}, {}], y:[{}, {}]} with data for each property tween. The objects have a "t" (time), "v", (value), and "e" (ease) property. This allows us to piece together a timeline later.
_parseKeyframe = function _parseKeyframe(prop, obj, allProps, easeEach) {
    var ease = obj.ease || easeEach || "power1.inOut", p, a;
    if (_isArray(obj)) {
        a = allProps[prop] || (allProps[prop] = []); // t = time (out of 100), v = value, e = ease
        obj.forEach(function(value, i) {
            return a.push({
                t: i / (obj.length - 1) * 100,
                v: value,
                e: ease
            });
        });
    } else for(p in obj){
        a = allProps[p] || (allProps[p] = []);
        p === "ease" || a.push({
            t: parseFloat(prop),
            v: obj[p],
            e: ease
        });
    }
}, _parseFuncOrString = function _parseFuncOrString(value, tween, i, target, targets) {
    return _isFunction(value) ? value.call(tween, i, target, targets) : _isString(value) && ~value.indexOf("random(") ? _replaceRandom(value) : value;
}, _staggerTweenProps = _callbackNames + "repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert", _staggerPropsToSkip = {};
_forEachName(_staggerTweenProps + ",id,stagger,delay,duration,paused,scrollTrigger", function(name) {
    return _staggerPropsToSkip[name] = 1;
});
var Tween = /*#__PURE__*/ function(_Animation2) {
    _inheritsLoose(Tween, _Animation2);
    function Tween(targets, vars, position, skipInherit) {
        var _this3;
        if (typeof vars === "number") {
            position.duration = vars;
            vars = position;
            position = null;
        }
        _this3 = _Animation2.call(this, skipInherit ? vars : _inheritDefaults(vars)) || this;
        var _this3$vars = _this3.vars, duration = _this3$vars.duration, delay = _this3$vars.delay, immediateRender = _this3$vars.immediateRender, stagger = _this3$vars.stagger, overwrite = _this3$vars.overwrite, keyframes = _this3$vars.keyframes, defaults = _this3$vars.defaults, scrollTrigger = _this3$vars.scrollTrigger, yoyoEase = _this3$vars.yoyoEase, parent = vars.parent || _globalTimeline, parsedTargets = (_isArray(targets) || _isTypedArray(targets) ? _isNumber(targets[0]) : "length" in vars) ? [
            targets
        ] : toArray(targets), tl, i, copy, l, p, curTarget, staggerFunc, staggerVarsToMerge;
        _this3._targets = parsedTargets.length ? _harness(parsedTargets) : _warn("GSAP target " + targets + " not found. https://gsap.com", !_config.nullTargetWarn) || [];
        _this3._ptLookup = []; //PropTween lookup. An array containing an object for each target, having keys for each tweening property
        _this3._overwrite = overwrite;
        if (keyframes || stagger || _isFuncOrString(duration) || _isFuncOrString(delay)) {
            vars = _this3.vars;
            tl = _this3.timeline = new Timeline({
                data: "nested",
                defaults: defaults || {},
                targets: parent && parent.data === "nested" ? parent.vars.targets : parsedTargets
            }); // we need to store the targets because for staggers and keyframes, we end up creating an individual tween for each but function-based values need to know the index and the whole Array of targets.
            tl.kill();
            tl.parent = tl._dp = _assertThisInitialized(_this3);
            tl._start = 0;
            if (stagger || _isFuncOrString(duration) || _isFuncOrString(delay)) {
                l = parsedTargets.length;
                staggerFunc = stagger && distribute(stagger);
                if (_isObject(stagger)) {
                    //users can pass in callbacks like onStart/onComplete in the stagger object. These should fire with each individual tween.
                    for(p in stagger)if (~_staggerTweenProps.indexOf(p)) {
                        staggerVarsToMerge || (staggerVarsToMerge = {});
                        staggerVarsToMerge[p] = stagger[p];
                    }
                }
                for(i = 0; i < l; i++){
                    copy = _copyExcluding(vars, _staggerPropsToSkip);
                    copy.stagger = 0;
                    yoyoEase && (copy.yoyoEase = yoyoEase);
                    staggerVarsToMerge && _merge(copy, staggerVarsToMerge);
                    curTarget = parsedTargets[i]; //don't just copy duration or delay because if they're a string or function, we'd end up in an infinite loop because _isFuncOrString() would evaluate as true in the child tweens, entering this loop, etc. So we parse the value straight from vars and default to 0.
                    copy.duration = +_parseFuncOrString(duration, _assertThisInitialized(_this3), i, curTarget, parsedTargets);
                    copy.delay = (+_parseFuncOrString(delay, _assertThisInitialized(_this3), i, curTarget, parsedTargets) || 0) - _this3._delay;
                    if (!stagger && l === 1 && copy.delay) {
                        // if someone does delay:"random(1, 5)", repeat:-1, for example, the delay shouldn't be inside the repeat.
                        _this3._delay = delay = copy.delay;
                        _this3._start += delay;
                        copy.delay = 0;
                    }
                    tl.to(curTarget, copy, staggerFunc ? staggerFunc(i, curTarget, parsedTargets) : 0);
                    tl._ease = _easeMap.none;
                }
                tl.duration() ? duration = delay = 0 : _this3.timeline = 0; // if the timeline's duration is 0, we don't need a timeline internally!
            } else if (keyframes) {
                _inheritDefaults(_setDefaults(tl.vars.defaults, {
                    ease: "none"
                }));
                tl._ease = _parseEase(keyframes.ease || vars.ease || "none");
                var time = 0, a, kf, v;
                if (_isArray(keyframes)) {
                    keyframes.forEach(function(frame) {
                        return tl.to(parsedTargets, frame, ">");
                    });
                    tl.duration(); // to ensure tl._dur is cached because we tap into it for performance purposes in the render() method.
                } else {
                    copy = {};
                    for(p in keyframes)p === "ease" || p === "easeEach" || _parseKeyframe(p, keyframes[p], copy, keyframes.easeEach);
                    for(p in copy){
                        a = copy[p].sort(function(a, b) {
                            return a.t - b.t;
                        });
                        time = 0;
                        for(i = 0; i < a.length; i++){
                            kf = a[i];
                            v = {
                                ease: kf.e,
                                duration: (kf.t - (i ? a[i - 1].t : 0)) / 100 * duration
                            };
                            v[p] = kf.v;
                            tl.to(parsedTargets, v, time);
                            time += v.duration;
                        }
                    }
                    tl.duration() < duration && tl.to({}, {
                        duration: duration - tl.duration()
                    }); // in case keyframes didn't go to 100%
                }
            }
            duration || _this3.duration(duration = tl.duration());
        } else _this3.timeline = 0; //speed optimization, faster lookups (no going up the prototype chain)
        if (overwrite === true && !_suppressOverwrites) {
            _overwritingTween = _assertThisInitialized(_this3);
            _globalTimeline.killTweensOf(parsedTargets);
            _overwritingTween = 0;
        }
        _addToTimeline(parent, _assertThisInitialized(_this3), position);
        vars.reversed && _this3.reverse();
        vars.paused && _this3.paused(true);
        if (immediateRender || !duration && !keyframes && _this3._start === _roundPrecise(parent._time) && _isNotFalse(immediateRender) && _hasNoPausedAncestors(_assertThisInitialized(_this3)) && parent.data !== "nested") {
            _this3._tTime = -_tinyNum; //forces a render without having to set the render() "force" parameter to true because we want to allow lazying by default (using the "force" parameter always forces an immediate full render)
            _this3.render(Math.max(0, -delay) || 0); //in case delay is negative
        }
        scrollTrigger && _scrollTrigger(_assertThisInitialized(_this3), scrollTrigger);
        return _this3;
    }
    var _proto3 = Tween.prototype;
    _proto3.render = function render(totalTime, suppressEvents, force) {
        var prevTime = this._time, tDur = this._tDur, dur = this._dur, isNegative = totalTime < 0, tTime = totalTime > tDur - _tinyNum && !isNegative ? tDur : totalTime < _tinyNum ? 0 : totalTime, time, pt, iteration, cycleDuration, prevIteration, isYoyo, ratio, timeline, yoyoEase;
        if (!dur) _renderZeroDurationTween(this, totalTime, suppressEvents, force);
        else if (tTime !== this._tTime || !totalTime || force || !this._initted && this._tTime || this._startAt && this._zTime < 0 !== isNegative) {
            //this senses if we're crossing over the start time, in which case we must record _zTime and force the render, but we do it in this lengthy conditional way for performance reasons (usually we can skip the calculations): this._initted && (this._zTime < 0) !== (totalTime < 0)
            time = tTime;
            timeline = this.timeline;
            if (this._repeat) {
                //adjust the time for repeats and yoyos
                cycleDuration = dur + this._rDelay;
                if (this._repeat < -1 && isNegative) return this.totalTime(cycleDuration * 100 + totalTime, suppressEvents, force);
                time = _roundPrecise(tTime % cycleDuration); //round to avoid floating point errors. (4 % 0.8 should be 0 but some browsers report it as 0.79999999!)
                if (tTime === tDur) {
                    // the tDur === tTime is for edge cases where there's a lengthy decimal on the duration and it may reach the very end but the time is rendered as not-quite-there (remember, tDur is rounded to 4 decimals whereas dur isn't)
                    iteration = this._repeat;
                    time = dur;
                } else {
                    iteration = ~~(tTime / cycleDuration);
                    if (iteration && iteration === _roundPrecise(tTime / cycleDuration)) {
                        time = dur;
                        iteration--;
                    }
                    time > dur && (time = dur);
                }
                isYoyo = this._yoyo && iteration & 1;
                if (isYoyo) {
                    yoyoEase = this._yEase;
                    time = dur - time;
                }
                prevIteration = _animationCycle(this._tTime, cycleDuration);
                if (time === prevTime && !force && this._initted && iteration === prevIteration) {
                    //could be during the repeatDelay part. No need to render and fire callbacks.
                    this._tTime = tTime;
                    return this;
                }
                if (iteration !== prevIteration) {
                    timeline && this._yEase && _propagateYoyoEase(timeline, isYoyo); //repeatRefresh functionality
                    if (this.vars.repeatRefresh && !isYoyo && !this._lock && this._time !== cycleDuration && this._initted) {
                        // this._time will === cycleDuration when we render at EXACTLY the end of an iteration. Without this condition, it'd often do the repeatRefresh render TWICE (again on the very next tick).
                        this._lock = force = 1; //force, otherwise if lazy is true, the _attemptInitTween() will return and we'll jump out and get caught bouncing on each tick.
                        this.render(_roundPrecise(cycleDuration * iteration), true).invalidate()._lock = 0;
                    }
                }
            }
            if (!this._initted) {
                if (_attemptInitTween(this, isNegative ? totalTime : time, force, suppressEvents, tTime)) {
                    this._tTime = 0; // in constructor if immediateRender is true, we set _tTime to -_tinyNum to have the playhead cross the starting point but we can't leave _tTime as a negative number.
                    return this;
                }
                if (prevTime !== this._time && !(force && this.vars.repeatRefresh && iteration !== prevIteration)) // rare edge case - during initialization, an onUpdate in the _startAt (.fromTo()) might force this tween to render at a different spot in which case we should ditch this render() call so that it doesn't revert the values. But we also don't want to dump if we're doing a repeatRefresh render!
                return this;
                if (dur !== this._dur) // while initting, a plugin like InertiaPlugin might alter the duration, so rerun from the start to ensure everything renders as it should.
                return this.render(totalTime, suppressEvents, force);
            }
            this._tTime = tTime;
            this._time = time;
            if (!this._act && this._ts) {
                this._act = 1; //as long as it's not paused, force it to be active so that if the user renders independent of the parent timeline, it'll be forced to re-render on the next tick.
                this._lazy = 0;
            }
            this.ratio = ratio = (yoyoEase || this._ease)(time / dur);
            if (this._from) this.ratio = ratio = 1 - ratio;
            if (time && !prevTime && !suppressEvents && !iteration) {
                _callback(this, "onStart");
                if (this._tTime !== tTime) // in case the onStart triggered a render at a different spot, eject. Like if someone did animation.pause(0.5) or something inside the onStart.
                return this;
            }
            pt = this._pt;
            while(pt){
                pt.r(ratio, pt.d);
                pt = pt._next;
            }
            timeline && timeline.render(totalTime < 0 ? totalTime : timeline._dur * timeline._ease(time / this._dur), suppressEvents, force) || this._startAt && (this._zTime = totalTime);
            if (this._onUpdate && !suppressEvents) {
                isNegative && _rewindStartAt(this, totalTime, suppressEvents, force); //note: for performance reasons, we tuck this conditional logic inside less traveled areas (most tweens don't have an onUpdate). We'd just have it at the end before the onComplete, but the values should be updated before any onUpdate is called, so we ALSO put it here and then if it's not called, we do so later near the onComplete.
                _callback(this, "onUpdate");
            }
            this._repeat && iteration !== prevIteration && this.vars.onRepeat && !suppressEvents && this.parent && _callback(this, "onRepeat");
            if ((tTime === this._tDur || !tTime) && this._tTime === tTime) {
                isNegative && !this._onUpdate && _rewindStartAt(this, totalTime, true, true);
                (totalTime || !dur) && (tTime === this._tDur && this._ts > 0 || !tTime && this._ts < 0) && _removeFromParent(this, 1); // don't remove if we're rendering at exactly a time of 0, as there could be autoRevert values that should get set on the next tick (if the playhead goes backward beyond the startTime, negative totalTime). Don't remove if the timeline is reversed and the playhead isn't at 0, otherwise tl.progress(1).reverse() won't work. Only remove if the playhead is at the end and timeScale is positive, or if the playhead is at 0 and the timeScale is negative.
                if (!suppressEvents && !(isNegative && !prevTime) && (tTime || prevTime || isYoyo)) {
                    // if prevTime and tTime are zero, we shouldn't fire the onReverseComplete. This could happen if you gsap.to(... {paused:true}).play();
                    _callback(this, tTime === tDur ? "onComplete" : "onReverseComplete", true);
                    this._prom && !(tTime < tDur && this.timeScale() > 0) && this._prom();
                }
            }
        }
        return this;
    };
    _proto3.targets = function targets() {
        return this._targets;
    };
    _proto3.invalidate = function invalidate(soft) {
        // "soft" gives us a way to clear out everything EXCEPT the recorded pre-"from" portion of from() tweens. Otherwise, for example, if you tween.progress(1).render(0, true true).invalidate(), the "from" values would persist and then on the next render, the from() tweens would initialize and the current value would match the "from" values, thus animate from the same value to the same value (no animation). We tap into this in ScrollTrigger's refresh() where we must push a tween to completion and then back again but honor its init state in case the tween is dependent on another tween further up on the page.
        (!soft || !this.vars.runBackwards) && (this._startAt = 0);
        this._pt = this._op = this._onUpdate = this._lazy = this.ratio = 0;
        this._ptLookup = [];
        this.timeline && this.timeline.invalidate(soft);
        return _Animation2.prototype.invalidate.call(this, soft);
    };
    _proto3.resetTo = function resetTo(property, value, start, startIsRelative, skipRecursion) {
        _tickerActive || _ticker.wake();
        this._ts || this.play();
        var time = Math.min(this._dur, (this._dp._time - this._start) * this._ts), ratio;
        this._initted || _initTween(this, time);
        ratio = this._ease(time / this._dur); // don't just get tween.ratio because it may not have rendered yet.
        // possible future addition to allow an object with multiple values to update, like tween.resetTo({x: 100, y: 200}); At this point, it doesn't seem worth the added kb given the fact that most users will likely opt for the convenient gsap.quickTo() way of interacting with this method.
        // if (_isObject(property)) { // performance optimization
        // 	for (p in property) {
        // 		if (_updatePropTweens(this, p, property[p], value ? value[p] : null, start, ratio, time)) {
        // 			return this.resetTo(property, value, start, startIsRelative); // if a PropTween wasn't found for the property, it'll get forced with a re-initialization so we need to jump out and start over again.
        // 		}
        // 	}
        // } else {
        if (_updatePropTweens(this, property, value, start, startIsRelative, ratio, time, skipRecursion)) return this.resetTo(property, value, start, startIsRelative, 1); // if a PropTween wasn't found for the property, it'll get forced with a re-initialization so we need to jump out and start over again.
         //}
        _alignPlayhead(this, 0);
        this.parent || _addLinkedListItem(this._dp, this, "_first", "_last", this._dp._sort ? "_start" : 0);
        return this.render(0);
    };
    _proto3.kill = function kill(targets, vars) {
        if (vars === void 0) vars = "all";
        if (!targets && (!vars || vars === "all")) {
            this._lazy = this._pt = 0;
            return this.parent ? _interrupt(this) : this;
        }
        if (this.timeline) {
            var tDur = this.timeline.totalDuration();
            this.timeline.killTweensOf(targets, vars, _overwritingTween && _overwritingTween.vars.overwrite !== true)._first || _interrupt(this); // if nothing is left tweening, interrupt.
            this.parent && tDur !== this.timeline.totalDuration() && _setDuration(this, this._dur * this.timeline._tDur / tDur, 0, 1); // if a nested tween is killed that changes the duration, it should affect this tween's duration. We must use the ratio, though, because sometimes the internal timeline is stretched like for keyframes where they don't all add up to whatever the parent tween's duration was set to.
            return this;
        }
        var parsedTargets = this._targets, killingTargets = targets ? toArray(targets) : parsedTargets, propTweenLookup = this._ptLookup, firstPT = this._pt, overwrittenProps, curLookup, curOverwriteProps, props, p, pt, i;
        if ((!vars || vars === "all") && _arraysMatch(parsedTargets, killingTargets)) {
            vars === "all" && (this._pt = 0);
            return _interrupt(this);
        }
        overwrittenProps = this._op = this._op || [];
        if (vars !== "all") {
            //so people can pass in a comma-delimited list of property names
            if (_isString(vars)) {
                p = {};
                _forEachName(vars, function(name) {
                    return p[name] = 1;
                });
                vars = p;
            }
            vars = _addAliasesToVars(parsedTargets, vars);
        }
        i = parsedTargets.length;
        while(i--)if (~killingTargets.indexOf(parsedTargets[i])) {
            curLookup = propTweenLookup[i];
            if (vars === "all") {
                overwrittenProps[i] = vars;
                props = curLookup;
                curOverwriteProps = {};
            } else {
                curOverwriteProps = overwrittenProps[i] = overwrittenProps[i] || {};
                props = vars;
            }
            for(p in props){
                pt = curLookup && curLookup[p];
                if (pt) {
                    if (!("kill" in pt.d) || pt.d.kill(p) === true) _removeLinkedListItem(this, pt, "_pt");
                    delete curLookup[p];
                }
                if (curOverwriteProps !== "all") curOverwriteProps[p] = 1;
            }
        }
        this._initted && !this._pt && firstPT && _interrupt(this); //if all tweening properties are killed, kill the tween. Without this line, if there's a tween with multiple targets and then you killTweensOf() each target individually, the tween would technically still remain active and fire its onComplete even though there aren't any more properties tweening.
        return this;
    };
    Tween.to = function to(targets, vars) {
        return new Tween(targets, vars, arguments[2]);
    };
    Tween.from = function from(targets, vars) {
        return _createTweenType(1, arguments);
    };
    Tween.delayedCall = function delayedCall(delay, callback, params, scope) {
        return new Tween(callback, 0, {
            immediateRender: false,
            lazy: false,
            overwrite: false,
            delay: delay,
            onComplete: callback,
            onReverseComplete: callback,
            onCompleteParams: params,
            onReverseCompleteParams: params,
            callbackScope: scope
        }); // we must use onReverseComplete too for things like timeline.add(() => {...}) which should be triggered in BOTH directions (forward and reverse)
    };
    Tween.fromTo = function fromTo(targets, fromVars, toVars) {
        return _createTweenType(2, arguments);
    };
    Tween.set = function set(targets, vars) {
        vars.duration = 0;
        vars.repeatDelay || (vars.repeat = 0);
        return new Tween(targets, vars);
    };
    Tween.killTweensOf = function killTweensOf(targets, props, onlyActive) {
        return _globalTimeline.killTweensOf(targets, props, onlyActive);
    };
    return Tween;
}(Animation);
_setDefaults(Tween.prototype, {
    _targets: [],
    _lazy: 0,
    _startAt: 0,
    _op: 0,
    _onInit: 0
}); //add the pertinent timeline methods to Tween instances so that users can chain conveniently and create a timeline automatically. (removed due to concerns that it'd ultimately add to more confusion especially for beginners)
// _forEachName("to,from,fromTo,set,call,add,addLabel,addPause", name => {
// 	Tween.prototype[name] = function() {
// 		let tl = new Timeline();
// 		return _addToTimeline(tl, this)[name].apply(tl, toArray(arguments));
// 	}
// });
//for backward compatibility. Leverage the timeline calls.
_forEachName("staggerTo,staggerFrom,staggerFromTo", function(name) {
    Tween[name] = function() {
        var tl = new Timeline(), params = _slice.call(arguments, 0);
        params.splice(name === "staggerFromTo" ? 5 : 4, 0, 0);
        return tl[name].apply(tl, params);
    };
});
/*
 * --------------------------------------------------------------------------------------
 * PROPTWEEN
 * --------------------------------------------------------------------------------------
 */ var _setterPlain = function _setterPlain(target, property, value) {
    return target[property] = value;
}, _setterFunc = function _setterFunc(target, property, value) {
    return target[property](value);
}, _setterFuncWithParam = function _setterFuncWithParam(target, property, value, data) {
    return target[property](data.fp, value);
}, _setterAttribute = function _setterAttribute(target, property, value) {
    return target.setAttribute(property, value);
}, _getSetter = function _getSetter(target, property) {
    return _isFunction(target[property]) ? _setterFunc : _isUndefined(target[property]) && target.setAttribute ? _setterAttribute : _setterPlain;
}, _renderPlain = function _renderPlain(ratio, data) {
    return data.set(data.t, data.p, Math.round((data.s + data.c * ratio) * 1000000) / 1000000, data);
}, _renderBoolean = function _renderBoolean(ratio, data) {
    return data.set(data.t, data.p, !!(data.s + data.c * ratio), data);
}, _renderComplexString = function _renderComplexString(ratio, data) {
    var pt = data._pt, s = "";
    if (!ratio && data.b) //b = beginning string
    s = data.b;
    else if (ratio === 1 && data.e) //e = ending string
    s = data.e;
    else {
        while(pt){
            s = pt.p + (pt.m ? pt.m(pt.s + pt.c * ratio) : Math.round((pt.s + pt.c * ratio) * 10000) / 10000) + s; //we use the "p" property for the text inbetween (like a suffix). And in the context of a complex string, the modifier (m) is typically just Math.round(), like for RGB colors.
            pt = pt._next;
        }
        s += data.c; //we use the "c" of the PropTween to store the final chunk of non-numeric text.
    }
    data.set(data.t, data.p, s, data);
}, _renderPropTweens = function _renderPropTweens(ratio, data) {
    var pt = data._pt;
    while(pt){
        pt.r(ratio, pt.d);
        pt = pt._next;
    }
}, _addPluginModifier = function _addPluginModifier(modifier, tween, target, property) {
    var pt = this._pt, next;
    while(pt){
        next = pt._next;
        pt.p === property && pt.modifier(modifier, tween, target);
        pt = next;
    }
}, _killPropTweensOf = function _killPropTweensOf(property) {
    var pt = this._pt, hasNonDependentRemaining, next;
    while(pt){
        next = pt._next;
        if (pt.p === property && !pt.op || pt.op === property) _removeLinkedListItem(this, pt, "_pt");
        else if (!pt.dep) hasNonDependentRemaining = 1;
        pt = next;
    }
    return !hasNonDependentRemaining;
}, _setterWithModifier = function _setterWithModifier(target, property, value, data) {
    data.mSet(target, property, data.m.call(data.tween, value, data.mt), data);
}, _sortPropTweensByPriority = function _sortPropTweensByPriority(parent) {
    var pt = parent._pt, next, pt2, first, last; //sorts the PropTween linked list in order of priority because some plugins need to do their work after ALL of the PropTweens were created (like RoundPropsPlugin and ModifiersPlugin)
    while(pt){
        next = pt._next;
        pt2 = first;
        while(pt2 && pt2.pr > pt.pr)pt2 = pt2._next;
        if (pt._prev = pt2 ? pt2._prev : last) pt._prev._next = pt;
        else first = pt;
        if (pt._next = pt2) pt2._prev = pt;
        else last = pt;
        pt = next;
    }
    parent._pt = first;
}; //PropTween key: t = target, p = prop, r = renderer, d = data, s = start, c = change, op = overwriteProperty (ONLY populated when it's different than p), pr = priority, _next/_prev for the linked list siblings, set = setter, m = modifier, mSet = modifierSetter (the original setter, before a modifier was added)
var PropTween = /*#__PURE__*/ function() {
    function PropTween(next, target, prop, start, change, renderer, data, setter, priority) {
        this.t = target;
        this.s = start;
        this.c = change;
        this.p = prop;
        this.r = renderer || _renderPlain;
        this.d = data || this;
        this.set = setter || _setterPlain;
        this.pr = priority || 0;
        this._next = next;
        if (next) next._prev = this;
    }
    var _proto4 = PropTween.prototype;
    _proto4.modifier = function modifier(func, tween, target) {
        this.mSet = this.mSet || this.set; //in case it was already set (a PropTween can only have one modifier)
        this.set = _setterWithModifier;
        this.m = func;
        this.mt = target; //modifier target
        this.tween = tween;
    };
    return PropTween;
}(); //Initialization tasks
_forEachName(_callbackNames + "parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger", function(name) {
    return _reservedProps[name] = 1;
});
_globals.TweenMax = _globals.TweenLite = Tween;
_globals.TimelineLite = _globals.TimelineMax = Timeline;
_globalTimeline = new Timeline({
    sortChildren: false,
    defaults: _defaults,
    autoRemoveChildren: true,
    id: "root",
    smoothChildTiming: true
});
_config.stringFilter = _colorStringFilter;
var _media = [], _listeners = {}, _emptyArray = [], _lastMediaTime = 0, _contextID = 0, _dispatch = function _dispatch(type) {
    return (_listeners[type] || _emptyArray).map(function(f) {
        return f();
    });
}, _onMediaChange = function _onMediaChange() {
    var time = Date.now(), matches = [];
    if (time - _lastMediaTime > 2) {
        _dispatch("matchMediaInit");
        _media.forEach(function(c) {
            var queries = c.queries, conditions = c.conditions, match, p, anyMatch, toggled;
            for(p in queries){
                match = _win.matchMedia(queries[p]).matches; // Firefox doesn't update the "matches" property of the MediaQueryList object correctly - it only does so as it calls its change handler - so we must re-create a media query here to ensure it's accurate.
                match && (anyMatch = 1);
                if (match !== conditions[p]) {
                    conditions[p] = match;
                    toggled = 1;
                }
            }
            if (toggled) {
                c.revert();
                anyMatch && matches.push(c);
            }
        });
        _dispatch("matchMediaRevert");
        matches.forEach(function(c) {
            return c.onMatch(c, function(func) {
                return c.add(null, func);
            });
        });
        _lastMediaTime = time;
        _dispatch("matchMedia");
    }
};
var Context = /*#__PURE__*/ function() {
    function Context(func, scope) {
        this.selector = scope && selector(scope);
        this.data = [];
        this._r = []; // returned/cleanup functions
        this.isReverted = false;
        this.id = _contextID++; // to work around issues that frameworks like Vue cause by making things into Proxies which make it impossible to do something like _media.indexOf(this) because "this" would no longer refer to the Context instance itself - it'd refer to a Proxy! We needed a way to identify the context uniquely
        func && this.add(func);
    }
    var _proto5 = Context.prototype;
    _proto5.add = function add(name, func, scope) {
        // possible future addition if we need the ability to add() an animation to a context and for whatever reason cannot create that animation inside of a context.add(() => {...}) function.
        // if (name && _isFunction(name.revert)) {
        // 	this.data.push(name);
        // 	return (name._ctx = this);
        // }
        if (_isFunction(name)) {
            scope = func;
            func = name;
            name = _isFunction;
        }
        var self = this, f = function f() {
            var prev = _context, prevSelector = self.selector, result;
            prev && prev !== self && prev.data.push(self);
            scope && (self.selector = selector(scope));
            _context = self;
            result = func.apply(self, arguments);
            _isFunction(result) && self._r.push(result);
            _context = prev;
            self.selector = prevSelector;
            self.isReverted = false;
            return result;
        };
        self.last = f;
        return name === _isFunction ? f(self, function(func) {
            return self.add(null, func);
        }) : name ? self[name] = f : f;
    };
    _proto5.ignore = function ignore(func) {
        var prev = _context;
        _context = null;
        func(this);
        _context = prev;
    };
    _proto5.getTweens = function getTweens() {
        var a = [];
        this.data.forEach(function(e) {
            return e instanceof Context ? a.push.apply(a, e.getTweens()) : e instanceof Tween && !(e.parent && e.parent.data === "nested") && a.push(e);
        });
        return a;
    };
    _proto5.clear = function clear() {
        this._r.length = this.data.length = 0;
    };
    _proto5.kill = function kill(revert, matchMedia) {
        var _this4 = this;
        if (revert) (function() {
            var tweens = _this4.getTweens(), i = _this4.data.length, t;
            while(i--){
                // Flip plugin tweens are very different in that they should actually be pushed to their end. The plugin replaces the timeline's .revert() method to do exactly that. But we also need to remove any of those nested tweens inside the flip timeline so that they don't get individually reverted.
                t = _this4.data[i];
                if (t.data === "isFlip") {
                    t.revert();
                    t.getChildren(true, true, false).forEach(function(tween) {
                        return tweens.splice(tweens.indexOf(tween), 1);
                    });
                }
            } // save as an object so that we can cache the globalTime for each tween to optimize performance during the sort
            tweens.map(function(t) {
                return {
                    g: t._dur || t._delay || t._sat && !t._sat.vars.immediateRender ? t.globalTime(0) : -Infinity,
                    t: t
                };
            }).sort(function(a, b) {
                return b.g - a.g || -Infinity;
            }).forEach(function(o) {
                return o.t.revert(revert);
            }); // note: all of the _startAt tweens should be reverted in reverse order that they were created, and they'll all have the same globalTime (-1) so the " || -1" in the sort keeps the order properly.
            i = _this4.data.length;
            while(i--){
                // make sure we loop backwards so that, for example, SplitTexts that were created later on the same element get reverted first
                t = _this4.data[i];
                if (t instanceof Timeline) {
                    if (t.data !== "nested") {
                        t.scrollTrigger && t.scrollTrigger.revert();
                        t.kill(); // don't revert() the timeline because that's duplicating efforts since we already reverted all the tweens
                    }
                } else !(t instanceof Tween) && t.revert && t.revert(revert);
            }
            _this4._r.forEach(function(f) {
                return f(revert, _this4);
            });
            _this4.isReverted = true;
        })();
        else this.data.forEach(function(e) {
            return e.kill && e.kill();
        });
        this.clear();
        if (matchMedia) {
            var i = _media.length;
            while(i--)// previously, we checked _media.indexOf(this), but some frameworks like Vue enforce Proxy objects that make it impossible to get the proper result that way, so we must use a unique ID number instead.
            _media[i].id === this.id && _media.splice(i, 1);
        }
    };
    _proto5.revert = function revert(config) {
        this.kill(config || {});
    };
    return Context;
}();
var MatchMedia = /*#__PURE__*/ function() {
    function MatchMedia(scope) {
        this.contexts = [];
        this.scope = scope;
        _context && _context.data.push(this);
    }
    var _proto6 = MatchMedia.prototype;
    _proto6.add = function add(conditions, func, scope) {
        _isObject(conditions) || (conditions = {
            matches: conditions
        });
        var context = new Context(0, scope || this.scope), cond = context.conditions = {}, mq, p, active;
        _context && !context.selector && (context.selector = _context.selector); // in case a context is created inside a context. Like a gsap.matchMedia() that's inside a scoped gsap.context()
        this.contexts.push(context);
        func = context.add("onMatch", func);
        context.queries = conditions;
        for(p in conditions)if (p === "all") active = 1;
        else {
            mq = _win.matchMedia(conditions[p]);
            if (mq) {
                _media.indexOf(context) < 0 && _media.push(context);
                (cond[p] = mq.matches) && (active = 1);
                mq.addListener ? mq.addListener(_onMediaChange) : mq.addEventListener("change", _onMediaChange);
            }
        }
        active && func(context, function(f) {
            return context.add(null, f);
        });
        return this;
    } // refresh() {
    ;
    _proto6.revert = function revert(config) {
        this.kill(config || {});
    };
    _proto6.kill = function kill(revert) {
        this.contexts.forEach(function(c) {
            return c.kill(revert, true);
        });
    };
    return MatchMedia;
}();
/*
 * --------------------------------------------------------------------------------------
 * GSAP
 * --------------------------------------------------------------------------------------
 */ var _gsap = {
    registerPlugin: function registerPlugin() {
        for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)args[_key2] = arguments[_key2];
        args.forEach(function(config) {
            return _createPlugin(config);
        });
    },
    timeline: function timeline(vars) {
        return new Timeline(vars);
    },
    getTweensOf: function getTweensOf(targets, onlyActive) {
        return _globalTimeline.getTweensOf(targets, onlyActive);
    },
    getProperty: function getProperty(target, property, unit, uncache) {
        _isString(target) && (target = toArray(target)[0]); //in case selector text or an array is passed in
        var getter = _getCache(target || {}).get, format = unit ? _passThrough : _numericIfPossible;
        unit === "native" && (unit = "");
        return !target ? target : !property ? function(property, unit, uncache) {
            return format((_plugins[property] && _plugins[property].get || getter)(target, property, unit, uncache));
        } : format((_plugins[property] && _plugins[property].get || getter)(target, property, unit, uncache));
    },
    quickSetter: function quickSetter(target, property, unit) {
        target = toArray(target);
        if (target.length > 1) {
            var setters = target.map(function(t) {
                return gsap.quickSetter(t, property, unit);
            }), l = setters.length;
            return function(value) {
                var i = l;
                while(i--)setters[i](value);
            };
        }
        target = target[0] || {};
        var Plugin = _plugins[property], cache = _getCache(target), p = cache.harness && (cache.harness.aliases || {})[property] || property, // in case it's an alias, like "rotate" for "rotation".
        setter = Plugin ? function(value) {
            var p = new Plugin();
            _quickTween._pt = 0;
            p.init(target, unit ? value + unit : value, _quickTween, 0, [
                target
            ]);
            p.render(1, p);
            _quickTween._pt && _renderPropTweens(1, _quickTween);
        } : cache.set(target, p);
        return Plugin ? setter : function(value) {
            return setter(target, p, unit ? value + unit : value, cache, 1);
        };
    },
    quickTo: function quickTo(target, property, vars) {
        var _merge2;
        var tween = gsap.to(target, _merge((_merge2 = {}, _merge2[property] = "+=0.1", _merge2.paused = true, _merge2), vars || {})), func = function func(value, start, startIsRelative) {
            return tween.resetTo(property, value, start, startIsRelative);
        };
        func.tween = tween;
        return func;
    },
    isTweening: function isTweening(targets) {
        return _globalTimeline.getTweensOf(targets, true).length > 0;
    },
    defaults: function defaults(value) {
        value && value.ease && (value.ease = _parseEase(value.ease, _defaults.ease));
        return _mergeDeep(_defaults, value || {});
    },
    config: function config(value) {
        return _mergeDeep(_config, value || {});
    },
    registerEffect: function registerEffect(_ref3) {
        var name = _ref3.name, effect = _ref3.effect, plugins = _ref3.plugins, defaults = _ref3.defaults, extendTimeline = _ref3.extendTimeline;
        (plugins || "").split(",").forEach(function(pluginName) {
            return pluginName && !_plugins[pluginName] && !_globals[pluginName] && _warn(name + " effect requires " + pluginName + " plugin.");
        });
        _effects[name] = function(targets, vars, tl) {
            return effect(toArray(targets), _setDefaults(vars || {}, defaults), tl);
        };
        if (extendTimeline) Timeline.prototype[name] = function(targets, vars, position) {
            return this.add(_effects[name](targets, _isObject(vars) ? vars : (position = vars) && {}, this), position);
        };
    },
    registerEase: function registerEase(name, ease) {
        _easeMap[name] = _parseEase(ease);
    },
    parseEase: function parseEase(ease, defaultEase) {
        return arguments.length ? _parseEase(ease, defaultEase) : _easeMap;
    },
    getById: function getById(id) {
        return _globalTimeline.getById(id);
    },
    exportRoot: function exportRoot(vars, includeDelayedCalls) {
        if (vars === void 0) vars = {};
        var tl = new Timeline(vars), child, next;
        tl.smoothChildTiming = _isNotFalse(vars.smoothChildTiming);
        _globalTimeline.remove(tl);
        tl._dp = 0; //otherwise it'll get re-activated when adding children and be re-introduced into _globalTimeline's linked list (then added to itself).
        tl._time = tl._tTime = _globalTimeline._time;
        child = _globalTimeline._first;
        while(child){
            next = child._next;
            if (includeDelayedCalls || !(!child._dur && child instanceof Tween && child.vars.onComplete === child._targets[0])) _addToTimeline(tl, child, child._start - child._delay);
            child = next;
        }
        _addToTimeline(_globalTimeline, tl, 0);
        return tl;
    },
    context: function context(func, scope) {
        return func ? new Context(func, scope) : _context;
    },
    matchMedia: function matchMedia(scope) {
        return new MatchMedia(scope);
    },
    matchMediaRefresh: function matchMediaRefresh() {
        return _media.forEach(function(c) {
            var cond = c.conditions, found, p;
            for(p in cond)if (cond[p]) {
                cond[p] = false;
                found = 1;
            }
            found && c.revert();
        }) || _onMediaChange();
    },
    addEventListener: function addEventListener(type, callback) {
        var a = _listeners[type] || (_listeners[type] = []);
        ~a.indexOf(callback) || a.push(callback);
    },
    removeEventListener: function removeEventListener(type, callback) {
        var a = _listeners[type], i = a && a.indexOf(callback);
        i >= 0 && a.splice(i, 1);
    },
    utils: {
        wrap: wrap,
        wrapYoyo: wrapYoyo,
        distribute: distribute,
        random: random,
        snap: snap,
        normalize: normalize,
        getUnit: getUnit,
        clamp: clamp,
        splitColor: splitColor,
        toArray: toArray,
        selector: selector,
        mapRange: mapRange,
        pipe: pipe,
        unitize: unitize,
        interpolate: interpolate,
        shuffle: shuffle
    },
    install: _install,
    effects: _effects,
    ticker: _ticker,
    updateRoot: Timeline.updateRoot,
    plugins: _plugins,
    globalTimeline: _globalTimeline,
    core: {
        PropTween: PropTween,
        globals: _addGlobal,
        Tween: Tween,
        Timeline: Timeline,
        Animation: Animation,
        getCache: _getCache,
        _removeLinkedListItem: _removeLinkedListItem,
        reverting: function reverting() {
            return _reverting;
        },
        context: function context(toAdd) {
            if (toAdd && _context) {
                _context.data.push(toAdd);
                toAdd._ctx = _context;
            }
            return _context;
        },
        suppressOverwrites: function suppressOverwrites(value) {
            return _suppressOverwrites = value;
        }
    }
};
_forEachName("to,from,fromTo,delayedCall,set,killTweensOf", function(name) {
    return _gsap[name] = Tween[name];
});
_ticker.add(Timeline.updateRoot);
_quickTween = _gsap.to({}, {
    duration: 0
}); // ---- EXTRA PLUGINS --------------------------------------------------------
var _getPluginPropTween = function _getPluginPropTween(plugin, prop) {
    var pt = plugin._pt;
    while(pt && pt.p !== prop && pt.op !== prop && pt.fp !== prop)pt = pt._next;
    return pt;
}, _addModifiers = function _addModifiers(tween, modifiers) {
    var targets = tween._targets, p, i, pt;
    for(p in modifiers){
        i = targets.length;
        while(i--){
            pt = tween._ptLookup[i][p];
            if (pt && (pt = pt.d)) {
                if (pt._pt) // is a plugin
                pt = _getPluginPropTween(pt, p);
                pt && pt.modifier && pt.modifier(modifiers[p], tween, targets[i], p);
            }
        }
    }
}, _buildModifierPlugin = function _buildModifierPlugin(name, modifier) {
    return {
        name: name,
        rawVars: 1,
        //don't pre-process function-based values or "random()" strings.
        init: function init(target, vars, tween) {
            tween._onInit = function(tween) {
                var temp, p;
                if (_isString(vars)) {
                    temp = {};
                    _forEachName(vars, function(name) {
                        return temp[name] = 1;
                    }); //if the user passes in a comma-delimited list of property names to roundProps, like "x,y", we round to whole numbers.
                    vars = temp;
                }
                if (modifier) {
                    temp = {};
                    for(p in vars)temp[p] = modifier(vars[p]);
                    vars = temp;
                }
                _addModifiers(tween, vars);
            };
        }
    };
}; //register core plugins
var gsap = _gsap.registerPlugin({
    name: "attr",
    init: function init(target, vars, tween, index, targets) {
        var p, pt, v;
        this.tween = tween;
        for(p in vars){
            v = target.getAttribute(p) || "";
            pt = this.add(target, "setAttribute", (v || 0) + "", vars[p], index, targets, 0, 0, p);
            pt.op = p;
            pt.b = v; // record the beginning value so we can revert()
            this._props.push(p);
        }
    },
    render: function render(ratio, data) {
        var pt = data._pt;
        while(pt){
            _reverting ? pt.set(pt.t, pt.p, pt.b, pt) : pt.r(ratio, pt.d); // if reverting, go back to the original (pt.b)
            pt = pt._next;
        }
    }
}, {
    name: "endArray",
    init: function init(target, value) {
        var i = value.length;
        while(i--)this.add(target, i, target[i] || 0, value[i], 0, 0, 0, 0, 0, 1);
    }
}, _buildModifierPlugin("roundProps", _roundModifier), _buildModifierPlugin("modifiers"), _buildModifierPlugin("snap", snap)) || _gsap; //to prevent the core plugins from being dropped via aggressive tree shaking, we must include them in the variable declaration in this way.
Tween.version = Timeline.version = gsap.version = "3.12.5";
_coreReady = 1;
_windowExists() && _wake();
var Power0 = _easeMap.Power0, Power1 = _easeMap.Power1, Power2 = _easeMap.Power2, Power3 = _easeMap.Power3, Power4 = _easeMap.Power4, Linear = _easeMap.Linear, Quad = _easeMap.Quad, Cubic = _easeMap.Cubic, Quart = _easeMap.Quart, Quint = _easeMap.Quint, Strong = _easeMap.Strong, Elastic = _easeMap.Elastic, Back = _easeMap.Back, SteppedEase = _easeMap.SteppedEase, Bounce = _easeMap.Bounce, Sine = _easeMap.Sine, Expo = _easeMap.Expo, Circ = _easeMap.Circ;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"jUeMG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CSSPlugin", ()=>CSSPlugin);
parcelHelpers.export(exports, "default", ()=>CSSPlugin);
parcelHelpers.export(exports, "_getBBox", ()=>_getBBox);
parcelHelpers.export(exports, "_createElement", ()=>_createElement);
parcelHelpers.export(exports, "checkPrefix", ()=>_checkPropPrefix);
/*!
 * CSSPlugin 3.12.5
 * https://gsap.com
 *
 * Copyright 2008-2024, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license or for
 * Club GSAP members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/ /* eslint-disable */ var _gsapCoreJs = require("./gsap-core.js");
var _win, _doc, _docElement, _pluginInitted, _tempDiv, _tempDivStyler, _recentSetterPlugin, _reverting, _windowExists = function _windowExists() {
    return typeof window !== "undefined";
}, _transformProps = {}, _RAD2DEG = 180 / Math.PI, _DEG2RAD = Math.PI / 180, _atan2 = Math.atan2, _bigNum = 1e8, _capsExp = /([A-Z])/g, _horizontalExp = /(left|right|width|margin|padding|x)/i, _complexExp = /[\s,\(]\S/, _propertyAliases = {
    autoAlpha: "opacity,visibility",
    scale: "scaleX,scaleY",
    alpha: "opacity"
}, _renderCSSProp = function _renderCSSProp(ratio, data) {
    return data.set(data.t, data.p, Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u, data);
}, _renderPropWithEnd = function _renderPropWithEnd(ratio, data) {
    return data.set(data.t, data.p, ratio === 1 ? data.e : Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u, data);
}, _renderCSSPropWithBeginning = function _renderCSSPropWithBeginning(ratio, data) {
    return data.set(data.t, data.p, ratio ? Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u : data.b, data);
}, //if units change, we need a way to render the original unit/value when the tween goes all the way back to the beginning (ratio:0)
_renderRoundedCSSProp = function _renderRoundedCSSProp(ratio, data) {
    var value = data.s + data.c * ratio;
    data.set(data.t, data.p, ~~(value + (value < 0 ? -0.5 : .5)) + data.u, data);
}, _renderNonTweeningValue = function _renderNonTweeningValue(ratio, data) {
    return data.set(data.t, data.p, ratio ? data.e : data.b, data);
}, _renderNonTweeningValueOnlyAtEnd = function _renderNonTweeningValueOnlyAtEnd(ratio, data) {
    return data.set(data.t, data.p, ratio !== 1 ? data.b : data.e, data);
}, _setterCSSStyle = function _setterCSSStyle(target, property, value) {
    return target.style[property] = value;
}, _setterCSSProp = function _setterCSSProp(target, property, value) {
    return target.style.setProperty(property, value);
}, _setterTransform = function _setterTransform(target, property, value) {
    return target._gsap[property] = value;
}, _setterScale = function _setterScale(target, property, value) {
    return target._gsap.scaleX = target._gsap.scaleY = value;
}, _setterScaleWithRender = function _setterScaleWithRender(target, property, value, data, ratio) {
    var cache = target._gsap;
    cache.scaleX = cache.scaleY = value;
    cache.renderTransform(ratio, cache);
}, _setterTransformWithRender = function _setterTransformWithRender(target, property, value, data, ratio) {
    var cache = target._gsap;
    cache[property] = value;
    cache.renderTransform(ratio, cache);
}, _transformProp = "transform", _transformOriginProp = _transformProp + "Origin", _saveStyle = function _saveStyle(property, isNotCSS) {
    var _this = this;
    var target = this.target, style = target.style, cache = target._gsap;
    if (property in _transformProps && style) {
        this.tfm = this.tfm || {};
        if (property !== "transform") {
            property = _propertyAliases[property] || property;
            ~property.indexOf(",") ? property.split(",").forEach(function(a) {
                return _this.tfm[a] = _get(target, a);
            }) : this.tfm[property] = cache.x ? cache[property] : _get(target, property); // note: scale would map to "scaleX,scaleY", thus we loop and apply them both.
            property === _transformOriginProp && (this.tfm.zOrigin = cache.zOrigin);
        } else return _propertyAliases.transform.split(",").forEach(function(p) {
            return _saveStyle.call(_this, p, isNotCSS);
        });
        if (this.props.indexOf(_transformProp) >= 0) return;
        if (cache.svg) {
            this.svgo = target.getAttribute("data-svg-origin");
            this.props.push(_transformOriginProp, isNotCSS, "");
        }
        property = _transformProp;
    }
    (style || isNotCSS) && this.props.push(property, isNotCSS, style[property]);
}, _removeIndependentTransforms = function _removeIndependentTransforms(style) {
    if (style.translate) {
        style.removeProperty("translate");
        style.removeProperty("scale");
        style.removeProperty("rotate");
    }
}, _revertStyle = function _revertStyle() {
    var props = this.props, target = this.target, style = target.style, cache = target._gsap, i, p;
    for(i = 0; i < props.length; i += 3)// stored like this: property, isNotCSS, value
    props[i + 1] ? target[props[i]] = props[i + 2] : props[i + 2] ? style[props[i]] = props[i + 2] : style.removeProperty(props[i].substr(0, 2) === "--" ? props[i] : props[i].replace(_capsExp, "-$1").toLowerCase());
    if (this.tfm) {
        for(p in this.tfm)cache[p] = this.tfm[p];
        if (cache.svg) {
            cache.renderTransform();
            target.setAttribute("data-svg-origin", this.svgo || "");
        }
        i = _reverting();
        if ((!i || !i.isStart) && !style[_transformProp]) {
            _removeIndependentTransforms(style);
            if (cache.zOrigin && style[_transformOriginProp]) {
                style[_transformOriginProp] += " " + cache.zOrigin + "px"; // since we're uncaching, we must put the zOrigin back into the transformOrigin so that we can pull it out accurately when we parse again. Otherwise, we'd lose the z portion of the origin since we extract it to protect from Safari bugs.
                cache.zOrigin = 0;
                cache.renderTransform();
            }
            cache.uncache = 1; // if it's a startAt that's being reverted in the _initTween() of the core, we don't need to uncache transforms. This is purely a performance optimization.
        }
    }
}, _getStyleSaver = function _getStyleSaver(target, properties) {
    var saver = {
        target: target,
        props: [],
        revert: _revertStyle,
        save: _saveStyle
    };
    target._gsap || (0, _gsapCoreJs.gsap).core.getCache(target); // just make sure there's a _gsap cache defined because we read from it in _saveStyle() and it's more efficient to just check it here once.
    properties && properties.split(",").forEach(function(p) {
        return saver.save(p);
    });
    return saver;
}, _supports3D, _createElement = function _createElement(type, ns) {
    var e = _doc.createElementNS ? _doc.createElementNS((ns || "http://www.w3.org/1999/xhtml").replace(/^https/, "http"), type) : _doc.createElement(type); //some servers swap in https for http in the namespace which can break things, making "style" inaccessible.
    return e && e.style ? e : _doc.createElement(type); //some environments won't allow access to the element's style when created with a namespace in which case we default to the standard createElement() to work around the issue. Also note that when GSAP is embedded directly inside an SVG file, createElement() won't allow access to the style object in Firefox (see https://gsap.com/forums/topic/20215-problem-using-tweenmax-in-standalone-self-containing-svg-file-err-cannot-set-property-csstext-of-undefined/).
}, _getComputedProperty = function _getComputedProperty(target, property, skipPrefixFallback) {
    var cs = getComputedStyle(target);
    return cs[property] || cs.getPropertyValue(property.replace(_capsExp, "-$1").toLowerCase()) || cs.getPropertyValue(property) || !skipPrefixFallback && _getComputedProperty(target, _checkPropPrefix(property) || property, 1) || ""; //css variables may not need caps swapped out for dashes and lowercase.
}, _prefixes = "O,Moz,ms,Ms,Webkit".split(","), _checkPropPrefix = function _checkPropPrefix(property, element, preferPrefix) {
    var e = element || _tempDiv, s = e.style, i = 5;
    if (property in s && !preferPrefix) return property;
    property = property.charAt(0).toUpperCase() + property.substr(1);
    while((i--) && !(_prefixes[i] + property in s));
    return i < 0 ? null : (i === 3 ? "ms" : i >= 0 ? _prefixes[i] : "") + property;
}, _initCore = function _initCore() {
    if (_windowExists() && window.document) {
        _win = window;
        _doc = _win.document;
        _docElement = _doc.documentElement;
        _tempDiv = _createElement("div") || {
            style: {}
        };
        _tempDivStyler = _createElement("div");
        _transformProp = _checkPropPrefix(_transformProp);
        _transformOriginProp = _transformProp + "Origin";
        _tempDiv.style.cssText = "border-width:0;line-height:0;position:absolute;padding:0"; //make sure to override certain properties that may contaminate measurements, in case the user has overreaching style sheets.
        _supports3D = !!_checkPropPrefix("perspective");
        _reverting = (0, _gsapCoreJs.gsap).core.reverting;
        _pluginInitted = 1;
    }
}, _getBBoxHack = function _getBBoxHack(swapIfPossible) {
    //works around issues in some browsers (like Firefox) that don't correctly report getBBox() on SVG elements inside a <defs> element and/or <mask>. We try creating an SVG, adding it to the documentElement and toss the element in there so that it's definitely part of the rendering tree, then grab the bbox and if it works, we actually swap out the original getBBox() method for our own that does these extra steps whenever getBBox is needed. This helps ensure that performance is optimal (only do all these extra steps when absolutely necessary...most elements don't need it).
    var svg = _createElement("svg", this.ownerSVGElement && this.ownerSVGElement.getAttribute("xmlns") || "http://www.w3.org/2000/svg"), oldParent = this.parentNode, oldSibling = this.nextSibling, oldCSS = this.style.cssText, bbox;
    _docElement.appendChild(svg);
    svg.appendChild(this);
    this.style.display = "block";
    if (swapIfPossible) try {
        bbox = this.getBBox();
        this._gsapBBox = this.getBBox; //store the original
        this.getBBox = _getBBoxHack;
    } catch (e) {}
    else if (this._gsapBBox) bbox = this._gsapBBox();
    if (oldParent) {
        if (oldSibling) oldParent.insertBefore(this, oldSibling);
        else oldParent.appendChild(this);
    }
    _docElement.removeChild(svg);
    this.style.cssText = oldCSS;
    return bbox;
}, _getAttributeFallbacks = function _getAttributeFallbacks(target, attributesArray) {
    var i = attributesArray.length;
    while(i--){
        if (target.hasAttribute(attributesArray[i])) return target.getAttribute(attributesArray[i]);
    }
}, _getBBox = function _getBBox(target) {
    var bounds;
    try {
        bounds = target.getBBox(); //Firefox throws errors if you try calling getBBox() on an SVG element that's not rendered (like in a <symbol> or <defs>). https://bugzilla.mozilla.org/show_bug.cgi?id=612118
    } catch (error) {
        bounds = _getBBoxHack.call(target, true);
    }
    bounds && (bounds.width || bounds.height) || target.getBBox === _getBBoxHack || (bounds = _getBBoxHack.call(target, true)); //some browsers (like Firefox) misreport the bounds if the element has zero width and height (it just assumes it's at x:0, y:0), thus we need to manually grab the position in that case.
    return bounds && !bounds.width && !bounds.x && !bounds.y ? {
        x: +_getAttributeFallbacks(target, [
            "x",
            "cx",
            "x1"
        ]) || 0,
        y: +_getAttributeFallbacks(target, [
            "y",
            "cy",
            "y1"
        ]) || 0,
        width: 0,
        height: 0
    } : bounds;
}, _isSVG = function _isSVG(e) {
    return !!(e.getCTM && (!e.parentNode || e.ownerSVGElement) && _getBBox(e));
}, //reports if the element is an SVG on which getBBox() actually works
_removeProperty = function _removeProperty(target, property) {
    if (property) {
        var style = target.style, first2Chars;
        if (property in _transformProps && property !== _transformOriginProp) property = _transformProp;
        if (style.removeProperty) {
            first2Chars = property.substr(0, 2);
            if (first2Chars === "ms" || property.substr(0, 6) === "webkit") //Microsoft and some Webkit browsers don't conform to the standard of capitalizing the first prefix character, so we adjust so that when we prefix the caps with a dash, it's correct (otherwise it'd be "ms-transform" instead of "-ms-transform" for IE9, for example)
            property = "-" + property;
            style.removeProperty(first2Chars === "--" ? property : property.replace(_capsExp, "-$1").toLowerCase());
        } else //note: old versions of IE use "removeAttribute()" instead of "removeProperty()"
        style.removeAttribute(property);
    }
}, _addNonTweeningPT = function _addNonTweeningPT(plugin, target, property, beginning, end, onlySetAtEnd) {
    var pt = new (0, _gsapCoreJs.PropTween)(plugin._pt, target, property, 0, 1, onlySetAtEnd ? _renderNonTweeningValueOnlyAtEnd : _renderNonTweeningValue);
    plugin._pt = pt;
    pt.b = beginning;
    pt.e = end;
    plugin._props.push(property);
    return pt;
}, _nonConvertibleUnits = {
    deg: 1,
    rad: 1,
    turn: 1
}, _nonStandardLayouts = {
    grid: 1,
    flex: 1
}, //takes a single value like 20px and converts it to the unit specified, like "%", returning only the numeric amount.
_convertToUnit = function _convertToUnit(target, property, value, unit) {
    var curValue = parseFloat(value) || 0, curUnit = (value + "").trim().substr((curValue + "").length) || "px", // some browsers leave extra whitespace at the beginning of CSS variables, hence the need to trim()
    style = _tempDiv.style, horizontal = _horizontalExp.test(property), isRootSVG = target.tagName.toLowerCase() === "svg", measureProperty = (isRootSVG ? "client" : "offset") + (horizontal ? "Width" : "Height"), amount = 100, toPixels = unit === "px", toPercent = unit === "%", px, parent, cache, isSVG;
    if (unit === curUnit || !curValue || _nonConvertibleUnits[unit] || _nonConvertibleUnits[curUnit]) return curValue;
    curUnit !== "px" && !toPixels && (curValue = _convertToUnit(target, property, value, "px"));
    isSVG = target.getCTM && _isSVG(target);
    if ((toPercent || curUnit === "%") && (_transformProps[property] || ~property.indexOf("adius"))) {
        px = isSVG ? target.getBBox()[horizontal ? "width" : "height"] : target[measureProperty];
        return (0, _gsapCoreJs._round)(toPercent ? curValue / px * amount : curValue / 100 * px);
    }
    style[horizontal ? "width" : "height"] = amount + (toPixels ? curUnit : unit);
    parent = ~property.indexOf("adius") || unit === "em" && target.appendChild && !isRootSVG ? target : target.parentNode;
    if (isSVG) parent = (target.ownerSVGElement || {}).parentNode;
    if (!parent || parent === _doc || !parent.appendChild) parent = _doc.body;
    cache = parent._gsap;
    if (cache && toPercent && cache.width && horizontal && cache.time === (0, _gsapCoreJs._ticker).time && !cache.uncache) return (0, _gsapCoreJs._round)(curValue / cache.width * amount);
    else {
        if (toPercent && (property === "height" || property === "width")) {
            // if we're dealing with width/height that's inside a container with padding and/or it's a flexbox/grid container, we must apply it to the target itself rather than the _tempDiv in order to ensure complete accuracy, factoring in the parent's padding.
            var v = target.style[property];
            target.style[property] = amount + unit;
            px = target[measureProperty];
            v ? target.style[property] = v : _removeProperty(target, property);
        } else {
            (toPercent || curUnit === "%") && !_nonStandardLayouts[_getComputedProperty(parent, "display")] && (style.position = _getComputedProperty(target, "position"));
            parent === target && (style.position = "static"); // like for borderRadius, if it's a % we must have it relative to the target itself but that may not have position: relative or position: absolute in which case it'd go up the chain until it finds its offsetParent (bad). position: static protects against that.
            parent.appendChild(_tempDiv);
            px = _tempDiv[measureProperty];
            parent.removeChild(_tempDiv);
            style.position = "absolute";
        }
        if (horizontal && toPercent) {
            cache = (0, _gsapCoreJs._getCache)(parent);
            cache.time = (0, _gsapCoreJs._ticker).time;
            cache.width = parent[measureProperty];
        }
    }
    return (0, _gsapCoreJs._round)(toPixels ? px * curValue / amount : px && curValue ? amount / px * curValue : 0);
}, _get = function _get(target, property, unit, uncache) {
    var value;
    _pluginInitted || _initCore();
    if (property in _propertyAliases && property !== "transform") {
        property = _propertyAliases[property];
        if (~property.indexOf(",")) property = property.split(",")[0];
    }
    if (_transformProps[property] && property !== "transform") {
        value = _parseTransform(target, uncache);
        value = property !== "transformOrigin" ? value[property] : value.svg ? value.origin : _firstTwoOnly(_getComputedProperty(target, _transformOriginProp)) + " " + value.zOrigin + "px";
    } else {
        value = target.style[property];
        if (!value || value === "auto" || uncache || ~(value + "").indexOf("calc(")) value = _specialProps[property] && _specialProps[property](target, property, unit) || _getComputedProperty(target, property) || (0, _gsapCoreJs._getProperty)(target, property) || (property === "opacity" ? 1 : 0); // note: some browsers, like Firefox, don't report borderRadius correctly! Instead, it only reports every corner like  borderTopLeftRadius
    }
    return unit && !~(value + "").trim().indexOf(" ") ? _convertToUnit(target, property, value, unit) + unit : value;
}, _tweenComplexCSSString = function _tweenComplexCSSString(target, prop, start, end) {
    // note: we call _tweenComplexCSSString.call(pluginInstance...) to ensure that it's scoped properly. We may call it from within a plugin too, thus "this" would refer to the plugin.
    if (!start || start === "none") {
        // some browsers like Safari actually PREFER the prefixed property and mis-report the unprefixed value like clipPath (BUG). In other words, even though clipPath exists in the style ("clipPath" in target.style) and it's set in the CSS properly (along with -webkit-clip-path), Safari reports clipPath as "none" whereas WebkitClipPath reports accurately like "ellipse(100% 0% at 50% 0%)", so in this case we must SWITCH to using the prefixed property instead. See https://gsap.com/forums/topic/18310-clippath-doesnt-work-on-ios/
        var p = _checkPropPrefix(prop, target, 1), s = p && _getComputedProperty(target, p, 1);
        if (s && s !== start) {
            prop = p;
            start = s;
        } else if (prop === "borderColor") start = _getComputedProperty(target, "borderTopColor"); // Firefox bug: always reports "borderColor" as "", so we must fall back to borderTopColor. See https://gsap.com/forums/topic/24583-how-to-return-colors-that-i-had-after-reverse/
    }
    var pt = new (0, _gsapCoreJs.PropTween)(this._pt, target.style, prop, 0, 1, (0, _gsapCoreJs._renderComplexString)), index = 0, matchIndex = 0, a, result, startValues, startNum, color, startValue, endValue, endNum, chunk, endUnit, startUnit, endValues;
    pt.b = start;
    pt.e = end;
    start += ""; // ensure values are strings
    end += "";
    if (end === "auto") {
        startValue = target.style[prop];
        target.style[prop] = end;
        end = _getComputedProperty(target, prop) || end;
        startValue ? target.style[prop] = startValue : _removeProperty(target, prop);
    }
    a = [
        start,
        end
    ];
    (0, _gsapCoreJs._colorStringFilter)(a); // pass an array with the starting and ending values and let the filter do whatever it needs to the values. If colors are found, it returns true and then we must match where the color shows up order-wise because for things like boxShadow, sometimes the browser provides the computed values with the color FIRST, but the user provides it with the color LAST, so flip them if necessary. Same for drop-shadow().
    start = a[0];
    end = a[1];
    startValues = start.match((0, _gsapCoreJs._numWithUnitExp)) || [];
    endValues = end.match((0, _gsapCoreJs._numWithUnitExp)) || [];
    if (endValues.length) {
        while(result = (0, _gsapCoreJs._numWithUnitExp).exec(end)){
            endValue = result[0];
            chunk = end.substring(index, result.index);
            if (color) color = (color + 1) % 5;
            else if (chunk.substr(-5) === "rgba(" || chunk.substr(-5) === "hsla(") color = 1;
            if (endValue !== (startValue = startValues[matchIndex++] || "")) {
                startNum = parseFloat(startValue) || 0;
                startUnit = startValue.substr((startNum + "").length);
                endValue.charAt(1) === "=" && (endValue = (0, _gsapCoreJs._parseRelative)(startNum, endValue) + startUnit);
                endNum = parseFloat(endValue);
                endUnit = endValue.substr((endNum + "").length);
                index = (0, _gsapCoreJs._numWithUnitExp).lastIndex - endUnit.length;
                if (!endUnit) {
                    //if something like "perspective:300" is passed in and we must add a unit to the end
                    endUnit = endUnit || (0, _gsapCoreJs._config).units[prop] || startUnit;
                    if (index === end.length) {
                        end += endUnit;
                        pt.e += endUnit;
                    }
                }
                if (startUnit !== endUnit) startNum = _convertToUnit(target, prop, startValue, endUnit) || 0;
                 // these nested PropTweens are handled in a special way - we'll never actually call a render or setter method on them. We'll just loop through them in the parent complex string PropTween's render method.
                pt._pt = {
                    _next: pt._pt,
                    p: chunk || matchIndex === 1 ? chunk : ",",
                    //note: SVG spec allows omission of comma/space when a negative sign is wedged between two numbers, like 2.5-5.3 instead of 2.5,-5.3 but when tweening, the negative value may switch to positive, so we insert the comma just in case.
                    s: startNum,
                    c: endNum - startNum,
                    m: color && color < 4 || prop === "zIndex" ? Math.round : 0
                };
            }
        }
        pt.c = index < end.length ? end.substring(index, end.length) : ""; //we use the "c" of the PropTween to store the final part of the string (after the last number)
    } else pt.r = prop === "display" && end === "none" ? _renderNonTweeningValueOnlyAtEnd : _renderNonTweeningValue;
    (0, _gsapCoreJs._relExp).test(end) && (pt.e = 0); //if the end string contains relative values or dynamic random(...) values, delete the end it so that on the final render we don't actually set it to the string with += or -= characters (forces it to use the calculated value).
    this._pt = pt; //start the linked list with this new PropTween. Remember, we call _tweenComplexCSSString.call(pluginInstance...) to ensure that it's scoped properly. We may call it from within another plugin too, thus "this" would refer to the plugin.
    return pt;
}, _keywordToPercent = {
    top: "0%",
    bottom: "100%",
    left: "0%",
    right: "100%",
    center: "50%"
}, _convertKeywordsToPercentages = function _convertKeywordsToPercentages(value) {
    var split = value.split(" "), x = split[0], y = split[1] || "50%";
    if (x === "top" || x === "bottom" || y === "left" || y === "right") {
        //the user provided them in the wrong order, so flip them
        value = x;
        x = y;
        y = value;
    }
    split[0] = _keywordToPercent[x] || x;
    split[1] = _keywordToPercent[y] || y;
    return split.join(" ");
}, _renderClearProps = function _renderClearProps(ratio, data) {
    if (data.tween && data.tween._time === data.tween._dur) {
        var target = data.t, style = target.style, props = data.u, cache = target._gsap, prop, clearTransforms, i;
        if (props === "all" || props === true) {
            style.cssText = "";
            clearTransforms = 1;
        } else {
            props = props.split(",");
            i = props.length;
            while(--i > -1){
                prop = props[i];
                if (_transformProps[prop]) {
                    clearTransforms = 1;
                    prop = prop === "transformOrigin" ? _transformOriginProp : _transformProp;
                }
                _removeProperty(target, prop);
            }
        }
        if (clearTransforms) {
            _removeProperty(target, _transformProp);
            if (cache) {
                cache.svg && target.removeAttribute("transform");
                _parseTransform(target, 1); // force all the cached values back to "normal"/identity, otherwise if there's another tween that's already set to render transforms on this element, it could display the wrong values.
                cache.uncache = 1;
                _removeIndependentTransforms(style);
            }
        }
    }
}, // note: specialProps should return 1 if (and only if) they have a non-zero priority. It indicates we need to sort the linked list.
_specialProps = {
    clearProps: function clearProps(plugin, target, property, endValue, tween) {
        if (tween.data !== "isFromStart") {
            var pt = plugin._pt = new (0, _gsapCoreJs.PropTween)(plugin._pt, target, property, 0, 0, _renderClearProps);
            pt.u = endValue;
            pt.pr = -10;
            pt.tween = tween;
            plugin._props.push(property);
            return 1;
        }
    }
}, /*
 * --------------------------------------------------------------------------------------
 * TRANSFORMS
 * --------------------------------------------------------------------------------------
 */ _identity2DMatrix = [
    1,
    0,
    0,
    1,
    0,
    0
], _rotationalProperties = {}, _isNullTransform = function _isNullTransform(value) {
    return value === "matrix(1, 0, 0, 1, 0, 0)" || value === "none" || !value;
}, _getComputedTransformMatrixAsArray = function _getComputedTransformMatrixAsArray(target) {
    var matrixString = _getComputedProperty(target, _transformProp);
    return _isNullTransform(matrixString) ? _identity2DMatrix : matrixString.substr(7).match((0, _gsapCoreJs._numExp)).map((0, _gsapCoreJs._round));
}, _getMatrix = function _getMatrix(target, force2D) {
    var cache = target._gsap || (0, _gsapCoreJs._getCache)(target), style = target.style, matrix = _getComputedTransformMatrixAsArray(target), parent, nextSibling, temp, addedToDOM;
    if (cache.svg && target.getAttribute("transform")) {
        temp = target.transform.baseVal.consolidate().matrix; //ensures that even complex values like "translate(50,60) rotate(135,0,0)" are parsed because it mashes it into a matrix.
        matrix = [
            temp.a,
            temp.b,
            temp.c,
            temp.d,
            temp.e,
            temp.f
        ];
        return matrix.join(",") === "1,0,0,1,0,0" ? _identity2DMatrix : matrix;
    } else if (matrix === _identity2DMatrix && !target.offsetParent && target !== _docElement && !cache.svg) {
        //note: if offsetParent is null, that means the element isn't in the normal document flow, like if it has display:none or one of its ancestors has display:none). Firefox returns null for getComputedStyle() if the element is in an iframe that has display:none. https://bugzilla.mozilla.org/show_bug.cgi?id=548397
        //browsers don't report transforms accurately unless the element is in the DOM and has a display value that's not "none". Firefox and Microsoft browsers have a partial bug where they'll report transforms even if display:none BUT not any percentage-based values like translate(-50%, 8px) will be reported as if it's translate(0, 8px).
        temp = style.display;
        style.display = "block";
        parent = target.parentNode;
        if (!parent || !target.offsetParent) {
            // note: in 3.3.0 we switched target.offsetParent to _doc.body.contains(target) to avoid [sometimes unnecessary] MutationObserver calls but that wasn't adequate because there are edge cases where nested position: fixed elements need to get reparented to accurately sense transforms. See https://github.com/greensock/GSAP/issues/388 and https://github.com/greensock/GSAP/issues/375
            addedToDOM = 1; //flag
            nextSibling = target.nextElementSibling;
            _docElement.appendChild(target); //we must add it to the DOM in order to get values properly
        }
        matrix = _getComputedTransformMatrixAsArray(target);
        temp ? style.display = temp : _removeProperty(target, "display");
        if (addedToDOM) nextSibling ? parent.insertBefore(target, nextSibling) : parent ? parent.appendChild(target) : _docElement.removeChild(target);
    }
    return force2D && matrix.length > 6 ? [
        matrix[0],
        matrix[1],
        matrix[4],
        matrix[5],
        matrix[12],
        matrix[13]
    ] : matrix;
}, _applySVGOrigin = function _applySVGOrigin(target, origin, originIsAbsolute, smooth, matrixArray, pluginToAddPropTweensTo) {
    var cache = target._gsap, matrix = matrixArray || _getMatrix(target, true), xOriginOld = cache.xOrigin || 0, yOriginOld = cache.yOrigin || 0, xOffsetOld = cache.xOffset || 0, yOffsetOld = cache.yOffset || 0, a = matrix[0], b = matrix[1], c = matrix[2], d = matrix[3], tx = matrix[4], ty = matrix[5], originSplit = origin.split(" "), xOrigin = parseFloat(originSplit[0]) || 0, yOrigin = parseFloat(originSplit[1]) || 0, bounds, determinant, x, y;
    if (!originIsAbsolute) {
        bounds = _getBBox(target);
        xOrigin = bounds.x + (~originSplit[0].indexOf("%") ? xOrigin / 100 * bounds.width : xOrigin);
        yOrigin = bounds.y + (~(originSplit[1] || originSplit[0]).indexOf("%") ? yOrigin / 100 * bounds.height : yOrigin); // if (!("xOrigin" in cache) && (xOrigin || yOrigin)) { // added in 3.12.3, reverted in 3.12.4; requires more exploration
    // 	xOrigin -= bounds.x;
    // 	yOrigin -= bounds.y;
    // }
    } else if (matrix !== _identity2DMatrix && (determinant = a * d - b * c)) {
        //if it's zero (like if scaleX and scaleY are zero), skip it to avoid errors with dividing by zero.
        x = xOrigin * (d / determinant) + yOrigin * (-c / determinant) + (c * ty - d * tx) / determinant;
        y = xOrigin * (-b / determinant) + yOrigin * (a / determinant) - (a * ty - b * tx) / determinant;
        xOrigin = x;
        yOrigin = y; // theory: we only had to do this for smoothing and it assumes that the previous one was not originIsAbsolute.
    }
    if (smooth || smooth !== false && cache.smooth) {
        tx = xOrigin - xOriginOld;
        ty = yOrigin - yOriginOld;
        cache.xOffset = xOffsetOld + (tx * a + ty * c) - tx;
        cache.yOffset = yOffsetOld + (tx * b + ty * d) - ty;
    } else cache.xOffset = cache.yOffset = 0;
    cache.xOrigin = xOrigin;
    cache.yOrigin = yOrigin;
    cache.smooth = !!smooth;
    cache.origin = origin;
    cache.originIsAbsolute = !!originIsAbsolute;
    target.style[_transformOriginProp] = "0px 0px"; //otherwise, if someone sets  an origin via CSS, it will likely interfere with the SVG transform attribute ones (because remember, we're baking the origin into the matrix() value).
    if (pluginToAddPropTweensTo) {
        _addNonTweeningPT(pluginToAddPropTweensTo, cache, "xOrigin", xOriginOld, xOrigin);
        _addNonTweeningPT(pluginToAddPropTweensTo, cache, "yOrigin", yOriginOld, yOrigin);
        _addNonTweeningPT(pluginToAddPropTweensTo, cache, "xOffset", xOffsetOld, cache.xOffset);
        _addNonTweeningPT(pluginToAddPropTweensTo, cache, "yOffset", yOffsetOld, cache.yOffset);
    }
    target.setAttribute("data-svg-origin", xOrigin + " " + yOrigin);
}, _parseTransform = function _parseTransform(target, uncache) {
    var cache = target._gsap || new (0, _gsapCoreJs.GSCache)(target);
    if ("x" in cache && !uncache && !cache.uncache) return cache;
    var style = target.style, invertedScaleX = cache.scaleX < 0, px = "px", deg = "deg", cs = getComputedStyle(target), origin = _getComputedProperty(target, _transformOriginProp) || "0", x, y, z, scaleX, scaleY, rotation, rotationX, rotationY, skewX, skewY, perspective, xOrigin, yOrigin, matrix, angle, cos, sin, a, b, c, d, a12, a22, t1, t2, t3, a13, a23, a33, a42, a43, a32;
    x = y = z = rotation = rotationX = rotationY = skewX = skewY = perspective = 0;
    scaleX = scaleY = 1;
    cache.svg = !!(target.getCTM && _isSVG(target));
    if (cs.translate) {
        // accommodate independent transforms by combining them into normal ones.
        if (cs.translate !== "none" || cs.scale !== "none" || cs.rotate !== "none") style[_transformProp] = (cs.translate !== "none" ? "translate3d(" + (cs.translate + " 0 0").split(" ").slice(0, 3).join(", ") + ") " : "") + (cs.rotate !== "none" ? "rotate(" + cs.rotate + ") " : "") + (cs.scale !== "none" ? "scale(" + cs.scale.split(" ").join(",") + ") " : "") + (cs[_transformProp] !== "none" ? cs[_transformProp] : "");
        style.scale = style.rotate = style.translate = "none";
    }
    matrix = _getMatrix(target, cache.svg);
    if (cache.svg) {
        if (cache.uncache) {
            // if cache.uncache is true (and maybe if origin is 0,0), we need to set element.style.transformOrigin = (cache.xOrigin - bbox.x) + "px " + (cache.yOrigin - bbox.y) + "px". Previously we let the data-svg-origin stay instead, but when introducing revert(), it complicated things.
            t2 = target.getBBox();
            origin = cache.xOrigin - t2.x + "px " + (cache.yOrigin - t2.y) + "px";
            t1 = "";
        } else t1 = !uncache && target.getAttribute("data-svg-origin"); //  Remember, to work around browser inconsistencies we always force SVG elements' transformOrigin to 0,0 and offset the translation accordingly.
        _applySVGOrigin(target, t1 || origin, !!t1 || cache.originIsAbsolute, cache.smooth !== false, matrix);
    }
    xOrigin = cache.xOrigin || 0;
    yOrigin = cache.yOrigin || 0;
    if (matrix !== _identity2DMatrix) {
        a = matrix[0]; //a11
        b = matrix[1]; //a21
        c = matrix[2]; //a31
        d = matrix[3]; //a41
        x = a12 = matrix[4];
        y = a22 = matrix[5]; //2D matrix
        if (matrix.length === 6) {
            scaleX = Math.sqrt(a * a + b * b);
            scaleY = Math.sqrt(d * d + c * c);
            rotation = a || b ? _atan2(b, a) * _RAD2DEG : 0; //note: if scaleX is 0, we cannot accurately measure rotation. Same for skewX with a scaleY of 0. Therefore, we default to the previously recorded value (or zero if that doesn't exist).
            skewX = c || d ? _atan2(c, d) * _RAD2DEG + rotation : 0;
            skewX && (scaleY *= Math.abs(Math.cos(skewX * _DEG2RAD)));
            if (cache.svg) {
                x -= xOrigin - (xOrigin * a + yOrigin * c);
                y -= yOrigin - (xOrigin * b + yOrigin * d);
            } //3D matrix
        } else {
            a32 = matrix[6];
            a42 = matrix[7];
            a13 = matrix[8];
            a23 = matrix[9];
            a33 = matrix[10];
            a43 = matrix[11];
            x = matrix[12];
            y = matrix[13];
            z = matrix[14];
            angle = _atan2(a32, a33);
            rotationX = angle * _RAD2DEG; //rotationX
            if (angle) {
                cos = Math.cos(-angle);
                sin = Math.sin(-angle);
                t1 = a12 * cos + a13 * sin;
                t2 = a22 * cos + a23 * sin;
                t3 = a32 * cos + a33 * sin;
                a13 = a12 * -sin + a13 * cos;
                a23 = a22 * -sin + a23 * cos;
                a33 = a32 * -sin + a33 * cos;
                a43 = a42 * -sin + a43 * cos;
                a12 = t1;
                a22 = t2;
                a32 = t3;
            } //rotationY
            angle = _atan2(-c, a33);
            rotationY = angle * _RAD2DEG;
            if (angle) {
                cos = Math.cos(-angle);
                sin = Math.sin(-angle);
                t1 = a * cos - a13 * sin;
                t2 = b * cos - a23 * sin;
                t3 = c * cos - a33 * sin;
                a43 = d * sin + a43 * cos;
                a = t1;
                b = t2;
                c = t3;
            } //rotationZ
            angle = _atan2(b, a);
            rotation = angle * _RAD2DEG;
            if (angle) {
                cos = Math.cos(angle);
                sin = Math.sin(angle);
                t1 = a * cos + b * sin;
                t2 = a12 * cos + a22 * sin;
                b = b * cos - a * sin;
                a22 = a22 * cos - a12 * sin;
                a = t1;
                a12 = t2;
            }
            if (rotationX && Math.abs(rotationX) + Math.abs(rotation) > 359.9) {
                //when rotationY is set, it will often be parsed as 180 degrees different than it should be, and rotationX and rotation both being 180 (it looks the same), so we adjust for that here.
                rotationX = rotation = 0;
                rotationY = 180 - rotationY;
            }
            scaleX = (0, _gsapCoreJs._round)(Math.sqrt(a * a + b * b + c * c));
            scaleY = (0, _gsapCoreJs._round)(Math.sqrt(a22 * a22 + a32 * a32));
            angle = _atan2(a12, a22);
            skewX = Math.abs(angle) > 0.0002 ? angle * _RAD2DEG : 0;
            perspective = a43 ? 1 / (a43 < 0 ? -a43 : a43) : 0;
        }
        if (cache.svg) {
            //sense if there are CSS transforms applied on an SVG element in which case we must overwrite them when rendering. The transform attribute is more reliable cross-browser, but we can't just remove the CSS ones because they may be applied in a CSS rule somewhere (not just inline).
            t1 = target.getAttribute("transform");
            cache.forceCSS = target.setAttribute("transform", "") || !_isNullTransform(_getComputedProperty(target, _transformProp));
            t1 && target.setAttribute("transform", t1);
        }
    }
    if (Math.abs(skewX) > 90 && Math.abs(skewX) < 270) {
        if (invertedScaleX) {
            scaleX *= -1;
            skewX += rotation <= 0 ? 180 : -180;
            rotation += rotation <= 0 ? 180 : -180;
        } else {
            scaleY *= -1;
            skewX += skewX <= 0 ? 180 : -180;
        }
    }
    uncache = uncache || cache.uncache;
    cache.x = x - ((cache.xPercent = x && (!uncache && cache.xPercent || (Math.round(target.offsetWidth / 2) === Math.round(-x) ? -50 : 0))) ? target.offsetWidth * cache.xPercent / 100 : 0) + px;
    cache.y = y - ((cache.yPercent = y && (!uncache && cache.yPercent || (Math.round(target.offsetHeight / 2) === Math.round(-y) ? -50 : 0))) ? target.offsetHeight * cache.yPercent / 100 : 0) + px;
    cache.z = z + px;
    cache.scaleX = (0, _gsapCoreJs._round)(scaleX);
    cache.scaleY = (0, _gsapCoreJs._round)(scaleY);
    cache.rotation = (0, _gsapCoreJs._round)(rotation) + deg;
    cache.rotationX = (0, _gsapCoreJs._round)(rotationX) + deg;
    cache.rotationY = (0, _gsapCoreJs._round)(rotationY) + deg;
    cache.skewX = skewX + deg;
    cache.skewY = skewY + deg;
    cache.transformPerspective = perspective + px;
    if (cache.zOrigin = parseFloat(origin.split(" ")[2]) || !uncache && cache.zOrigin || 0) style[_transformOriginProp] = _firstTwoOnly(origin);
    cache.xOffset = cache.yOffset = 0;
    cache.force3D = (0, _gsapCoreJs._config).force3D;
    cache.renderTransform = cache.svg ? _renderSVGTransforms : _supports3D ? _renderCSSTransforms : _renderNon3DTransforms;
    cache.uncache = 0;
    return cache;
}, _firstTwoOnly = function _firstTwoOnly(value) {
    return (value = value.split(" "))[0] + " " + value[1];
}, //for handling transformOrigin values, stripping out the 3rd dimension
_addPxTranslate = function _addPxTranslate(target, start, value) {
    var unit = (0, _gsapCoreJs.getUnit)(start);
    return (0, _gsapCoreJs._round)(parseFloat(start) + parseFloat(_convertToUnit(target, "x", value + "px", unit))) + unit;
}, _renderNon3DTransforms = function _renderNon3DTransforms(ratio, cache) {
    cache.z = "0px";
    cache.rotationY = cache.rotationX = "0deg";
    cache.force3D = 0;
    _renderCSSTransforms(ratio, cache);
}, _zeroDeg = "0deg", _zeroPx = "0px", _endParenthesis = ") ", _renderCSSTransforms = function _renderCSSTransforms(ratio, cache) {
    var _ref = cache || this, xPercent = _ref.xPercent, yPercent = _ref.yPercent, x = _ref.x, y = _ref.y, z = _ref.z, rotation = _ref.rotation, rotationY = _ref.rotationY, rotationX = _ref.rotationX, skewX = _ref.skewX, skewY = _ref.skewY, scaleX = _ref.scaleX, scaleY = _ref.scaleY, transformPerspective = _ref.transformPerspective, force3D = _ref.force3D, target = _ref.target, zOrigin = _ref.zOrigin, transforms = "", use3D = force3D === "auto" && ratio && ratio !== 1 || force3D === true; // Safari has a bug that causes it not to render 3D transform-origin values properly, so we force the z origin to 0, record it in the cache, and then do the math here to offset the translate values accordingly (basically do the 3D transform-origin part manually)
    if (zOrigin && (rotationX !== _zeroDeg || rotationY !== _zeroDeg)) {
        var angle = parseFloat(rotationY) * _DEG2RAD, a13 = Math.sin(angle), a33 = Math.cos(angle), cos;
        angle = parseFloat(rotationX) * _DEG2RAD;
        cos = Math.cos(angle);
        x = _addPxTranslate(target, x, a13 * cos * -zOrigin);
        y = _addPxTranslate(target, y, -Math.sin(angle) * -zOrigin);
        z = _addPxTranslate(target, z, a33 * cos * -zOrigin + zOrigin);
    }
    if (transformPerspective !== _zeroPx) transforms += "perspective(" + transformPerspective + _endParenthesis;
    if (xPercent || yPercent) transforms += "translate(" + xPercent + "%, " + yPercent + "%) ";
    if (use3D || x !== _zeroPx || y !== _zeroPx || z !== _zeroPx) transforms += z !== _zeroPx || use3D ? "translate3d(" + x + ", " + y + ", " + z + ") " : "translate(" + x + ", " + y + _endParenthesis;
    if (rotation !== _zeroDeg) transforms += "rotate(" + rotation + _endParenthesis;
    if (rotationY !== _zeroDeg) transforms += "rotateY(" + rotationY + _endParenthesis;
    if (rotationX !== _zeroDeg) transforms += "rotateX(" + rotationX + _endParenthesis;
    if (skewX !== _zeroDeg || skewY !== _zeroDeg) transforms += "skew(" + skewX + ", " + skewY + _endParenthesis;
    if (scaleX !== 1 || scaleY !== 1) transforms += "scale(" + scaleX + ", " + scaleY + _endParenthesis;
    target.style[_transformProp] = transforms || "translate(0, 0)";
}, _renderSVGTransforms = function _renderSVGTransforms(ratio, cache) {
    var _ref2 = cache || this, xPercent = _ref2.xPercent, yPercent = _ref2.yPercent, x = _ref2.x, y = _ref2.y, rotation = _ref2.rotation, skewX = _ref2.skewX, skewY = _ref2.skewY, scaleX = _ref2.scaleX, scaleY = _ref2.scaleY, target = _ref2.target, xOrigin = _ref2.xOrigin, yOrigin = _ref2.yOrigin, xOffset = _ref2.xOffset, yOffset = _ref2.yOffset, forceCSS = _ref2.forceCSS, tx = parseFloat(x), ty = parseFloat(y), a11, a21, a12, a22, temp;
    rotation = parseFloat(rotation);
    skewX = parseFloat(skewX);
    skewY = parseFloat(skewY);
    if (skewY) {
        //for performance reasons, we combine all skewing into the skewX and rotation values. Remember, a skewY of 10 degrees looks the same as a rotation of 10 degrees plus a skewX of 10 degrees.
        skewY = parseFloat(skewY);
        skewX += skewY;
        rotation += skewY;
    }
    if (rotation || skewX) {
        rotation *= _DEG2RAD;
        skewX *= _DEG2RAD;
        a11 = Math.cos(rotation) * scaleX;
        a21 = Math.sin(rotation) * scaleX;
        a12 = Math.sin(rotation - skewX) * -scaleY;
        a22 = Math.cos(rotation - skewX) * scaleY;
        if (skewX) {
            skewY *= _DEG2RAD;
            temp = Math.tan(skewX - skewY);
            temp = Math.sqrt(1 + temp * temp);
            a12 *= temp;
            a22 *= temp;
            if (skewY) {
                temp = Math.tan(skewY);
                temp = Math.sqrt(1 + temp * temp);
                a11 *= temp;
                a21 *= temp;
            }
        }
        a11 = (0, _gsapCoreJs._round)(a11);
        a21 = (0, _gsapCoreJs._round)(a21);
        a12 = (0, _gsapCoreJs._round)(a12);
        a22 = (0, _gsapCoreJs._round)(a22);
    } else {
        a11 = scaleX;
        a22 = scaleY;
        a21 = a12 = 0;
    }
    if (tx && !~(x + "").indexOf("px") || ty && !~(y + "").indexOf("px")) {
        tx = _convertToUnit(target, "x", x, "px");
        ty = _convertToUnit(target, "y", y, "px");
    }
    if (xOrigin || yOrigin || xOffset || yOffset) {
        tx = (0, _gsapCoreJs._round)(tx + xOrigin - (xOrigin * a11 + yOrigin * a12) + xOffset);
        ty = (0, _gsapCoreJs._round)(ty + yOrigin - (xOrigin * a21 + yOrigin * a22) + yOffset);
    }
    if (xPercent || yPercent) {
        //The SVG spec doesn't support percentage-based translation in the "transform" attribute, so we merge it into the translation to simulate it.
        temp = target.getBBox();
        tx = (0, _gsapCoreJs._round)(tx + xPercent / 100 * temp.width);
        ty = (0, _gsapCoreJs._round)(ty + yPercent / 100 * temp.height);
    }
    temp = "matrix(" + a11 + "," + a21 + "," + a12 + "," + a22 + "," + tx + "," + ty + ")";
    target.setAttribute("transform", temp);
    forceCSS && (target.style[_transformProp] = temp); //some browsers prioritize CSS transforms over the transform attribute. When we sense that the user has CSS transforms applied, we must overwrite them this way (otherwise some browser simply won't render the transform attribute changes!)
}, _addRotationalPropTween = function _addRotationalPropTween(plugin, target, property, startNum, endValue) {
    var cap = 360, isString = (0, _gsapCoreJs._isString)(endValue), endNum = parseFloat(endValue) * (isString && ~endValue.indexOf("rad") ? _RAD2DEG : 1), change = endNum - startNum, finalValue = startNum + change + "deg", direction, pt;
    if (isString) {
        direction = endValue.split("_")[1];
        if (direction === "short") {
            change %= cap;
            if (change !== change % (cap / 2)) change += change < 0 ? cap : -cap;
        }
        if (direction === "cw" && change < 0) change = (change + cap * _bigNum) % cap - ~~(change / cap) * cap;
        else if (direction === "ccw" && change > 0) change = (change - cap * _bigNum) % cap - ~~(change / cap) * cap;
    }
    plugin._pt = pt = new (0, _gsapCoreJs.PropTween)(plugin._pt, target, property, startNum, change, _renderPropWithEnd);
    pt.e = finalValue;
    pt.u = "deg";
    plugin._props.push(property);
    return pt;
}, _assign = function _assign(target, source) {
    // Internet Explorer doesn't have Object.assign(), so we recreate it here.
    for(var p in source)target[p] = source[p];
    return target;
}, _addRawTransformPTs = function _addRawTransformPTs(plugin, transforms, target) {
    //for handling cases where someone passes in a whole transform string, like transform: "scale(2, 3) rotate(20deg) translateY(30em)"
    var startCache = _assign({}, target._gsap), exclude = "perspective,force3D,transformOrigin,svgOrigin", style = target.style, endCache, p, startValue, endValue, startNum, endNum, startUnit, endUnit;
    if (startCache.svg) {
        startValue = target.getAttribute("transform");
        target.setAttribute("transform", "");
        style[_transformProp] = transforms;
        endCache = _parseTransform(target, 1);
        _removeProperty(target, _transformProp);
        target.setAttribute("transform", startValue);
    } else {
        startValue = getComputedStyle(target)[_transformProp];
        style[_transformProp] = transforms;
        endCache = _parseTransform(target, 1);
        style[_transformProp] = startValue;
    }
    for(p in _transformProps){
        startValue = startCache[p];
        endValue = endCache[p];
        if (startValue !== endValue && exclude.indexOf(p) < 0) {
            //tweening to no perspective gives very unintuitive results - just keep the same perspective in that case.
            startUnit = (0, _gsapCoreJs.getUnit)(startValue);
            endUnit = (0, _gsapCoreJs.getUnit)(endValue);
            startNum = startUnit !== endUnit ? _convertToUnit(target, p, startValue, endUnit) : parseFloat(startValue);
            endNum = parseFloat(endValue);
            plugin._pt = new (0, _gsapCoreJs.PropTween)(plugin._pt, endCache, p, startNum, endNum - startNum, _renderCSSProp);
            plugin._pt.u = endUnit || 0;
            plugin._props.push(p);
        }
    }
    _assign(endCache, startCache);
}; // handle splitting apart padding, margin, borderWidth, and borderRadius into their 4 components. Firefox, for example, won't report borderRadius correctly - it will only do borderTopLeftRadius and the other corners. We also want to handle paddingTop, marginLeft, borderRightWidth, etc.
(0, _gsapCoreJs._forEachName)("padding,margin,Width,Radius", function(name, index) {
    var t = "Top", r = "Right", b = "Bottom", l = "Left", props = (index < 3 ? [
        t,
        r,
        b,
        l
    ] : [
        t + l,
        t + r,
        b + r,
        b + l
    ]).map(function(side) {
        return index < 2 ? name + side : "border" + side + name;
    });
    _specialProps[index > 1 ? "border" + name : name] = function(plugin, target, property, endValue, tween) {
        var a, vars;
        if (arguments.length < 4) {
            // getter, passed target, property, and unit (from _get())
            a = props.map(function(prop) {
                return _get(plugin, prop, property);
            });
            vars = a.join(" ");
            return vars.split(a[0]).length === 5 ? a[0] : vars;
        }
        a = (endValue + "").split(" ");
        vars = {};
        props.forEach(function(prop, i) {
            return vars[prop] = a[i] = a[i] || a[(i - 1) / 2 | 0];
        });
        plugin.init(target, vars, tween);
    };
});
var CSSPlugin = {
    name: "css",
    register: _initCore,
    targetTest: function targetTest(target) {
        return target.style && target.nodeType;
    },
    init: function init(target, vars, tween, index, targets) {
        var props = this._props, style = target.style, startAt = tween.vars.startAt, startValue, endValue, endNum, startNum, type, specialProp, p, startUnit, endUnit, relative, isTransformRelated, transformPropTween, cache, smooth, hasPriority, inlineProps;
        _pluginInitted || _initCore(); // we may call init() multiple times on the same plugin instance, like when adding special properties, so make sure we don't overwrite the revert data or inlineProps
        this.styles = this.styles || _getStyleSaver(target);
        inlineProps = this.styles.props;
        this.tween = tween;
        for(p in vars){
            if (p === "autoRound") continue;
            endValue = vars[p];
            if ((0, _gsapCoreJs._plugins)[p] && (0, _gsapCoreJs._checkPlugin)(p, vars, tween, index, target, targets)) continue;
            type = typeof endValue;
            specialProp = _specialProps[p];
            if (type === "function") {
                endValue = endValue.call(tween, index, target, targets);
                type = typeof endValue;
            }
            if (type === "string" && ~endValue.indexOf("random(")) endValue = (0, _gsapCoreJs._replaceRandom)(endValue);
            if (specialProp) specialProp(this, target, p, endValue, tween) && (hasPriority = 1);
            else if (p.substr(0, 2) === "--") {
                //CSS variable
                startValue = (getComputedStyle(target).getPropertyValue(p) + "").trim();
                endValue += "";
                (0, _gsapCoreJs._colorExp).lastIndex = 0;
                if (!(0, _gsapCoreJs._colorExp).test(startValue)) {
                    // colors don't have units
                    startUnit = (0, _gsapCoreJs.getUnit)(startValue);
                    endUnit = (0, _gsapCoreJs.getUnit)(endValue);
                }
                endUnit ? startUnit !== endUnit && (startValue = _convertToUnit(target, p, startValue, endUnit) + endUnit) : startUnit && (endValue += startUnit);
                this.add(style, "setProperty", startValue, endValue, index, targets, 0, 0, p);
                props.push(p);
                inlineProps.push(p, 0, style[p]);
            } else if (type !== "undefined") {
                if (startAt && p in startAt) {
                    // in case someone hard-codes a complex value as the start, like top: "calc(2vh / 2)". Without this, it'd use the computed value (always in px)
                    startValue = typeof startAt[p] === "function" ? startAt[p].call(tween, index, target, targets) : startAt[p];
                    (0, _gsapCoreJs._isString)(startValue) && ~startValue.indexOf("random(") && (startValue = (0, _gsapCoreJs._replaceRandom)(startValue));
                    (0, _gsapCoreJs.getUnit)(startValue + "") || startValue === "auto" || (startValue += (0, _gsapCoreJs._config).units[p] || (0, _gsapCoreJs.getUnit)(_get(target, p)) || ""); // for cases when someone passes in a unitless value like {x: 100}; if we try setting translate(100, 0px) it won't work.
                    (startValue + "").charAt(1) === "=" && (startValue = _get(target, p)); // can't work with relative values
                } else startValue = _get(target, p);
                startNum = parseFloat(startValue);
                relative = type === "string" && endValue.charAt(1) === "=" && endValue.substr(0, 2);
                relative && (endValue = endValue.substr(2));
                endNum = parseFloat(endValue);
                if (p in _propertyAliases) {
                    if (p === "autoAlpha") {
                        //special case where we control the visibility along with opacity. We still allow the opacity value to pass through and get tweened.
                        if (startNum === 1 && _get(target, "visibility") === "hidden" && endNum) //if visibility is initially set to "hidden", we should interpret that as intent to make opacity 0 (a convenience)
                        startNum = 0;
                        inlineProps.push("visibility", 0, style.visibility);
                        _addNonTweeningPT(this, style, "visibility", startNum ? "inherit" : "hidden", endNum ? "inherit" : "hidden", !endNum);
                    }
                    if (p !== "scale" && p !== "transform") {
                        p = _propertyAliases[p];
                        ~p.indexOf(",") && (p = p.split(",")[0]);
                    }
                }
                isTransformRelated = p in _transformProps; //--- TRANSFORM-RELATED ---
                if (isTransformRelated) {
                    this.styles.save(p);
                    if (!transformPropTween) {
                        cache = target._gsap;
                        cache.renderTransform && !vars.parseTransform || _parseTransform(target, vars.parseTransform); // if, for example, gsap.set(... {transform:"translateX(50vw)"}), the _get() call doesn't parse the transform, thus cache.renderTransform won't be set yet so force the parsing of the transform here.
                        smooth = vars.smoothOrigin !== false && cache.smooth;
                        transformPropTween = this._pt = new (0, _gsapCoreJs.PropTween)(this._pt, style, _transformProp, 0, 1, cache.renderTransform, cache, 0, -1); //the first time through, create the rendering PropTween so that it runs LAST (in the linked list, we keep adding to the beginning)
                        transformPropTween.dep = 1; //flag it as dependent so that if things get killed/overwritten and this is the only PropTween left, we can safely kill the whole tween.
                    }
                    if (p === "scale") {
                        this._pt = new (0, _gsapCoreJs.PropTween)(this._pt, cache, "scaleY", cache.scaleY, (relative ? (0, _gsapCoreJs._parseRelative)(cache.scaleY, relative + endNum) : endNum) - cache.scaleY || 0, _renderCSSProp);
                        this._pt.u = 0;
                        props.push("scaleY", p);
                        p += "X";
                    } else if (p === "transformOrigin") {
                        inlineProps.push(_transformOriginProp, 0, style[_transformOriginProp]);
                        endValue = _convertKeywordsToPercentages(endValue); //in case something like "left top" or "bottom right" is passed in. Convert to percentages.
                        if (cache.svg) _applySVGOrigin(target, endValue, 0, smooth, 0, this);
                        else {
                            endUnit = parseFloat(endValue.split(" ")[2]) || 0; //handle the zOrigin separately!
                            endUnit !== cache.zOrigin && _addNonTweeningPT(this, cache, "zOrigin", cache.zOrigin, endUnit);
                            _addNonTweeningPT(this, style, p, _firstTwoOnly(startValue), _firstTwoOnly(endValue));
                        }
                        continue;
                    } else if (p === "svgOrigin") {
                        _applySVGOrigin(target, endValue, 1, smooth, 0, this);
                        continue;
                    } else if (p in _rotationalProperties) {
                        _addRotationalPropTween(this, cache, p, startNum, relative ? (0, _gsapCoreJs._parseRelative)(startNum, relative + endValue) : endValue);
                        continue;
                    } else if (p === "smoothOrigin") {
                        _addNonTweeningPT(this, cache, "smooth", cache.smooth, endValue);
                        continue;
                    } else if (p === "force3D") {
                        cache[p] = endValue;
                        continue;
                    } else if (p === "transform") {
                        _addRawTransformPTs(this, endValue, target);
                        continue;
                    }
                } else if (!(p in style)) p = _checkPropPrefix(p) || p;
                if (isTransformRelated || (endNum || endNum === 0) && (startNum || startNum === 0) && !_complexExp.test(endValue) && p in style) {
                    startUnit = (startValue + "").substr((startNum + "").length);
                    endNum || (endNum = 0); // protect against NaN
                    endUnit = (0, _gsapCoreJs.getUnit)(endValue) || (p in (0, _gsapCoreJs._config).units ? (0, _gsapCoreJs._config).units[p] : startUnit);
                    startUnit !== endUnit && (startNum = _convertToUnit(target, p, startValue, endUnit));
                    this._pt = new (0, _gsapCoreJs.PropTween)(this._pt, isTransformRelated ? cache : style, p, startNum, (relative ? (0, _gsapCoreJs._parseRelative)(startNum, relative + endNum) : endNum) - startNum, !isTransformRelated && (endUnit === "px" || p === "zIndex") && vars.autoRound !== false ? _renderRoundedCSSProp : _renderCSSProp);
                    this._pt.u = endUnit || 0;
                    if (startUnit !== endUnit && endUnit !== "%") {
                        //when the tween goes all the way back to the beginning, we need to revert it to the OLD/ORIGINAL value (with those units). We record that as a "b" (beginning) property and point to a render method that handles that. (performance optimization)
                        this._pt.b = startValue;
                        this._pt.r = _renderCSSPropWithBeginning;
                    }
                } else if (!(p in style)) {
                    if (p in target) //maybe it's not a style - it could be a property added directly to an element in which case we'll try to animate that.
                    this.add(target, p, startValue || target[p], relative ? relative + endValue : endValue, index, targets);
                    else if (p !== "parseTransform") {
                        (0, _gsapCoreJs._missingPlugin)(p, endValue);
                        continue;
                    }
                } else _tweenComplexCSSString.call(this, target, p, startValue, relative ? relative + endValue : endValue);
                isTransformRelated || (p in style ? inlineProps.push(p, 0, style[p]) : inlineProps.push(p, 1, startValue || target[p]));
                props.push(p);
            }
        }
        hasPriority && (0, _gsapCoreJs._sortPropTweensByPriority)(this);
    },
    render: function render(ratio, data) {
        if (data.tween._time || !_reverting()) {
            var pt = data._pt;
            while(pt){
                pt.r(ratio, pt.d);
                pt = pt._next;
            }
        } else data.styles.revert();
    },
    get: _get,
    aliases: _propertyAliases,
    getSetter: function getSetter(target, property, plugin) {
        //returns a setter function that accepts target, property, value and applies it accordingly. Remember, properties like "x" aren't as simple as target.style.property = value because they've got to be applied to a proxy object and then merged into a transform string in a renderer.
        var p = _propertyAliases[property];
        p && p.indexOf(",") < 0 && (property = p);
        return property in _transformProps && property !== _transformOriginProp && (target._gsap.x || _get(target, "x")) ? plugin && _recentSetterPlugin === plugin ? property === "scale" ? _setterScale : _setterTransform : (_recentSetterPlugin = plugin || {}, property === "scale" ? _setterScaleWithRender : _setterTransformWithRender) : target.style && !(0, _gsapCoreJs._isUndefined)(target.style[property]) ? _setterCSSStyle : ~property.indexOf("-") ? _setterCSSProp : (0, _gsapCoreJs._getSetter)(target, property);
    },
    core: {
        _removeProperty: _removeProperty,
        _getMatrix: _getMatrix
    }
};
(0, _gsapCoreJs.gsap).utils.checkPrefix = _checkPropPrefix;
(0, _gsapCoreJs.gsap).core.getStyleSaver = _getStyleSaver;
(function(positionAndScale, rotation, others, aliases) {
    var all = (0, _gsapCoreJs._forEachName)(positionAndScale + "," + rotation + "," + others, function(name) {
        _transformProps[name] = 1;
    });
    (0, _gsapCoreJs._forEachName)(rotation, function(name) {
        (0, _gsapCoreJs._config).units[name] = "deg";
        _rotationalProperties[name] = 1;
    });
    _propertyAliases[all[13]] = positionAndScale + "," + rotation;
    (0, _gsapCoreJs._forEachName)(aliases, function(name) {
        var split = name.split(":");
        _propertyAliases[split[1]] = all[split[0]];
    });
})("x,y,z,scale,scaleX,scaleY,xPercent,yPercent", "rotation,rotationX,rotationY,skewX,skewY", "transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective", "0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY");
(0, _gsapCoreJs._forEachName)("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective", function(name) {
    (0, _gsapCoreJs._config).units[name] = "px";
});
(0, _gsapCoreJs.gsap).registerPlugin(CSSPlugin);

},{"./gsap-core.js":"4cDHE","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"1K7Kz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _events = require("events");
var _eventsDefault = parcelHelpers.interopDefault(_events);
exports.default = class extends (0, _eventsDefault.default) {
    constructor({ element  }){
        super();
        this.addEventListeners();
    }
    addEventListeners() {}
    removeEventListeners() {}
    async create() {
        await this.generate();
    }
    destroy() {
        this.removeEventListeners();
    }
};

},{"events":"32fHr","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"32fHr":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
"use strict";
var R = typeof Reflect === "object" ? Reflect : null;
var ReflectApply = R && typeof R.apply === "function" ? R.apply : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
};
var ReflectOwnKeys;
if (R && typeof R.ownKeys === "function") ReflectOwnKeys = R.ownKeys;
else if (Object.getOwnPropertySymbols) ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));
};
else ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
};
function ProcessEmitWarning(warning) {
    if (console && console.warn) console.warn(warning);
}
var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
    return value !== value;
};
function EventEmitter() {
    EventEmitter.init.call(this);
}
module.exports = EventEmitter;
module.exports.once = once;
// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;
EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;
// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;
function checkListener(listener) {
    if (typeof listener !== "function") throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
}
Object.defineProperty(EventEmitter, "defaultMaxListeners", {
    enumerable: true,
    get: function() {
        return defaultMaxListeners;
    },
    set: function(arg) {
        if (typeof arg !== "number" || arg < 0 || NumberIsNaN(arg)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + ".");
        defaultMaxListeners = arg;
    }
});
EventEmitter.init = function() {
    if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {
        this._events = Object.create(null);
        this._eventsCount = 0;
    }
    this._maxListeners = this._maxListeners || undefined;
};
// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
    if (typeof n !== "number" || n < 0 || NumberIsNaN(n)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + ".");
    this._maxListeners = n;
    return this;
};
function _getMaxListeners(that) {
    if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;
    return that._maxListeners;
}
EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
    return _getMaxListeners(this);
};
EventEmitter.prototype.emit = function emit(type) {
    var args = [];
    for(var i = 1; i < arguments.length; i++)args.push(arguments[i]);
    var doError = type === "error";
    var events = this._events;
    if (events !== undefined) doError = doError && events.error === undefined;
    else if (!doError) return false;
    // If there is no 'error' event listener then throw.
    if (doError) {
        var er;
        if (args.length > 0) er = args[0];
        if (er instanceof Error) // Note: The comments on the `throw` lines are intentional, they show
        // up in Node's output if this results in an unhandled exception.
        throw er; // Unhandled 'error' event
        // At least give some kind of context to the user
        var err = new Error("Unhandled error." + (er ? " (" + er.message + ")" : ""));
        err.context = er;
        throw err; // Unhandled 'error' event
    }
    var handler = events[type];
    if (handler === undefined) return false;
    if (typeof handler === "function") ReflectApply(handler, this, args);
    else {
        var len = handler.length;
        var listeners = arrayClone(handler, len);
        for(var i = 0; i < len; ++i)ReflectApply(listeners[i], this, args);
    }
    return true;
};
function _addListener(target, type, listener, prepend) {
    var m;
    var events;
    var existing;
    checkListener(listener);
    events = target._events;
    if (events === undefined) {
        events = target._events = Object.create(null);
        target._eventsCount = 0;
    } else {
        // To avoid recursion in the case that type === "newListener"! Before
        // adding it to the listeners, first emit "newListener".
        if (events.newListener !== undefined) {
            target.emit("newListener", type, listener.listener ? listener.listener : listener);
            // Re-assign `events` because a newListener handler could have caused the
            // this._events to be assigned to a new object
            events = target._events;
        }
        existing = events[type];
    }
    if (existing === undefined) {
        // Optimize the case of one listener. Don't need the extra array object.
        existing = events[type] = listener;
        ++target._eventsCount;
    } else {
        if (typeof existing === "function") // Adding the second element, need to change to array.
        existing = events[type] = prepend ? [
            listener,
            existing
        ] : [
            existing,
            listener
        ];
        else if (prepend) existing.unshift(listener);
        else existing.push(listener);
        // Check for listener leak
        m = _getMaxListeners(target);
        if (m > 0 && existing.length > m && !existing.warned) {
            existing.warned = true;
            // No error code for this since it is a Warning
            // eslint-disable-next-line no-restricted-syntax
            var w = new Error("Possible EventEmitter memory leak detected. " + existing.length + " " + String(type) + " listeners " + "added. Use emitter.setMaxListeners() to " + "increase limit");
            w.name = "MaxListenersExceededWarning";
            w.emitter = target;
            w.type = type;
            w.count = existing.length;
            ProcessEmitWarning(w);
        }
    }
    return target;
}
EventEmitter.prototype.addListener = function addListener(type, listener) {
    return _addListener(this, type, listener, false);
};
EventEmitter.prototype.on = EventEmitter.prototype.addListener;
EventEmitter.prototype.prependListener = function prependListener(type, listener) {
    return _addListener(this, type, listener, true);
};
function onceWrapper() {
    if (!this.fired) {
        this.target.removeListener(this.type, this.wrapFn);
        this.fired = true;
        if (arguments.length === 0) return this.listener.call(this.target);
        return this.listener.apply(this.target, arguments);
    }
}
function _onceWrap(target, type, listener) {
    var state = {
        fired: false,
        wrapFn: undefined,
        target: target,
        type: type,
        listener: listener
    };
    var wrapped = onceWrapper.bind(state);
    wrapped.listener = listener;
    state.wrapFn = wrapped;
    return wrapped;
}
EventEmitter.prototype.once = function once(type, listener) {
    checkListener(listener);
    this.on(type, _onceWrap(this, type, listener));
    return this;
};
EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
    checkListener(listener);
    this.prependListener(type, _onceWrap(this, type, listener));
    return this;
};
// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener = function removeListener(type, listener) {
    var list, events, position, i, originalListener;
    checkListener(listener);
    events = this._events;
    if (events === undefined) return this;
    list = events[type];
    if (list === undefined) return this;
    if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0) this._events = Object.create(null);
        else {
            delete events[type];
            if (events.removeListener) this.emit("removeListener", type, list.listener || listener);
        }
    } else if (typeof list !== "function") {
        position = -1;
        for(i = list.length - 1; i >= 0; i--)if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
        }
        if (position < 0) return this;
        if (position === 0) list.shift();
        else spliceOne(list, position);
        if (list.length === 1) events[type] = list[0];
        if (events.removeListener !== undefined) this.emit("removeListener", type, originalListener || listener);
    }
    return this;
};
EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
    var listeners, events, i;
    events = this._events;
    if (events === undefined) return this;
    // not listening for removeListener, no need to emit
    if (events.removeListener === undefined) {
        if (arguments.length === 0) {
            this._events = Object.create(null);
            this._eventsCount = 0;
        } else if (events[type] !== undefined) {
            if (--this._eventsCount === 0) this._events = Object.create(null);
            else delete events[type];
        }
        return this;
    }
    // emit removeListener for all listeners on all events
    if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for(i = 0; i < keys.length; ++i){
            key = keys[i];
            if (key === "removeListener") continue;
            this.removeAllListeners(key);
        }
        this.removeAllListeners("removeListener");
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
    }
    listeners = events[type];
    if (typeof listeners === "function") this.removeListener(type, listeners);
    else if (listeners !== undefined) // LIFO order
    for(i = listeners.length - 1; i >= 0; i--)this.removeListener(type, listeners[i]);
    return this;
};
function _listeners(target, type, unwrap) {
    var events = target._events;
    if (events === undefined) return [];
    var evlistener = events[type];
    if (evlistener === undefined) return [];
    if (typeof evlistener === "function") return unwrap ? [
        evlistener.listener || evlistener
    ] : [
        evlistener
    ];
    return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}
EventEmitter.prototype.listeners = function listeners(type) {
    return _listeners(this, type, true);
};
EventEmitter.prototype.rawListeners = function rawListeners(type) {
    return _listeners(this, type, false);
};
EventEmitter.listenerCount = function(emitter, type) {
    if (typeof emitter.listenerCount === "function") return emitter.listenerCount(type);
    else return listenerCount.call(emitter, type);
};
EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
    var events = this._events;
    if (events !== undefined) {
        var evlistener = events[type];
        if (typeof evlistener === "function") return 1;
        else if (evlistener !== undefined) return evlistener.length;
    }
    return 0;
}
EventEmitter.prototype.eventNames = function eventNames() {
    return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};
function arrayClone(arr, n) {
    var copy = new Array(n);
    for(var i = 0; i < n; ++i)copy[i] = arr[i];
    return copy;
}
function spliceOne(list, index) {
    for(; index + 1 < list.length; index++)list[index] = list[index + 1];
    list.pop();
}
function unwrapListeners(arr) {
    var ret = new Array(arr.length);
    for(var i = 0; i < ret.length; ++i)ret[i] = arr[i].listener || arr[i];
    return ret;
}
function once(emitter, name) {
    return new Promise(function(resolve, reject) {
        function errorListener(err) {
            emitter.removeListener(name, resolver);
            reject(err);
        }
        function resolver() {
            if (typeof emitter.removeListener === "function") emitter.removeListener("error", errorListener);
            resolve([].slice.call(arguments));
        }
        eventTargetAgnosticAddListener(emitter, name, resolver, {
            once: true
        });
        if (name !== "error") addErrorHandlerIfEventEmitter(emitter, errorListener, {
            once: true
        });
    });
}
function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
    if (typeof emitter.on === "function") eventTargetAgnosticAddListener(emitter, "error", handler, flags);
}
function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
    if (typeof emitter.on === "function") {
        if (flags.once) emitter.once(name, listener);
        else emitter.on(name, listener);
    } else if (typeof emitter.addEventListener === "function") // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
        // IE does not have builtin `{ once: true }` support so we
        // have to do it manually.
        if (flags.once) emitter.removeEventListener(name, wrapListener);
        listener(arg);
    });
    else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
}

},{}],"2VbO1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CustomEase", ()=>CustomEase);
parcelHelpers.export(exports, "default", ()=>CustomEase);
/*!
 * CustomEase 3.12.5
 * https://gsap.com
 *
 * @license Copyright 2008-2024, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license or for
 * Club GSAP members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/ /* eslint-disable */ var _pathsJs = require("./utils/paths.js");
var gsap, _coreInitted, _getGSAP = function _getGSAP() {
    return gsap || typeof window !== "undefined" && (gsap = window.gsap) && gsap.registerPlugin && gsap;
}, _initCore = function _initCore() {
    gsap = _getGSAP();
    if (gsap) {
        gsap.registerEase("_CE", CustomEase.create);
        _coreInitted = 1;
    } else console.warn("Please gsap.registerPlugin(CustomEase)");
}, _bigNum = 1e20, _round = function _round(value) {
    return ~~(value * 1000 + (value < 0 ? -0.5 : .5)) / 1000;
}, _bonusValidated = 1, //<name>CustomEase</name>
_numExp = /[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/gi, //finds any numbers, including ones that start with += or -=, negative numbers, and ones in scientific notation like 1e-8.
_needsParsingExp = /[cLlsSaAhHvVtTqQ]/g, _findMinimum = function _findMinimum(values) {
    var l = values.length, min = _bigNum, i;
    for(i = 1; i < l; i += 6)+values[i] < min && (min = +values[i]);
    return min;
}, //takes all the points and translates/scales them so that the x starts at 0 and ends at 1.
_normalize = function _normalize(values, height, originY) {
    if (!originY && originY !== 0) originY = Math.max(+values[values.length - 1], +values[1]);
    var tx = +values[0] * -1, ty = -originY, l = values.length, sx = 1 / (+values[l - 2] + tx), sy = -height || (Math.abs(+values[l - 1] - +values[1]) < 0.01 * (+values[l - 2] - +values[0]) ? _findMinimum(values) + ty : +values[l - 1] + ty), i;
    if (sy) //typically y ends at 1 (so that the end values are reached)
    sy = 1 / sy;
    else //in case the ease returns to its beginning value, scale everything proportionally
    sy = -sx;
    for(i = 0; i < l; i += 2){
        values[i] = (+values[i] + tx) * sx;
        values[i + 1] = (+values[i + 1] + ty) * sy;
    }
}, //note that this function returns point objects like {x, y} rather than working with segments which are arrays with alternating x, y values as in the similar function in paths.js
_bezierToPoints = function _bezierToPoints(x1, y1, x2, y2, x3, y3, x4, y4, threshold, points, index) {
    var x12 = (x1 + x2) / 2, y12 = (y1 + y2) / 2, x23 = (x2 + x3) / 2, y23 = (y2 + y3) / 2, x34 = (x3 + x4) / 2, y34 = (y3 + y4) / 2, x123 = (x12 + x23) / 2, y123 = (y12 + y23) / 2, x234 = (x23 + x34) / 2, y234 = (y23 + y34) / 2, x1234 = (x123 + x234) / 2, y1234 = (y123 + y234) / 2, dx = x4 - x1, dy = y4 - y1, d2 = Math.abs((x2 - x4) * dy - (y2 - y4) * dx), d3 = Math.abs((x3 - x4) * dy - (y3 - y4) * dx), length;
    if (!points) {
        points = [
            {
                x: x1,
                y: y1
            },
            {
                x: x4,
                y: y4
            }
        ];
        index = 1;
    }
    points.splice(index || points.length - 1, 0, {
        x: x1234,
        y: y1234
    });
    if ((d2 + d3) * (d2 + d3) > threshold * (dx * dx + dy * dy)) {
        length = points.length;
        _bezierToPoints(x1, y1, x12, y12, x123, y123, x1234, y1234, threshold, points, index);
        _bezierToPoints(x1234, y1234, x234, y234, x34, y34, x4, y4, threshold, points, index + 1 + (points.length - length));
    }
    return points;
};
var CustomEase = /*#__PURE__*/ function() {
    function CustomEase(id, data, config) {
        _coreInitted || _initCore();
        this.id = id;
        _bonusValidated && this.setData(data, config);
    }
    var _proto = CustomEase.prototype;
    _proto.setData = function setData(data, config) {
        config = config || {};
        data = data || "0,0,1,1";
        var values = data.match(_numExp), closest = 1, points = [], lookup = [], precision = config.precision || 1, fast = precision <= 1, l, a1, a2, i, inc, j, point, prevPoint, p;
        this.data = data;
        if (_needsParsingExp.test(data) || ~data.indexOf("M") && data.indexOf("C") < 0) values = (0, _pathsJs.stringToRawPath)(data)[0];
        l = values.length;
        if (l === 4) {
            values.unshift(0, 0);
            values.push(1, 1);
            l = 8;
        } else if ((l - 2) % 6) throw "Invalid CustomEase";
        if (+values[0] !== 0 || +values[l - 2] !== 1) _normalize(values, config.height, config.originY);
        this.segment = values;
        for(i = 2; i < l; i += 6){
            a1 = {
                x: +values[i - 2],
                y: +values[i - 1]
            };
            a2 = {
                x: +values[i + 4],
                y: +values[i + 5]
            };
            points.push(a1, a2);
            _bezierToPoints(a1.x, a1.y, +values[i], +values[i + 1], +values[i + 2], +values[i + 3], a2.x, a2.y, 1 / (precision * 200000), points, points.length - 1);
        }
        l = points.length;
        for(i = 0; i < l; i++){
            point = points[i];
            prevPoint = points[i - 1] || point;
            if ((point.x > prevPoint.x || prevPoint.y !== point.y && prevPoint.x === point.x || point === prevPoint) && point.x <= 1) {
                //if a point goes BACKWARD in time or is a duplicate, just drop it. Also it shouldn't go past 1 on the x axis, as could happen in a string like "M0,0 C0,0 0.12,0.68 0.18,0.788 0.195,0.845 0.308,1 0.32,1 0.403,1.005 0.398,1 0.5,1 0.602,1 0.816,1.005 0.9,1 0.91,1 0.948,0.69 0.962,0.615 1.003,0.376 1,0 1,0".
                prevPoint.cx = point.x - prevPoint.x; //change in x between this point and the next point (performance optimization)
                prevPoint.cy = point.y - prevPoint.y;
                prevPoint.n = point;
                prevPoint.nx = point.x; //next point's x value (performance optimization, making lookups faster in getRatio()). Remember, the lookup will always land on a spot where it's either this point or the very next one (never beyond that)
                if (fast && i > 1 && Math.abs(prevPoint.cy / prevPoint.cx - points[i - 2].cy / points[i - 2].cx) > 2) //if there's a sudden change in direction, prioritize accuracy over speed. Like a bounce ease - you don't want to risk the sampling chunks landing on each side of the bounce anchor and having it clipped off.
                fast = 0;
                if (prevPoint.cx < closest) {
                    if (!prevPoint.cx) {
                        prevPoint.cx = 0.001; //avoids math problems in getRatio() (dividing by zero)
                        if (i === l - 1) {
                            //in case the final segment goes vertical RIGHT at the end, make sure we end at the end.
                            prevPoint.x -= 0.001;
                            closest = Math.min(closest, 0.001);
                            fast = 0;
                        }
                    } else closest = prevPoint.cx;
                }
            } else {
                points.splice(i--, 1);
                l--;
            }
        }
        l = 1 / closest + 1 | 0;
        inc = 1 / l;
        j = 0;
        point = points[0];
        if (fast) {
            for(i = 0; i < l; i++){
                //for fastest lookups, we just sample along the path at equal x (time) distance. Uses more memory and is slightly less accurate for anchors that don't land on the sampling points, but for the vast majority of eases it's excellent (and fast).
                p = i * inc;
                if (point.nx < p) point = points[++j];
                a1 = point.y + (p - point.x) / point.cx * point.cy;
                lookup[i] = {
                    x: p,
                    cx: inc,
                    y: a1,
                    cy: 0,
                    nx: 9
                };
                if (i) lookup[i - 1].cy = a1 - lookup[i - 1].y;
            }
            lookup[l - 1].cy = points[points.length - 1].y - a1;
        } else {
            //this option is more accurate, ensuring that EVERY anchor is hit perfectly. Clipping across a bounce, for example, would never happen.
            for(i = 0; i < l; i++){
                //build a lookup table based on the smallest distance so that we can instantly find the appropriate point (well, it'll either be that point or the very next one). We'll look up based on the linear progress. So it's it's 0.5 and the lookup table has 100 elements, it'd be like lookup[Math.floor(0.5 * 100)]
                if (point.nx < i * inc) point = points[++j];
                lookup[i] = point;
            }
            if (j < points.length - 1) lookup[i - 1] = points[points.length - 2];
        } //this._calcEnd = (points[points.length-1].y !== 1 || points[0].y !== 0); //ensures that we don't run into floating point errors. As long as we're starting at 0 and ending at 1, tell GSAP to skip the final calculation and use 0/1 as the factor.
        this.ease = function(p) {
            var point = lookup[p * l | 0] || lookup[l - 1];
            if (point.nx < p) point = point.n;
            return point.y + (p - point.x) / point.cx * point.cy;
        };
        this.ease.custom = this;
        this.id && gsap && gsap.registerEase(this.id, this.ease);
        return this;
    };
    _proto.getSVGData = function getSVGData(config) {
        return CustomEase.getSVGData(this, config);
    };
    CustomEase.create = function create(id, data, config) {
        return new CustomEase(id, data, config).ease;
    };
    CustomEase.register = function register(core) {
        gsap = core;
        _initCore();
    };
    CustomEase.get = function get(id) {
        return gsap.parseEase(id);
    };
    CustomEase.getSVGData = function getSVGData(ease, config) {
        config = config || {};
        var width = config.width || 100, height = config.height || 100, x = config.x || 0, y = (config.y || 0) + height, e = gsap.utils.toArray(config.path)[0], a, slope, i, inc, tx, ty, precision, threshold, prevX, prevY;
        if (config.invert) {
            height = -height;
            y = 0;
        }
        if (typeof ease === "string") ease = gsap.parseEase(ease);
        if (ease.custom) ease = ease.custom;
        if (ease instanceof CustomEase) a = (0, _pathsJs.rawPathToString)((0, _pathsJs.transformRawPath)([
            ease.segment
        ], width, 0, 0, -height, x, y));
        else {
            a = [
                x,
                y
            ];
            precision = Math.max(5, (config.precision || 1) * 200);
            inc = 1 / precision;
            precision += 2;
            threshold = 5 / precision;
            prevX = _round(x + inc * width);
            prevY = _round(y + ease(inc) * -height);
            slope = (prevY - y) / (prevX - x);
            for(i = 2; i < precision; i++){
                tx = _round(x + i * inc * width);
                ty = _round(y + ease(i * inc) * -height);
                if (Math.abs((ty - prevY) / (tx - prevX) - slope) > threshold || i === precision - 1) {
                    //only add points when the slope changes beyond the threshold
                    a.push(prevX, prevY);
                    slope = (ty - prevY) / (tx - prevX);
                }
                prevX = tx;
                prevY = ty;
            }
            a = "M" + a.join(",");
        }
        e && e.setAttribute("d", a);
        return a;
    };
    return CustomEase;
}();
_getGSAP() && gsap.registerPlugin(CustomEase);
CustomEase.version = "3.12.5";

},{"./utils/paths.js":"6AgZ9","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"6AgZ9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/* TERMINOLOGY
 - RawPath - an array of arrays, one for each Segment. A single RawPath could have multiple "M" commands, defining Segments (paths aren't always connected).
 - Segment - an array containing a sequence of Cubic Bezier coordinates in alternating x, y, x, y format. Starting anchor, then control point 1, control point 2, and ending anchor, then the next control point 1, control point 2, anchor, etc. Uses less memory than an array with a bunch of {x, y} points.
 - Bezier - a single cubic Bezier with a starting anchor, two control points, and an ending anchor.
 - the variable "t" is typically the position along an individual Bezier path (time) and it's NOT linear, meaning it could accelerate/decelerate based on the control points whereas the "p" or "progress" value is linearly mapped to the whole path, so it shouldn't really accelerate/decelerate based on control points. So a progress of 0.2 would be almost exactly 20% along the path. "t" is ONLY in an individual Bezier piece.
 */ //accepts basic selector text, a path instance, a RawPath instance, or a Segment and returns a RawPath (makes it easy to homogenize things). If an element or selector text is passed in, it'll also cache the value so that if it's queried again, it'll just take the path data from there instead of parsing it all over again (as long as the path data itself hasn't changed - it'll check).
parcelHelpers.export(exports, "getRawPath", ()=>getRawPath) //copies a RawPath WITHOUT the length meta data (for speed)
;
parcelHelpers.export(exports, "copyRawPath", ()=>copyRawPath);
parcelHelpers.export(exports, "reverseSegment", ()=>reverseSegment);
parcelHelpers.export(exports, "convertToPath", ()=>convertToPath) //returns the rotation (in degrees) at a particular progress on a rawPath (the slope of the tangent)
;
parcelHelpers.export(exports, "getRotationAtProgress", ()=>getRotationAtProgress);
parcelHelpers.export(exports, "sliceRawPath", ()=>sliceRawPath) //measures a Segment according to its resolution (so if segment.resolution is 6, for example, it'll take 6 samples equally across each Bezier) and create/populate a "samples" Array that has the length up to each of those sample points (always increasing from the start) as well as a "lookup" array that's broken up according to the smallest distance between 2 samples. This gives us a very fast way of looking up a progress position rather than looping through all the points/Beziers. You can optionally have it only measure a subset, starting at startIndex and going for a specific number of beziers (remember, there are 3 x/y pairs each, for a total of 6 elements for each Bezier). It will also populate a "totalLength" property, but that's not generally super accurate because by default it'll only take 6 samples per Bezier. But for performance reasons, it's perfectly adequate for measuring progress values along the path. If you need a more accurate totalLength, either increase the resolution or use the more advanced bezierToPoints() method which keeps adding points until they don't deviate by more than a certain precision value.
;
parcelHelpers.export(exports, "cacheRawPathMeasurements", ()=>cacheRawPathMeasurements) //divide segment[i] at position t (value between 0 and 1, progress along that particular cubic bezier segment that starts at segment[i]). Returns how many elements were spliced into the segment array (either 0 or 6)
;
parcelHelpers.export(exports, "subdivideSegment", ()=>subdivideSegment) // returns an object {path, segment, segIndex, i, t}
;
parcelHelpers.export(exports, "getPositionOnPath", ()=>getPositionOnPath) //applies a matrix transform to RawPath (or a segment in a RawPath) and returns whatever was passed in (it transforms the values in the array(s), not a copy).
;
parcelHelpers.export(exports, "transformRawPath", ()=>transformRawPath) // translates SVG arc data into a segment (cubic beziers). Angle is in degrees.
;
parcelHelpers.export(exports, "stringToRawPath", ()=>stringToRawPath) //populates the points array in alternating x/y values (like [x, y, x, y...] instead of individual point objects [{x, y}, {x, y}...] to conserve memory and stay in line with how we're handling segment arrays
;
parcelHelpers.export(exports, "bezierToPoints", ()=>bezierToPoints);
/*
function getAngleBetweenPoints(x0, y0, x1, y1, x2, y2) { //angle between 3 points in radians
	var dx1 = x1 - x0,
		dy1 = y1 - y0,
		dx2 = x2 - x1,
		dy2 = y2 - y1,
		dx3 = x2 - x0,
		dy3 = y2 - y0,
		a = dx1 * dx1 + dy1 * dy1,
		b = dx2 * dx2 + dy2 * dy2,
		c = dx3 * dx3 + dy3 * dy3;
	return Math.acos( (a + b - c) / _sqrt(4 * a * b) );
},
*/ //pointsToSegment() doesn't handle flat coordinates (where y is always 0) the way we need (the resulting control points are always right on top of the anchors), so this function basically makes the control points go directly up and down, varying in length based on the curviness (more curvy, further control points)
parcelHelpers.export(exports, "flatPointsToSegment", ()=>flatPointsToSegment) //points is an array of x/y points, like [x, y, x, y, x, y]
;
parcelHelpers.export(exports, "pointsToSegment", ()=>pointsToSegment) //returns the squared distance between an x/y coordinate and a segment between x1/y1 and x2/y2
;
parcelHelpers.export(exports, "simplifyPoints", ()=>simplifyPoints);
parcelHelpers.export(exports, "getClosestData", ()=>getClosestData) //subdivide a Segment closest to a specific x,y coordinate
;
parcelHelpers.export(exports, "subdivideSegmentNear", ()=>subdivideSegmentNear);
/*
Takes any of the following and converts it to an all Cubic Bezier SVG data string:
- A <path> data string like "M0,0 L2,4 v20,15 H100"
- A RawPath, like [[x, y, x, y, x, y, x, y][[x, y, x, y, x, y, x, y]]
- A Segment, like [x, y, x, y, x, y, x, y]

Note: all numbers are rounded down to the closest 0.001 to minimize memory, maximize speed, and avoid odd numbers like 1e-13
*/ parcelHelpers.export(exports, "rawPathToString", ()=>rawPathToString) /*
// takes a segment with coordinates [x, y, x, y, ...] and converts the control points into angles and lengths [x, y, angle, length, angle, length, x, y, angle, length, ...] so that it animates more cleanly and avoids odd breaks/kinks. For example, if you animate from 1 o'clock to 6 o'clock, it'd just go directly/linearly rather than around. So the length would be very short in the middle of the tween.
export function cpCoordsToAngles(segment, copy) {
	var result = copy ? segment.slice(0) : segment,
		x, y, i;
	for (i = 0; i < segment.length; i+=6) {
		x = segment[i+2] - segment[i];
		y = segment[i+3] - segment[i+1];
		result[i+2] = Math.atan2(y, x);
		result[i+3] = Math.sqrt(x * x + y * y);
		x = segment[i+6] - segment[i+4];
		y = segment[i+7] - segment[i+5];
		result[i+4] = Math.atan2(y, x);
		result[i+5] = Math.sqrt(x * x + y * y);
	}
	return result;
}

// takes a segment that was converted with cpCoordsToAngles() to have angles and lengths instead of coordinates for the control points, and converts it BACK into coordinates.
export function cpAnglesToCoords(segment, copy) {
	var result = copy ? segment.slice(0) : segment,
		length = segment.length,
		rnd = 1000,
		angle, l, i, j;
	for (i = 0; i < length; i+=6) {
		angle = segment[i+2];
		l = segment[i+3]; //length
		result[i+2] = (((segment[i] + Math.cos(angle) * l) * rnd) | 0) / rnd;
		result[i+3] = (((segment[i+1] + Math.sin(angle) * l) * rnd) | 0) / rnd;
		angle = segment[i+4];
		l = segment[i+5]; //length
		result[i+4] = (((segment[i+6] - Math.cos(angle) * l) * rnd) | 0) / rnd;
		result[i+5] = (((segment[i+7] - Math.sin(angle) * l) * rnd) | 0) / rnd;
	}
	return result;
}

//adds an "isSmooth" array to each segment and populates it with a boolean value indicating whether or not it's smooth (the control points have basically the same slope). For any smooth control points, it converts the coordinates into angle (x, in radians) and length (y) and puts them into the same index value in a smoothData array.
export function populateSmoothData(rawPath) {
	let j = rawPath.length,
		smooth, segment, x, y, x2, y2, i, l, a, a2, isSmooth, smoothData;
	while (--j > -1) {
		segment = rawPath[j];
		isSmooth = segment.isSmooth = segment.isSmooth || [0, 0, 0, 0];
		smoothData = segment.smoothData = segment.smoothData || [0, 0, 0, 0];
		isSmooth.length = 4;
		l = segment.length - 2;
		for (i = 6; i < l; i += 6) {
			x = segment[i] - segment[i - 2];
			y = segment[i + 1] - segment[i - 1];
			x2 = segment[i + 2] - segment[i];
			y2 = segment[i + 3] - segment[i + 1];
			a = _atan2(y, x);
			a2 = _atan2(y2, x2);
			smooth = (Math.abs(a - a2) < 0.09);
			if (smooth) {
				smoothData[i - 2] = a;
				smoothData[i + 2] = a2;
				smoothData[i - 1] = _sqrt(x * x + y * y);
				smoothData[i + 3] = _sqrt(x2 * x2 + y2 * y2);
			}
			isSmooth.push(smooth, smooth, 0, 0, smooth, smooth);
		}
		//if the first and last points are identical, check to see if there's a smooth transition. We must handle this a bit differently due to their positions in the array.
		if (segment[l] === segment[0] && segment[l+1] === segment[1]) {
			x = segment[0] - segment[l-2];
			y = segment[1] - segment[l-1];
			x2 = segment[2] - segment[0];
			y2 = segment[3] - segment[1];
			a = _atan2(y, x);
			a2 = _atan2(y2, x2);
			if (Math.abs(a - a2) < 0.09) {
				smoothData[l-2] = a;
				smoothData[2] = a2;
				smoothData[l-1] = _sqrt(x * x + y * y);
				smoothData[3] = _sqrt(x2 * x2 + y2 * y2);
				isSmooth[l-2] = isSmooth[l-1] = true; //don't change indexes 2 and 3 because we'll trigger everything from the END, and this will optimize file size a bit.
			}
		}
	}
	return rawPath;
}
export function pointToScreen(svgElement, point) {
	if (arguments.length < 2) { //by default, take the first set of coordinates in the path as the point
		let rawPath = getRawPath(svgElement);
		point = svgElement.ownerSVGElement.createSVGPoint();
		point.x = rawPath[0][0];
		point.y = rawPath[0][1];
	}
	return point.matrixTransform(svgElement.getScreenCTM());
}

*/ ;
/*!
 * paths 3.12.5
 * https://gsap.com
 *
 * Copyright 2008-2024, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license or for
 * Club GSAP members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/ /* eslint-disable */ var _svgPathExp = /[achlmqstvz]|(-?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/ig, _numbersExp = /(?:(-)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/ig, _scientific = /[\+\-]?\d*\.?\d+e[\+\-]?\d+/ig, _selectorExp = /(^[#\.][a-z]|[a-y][a-z])/i, _DEG2RAD = Math.PI / 180, _RAD2DEG = 180 / Math.PI, _sin = Math.sin, _cos = Math.cos, _abs = Math.abs, _sqrt = Math.sqrt, _atan2 = Math.atan2, _largeNum = 1e8, _isString = function _isString(value) {
    return typeof value === "string";
}, _isNumber = function _isNumber(value) {
    return typeof value === "number";
}, _isUndefined = function _isUndefined(value) {
    return typeof value === "undefined";
}, _temp = {}, _temp2 = {}, _roundingNum = 1e5, _wrapProgress = function _wrapProgress(progress) {
    return Math.round((progress + _largeNum) % 1 * _roundingNum) / _roundingNum || (progress < 0 ? 0 : 1);
}, //if progress lands on 1, the % will make it 0 which is why we || 1, but not if it's negative because it makes more sense for motion to end at 0 in that case.
_round = function _round(value) {
    return Math.round(value * _roundingNum) / _roundingNum || 0;
}, _roundPrecise = function _roundPrecise(value) {
    return Math.round(value * 1e10) / 1e10 || 0;
}, _splitSegment = function _splitSegment(rawPath, segIndex, i, t) {
    var segment = rawPath[segIndex], shift = t === 1 ? 6 : subdivideSegment(segment, i, t);
    if ((shift || !t) && shift + i + 2 < segment.length) {
        rawPath.splice(segIndex, 0, segment.slice(0, i + shift + 2));
        segment.splice(0, i + shift);
        return 1;
    }
}, _getSampleIndex = function _getSampleIndex(samples, length, progress) {
    // slightly slower way than doing this (when there's no lookup): segment.lookup[progress < 1 ? ~~(length / segment.minLength) : segment.lookup.length - 1] || 0;
    var l = samples.length, i = ~~(progress * l);
    if (samples[i] > length) {
        while(--i && samples[i] > length);
        i < 0 && (i = 0);
    } else {
        while(samples[++i] < length && i < l);
    }
    return i < l ? i : l - 1;
}, _reverseRawPath = function _reverseRawPath(rawPath, skipOuter) {
    var i = rawPath.length;
    skipOuter || rawPath.reverse();
    while(i--)rawPath[i].reversed || reverseSegment(rawPath[i]);
}, _copyMetaData = function _copyMetaData(source, copy) {
    copy.totalLength = source.totalLength;
    if (source.samples) {
        //segment
        copy.samples = source.samples.slice(0);
        copy.lookup = source.lookup.slice(0);
        copy.minLength = source.minLength;
        copy.resolution = source.resolution;
    } else if (source.totalPoints) //rawPath
    copy.totalPoints = source.totalPoints;
    return copy;
}, //pushes a new segment into a rawPath, but if its starting values match the ending values of the last segment, it'll merge it into that same segment (to reduce the number of segments)
_appendOrMerge = function _appendOrMerge(rawPath, segment) {
    var index = rawPath.length, prevSeg = rawPath[index - 1] || [], l = prevSeg.length;
    if (index && segment[0] === prevSeg[l - 2] && segment[1] === prevSeg[l - 1]) {
        segment = prevSeg.concat(segment.slice(2));
        index--;
    }
    rawPath[index] = segment;
}, _bestDistance;
function getRawPath(value) {
    value = _isString(value) && _selectorExp.test(value) ? document.querySelector(value) || value : value;
    var e = value.getAttribute ? value : 0, rawPath;
    if (e && (value = value.getAttribute("d"))) {
        //implements caching
        if (!e._gsPath) e._gsPath = {};
        rawPath = e._gsPath[value];
        return rawPath && !rawPath._dirty ? rawPath : e._gsPath[value] = stringToRawPath(value);
    }
    return !value ? console.warn("Expecting a <path> element or an SVG path data string") : _isString(value) ? stringToRawPath(value) : _isNumber(value[0]) ? [
        value
    ] : value;
}
function copyRawPath(rawPath) {
    var a = [], i = 0;
    for(; i < rawPath.length; i++)a[i] = _copyMetaData(rawPath[i], rawPath[i].slice(0));
    return _copyMetaData(rawPath, a);
}
function reverseSegment(segment) {
    var i = 0, y;
    segment.reverse(); //this will invert the order y, x, y, x so we must flip it back.
    for(; i < segment.length; i += 2){
        y = segment[i];
        segment[i] = segment[i + 1];
        segment[i + 1] = y;
    }
    segment.reversed = !segment.reversed;
}
var _createPath = function _createPath(e, ignore) {
    var path = document.createElementNS("http://www.w3.org/2000/svg", "path"), attr = [].slice.call(e.attributes), i = attr.length, name;
    ignore = "," + ignore + ",";
    while(--i > -1){
        name = attr[i].nodeName.toLowerCase(); //in Microsoft Edge, if you don't set the attribute with a lowercase name, it doesn't render correctly! Super weird.
        if (ignore.indexOf("," + name + ",") < 0) path.setAttributeNS(null, name, attr[i].nodeValue);
    }
    return path;
}, _typeAttrs = {
    rect: "rx,ry,x,y,width,height",
    circle: "r,cx,cy",
    ellipse: "rx,ry,cx,cy",
    line: "x1,x2,y1,y2"
}, _attrToObj = function _attrToObj(e, attrs) {
    var props = attrs ? attrs.split(",") : [], obj = {}, i = props.length;
    while(--i > -1)obj[props[i]] = +e.getAttribute(props[i]) || 0;
    return obj;
}; //converts an SVG shape like <circle>, <rect>, <polygon>, <polyline>, <ellipse>, etc. to a <path>, swapping it in and copying the attributes to match.
function convertToPath(element, swap) {
    var type = element.tagName.toLowerCase(), circ = 0.552284749831, data, x, y, r, ry, path, rcirc, rycirc, points, w, h, x2, x3, x4, x5, x6, y2, y3, y4, y5, y6, attr;
    if (type === "path" || !element.getBBox) return element;
    path = _createPath(element, "x,y,width,height,cx,cy,rx,ry,r,x1,x2,y1,y2,points");
    attr = _attrToObj(element, _typeAttrs[type]);
    if (type === "rect") {
        r = attr.rx;
        ry = attr.ry || r;
        x = attr.x;
        y = attr.y;
        w = attr.width - r * 2;
        h = attr.height - ry * 2;
        if (r || ry) {
            //if there are rounded corners, render cubic beziers
            x2 = x + r * (1 - circ);
            x3 = x + r;
            x4 = x3 + w;
            x5 = x4 + r * circ;
            x6 = x4 + r;
            y2 = y + ry * (1 - circ);
            y3 = y + ry;
            y4 = y3 + h;
            y5 = y4 + ry * circ;
            y6 = y4 + ry;
            data = "M" + x6 + "," + y3 + " V" + y4 + " C" + [
                x6,
                y5,
                x5,
                y6,
                x4,
                y6,
                x4 - (x4 - x3) / 3,
                y6,
                x3 + (x4 - x3) / 3,
                y6,
                x3,
                y6,
                x2,
                y6,
                x,
                y5,
                x,
                y4,
                x,
                y4 - (y4 - y3) / 3,
                x,
                y3 + (y4 - y3) / 3,
                x,
                y3,
                x,
                y2,
                x2,
                y,
                x3,
                y,
                x3 + (x4 - x3) / 3,
                y,
                x4 - (x4 - x3) / 3,
                y,
                x4,
                y,
                x5,
                y,
                x6,
                y2,
                x6,
                y3
            ].join(",") + "z";
        } else data = "M" + (x + w) + "," + y + " v" + h + " h" + -w + " v" + -h + " h" + w + "z";
    } else if (type === "circle" || type === "ellipse") {
        if (type === "circle") {
            r = ry = attr.r;
            rycirc = r * circ;
        } else {
            r = attr.rx;
            ry = attr.ry;
            rycirc = ry * circ;
        }
        x = attr.cx;
        y = attr.cy;
        rcirc = r * circ;
        data = "M" + (x + r) + "," + y + " C" + [
            x + r,
            y + rycirc,
            x + rcirc,
            y + ry,
            x,
            y + ry,
            x - rcirc,
            y + ry,
            x - r,
            y + rycirc,
            x - r,
            y,
            x - r,
            y - rycirc,
            x - rcirc,
            y - ry,
            x,
            y - ry,
            x + rcirc,
            y - ry,
            x + r,
            y - rycirc,
            x + r,
            y
        ].join(",") + "z";
    } else if (type === "line") data = "M" + attr.x1 + "," + attr.y1 + " L" + attr.x2 + "," + attr.y2; //previously, we just converted to "Mx,y Lx,y" but Safari has bugs that cause that not to render properly when using a stroke-dasharray that's not fully visible! Using a cubic bezier fixes that issue.
    else if (type === "polyline" || type === "polygon") {
        points = (element.getAttribute("points") + "").match(_numbersExp) || [];
        x = points.shift();
        y = points.shift();
        data = "M" + x + "," + y + " L" + points.join(",");
        if (type === "polygon") data += "," + x + "," + y + "z";
    }
    path.setAttribute("d", rawPathToString(path._gsRawPath = stringToRawPath(data)));
    if (swap && element.parentNode) {
        element.parentNode.insertBefore(path, element);
        element.parentNode.removeChild(element);
    }
    return path;
}
function getRotationAtProgress(rawPath, progress) {
    var d = getProgressData(rawPath, progress >= 1 ? 1 - 1e-9 : progress ? progress : 1e-9);
    return getRotationAtBezierT(d.segment, d.i, d.t);
}
function getRotationAtBezierT(segment, i, t) {
    var a = segment[i], b = segment[i + 2], c = segment[i + 4], x;
    a += (b - a) * t;
    b += (c - b) * t;
    a += (b - a) * t;
    x = b + (c + (segment[i + 6] - c) * t - b) * t - a;
    a = segment[i + 1];
    b = segment[i + 3];
    c = segment[i + 5];
    a += (b - a) * t;
    b += (c - b) * t;
    a += (b - a) * t;
    return _round(_atan2(b + (c + (segment[i + 7] - c) * t - b) * t - a, x) * _RAD2DEG);
}
function sliceRawPath(rawPath, start, end) {
    end = _isUndefined(end) ? 1 : _roundPrecise(end) || 0; // we must round to avoid issues like 4.15 / 8 = 0.8300000000000001 instead of 0.83 or 2.8 / 5 = 0.5599999999999999 instead of 0.56 and if someone is doing a loop like start: 2.8 / 0.5, end: 2.8 / 0.5 + 1.
    start = _roundPrecise(start) || 0;
    var loops = Math.max(0, ~~(_abs(end - start) - 1e-8)), path = copyRawPath(rawPath);
    if (start > end) {
        start = 1 - start;
        end = 1 - end;
        _reverseRawPath(path);
        path.totalLength = 0;
    }
    if (start < 0 || end < 0) {
        var offset = Math.abs(~~Math.min(start, end)) + 1;
        start += offset;
        end += offset;
    }
    path.totalLength || cacheRawPathMeasurements(path);
    var wrap = end > 1, s = getProgressData(path, start, _temp, true), e = getProgressData(path, end, _temp2), eSeg = e.segment, sSeg = s.segment, eSegIndex = e.segIndex, sSegIndex = s.segIndex, ei = e.i, si = s.i, sameSegment = sSegIndex === eSegIndex, sameBezier = ei === si && sameSegment, wrapsBehind, sShift, eShift, i, copy, totalSegments, l, j;
    if (wrap || loops) {
        wrapsBehind = eSegIndex < sSegIndex || sameSegment && ei < si || sameBezier && e.t < s.t;
        if (_splitSegment(path, sSegIndex, si, s.t)) {
            sSegIndex++;
            if (!wrapsBehind) {
                eSegIndex++;
                if (sameBezier) {
                    e.t = (e.t - s.t) / (1 - s.t);
                    ei = 0;
                } else if (sameSegment) ei -= si;
            }
        }
        if (Math.abs(1 - (end - start)) < 1e-5) eSegIndex = sSegIndex - 1;
        else if (!e.t && eSegIndex) eSegIndex--;
        else if (_splitSegment(path, eSegIndex, ei, e.t) && wrapsBehind) sSegIndex++;
        if (s.t === 1) sSegIndex = (sSegIndex + 1) % path.length;
        copy = [];
        totalSegments = path.length;
        l = 1 + totalSegments * loops;
        j = sSegIndex;
        l += (totalSegments - sSegIndex + eSegIndex) % totalSegments;
        for(i = 0; i < l; i++)_appendOrMerge(copy, path[(j++) % totalSegments]);
        path = copy;
    } else {
        eShift = e.t === 1 ? 6 : subdivideSegment(eSeg, ei, e.t);
        if (start !== end) {
            sShift = subdivideSegment(sSeg, si, sameBezier ? s.t / e.t : s.t);
            sameSegment && (eShift += sShift);
            eSeg.splice(ei + eShift + 2);
            (sShift || si) && sSeg.splice(0, si + sShift);
            i = path.length;
            while(i--)//chop off any extra segments
            (i < sSegIndex || i > eSegIndex) && path.splice(i, 1);
        } else {
            eSeg.angle = getRotationAtBezierT(eSeg, ei + eShift, 0); //record the value before we chop because it'll be impossible to determine the angle after its length is 0!
            ei += eShift;
            s = eSeg[ei];
            e = eSeg[ei + 1];
            eSeg.length = eSeg.totalLength = 0;
            eSeg.totalPoints = path.totalPoints = 8;
            eSeg.push(s, e, s, e, s, e, s, e);
        }
    }
    path.totalLength = 0;
    return path;
}
function measureSegment(segment, startIndex, bezierQty) {
    startIndex = startIndex || 0;
    if (!segment.samples) {
        segment.samples = [];
        segment.lookup = [];
    }
    var resolution = ~~segment.resolution || 12, inc = 1 / resolution, endIndex = bezierQty ? startIndex + bezierQty * 6 + 1 : segment.length, x1 = segment[startIndex], y1 = segment[startIndex + 1], samplesIndex = startIndex ? startIndex / 6 * resolution : 0, samples = segment.samples, lookup = segment.lookup, min = (startIndex ? segment.minLength : _largeNum) || _largeNum, prevLength = samples[samplesIndex + bezierQty * resolution - 1], length = startIndex ? samples[samplesIndex - 1] : 0, i, j, x4, x3, x2, xd, xd1, y4, y3, y2, yd, yd1, inv, t, lengthIndex, l, segLength;
    samples.length = lookup.length = 0;
    for(j = startIndex + 2; j < endIndex; j += 6){
        x4 = segment[j + 4] - x1;
        x3 = segment[j + 2] - x1;
        x2 = segment[j] - x1;
        y4 = segment[j + 5] - y1;
        y3 = segment[j + 3] - y1;
        y2 = segment[j + 1] - y1;
        xd = xd1 = yd = yd1 = 0;
        if (_abs(x4) < .01 && _abs(y4) < .01 && _abs(x2) + _abs(y2) < .01) //dump points that are sufficiently close (basically right on top of each other, making a bezier super tiny or 0 length)
        {
            if (segment.length > 8) {
                segment.splice(j, 6);
                j -= 6;
                endIndex -= 6;
            }
        } else for(i = 1; i <= resolution; i++){
            t = inc * i;
            inv = 1 - t;
            xd = xd1 - (xd1 = (t * t * x4 + 3 * inv * (t * x3 + inv * x2)) * t);
            yd = yd1 - (yd1 = (t * t * y4 + 3 * inv * (t * y3 + inv * y2)) * t);
            l = _sqrt(yd * yd + xd * xd);
            if (l < min) min = l;
            length += l;
            samples[samplesIndex++] = length;
        }
        x1 += x4;
        y1 += y4;
    }
    if (prevLength) {
        prevLength -= length;
        for(; samplesIndex < samples.length; samplesIndex++)samples[samplesIndex] += prevLength;
    }
    if (samples.length && min) {
        segment.totalLength = segLength = samples[samples.length - 1] || 0;
        segment.minLength = min;
        if (segLength / min < 9999) {
            // if the lookup would require too many values (memory problem), we skip this and instead we use a loop to lookup values directly in the samples Array
            l = lengthIndex = 0;
            for(i = 0; i < segLength; i += min)lookup[l++] = samples[lengthIndex] < i ? ++lengthIndex : lengthIndex;
        }
    } else segment.totalLength = samples[0] = 0;
    return startIndex ? length - samples[startIndex / 2 - 1] : length;
}
function cacheRawPathMeasurements(rawPath, resolution) {
    var pathLength, points, i;
    for(i = pathLength = points = 0; i < rawPath.length; i++){
        rawPath[i].resolution = ~~resolution || 12; //steps per Bezier curve (anchor, 2 control points, to anchor)
        points += rawPath[i].length;
        pathLength += measureSegment(rawPath[i]);
    }
    rawPath.totalPoints = points;
    rawPath.totalLength = pathLength;
    return rawPath;
}
function subdivideSegment(segment, i, t) {
    if (t <= 0 || t >= 1) return 0;
    var ax = segment[i], ay = segment[i + 1], cp1x = segment[i + 2], cp1y = segment[i + 3], cp2x = segment[i + 4], cp2y = segment[i + 5], bx = segment[i + 6], by = segment[i + 7], x1a = ax + (cp1x - ax) * t, x2 = cp1x + (cp2x - cp1x) * t, y1a = ay + (cp1y - ay) * t, y2 = cp1y + (cp2y - cp1y) * t, x1 = x1a + (x2 - x1a) * t, y1 = y1a + (y2 - y1a) * t, x2a = cp2x + (bx - cp2x) * t, y2a = cp2y + (by - cp2y) * t;
    x2 += (x2a - x2) * t;
    y2 += (y2a - y2) * t;
    segment.splice(i + 2, 4, _round(x1a), _round(y1a), _round(x1), _round(y1), _round(x1 + (x2 - x1) * t), _round(y1 + (y2 - y1) * t), _round(x2), _round(y2), _round(x2a), _round(y2a));
    segment.samples && segment.samples.splice(i / 6 * segment.resolution | 0, 0, 0, 0, 0, 0, 0, 0);
    return 6;
}
function getProgressData(rawPath, progress, decoratee, pushToNextIfAtEnd) {
    decoratee = decoratee || {};
    rawPath.totalLength || cacheRawPathMeasurements(rawPath);
    if (progress < 0 || progress > 1) progress = _wrapProgress(progress);
    var segIndex = 0, segment = rawPath[0], samples, resolution, length, min, max, i, t;
    if (!progress) {
        t = i = segIndex = 0;
        segment = rawPath[0];
    } else if (progress === 1) {
        t = 1;
        segIndex = rawPath.length - 1;
        segment = rawPath[segIndex];
        i = segment.length - 8;
    } else {
        if (rawPath.length > 1) {
            //speed optimization: most of the time, there's only one segment so skip the recursion.
            length = rawPath.totalLength * progress;
            max = i = 0;
            while((max += rawPath[i++].totalLength) < length)segIndex = i;
            segment = rawPath[segIndex];
            min = max - segment.totalLength;
            progress = (length - min) / (max - min) || 0;
        }
        samples = segment.samples;
        resolution = segment.resolution; //how many samples per cubic bezier chunk
        length = segment.totalLength * progress;
        i = segment.lookup.length ? segment.lookup[~~(length / segment.minLength)] || 0 : _getSampleIndex(samples, length, progress);
        min = i ? samples[i - 1] : 0;
        max = samples[i];
        if (max < length) {
            min = max;
            max = samples[++i];
        }
        t = 1 / resolution * ((length - min) / (max - min) + i % resolution);
        i = ~~(i / resolution) * 6;
        if (pushToNextIfAtEnd && t === 1) {
            if (i + 6 < segment.length) {
                i += 6;
                t = 0;
            } else if (segIndex + 1 < rawPath.length) {
                i = t = 0;
                segment = rawPath[++segIndex];
            }
        }
    }
    decoratee.t = t;
    decoratee.i = i;
    decoratee.path = rawPath;
    decoratee.segment = segment;
    decoratee.segIndex = segIndex;
    return decoratee;
}
function getPositionOnPath(rawPath, progress, includeAngle, point) {
    var segment = rawPath[0], result = point || {}, samples, resolution, length, min, max, i, t, a, inv;
    if (progress < 0 || progress > 1) progress = _wrapProgress(progress);
    segment.lookup || cacheRawPathMeasurements(rawPath);
    if (rawPath.length > 1) {
        //speed optimization: most of the time, there's only one segment so skip the recursion.
        length = rawPath.totalLength * progress;
        max = i = 0;
        while((max += rawPath[i++].totalLength) < length)segment = rawPath[i];
        min = max - segment.totalLength;
        progress = (length - min) / (max - min) || 0;
    }
    samples = segment.samples;
    resolution = segment.resolution;
    length = segment.totalLength * progress;
    i = segment.lookup.length ? segment.lookup[progress < 1 ? ~~(length / segment.minLength) : segment.lookup.length - 1] || 0 : _getSampleIndex(samples, length, progress);
    min = i ? samples[i - 1] : 0;
    max = samples[i];
    if (max < length) {
        min = max;
        max = samples[++i];
    }
    t = 1 / resolution * ((length - min) / (max - min) + i % resolution) || 0;
    inv = 1 - t;
    i = ~~(i / resolution) * 6;
    a = segment[i];
    result.x = _round((t * t * (segment[i + 6] - a) + 3 * inv * (t * (segment[i + 4] - a) + inv * (segment[i + 2] - a))) * t + a);
    result.y = _round((t * t * (segment[i + 7] - (a = segment[i + 1])) + 3 * inv * (t * (segment[i + 5] - a) + inv * (segment[i + 3] - a))) * t + a);
    if (includeAngle) result.angle = segment.totalLength ? getRotationAtBezierT(segment, i, t >= 1 ? 1 - 1e-9 : t ? t : 1e-9) : segment.angle || 0;
    return result;
}
function transformRawPath(rawPath, a, b, c, d, tx, ty) {
    var j = rawPath.length, segment, l, i, x, y;
    while(--j > -1){
        segment = rawPath[j];
        l = segment.length;
        for(i = 0; i < l; i += 2){
            x = segment[i];
            y = segment[i + 1];
            segment[i] = x * a + y * c + tx;
            segment[i + 1] = x * b + y * d + ty;
        }
    }
    rawPath._dirty = 1;
    return rawPath;
}
function arcToSegment(lastX, lastY, rx, ry, angle, largeArcFlag, sweepFlag, x, y) {
    if (lastX === x && lastY === y) return;
    rx = _abs(rx);
    ry = _abs(ry);
    var angleRad = angle % 360 * _DEG2RAD, cosAngle = _cos(angleRad), sinAngle = _sin(angleRad), PI = Math.PI, TWOPI = PI * 2, dx2 = (lastX - x) / 2, dy2 = (lastY - y) / 2, x1 = cosAngle * dx2 + sinAngle * dy2, y1 = -sinAngle * dx2 + cosAngle * dy2, x1_sq = x1 * x1, y1_sq = y1 * y1, radiiCheck = x1_sq / (rx * rx) + y1_sq / (ry * ry);
    if (radiiCheck > 1) {
        rx = _sqrt(radiiCheck) * rx;
        ry = _sqrt(radiiCheck) * ry;
    }
    var rx_sq = rx * rx, ry_sq = ry * ry, sq = (rx_sq * ry_sq - rx_sq * y1_sq - ry_sq * x1_sq) / (rx_sq * y1_sq + ry_sq * x1_sq);
    if (sq < 0) sq = 0;
    var coef = (largeArcFlag === sweepFlag ? -1 : 1) * _sqrt(sq), cx1 = coef * (rx * y1 / ry), cy1 = coef * -(ry * x1 / rx), sx2 = (lastX + x) / 2, sy2 = (lastY + y) / 2, cx = sx2 + (cosAngle * cx1 - sinAngle * cy1), cy = sy2 + (sinAngle * cx1 + cosAngle * cy1), ux = (x1 - cx1) / rx, uy = (y1 - cy1) / ry, vx = (-x1 - cx1) / rx, vy = (-y1 - cy1) / ry, temp = ux * ux + uy * uy, angleStart = (uy < 0 ? -1 : 1) * Math.acos(ux / _sqrt(temp)), angleExtent = (ux * vy - uy * vx < 0 ? -1 : 1) * Math.acos((ux * vx + uy * vy) / _sqrt(temp * (vx * vx + vy * vy)));
    isNaN(angleExtent) && (angleExtent = PI); //rare edge case. Math.cos(-1) is NaN.
    if (!sweepFlag && angleExtent > 0) angleExtent -= TWOPI;
    else if (sweepFlag && angleExtent < 0) angleExtent += TWOPI;
    angleStart %= TWOPI;
    angleExtent %= TWOPI;
    var segments = Math.ceil(_abs(angleExtent) / (TWOPI / 4)), rawPath = [], angleIncrement = angleExtent / segments, controlLength = 4 / 3 * _sin(angleIncrement / 2) / (1 + _cos(angleIncrement / 2)), ma = cosAngle * rx, mb = sinAngle * rx, mc = sinAngle * -ry, md = cosAngle * ry, i;
    for(i = 0; i < segments; i++){
        angle = angleStart + i * angleIncrement;
        x1 = _cos(angle);
        y1 = _sin(angle);
        ux = _cos(angle += angleIncrement);
        uy = _sin(angle);
        rawPath.push(x1 - controlLength * y1, y1 + controlLength * x1, ux + controlLength * uy, uy - controlLength * ux, ux, uy);
    } //now transform according to the actual size of the ellipse/arc (the beziers were noramlized, between 0 and 1 on a circle).
    for(i = 0; i < rawPath.length; i += 2){
        x1 = rawPath[i];
        y1 = rawPath[i + 1];
        rawPath[i] = x1 * ma + y1 * mc + cx;
        rawPath[i + 1] = x1 * mb + y1 * md + cy;
    }
    rawPath[i - 2] = x; //always set the end to exactly where it's supposed to be
    rawPath[i - 1] = y;
    return rawPath;
} //Spits back a RawPath with absolute coordinates. Each segment starts with a "moveTo" command (x coordinate, then y) and then 2 control points (x, y, x, y), then anchor. The goal is to minimize memory and maximize speed.
function stringToRawPath(d) {
    var a = (d + "").replace(_scientific, function(m) {
        var n = +m;
        return n < 0.0001 && n > -0.0001 ? 0 : n;
    }).match(_svgPathExp) || [], //some authoring programs spit out very small numbers in scientific notation like "1e-5", so make sure we round that down to 0 first.
    path = [], relativeX = 0, relativeY = 0, twoThirds = 2 / 3, elements = a.length, points = 0, errorMessage = "ERROR: malformed path: " + d, i, j, x, y, command, isRelative, segment, startX, startY, difX, difY, beziers, prevCommand, flag1, flag2, line = function line(sx, sy, ex, ey) {
        difX = (ex - sx) / 3;
        difY = (ey - sy) / 3;
        segment.push(sx + difX, sy + difY, ex - difX, ey - difY, ex, ey);
    };
    if (!d || !isNaN(a[0]) || isNaN(a[1])) {
        console.log(errorMessage);
        return path;
    }
    for(i = 0; i < elements; i++){
        prevCommand = command;
        if (isNaN(a[i])) {
            command = a[i].toUpperCase();
            isRelative = command !== a[i]; //lower case means relative
        } else //commands like "C" can be strung together without any new command characters between.
        i--;
        x = +a[i + 1];
        y = +a[i + 2];
        if (isRelative) {
            x += relativeX;
            y += relativeY;
        }
        if (!i) {
            startX = x;
            startY = y;
        } // "M" (move)
        if (command === "M") {
            if (segment) {
                if (segment.length < 8) //if the path data was funky and just had a M with no actual drawing anywhere, skip it.
                path.length -= 1;
                else points += segment.length;
            }
            relativeX = startX = x;
            relativeY = startY = y;
            segment = [
                x,
                y
            ];
            path.push(segment);
            i += 2;
            command = "L"; //an "M" with more than 2 values gets interpreted as "lineTo" commands ("L").
        // "C" (cubic bezier)
        } else if (command === "C") {
            if (!segment) segment = [
                0,
                0
            ];
            if (!isRelative) relativeX = relativeY = 0;
             //note: "*1" is just a fast/short way to cast the value as a Number. WAAAY faster in Chrome, slightly slower in Firefox.
            segment.push(x, y, relativeX + a[i + 3] * 1, relativeY + a[i + 4] * 1, relativeX += a[i + 5] * 1, relativeY += a[i + 6] * 1);
            i += 6; // "S" (continuation of cubic bezier)
        } else if (command === "S") {
            difX = relativeX;
            difY = relativeY;
            if (prevCommand === "C" || prevCommand === "S") {
                difX += relativeX - segment[segment.length - 4];
                difY += relativeY - segment[segment.length - 3];
            }
            if (!isRelative) relativeX = relativeY = 0;
            segment.push(difX, difY, x, y, relativeX += a[i + 3] * 1, relativeY += a[i + 4] * 1);
            i += 4; // "Q" (quadratic bezier)
        } else if (command === "Q") {
            difX = relativeX + (x - relativeX) * twoThirds;
            difY = relativeY + (y - relativeY) * twoThirds;
            if (!isRelative) relativeX = relativeY = 0;
            relativeX += a[i + 3] * 1;
            relativeY += a[i + 4] * 1;
            segment.push(difX, difY, relativeX + (x - relativeX) * twoThirds, relativeY + (y - relativeY) * twoThirds, relativeX, relativeY);
            i += 4; // "T" (continuation of quadratic bezier)
        } else if (command === "T") {
            difX = relativeX - segment[segment.length - 4];
            difY = relativeY - segment[segment.length - 3];
            segment.push(relativeX + difX, relativeY + difY, x + (relativeX + difX * 1.5 - x) * twoThirds, y + (relativeY + difY * 1.5 - y) * twoThirds, relativeX = x, relativeY = y);
            i += 2; // "H" (horizontal line)
        } else if (command === "H") {
            line(relativeX, relativeY, relativeX = x, relativeY);
            i += 1; // "V" (vertical line)
        } else if (command === "V") {
            //adjust values because the first (and only one) isn't x in this case, it's y.
            line(relativeX, relativeY, relativeX, relativeY = x + (isRelative ? relativeY - relativeX : 0));
            i += 1; // "L" (line) or "Z" (close)
        } else if (command === "L" || command === "Z") {
            if (command === "Z") {
                x = startX;
                y = startY;
                segment.closed = true;
            }
            if (command === "L" || _abs(relativeX - x) > 0.5 || _abs(relativeY - y) > 0.5) {
                line(relativeX, relativeY, x, y);
                if (command === "L") i += 2;
            }
            relativeX = x;
            relativeY = y; // "A" (arc)
        } else if (command === "A") {
            flag1 = a[i + 4];
            flag2 = a[i + 5];
            difX = a[i + 6];
            difY = a[i + 7];
            j = 7;
            if (flag1.length > 1) {
                // for cases when the flags are merged, like "a8 8 0 018 8" (the 0 and 1 flags are WITH the x value of 8, but it could also be "a8 8 0 01-8 8" so it may include x or not)
                if (flag1.length < 3) {
                    difY = difX;
                    difX = flag2;
                    j--;
                } else {
                    difY = flag2;
                    difX = flag1.substr(2);
                    j -= 2;
                }
                flag2 = flag1.charAt(1);
                flag1 = flag1.charAt(0);
            }
            beziers = arcToSegment(relativeX, relativeY, +a[i + 1], +a[i + 2], +a[i + 3], +flag1, +flag2, (isRelative ? relativeX : 0) + difX * 1, (isRelative ? relativeY : 0) + difY * 1);
            i += j;
            if (beziers) for(j = 0; j < beziers.length; j++)segment.push(beziers[j]);
            relativeX = segment[segment.length - 2];
            relativeY = segment[segment.length - 1];
        } else console.log(errorMessage);
    }
    i = segment.length;
    if (i < 6) {
        //in case there's odd SVG like a M0,0 command at the very end.
        path.pop();
        i = 0;
    } else if (segment[0] === segment[i - 2] && segment[1] === segment[i - 1]) segment.closed = true;
    path.totalPoints = points + i;
    return path;
}
function bezierToPoints(x1, y1, x2, y2, x3, y3, x4, y4, threshold, points, index) {
    var x12 = (x1 + x2) / 2, y12 = (y1 + y2) / 2, x23 = (x2 + x3) / 2, y23 = (y2 + y3) / 2, x34 = (x3 + x4) / 2, y34 = (y3 + y4) / 2, x123 = (x12 + x23) / 2, y123 = (y12 + y23) / 2, x234 = (x23 + x34) / 2, y234 = (y23 + y34) / 2, x1234 = (x123 + x234) / 2, y1234 = (y123 + y234) / 2, dx = x4 - x1, dy = y4 - y1, d2 = _abs((x2 - x4) * dy - (y2 - y4) * dx), d3 = _abs((x3 - x4) * dy - (y3 - y4) * dx), length;
    if (!points) {
        points = [
            x1,
            y1,
            x4,
            y4
        ];
        index = 2;
    }
    points.splice(index || points.length - 2, 0, x1234, y1234);
    if ((d2 + d3) * (d2 + d3) > threshold * (dx * dx + dy * dy)) {
        length = points.length;
        bezierToPoints(x1, y1, x12, y12, x123, y123, x1234, y1234, threshold, points, index);
        bezierToPoints(x1234, y1234, x234, y234, x34, y34, x4, y4, threshold, points, index + 2 + (points.length - length));
    }
    return points;
}
function flatPointsToSegment(points, curviness) {
    if (curviness === void 0) curviness = 1;
    var x = points[0], y = 0, segment = [
        x,
        y
    ], i = 2;
    for(; i < points.length; i += 2)segment.push(x, y, points[i], y = (points[i] - x) * curviness / 2, x = points[i], -y);
    return segment;
}
function pointsToSegment(points, curviness) {
    //points = simplifyPoints(points, tolerance);
    _abs(points[0] - points[2]) < 1e-4 && _abs(points[1] - points[3]) < 1e-4 && (points = points.slice(2)); // if the first two points are super close, dump the first one.
    var l = points.length - 2, x = +points[0], y = +points[1], nextX = +points[2], nextY = +points[3], segment = [
        x,
        y,
        x,
        y
    ], dx2 = nextX - x, dy2 = nextY - y, closed = Math.abs(points[l] - x) < 0.001 && Math.abs(points[l + 1] - y) < 0.001, prevX, prevY, i, dx1, dy1, r1, r2, r3, tl, mx1, mx2, mxm, my1, my2, mym;
    if (closed) {
        // if the start and end points are basically on top of each other, close the segment by adding the 2nd point to the end, and the 2nd-to-last point to the beginning (we'll remove them at the end, but this allows the curvature to look perfect)
        points.push(nextX, nextY);
        nextX = x;
        nextY = y;
        x = points[l - 2];
        y = points[l - 1];
        points.unshift(x, y);
        l += 4;
    }
    curviness = curviness || curviness === 0 ? +curviness : 1;
    for(i = 2; i < l; i += 2){
        prevX = x;
        prevY = y;
        x = nextX;
        y = nextY;
        nextX = +points[i + 2];
        nextY = +points[i + 3];
        if (x === nextX && y === nextY) continue;
        dx1 = dx2;
        dy1 = dy2;
        dx2 = nextX - x;
        dy2 = nextY - y;
        r1 = _sqrt(dx1 * dx1 + dy1 * dy1); // r1, r2, and r3 correlate x and y (and z in the future). Basically 2D or 3D hypotenuse
        r2 = _sqrt(dx2 * dx2 + dy2 * dy2);
        r3 = _sqrt(Math.pow(dx2 / r2 + dx1 / r1, 2) + Math.pow(dy2 / r2 + dy1 / r1, 2));
        tl = (r1 + r2) * curviness * 0.25 / r3;
        mx1 = x - (x - prevX) * (r1 ? tl / r1 : 0);
        mx2 = x + (nextX - x) * (r2 ? tl / r2 : 0);
        mxm = x - (mx1 + ((mx2 - mx1) * (r1 * 3 / (r1 + r2) + 0.5) / 4 || 0));
        my1 = y - (y - prevY) * (r1 ? tl / r1 : 0);
        my2 = y + (nextY - y) * (r2 ? tl / r2 : 0);
        mym = y - (my1 + ((my2 - my1) * (r1 * 3 / (r1 + r2) + 0.5) / 4 || 0));
        if (x !== prevX || y !== prevY) segment.push(_round(mx1 + mxm), _round(my1 + mym), _round(x), _round(y), _round(mx2 + mxm), _round(my2 + mym));
    }
    x !== nextX || y !== nextY || segment.length < 4 ? segment.push(_round(nextX), _round(nextY), _round(nextX), _round(nextY)) : segment.length -= 2;
    if (segment.length === 2) // only one point!
    segment.push(x, y, x, y, x, y);
    else if (closed) {
        segment.splice(0, 6);
        segment.length = segment.length - 6;
    }
    return segment;
}
function pointToSegDist(x, y, x1, y1, x2, y2) {
    var dx = x2 - x1, dy = y2 - y1, t;
    if (dx || dy) {
        t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);
        if (t > 1) {
            x1 = x2;
            y1 = y2;
        } else if (t > 0) {
            x1 += dx * t;
            y1 += dy * t;
        }
    }
    return Math.pow(x - x1, 2) + Math.pow(y - y1, 2);
}
function simplifyStep(points, first, last, tolerance, simplified) {
    var maxSqDist = tolerance, firstX = points[first], firstY = points[first + 1], lastX = points[last], lastY = points[last + 1], index, i, d;
    for(i = first + 2; i < last; i += 2){
        d = pointToSegDist(points[i], points[i + 1], firstX, firstY, lastX, lastY);
        if (d > maxSqDist) {
            index = i;
            maxSqDist = d;
        }
    }
    if (maxSqDist > tolerance) {
        index - first > 2 && simplifyStep(points, first, index, tolerance, simplified);
        simplified.push(points[index], points[index + 1]);
        last - index > 2 && simplifyStep(points, index, last, tolerance, simplified);
    }
} //points is an array of x/y values like [x, y, x, y, x, y]
function simplifyPoints(points, tolerance) {
    var prevX = parseFloat(points[0]), prevY = parseFloat(points[1]), temp = [
        prevX,
        prevY
    ], l = points.length - 2, i, x, y, dx, dy, result, last;
    tolerance = Math.pow(tolerance || 1, 2);
    for(i = 2; i < l; i += 2){
        x = parseFloat(points[i]);
        y = parseFloat(points[i + 1]);
        dx = prevX - x;
        dy = prevY - y;
        if (dx * dx + dy * dy > tolerance) {
            temp.push(x, y);
            prevX = x;
            prevY = y;
        }
    }
    temp.push(parseFloat(points[l]), parseFloat(points[l + 1]));
    last = temp.length - 2;
    result = [
        temp[0],
        temp[1]
    ];
    simplifyStep(temp, 0, last, tolerance, result);
    result.push(temp[last], temp[last + 1]);
    return result;
}
function getClosestProgressOnBezier(iterations, px, py, start, end, slices, x0, y0, x1, y1, x2, y2, x3, y3) {
    var inc = (end - start) / slices, best = 0, t = start, x, y, d, dx, dy, inv;
    _bestDistance = _largeNum;
    while(t <= end){
        inv = 1 - t;
        x = inv * inv * inv * x0 + 3 * inv * inv * t * x1 + 3 * inv * t * t * x2 + t * t * t * x3;
        y = inv * inv * inv * y0 + 3 * inv * inv * t * y1 + 3 * inv * t * t * y2 + t * t * t * y3;
        dx = x - px;
        dy = y - py;
        d = dx * dx + dy * dy;
        if (d < _bestDistance) {
            _bestDistance = d;
            best = t;
        }
        t += inc;
    }
    return iterations > 1 ? getClosestProgressOnBezier(iterations - 1, px, py, Math.max(best - inc, 0), Math.min(best + inc, 1), slices, x0, y0, x1, y1, x2, y2, x3, y3) : best;
}
function getClosestData(rawPath, x, y, slices) {
    //returns an object with the closest j, i, and t (j is the segment index, i is the index of the point in that segment, and t is the time/progress along that bezier)
    var closest = {
        j: 0,
        i: 0,
        t: 0
    }, bestDistance = _largeNum, i, j, t, segment;
    for(j = 0; j < rawPath.length; j++){
        segment = rawPath[j];
        for(i = 0; i < segment.length; i += 6){
            t = getClosestProgressOnBezier(1, x, y, 0, 1, slices || 20, segment[i], segment[i + 1], segment[i + 2], segment[i + 3], segment[i + 4], segment[i + 5], segment[i + 6], segment[i + 7]);
            if (bestDistance > _bestDistance) {
                bestDistance = _bestDistance;
                closest.j = j;
                closest.i = i;
                closest.t = t;
            }
        }
    }
    return closest;
}
function subdivideSegmentNear(x, y, segment, slices, iterations) {
    var l = segment.length, bestDistance = _largeNum, bestT = 0, bestSegmentIndex = 0, t, i;
    slices = slices || 20;
    iterations = iterations || 3;
    for(i = 0; i < l; i += 6){
        t = getClosestProgressOnBezier(1, x, y, 0, 1, slices, segment[i], segment[i + 1], segment[i + 2], segment[i + 3], segment[i + 4], segment[i + 5], segment[i + 6], segment[i + 7]);
        if (bestDistance > _bestDistance) {
            bestDistance = _bestDistance;
            bestT = t;
            bestSegmentIndex = i;
        }
    }
    t = getClosestProgressOnBezier(iterations, x, y, bestT - 0.05, bestT + 0.05, slices, segment[bestSegmentIndex], segment[bestSegmentIndex + 1], segment[bestSegmentIndex + 2], segment[bestSegmentIndex + 3], segment[bestSegmentIndex + 4], segment[bestSegmentIndex + 5], segment[bestSegmentIndex + 6], segment[bestSegmentIndex + 7]);
    subdivideSegment(segment, bestSegmentIndex, t);
    return bestSegmentIndex + 6;
}
function rawPathToString(rawPath) {
    if (_isNumber(rawPath[0])) //in case a segment is passed in instead
    rawPath = [
        rawPath
    ];
    var result = "", l = rawPath.length, sl, s, i, segment;
    for(s = 0; s < l; s++){
        segment = rawPath[s];
        result += "M" + _round(segment[0]) + "," + _round(segment[1]) + " C";
        sl = segment.length;
        for(i = 2; i < sl; i++)result += _round(segment[i++]) + "," + _round(segment[i++]) + " " + _round(segment[i++]) + "," + _round(segment[i++]) + " " + _round(segment[i++]) + "," + _round(segment[i]) + " ";
        if (segment.closed) result += "z";
    }
    return result;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"cKv5m":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _gsap = require("gsap");
var _mathJs = require("../basic/math.js");
"use strict";
exports.default = class {
    constructor(main){
        this.main = main;
        this.position = {
            x: window.innerWidth / 2,
            y: window.innerHeight / 2
        };
        this.current = {
            x: window.innerWidth / 2,
            y: window.innerHeight / 2
        };
        this.follows = [];
        this.create();
        this.initEvents();
    }
    create() {
        this.element = document.createElement("div");
        this.element.className = "mouse";
        document.body.appendChild(this.element);
        let reg = document.createElement("div");
        reg.className = "mouse_reg mouse_hand";
        reg.innerHTML = this.main.icons.mreg;
        this.element.appendChild(reg);
        let hov = document.createElement("div");
        hov.className = "mouse_hov mouse_hand";
        hov.innerHTML = this.main.icons.mhover;
        this.element.appendChild(hov);
        let drag = document.createElement("div");
        drag.className = "mouse_drag mouse_hand";
        drag.innerHTML = this.main.icons.mdrag;
        this.element.appendChild(drag);
        let dragin = document.createElement("div");
        dragin.className = "mouse_dragin mouse_hand";
        dragin.innerHTML = this.main.icons.mdragin;
        this.element.appendChild(dragin);
        this.ball = document.createElement("div");
        this.ball.className = "mouse_ball";
        this.ball.innerHTML = '<span class="scrolldown">scroll<br>down</span><span class="read">read</span><span class="listen">Listen</span><span class="exp">Explore</span><span class="watch">Watch</span>';
        this.element.appendChild(this.ball);
        this.followbox = document.createElement("div");
        this.followbox.className = "followbox";
        document.querySelector("#content").appendChild(this.followbox);
        this.followbox = document.querySelector(".followbox");
    }
    update() {
        let targetX = this.position.x;
        let targetY = this.position.y;
        this.current.x = (0, _mathJs.lerp)(this.current.x, targetX, .9);
        this.current.y = (0, _mathJs.lerp)(this.current.y, targetY, .9);
        (0, _gsap.gsap).set(this.element, {
            x: this.current.x,
            y: this.current.y
        });
        if (this.follows.length != 0) {
            for (let ob of this.follows)if (ob.active == 1) {
                const x = targetX;
                const y = targetY;
                ob.current.x = (0, _mathJs.lerp)(ob.current.x, x, .03);
                ob.current.y = (0, _mathJs.lerp)(ob.current.y, y, .03);
                (0, _gsap.gsap).set(ob.follow, {
                    left: ob.current.x + "px",
                    top: ob.current.y + "px"
                });
            }
        }
    }
    createFollow(pos, dad, follow, el, type) {
        const dadpos = dad.getBoundingClientRect();
        // //  console.log(dadpos)
        // const x = this.current.x-dadpos.x
        // const y = this.current.y-dadpos.y
        const x = dadpos.x;
        const y = dadpos.y;
        // const x = this.current.x
        // const y =  this.current.y
        let followOb = {
            pos: pos,
            dad: dad,
            dadpos: {
                x: dadpos.x,
                y: dadpos.y
            },
            current: {
                x: this.current.x,
                y: this.current.y
            },
            follow: follow,
            active: 1
        };
        this.follows.push(followOb);
        follow.appendChild(el);
        (0, _gsap.gsap).set(follow, {
            left: this.current.x + "px",
            top: this.current.y + "px"
        });
        // //  console.log(follow)
        document.querySelector(".followbox").appendChild(follow);
        (0, _gsap.gsap).to(follow, {
            "clip-path": "ellipse(35% 55% at 50% 50%)",
            rotate: "-45deg",
            delay: .3,
            duration: .45
        });
        (0, _gsap.gsap).to(follow.querySelector("img"), {
            rotate: "45deg",
            delay: .3,
            duration: .45
        });
    // let mask = document.createElement('div')
    // mask.className = 'follow_mask'
    // mask.appendChild(el)
    // follow.appendChild(mask)
    // setTimeout(()=>{
    //   follow.classList.add('unmask')
    //   if(type=='video'){
    //     el.play()
    //   }
    // },16)
    }
    escapeOps() {
        for (let deleteel of document.querySelectorAll(".followmouse"))(0, _gsap.gsap).to(deleteel, {
            "clip-path": "ellipse(0% 0% at 50% 50%)",
            duration: .3,
            onComplete: ()=>{
                deleteel.remove();
            }
        });
    }
    initEvents() {
        window.addEventListener("mousedown", ()=>{
            document.documentElement.classList.add("mouse-down");
        });
        window.addEventListener("mouseup", ()=>{
            document.documentElement.classList.remove("mouse-down");
        });
        this.mouseHoverIn = ()=>{
            document.documentElement.classList.add("mouse-hover");
        };
        this.mouseHoverOut = ()=>{
            document.documentElement.classList.remove("mouse-hover");
        };
        this.mouseReadIn = ()=>{
            document.documentElement.classList.add("mouse-read");
            document.documentElement.classList.add("mouse-ball");
        };
        this.mouseReadOut = ()=>{
            document.documentElement.classList.remove("mouse-read");
            document.documentElement.classList.remove("mouse-ball");
        };
        this.mouseWatchIn = ()=>{
            document.documentElement.classList.add("mouse-watch");
            document.documentElement.classList.add("mouse-ball");
        };
        this.mouseWatchOut = ()=>{
            document.documentElement.classList.remove("mouse-watch");
            document.documentElement.classList.remove("mouse-ball");
        };
        this.mouseListenIn = ()=>{
            document.documentElement.classList.add("mouse-listen");
            document.documentElement.classList.add("mouse-ball");
        };
        this.mouseListenOut = ()=>{
            document.documentElement.classList.remove("mouse-listen");
            document.documentElement.classList.remove("mouse-ball");
        };
        this.mouseExpIn = ()=>{
            document.documentElement.classList.add("mouse-exp");
            document.documentElement.classList.add("mouse-ball");
        };
        this.mouseExpOut = ()=>{
            document.documentElement.classList.remove("mouse-exp");
            document.documentElement.classList.remove("mouse-ball");
        };
        this.mouseScrollIn = ()=>{
            document.documentElement.classList.add("mouse-scroll");
            document.documentElement.classList.add("mouse-ball");
        };
        this.mouseScrollOut = ()=>{
            document.documentElement.classList.remove("mouse-scroll");
            document.documentElement.classList.remove("mouse-ball");
        };
        this.mouseDragIn = ()=>{
            document.documentElement.classList.add("mouse-drag");
        };
        this.mouseDragOut = ()=>{
            document.documentElement.classList.remove("mouse-drag");
        };
        this.mouseFollowIn = async (el)=>{
            document.documentElement.classList.add("mouse-hide");
            // this.escapeOps()
            let follow = document.createElement("div");
            follow.className = "followmouse";
            const pos = this.follows.length;
            el.dataset.posho = pos;
            const src = el.dataset.image;
            const img = new Image();
            img.src = src;
            this.createFollow(pos, el, follow, img, "image");
        };
        this.mouseFollowOut = async (el)=>{
            // //  console.log('followout')
            document.documentElement.classList.remove("mouse-hide");
            if (!el.dataset.posho) ;
            else {
                this.follows[el.dataset.posho].active = 0;
                let deleteel = this.follows[el.dataset.posho].follow;
                el.dataset.posho = "";
                (0, _gsap.gsap).to(deleteel, {
                    "clip-path": "ellipse(0% 0% at 50% 50%)",
                    duration: .3,
                    onComplete: ()=>{
                        deleteel.remove();
                    }
                });
            }
        };
    }
    clear() {
        document.documentElement.classList.remove("mouse-scroll");
        document.documentElement.classList.remove("mouse-listen");
        document.documentElement.classList.remove("mouse-watch");
        document.documentElement.classList.remove("mouse-hover");
        document.documentElement.classList.remove("mouse-down");
        document.documentElement.classList.remove("mouse-hide");
        document.documentElement.classList.remove("mouse-read");
        document.documentElement.classList.remove("mouse-ball");
        document.documentElement.classList.remove("mouse-drag");
        document.documentElement.classList.remove("mouse-exp");
    }
    async reset() {
        this.clear();
        await this.escapeOps();
        this.mouseRead = document.querySelectorAll(".mouseRead");
        if (this.mouseRead) {
            for (let el of this.mouseRead)if (!el.classList.contains("evt")) {
                el.addEventListener("mouseenter", ()=>this.mouseReadIn(el));
                el.addEventListener("mouseleave", ()=>this.mouseReadOut(el));
                if (el.classList.contains("perma")) el.classList.add("evt");
            }
        }
        this.mouseWatch = document.querySelectorAll(".mouseWatch");
        if (this.mouseWatch) {
            for (let el1 of this.mouseWatch)if (!el1.classList.contains("evt")) {
                el1.addEventListener("mouseenter", ()=>this.mouseWatchIn(el1));
                el1.addEventListener("mouseleave", ()=>this.mouseWatchOut(el1));
                if (el1.classList.contains("perma")) el1.classList.add("evt");
            }
        }
        this.mouseExp = document.querySelectorAll(".mouseExp");
        if (this.mouseExp) {
            for (let el2 of this.mouseExp)if (!el2.classList.contains("evt")) {
                el2.addEventListener("mouseenter", ()=>this.mouseExpIn(el2));
                el2.addEventListener("mouseleave", ()=>this.mouseExpOut(el2));
                if (el2.classList.contains("perma")) el2.classList.add("evt");
            }
        }
        if (document.querySelectorAll(".mouseFollow")) {
            this.mouseFollow = document.querySelectorAll(".mouseFollow");
            this.promises = [];
            for (let el3 of this.mouseFollow)if (!el3.classList.contains("evt")) {
                el3.addEventListener("mouseenter", ()=>this.mouseFollowIn(el3));
                el3.addEventListener("mouseleave", ()=>this.mouseFollowOut(el3));
                el3.classList.add("evt");
                this.promises.push(new Promise((resolve, reject)=>{
                    const img = new Image();
                    img.onload = ()=>resolve(el3.dataset.image);
                    img.onerror = ()=>reject(path);
                // //  console.log(img)
                }));
            }
        }
        this.mouseListen = document.querySelectorAll(".mouseListen");
        if (this.mouseListen) {
            for (let el4 of this.mouseListen)if (!el4.classList.contains("evt")) {
                el4.addEventListener("mouseenter", ()=>this.mouseListenIn(el4));
                el4.addEventListener("mouseleave", ()=>this.mouseListenOut(el4));
                el4.classList.add("evt");
            }
        }
        this.mouseScroll = document.querySelectorAll(".mouseScroll");
        if (this.mouseScroll) {
            for (let el5 of this.mouseScroll)if (!el5.classList.contains("evt")) {
                el5.addEventListener("mouseenter", ()=>this.mouseScrollIn(el5));
                el5.addEventListener("mouseleave", ()=>this.mouseScrollOut(el5));
                el5.classList.add("evt");
            }
        }
        this.mouseDrag = document.querySelectorAll(".mouseDrag");
        if (this.mouseDrag) {
            for (let el6 of this.mouseDrag)if (!el6.classList.contains("evt")) {
                el6.addEventListener("mouseenter", ()=>this.mouseDragIn(el6));
                el6.addEventListener("mouseleave", ()=>this.mouseDragOut(el6));
                el6.classList.add("evt");
            }
        }
        this.mouseHover = document.querySelectorAll(".mouseHover");
        if (this.mouseHover) {
            for (let el7 of this.mouseHover)if (!el7.classList.contains("evt")) {
                el7.addEventListener("mouseenter", ()=>this.mouseHoverIn(el7));
                el7.addEventListener("mouseleave", ()=>this.mouseHoverOut(el7));
                el7.classList.add("evt");
            }
        }
    }
};

},{"gsap":"gS77a","../basic/math.js":"bABGj","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"bABGj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "lerp", ()=>lerp);
parcelHelpers.export(exports, "clamp", ()=>clamp);
parcelHelpers.export(exports, "random", ()=>random);
parcelHelpers.export(exports, "map", ()=>map);
var _gsap = require("gsap");
var _gsapDefault = parcelHelpers.interopDefault(_gsap);
function lerp(p1, p2, t) {
    return (0, _gsapDefault.default).utils.interpolate(p1, p2, t);
}
function clamp(min, max, number) {
    return (0, _gsapDefault.default).utils.clamp(min, max, number);
}
function random(min, max) {
    return (0, _gsapDefault.default).utils.random(min, max);
}
function map(valueToMap, inMin, inMax, outMin, outMax) {
    return (0, _gsapDefault.default).utils.mapRange(inMin, inMax, outMin, outMax, valueToMap);
}

},{"gsap":"gS77a","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"5uhxP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _component = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Component");
var _componentDefault = parcelHelpers.interopDefault(_component);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _fieldJs = require("./Field.js");
var _fieldJsDefault = parcelHelpers.interopDefault(_fieldJs);
var _gsap = require("gsap");
var _eta = require("eta");
exports.default = class extends (0, _componentDefault.default) {
    constructor(main){
        super({});
        this.main = main;
        this.isOpen = 0;
        this.isSearch = 0;
        this.speed = 0;
    }
    async generate() {
        const string = _eta.render((0, _templateEtaDefault.default), {
            global: this.main
        });
        document.querySelector("body").insertAdjacentHTML("afterbegin", string);
        this.DOM = {
            el: document.querySelector(".nav")
        };
        this.DOM.burger = this.DOM.el.querySelector(".nav_burger");
        this.DOM.searchopen = this.DOM.el.querySelector(".actSearch");
        this.DOM.searchclose = this.DOM.el.querySelector(".closeSearch");
        this.DOM.searchbg = document.querySelector(".searchbg");
        this.DOM.els = this.DOM.el.querySelectorAll(".nav_menu_el");
        this.DOM.bgs = this.DOM.el.querySelectorAll(".nav_menu_bg");
        this.field = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".fieldsearch"));
        this.keyFn = (e)=>{
            // this.field.DOM.npt.value = this.field.DOM.npt.value + e.keyCode + e.keyCode
            // this.field.DOM.npt.value = e.keyCode + e.key
            if (e.key == "Enter" || e.keyCode == 9 || e.keyCode == 13) this.emit("search");
        };
        this.focusFn = ()=>{
            this.field.DOM.el.classList.remove("err");
            this.field.DOM.el.classList.add("foc");
            if (this.main.isTouch) // this.field.DOM.npt.style.backgroundColor='red'
            this.field.DOM.npt.addEventListener("keydown", (e)=>this.keyFn(e));
            else this.field.DOM.npt.addEventListener("keydown", (e)=>this.keyFn(e));
        };
        this.focusoutFn = ()=>{
            this.field.DOM.el.classList.remove("foc");
            this.field.DOM.el.classList.remove("err");
            if (this.main.isTouch) // this.field.DOM.npt.style.backgroundColor='yellow'
            // if(this.field.DOM.npt.value!=''){
            //   this.emit('search')
            // }
            this.field.DOM.npt.removeEventListener("keydown", (e)=>this.keyFn(e));
            else this.field.DOM.npt.removeEventListener("keydown", (e)=>this.keyFn(e));
        };
        this.field.DOM.npt.addEventListener("focusin", this.focusFn);
        this.field.DOM.npt.addEventListener("focusout", ()=>this.focusoutFn());
        await this.loadImages();
        this.initEvents();
    }
    async create() {
        (0, _gsap.gsap).to(".nav", {
            y: 0,
            ease: (0, _gsap.Power2).easeInOut,
            duration: .6
        });
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video"));
        if (videos) Promise.all(videos).then((values)=>{});
    }
    async openMenu() {}
    async closeMenu() {
        this.isOpen = 0;
        document.documentElement.classList.remove("menu-active");
    }
    initEvents() {
        this.showFn = (i)=>{
            if (this.DOM.bgs[i].querySelector("video")) this.DOM.bgs[i].querySelector("video").play();
            this.DOM.bgs[i].classList.add("show");
            let r1 = (0, _gsap.gsap).utils.random(30, 70);
            let r2 = (0, _gsap.gsap).utils.random(30, 70);
            this.DOM.bgs[i].dataset.x = r1;
            this.DOM.bgs[i].dataset.y = r2;
            (0, _gsap.gsap).killTweensOf(this.DOM.bgs[i]);
            (0, _gsap.gsap).set(this.DOM.bgs[i], {
                "clip-path": "circle(0% at " + r1 + "% " + r2 + "%)"
            });
            (0, _gsap.gsap).to(this.DOM.bgs[i], {
                "clip-path": "circle(100% at " + r1 + "% " + r2 + "%)",
                duration: 3,
                ease: "bounceNew"
            });
        };
        this.hideFn = (i)=>{
            this.DOM.bgs[i].classList.remove("show");
            let r1 = this.DOM.bgs[i].dataset.x;
            let r2 = this.DOM.bgs[i].dataset.y;
            (0, _gsap.gsap).killTweensOf(this.DOM.bgs[i]);
            (0, _gsap.gsap).to(this.DOM.bgs[i], {
                "clip-path": "circle(0% at " + r1 + "% " + r2 + "%)",
                duration: 2,
                ease: "bounceNew"
            });
            if (this.DOM.bgs[i].querySelector("video")) setTimeout(()=>{
                this.DOM.bgs[i].querySelector("video").pause();
            }, 600);
        };
        for (let [index, el] of this.DOM.els.entries()){
            el.addEventListener("mouseenter", ()=>this.showFn(index));
            el.addEventListener("mouseleave", ()=>this.hideFn(index));
        }
        this.DOM.burger.onclick = (event)=>{
            if (this.isOpen) {
                this.isOpen = 0;
                document.documentElement.classList.remove("menu-active");
            } else {
                this.isOpen = 1;
                document.documentElement.classList.add("menu-active");
            }
        };
        this.DOM.searchopen.onclick = (event)=>{
            this.isSearch = 1;
            document.documentElement.classList.add("search-active");
            this.field.DOM.npt.focus();
        };
        this.closeSearchFn = ()=>{
            this.isSearch = 0;
            document.documentElement.classList.remove("search-active");
            this.field.clear();
        };
        this.DOM.searchclose.addEventListener("click", this.closeSearchFn);
        this.DOM.searchbg.addEventListener("click", this.closeSearchFn);
    }
};

},{"/src/js🧠🧠🧠/defaults/Component":"1K7Kz","bundle-text:./template.eta":"btW6f","./Field.js":"6uF60","gsap":"gS77a","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"btW6f":[function(require,module,exports) {
module.exports = "\n  <nav class=\"nav\">\n    <div class=\"nav_menu\">\n      <div class=\"nav_menu_bgs\">\n      <% it.global.acf.menu_images.forEach(function(w,key){ %>\n        <% if(w.video!=false){ %>\n        <div class=\"nav_menu_bg\"><video playsinline=\"\" loop=\"\" preload=\"none\" muted=\"\" poster=\"<%~ w.image %>\"\n            src=\"<%~ w.video %>\"></video></div>\n\n        <% }else{ %>\n          <div class=\"nav_menu_bg\"><img src=\"<%~ w.image %>\"></div>\n\n        <%\n          } \n        }) %>\n      </div>\n      <% let count = (it.global.acf.menu_images.length);%>\n      <% const defaultPages = [\"Pods\", \"Shows\", \"Articles\", \"Network\", \"Lists\", \"Job board\", \"Contact\", \"Shop\"] %>\n      <% const defaultLinks = [it.global.acf.pods, it.global.acf.shows, it.global.acf.articles, it.global.acf.network, it.global.acf.lists, it.global.acf.jobs, it.global.acf.contact, it.global.acf.shop] %>\n      \n      <div class=\"nav_menu_els\" style=\"--fontSize: <%= 64/count %>vh; --margin: <%= 16/count %>vh\">\n        <% it.global.acf.menu_images.forEach(function(w,key){ \n          let item = w.menu_link?.title || defaultPages[key];\n          let link = w.menu_link?.url || defaultLinks[key];\n          let target = w.menu_link?.target || \"_self\";\n\n          switch (w?.access) {\n            case 'player':\n              if (it?.global?.user?.acf?.is_player_user) break;\n              else {\n                count--;\n                return;\n              }\n            case 'content_hub':\n              if (it?.global?.user?.acf?.is_content_hub_user) break;\n              else {\n                count--;\n                return;\n              }\n            case 'both':\n              if (it?.global?.user?.acf?.is_player_user || it?.global?.user?.acf?.is_content_hub_user) break;\n              else return;\n            default:\n              break;\n          }\n          \n          if (item && link) {%>\n            <a data-type=\"<%~ item?.toLowerCase().split(' ')[0]%>archive\" href=\"<%~ link %>\" target=\"<%~ target%>\" class=\"nav_menu_el mouseHover\"><span><%~ item%></span></a>\n          <% } else {\n              count--;\n          } \n        }) %>\n      </div>\n\n      <% /* <% count = it.global.acf.?ch_menu_links?.length;%>\n      <div class=\"nav_menu_els nav_menu_els--ch\" style=\"--fontSize: <%= 64/count %>vh; --margin: <%= 16/count %>vh\">\n        <% it.global.acf.?ch_menu_links?.forEach(function(w,key){ \n          let item = w.menu_link?.title;\n          let link = w.menu_link?.url;\n          let target = w.menu_link?.target || \"_self\";\n          \n          if (item && link) {%>\n            <a data-type=\"<%~ item?.toLowerCase().split(' ')[0]%>archive\" href=\"<%~ link %>\" target=\"<%~ target%>\" class=\"nav_menu_el mouseHover\"><span><%~ item%></span></a>\n          <% } else {\n              count--;\n          } \n        }) %>\n      </div> */ %>\n    </div>\n    <div class=\"nav_searchbar\">\n      <div class=\"nav_searchbar_icon\">\n        <%~ it.global.icons.search %>\n      </div>\n      <div class=\"fieldsearch nav_searchbar_input\">\n        <label class=\"fieldsearch_lbl\">Search</label>\n        <input class=\"fieldsearch_npt\" autofocus>\n      </div>\n      <div class=\"nav_searchbar_close closeSearch mouseHover\"><span></span><span></span></div>\n    </div>\n    <div class=\"nav_box\">\n      <a class=\"nav_logo mouseHover\" data-type=\"index\" href=\"<%~ it.global.acf.home %>\">\n        <%~ it.global.icons.logo %>\n        <%~ it.global.icons.logoxs %>\n      </a>\n      <div class=\"nav_burger mouseHover\"><span></span><span></span><span></span></div>\n      <div class=\"nav_links\">\n        <% \n          const ch_menu_links = it.global?.acf?.ch_menu_links || [];\n\n          ch_menu_links?.forEach((w,key) => { \n          let item = w.link?.title;\n          let link = w.link?.url;\n          let target = w.link?.target || \"_self\";\n          \n          if (item && link) {%>\n            <a data-type=\"<%~ item?.toLowerCase().split(' ')[0]%>archive\" href=\"<%~ link %>\" target=\"<%~ target%>\" class=\"nav_link mouseHover\"><%~ item%></a>\n          <% } \n        }) %>\n      </div>\n      <div class=\"nav_box_right\">\n        <div class=\"nav_search actSearch mouseHover\">\n        <%~ it.global.icons.search %>\n        </div>\n        <div class=\"nav-mp-mobile mouseHover\" style=\"max-height: 0%;\">\n          <div class=\"nav_search nav_search-mp-mobile mouseHover\"><%~ it.global.icons.search_2 %></div>\n          <div class=\"nav_burger nav_burger-mp-mobile mouseHover\"><%~ it.global.icons.menu_2 %></div>\n        </div>\n      <div class=\"nav_buttons\">\n          <a class=\"nav_log mouseHover\" data-type=\"login\" href=\"<%~ it.global.acf.login %>\" id=\"my-account-btn\">\n            <div class=\"nav_log_t\">Sign up / log in</div>\n            <div class=\"nav_log_l\">My account</div>\n          </a>\n          <a class=\"nav_sup mouseHover\" href=\"<%~ it.global.acf.support %>\">\n            <div class=\"nav_sup_t\">Support Us</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  </nav>\n";

},{}],"6uF60":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
"use strict";
exports.default = class {
    constructor(el){
        this.DOM = {
            el: el
        };
        this.DOM.npt = this.DOM.el.querySelector(".fieldsearch_npt");
        this.initEvents();
    }
    initEvents() {
        this.checkField = ()=>{
            if (this.DOM.npt.value == "") this.DOM.el.classList.add("fill");
            else this.DOM.el.classList.add("fill");
        };
        this.DOM.npt.addEventListener("input", ()=>this.checkField());
    }
    check() {
        if ("" == this.DOM.npt.value) return void this.DOM.el.classList.add("err");
        this.DOM.el.classList.remove("err");
    }
    clear() {
        this.DOM.el.classList.remove("foc");
        this.DOM.el.classList.remove("fill");
        this.DOM.el.classList.remove("err");
        this.DOM.npt.value = "";
    }
    removeEvents() {
        this.DOM.npt.removeEventListener("input", ()=>this.checkField());
        this.DOM.npt.removeEventListener("focusin", this.focusFn);
        this.DOM.npt.removeEventListener("focusout", ()=>this.focusoutFn());
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"blnnU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__express", ()=>renderFile);
parcelHelpers.export(exports, "compile", ()=>compile);
parcelHelpers.export(exports, "compileToString", ()=>compileToString);
parcelHelpers.export(exports, "config", ()=>config);
parcelHelpers.export(exports, "configure", ()=>configure);
parcelHelpers.export(exports, "defaultConfig", ()=>config);
parcelHelpers.export(exports, "getConfig", ()=>getConfig);
parcelHelpers.export(exports, "loadFile", ()=>loadFile);
parcelHelpers.export(exports, "parse", ()=>parse);
parcelHelpers.export(exports, "render", ()=>render);
parcelHelpers.export(exports, "renderAsync", ()=>renderAsync);
parcelHelpers.export(exports, "renderFile", ()=>renderFile);
parcelHelpers.export(exports, "renderFileAsync", ()=>renderFileAsync);
parcelHelpers.export(exports, "templates", ()=>templates);
var _fs = require("fs");
var _path = require("path");
function setPrototypeOf(obj, proto) {
    // eslint-disable-line @typescript-eslint/no-explicit-any
    if (Object.setPrototypeOf) Object.setPrototypeOf(obj, proto);
    else obj.__proto__ = proto;
}
// This is pretty much the only way to get nice, extended Errors
// without using ES6
/**
 * This returns a new Error with a custom prototype. Note that it's _not_ a constructor
 *
 * @param message Error message
 *
 * **Example**
 *
 * ```js
 * throw EtaErr("template not found")
 * ```
 */ function EtaErr(message) {
    const err = new Error(message);
    setPrototypeOf(err, EtaErr.prototype);
    return err;
}
EtaErr.prototype = Object.create(Error.prototype, {
    name: {
        value: "Eta Error",
        enumerable: false
    }
});
/**
 * Throws an EtaErr with a nicely formatted error and message showing where in the template the error occurred.
 */ function ParseErr(message, str, indx) {
    const whitespace = str.slice(0, indx).split(/\n/);
    const lineNo = whitespace.length;
    const colNo = whitespace[lineNo - 1].length + 1;
    message += " at line " + lineNo + " col " + colNo + ":\n\n" + "  " + str.split(/\n/)[lineNo - 1] + "\n" + "  " + Array(colNo).join(" ") + "^";
    throw EtaErr(message);
}
/**
 * @returns The global Promise function
 */ const promiseImpl = new Function("return this")().Promise;
/**
 * @returns A new AsyncFunction constuctor
 */ function getAsyncFunctionConstructor() {
    try {
        return new Function("return (async function(){}).constructor")();
    } catch (e) {
        if (e instanceof SyntaxError) throw EtaErr("This environment doesn't support async/await");
        else throw e;
    }
}
/**
 * str.trimLeft polyfill
 *
 * @param str - Input string
 * @returns The string with left whitespace removed
 *
 */ function trimLeft(str) {
    // eslint-disable-next-line no-extra-boolean-cast
    if (!!String.prototype.trimLeft) return str.trimLeft();
    else return str.replace(/^\s+/, "");
}
/**
 * str.trimRight polyfill
 *
 * @param str - Input string
 * @returns The string with right whitespace removed
 *
 */ function trimRight(str) {
    // eslint-disable-next-line no-extra-boolean-cast
    if (!!String.prototype.trimRight) return str.trimRight();
    else return str.replace(/\s+$/, ""); // TODO: do we really need to replace BOM's?
}
// TODO: allow '-' to trim up until newline. Use [^\S\n\r] instead of \s
/* END TYPES */ function hasOwnProp(obj, prop) {
    return Object.prototype.hasOwnProperty.call(obj, prop);
}
function copyProps(toObj, fromObj) {
    for(const key in fromObj)if (hasOwnProp(fromObj, key)) toObj[key] = fromObj[key];
    return toObj;
}
/**
 * Takes a string within a template and trims it, based on the preceding tag's whitespace control and `config.autoTrim`
 */ function trimWS(str, config, wsLeft, wsRight) {
    let leftTrim;
    let rightTrim;
    if (Array.isArray(config.autoTrim)) {
        // kinda confusing
        // but _}} will trim the left side of the following string
        leftTrim = config.autoTrim[1];
        rightTrim = config.autoTrim[0];
    } else leftTrim = rightTrim = config.autoTrim;
    if (wsLeft || wsLeft === false) leftTrim = wsLeft;
    if (wsRight || wsRight === false) rightTrim = wsRight;
    if (!rightTrim && !leftTrim) return str;
    if (leftTrim === "slurp" && rightTrim === "slurp") return str.trim();
    if (leftTrim === "_" || leftTrim === "slurp") // console.log('trimming left' + leftTrim)
    // full slurp
    str = trimLeft(str);
    else if (leftTrim === "-" || leftTrim === "nl") // nl trim
    str = str.replace(/^(?:\r\n|\n|\r)/, "");
    if (rightTrim === "_" || rightTrim === "slurp") // full slurp
    str = trimRight(str);
    else if (rightTrim === "-" || rightTrim === "nl") // nl trim
    str = str.replace(/(?:\r\n|\n|\r)$/, ""); // TODO: make sure this gets \r\n
    return str;
}
/**
 * A map of special HTML characters to their XML-escaped equivalents
 */ const escMap = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;",
    '"': "&quot;",
    "'": "&#39;"
};
function replaceChar(s) {
    return escMap[s];
}
/**
 * XML-escapes an input value after converting it to a string
 *
 * @param str - Input value (usually a string)
 * @returns XML-escaped string
 */ function XMLEscape(str) {
    // eslint-disable-line @typescript-eslint/no-explicit-any
    // To deal with XSS. Based on Escape implementations of Mustache.JS and Marko, then customized.
    const newStr = String(str);
    if (/[&<>"']/.test(newStr)) return newStr.replace(/[&<>"']/g, replaceChar);
    else return newStr;
}
/* END TYPES */ const templateLitReg = /`(?:\\[\s\S]|\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})*}|(?!\${)[^\\`])*`/g;
const singleQuoteReg = /'(?:\\[\s\w"'\\`]|[^\n\r'\\])*?'/g;
const doubleQuoteReg = /"(?:\\[\s\w"'\\`]|[^\n\r"\\])*?"/g;
/** Escape special regular expression characters inside a string */ function escapeRegExp(string) {
    // From MDN
    return string.replace(/[.*+\-?^${}()|[\]\\]/g, "\\$&"); // $& means the whole matched string
}
function parse(str, config) {
    let buffer = [];
    let trimLeftOfNextStr = false;
    let lastIndex = 0;
    const parseOptions = config.parse;
    if (config.plugins) for(let i = 0; i < config.plugins.length; i++){
        const plugin = config.plugins[i];
        if (plugin.processTemplate) str = plugin.processTemplate(str, config);
    }
    /* Adding for EJS compatibility */ if (config.rmWhitespace) // Code taken directly from EJS
    // Have to use two separate replaces here as `^` and `$` operators don't
    // work well with `\r` and empty lines don't work well with the `m` flag.
    // Essentially, this replaces the whitespace at the beginning and end of
    // each line and removes multiple newlines.
    str = str.replace(/[\r\n]+/g, "\n").replace(/^\s+|\s+$/gm, "");
    /* End rmWhitespace option */ templateLitReg.lastIndex = 0;
    singleQuoteReg.lastIndex = 0;
    doubleQuoteReg.lastIndex = 0;
    function pushString(strng, shouldTrimRightOfString) {
        if (strng) {
            // if string is truthy it must be of type 'string'
            strng = trimWS(strng, config, trimLeftOfNextStr, // this will only be false on the first str, the next ones will be null or undefined
            shouldTrimRightOfString);
            if (strng) {
                // replace \ with \\, ' with \'
                // we're going to convert all CRLF to LF so it doesn't take more than one replace
                strng = strng.replace(/\\|'/g, "\\$&").replace(/\r\n|\n|\r/g, "\\n");
                buffer.push(strng);
            }
        }
    }
    const prefixes = [
        parseOptions.exec,
        parseOptions.interpolate,
        parseOptions.raw
    ].reduce(function(accumulator, prefix) {
        if (accumulator && prefix) return accumulator + "|" + escapeRegExp(prefix);
        else if (prefix) // accumulator is falsy
        return escapeRegExp(prefix);
        else // prefix and accumulator are both falsy
        return accumulator;
    }, "");
    const parseOpenReg = new RegExp("([^]*?)" + escapeRegExp(config.tags[0]) + "(-|_)?\\s*(" + prefixes + ")?\\s*", "g");
    const parseCloseReg = new RegExp("'|\"|`|\\/\\*|(\\s*(-|_)?" + escapeRegExp(config.tags[1]) + ")", "g");
    // TODO: benchmark having the \s* on either side vs using str.trim()
    let m;
    while(m = parseOpenReg.exec(str)){
        lastIndex = m[0].length + m.index;
        const precedingString = m[1];
        const wsLeft = m[2];
        const prefix = m[3] || ""; // by default either ~, =, or empty
        pushString(precedingString, wsLeft);
        parseCloseReg.lastIndex = lastIndex;
        let closeTag;
        let currentObj = false;
        while(closeTag = parseCloseReg.exec(str))if (closeTag[1]) {
            const content = str.slice(lastIndex, closeTag.index);
            parseOpenReg.lastIndex = lastIndex = parseCloseReg.lastIndex;
            trimLeftOfNextStr = closeTag[2];
            const currentType = prefix === parseOptions.exec ? "e" : prefix === parseOptions.raw ? "r" : prefix === parseOptions.interpolate ? "i" : "";
            currentObj = {
                t: currentType,
                val: content
            };
            break;
        } else {
            const char = closeTag[0];
            if (char === "/*") {
                const commentCloseInd = str.indexOf("*/", parseCloseReg.lastIndex);
                if (commentCloseInd === -1) ParseErr("unclosed comment", str, closeTag.index);
                parseCloseReg.lastIndex = commentCloseInd;
            } else if (char === "'") {
                singleQuoteReg.lastIndex = closeTag.index;
                const singleQuoteMatch = singleQuoteReg.exec(str);
                if (singleQuoteMatch) parseCloseReg.lastIndex = singleQuoteReg.lastIndex;
                else ParseErr("unclosed string", str, closeTag.index);
            } else if (char === '"') {
                doubleQuoteReg.lastIndex = closeTag.index;
                const doubleQuoteMatch = doubleQuoteReg.exec(str);
                if (doubleQuoteMatch) parseCloseReg.lastIndex = doubleQuoteReg.lastIndex;
                else ParseErr("unclosed string", str, closeTag.index);
            } else if (char === "`") {
                templateLitReg.lastIndex = closeTag.index;
                const templateLitMatch = templateLitReg.exec(str);
                if (templateLitMatch) parseCloseReg.lastIndex = templateLitReg.lastIndex;
                else ParseErr("unclosed string", str, closeTag.index);
            }
        }
        if (currentObj) buffer.push(currentObj);
        else ParseErr("unclosed tag", str, m.index + precedingString.length);
    }
    pushString(str.slice(lastIndex, str.length), false);
    if (config.plugins) for(let i1 = 0; i1 < config.plugins.length; i1++){
        const plugin1 = config.plugins[i1];
        if (plugin1.processAST) buffer = plugin1.processAST(buffer, config);
    }
    return buffer;
}
/* END TYPES */ /**
 * Compiles a template string to a function string. Most often users just use `compile()`, which calls `compileToString` and creates a new function using the result
 *
 * **Example**
 *
 * ```js
 * compileToString("Hi <%= it.user %>", eta.config)
 * // "var tR='',include=E.include.bind(E),includeFile=E.includeFile.bind(E);tR+='Hi ';tR+=E.e(it.user);if(cb){cb(null,tR)} return tR"
 * ```
 */ function compileToString(str, config) {
    const buffer = parse(str, config);
    let res = "var tR='',__l,__lP" + (config.include ? ",include=E.include.bind(E)" : "") + (config.includeFile ? ",includeFile=E.includeFile.bind(E)" : "") + "\nfunction layout(p,d){__l=p;__lP=d}\n" + (config.useWith ? "with(" + config.varName + "||{}){" : "") + compileScope(buffer, config) + (config.includeFile ? "if(__l)tR=" + (config.async ? "await " : "") + `includeFile(__l,Object.assign(${config.varName},{body:tR},__lP))\n` : config.include ? "if(__l)tR=" + (config.async ? "await " : "") + `include(__l,Object.assign(${config.varName},{body:tR},__lP))\n` : "") + "if(cb){cb(null,tR)} return tR" + (config.useWith ? "}" : "");
    if (config.plugins) for(let i = 0; i < config.plugins.length; i++){
        const plugin = config.plugins[i];
        if (plugin.processFnString) res = plugin.processFnString(res, config);
    }
    return res;
}
/**
 * Loops through the AST generated by `parse` and transform each item into JS calls
 *
 * **Example**
 *
 * ```js
 * // AST version of 'Hi <%= it.user %>'
 * let templateAST = ['Hi ', { val: 'it.user', t: 'i' }]
 * compileScope(templateAST, eta.config)
 * // "tR+='Hi ';tR+=E.e(it.user);"
 * ```
 */ function compileScope(buff, config) {
    let i = 0;
    const buffLength = buff.length;
    let returnStr = "";
    for(i; i < buffLength; i++){
        const currentBlock = buff[i];
        if (typeof currentBlock === "string") {
            const str = currentBlock;
            // we know string exists
            returnStr += "tR+='" + str + "'\n";
        } else {
            const type = currentBlock.t; // ~, s, !, ?, r
            let content = currentBlock.val || "";
            if (type === "r") {
                // raw
                if (config.filter) content = "E.filter(" + content + ")";
                returnStr += "tR+=" + content + "\n";
            } else if (type === "i") {
                // interpolate
                if (config.filter) content = "E.filter(" + content + ")";
                if (config.autoEscape) content = "E.e(" + content + ")";
                returnStr += "tR+=" + content + "\n";
            // reference
            } else if (type === "e") // execute
            returnStr += content + "\n"; // you need a \n in case you have <% } %>
        }
    }
    return returnStr;
}
/**
 * Handles storage and accessing of values
 *
 * In this case, we use it to store compiled template functions
 * Indexed by their `name` or `filename`
 */ class Cacher {
    constructor(cache){
        this.cache = void 0;
        this.cache = cache;
    }
    define(key, val) {
        this.cache[key] = val;
    }
    get(key) {
        // string | array.
        // TODO: allow array of keys to look down
        // TODO: create plugin to allow referencing helpers, filters with dot notation
        return this.cache[key];
    }
    remove(key) {
        delete this.cache[key];
    }
    reset() {
        this.cache = {};
    }
    load(cacheObj) {
        copyProps(this.cache, cacheObj);
    }
}
/* END TYPES */ /**
 * Eta's template storage
 *
 * Stores partials and cached templates
 */ const templates = new Cacher({});
/* END TYPES */ /**
 * Include a template based on its name (or filepath, if it's already been cached).
 *
 * Called like `include(templateNameOrPath, data)`
 */ function includeHelper(templateNameOrPath, data) {
    const template = this.templates.get(templateNameOrPath);
    if (!template) throw EtaErr('Could not fetch template "' + templateNameOrPath + '"');
    return template(data, this);
}
/** Eta's base (global) configuration */ const config = {
    async: false,
    autoEscape: true,
    autoTrim: [
        false,
        "nl"
    ],
    cache: false,
    e: XMLEscape,
    include: includeHelper,
    parse: {
        exec: "",
        interpolate: "=",
        raw: "~"
    },
    plugins: [],
    rmWhitespace: false,
    tags: [
        "<%",
        "%>"
    ],
    templates: templates,
    useWith: false,
    varName: "it"
};
/**
 * Takes one or two partial (not necessarily complete) configuration objects, merges them 1 layer deep into eta.config, and returns the result
 *
 * @param override Partial configuration object
 * @param baseConfig Partial configuration object to merge before `override`
 *
 * **Example**
 *
 * ```js
 * let customConfig = getConfig({tags: ['!#', '#!']})
 * ```
 */ function getConfig(override, baseConfig) {
    // TODO: run more tests on this
    const res = {}; // Linked
    copyProps(res, config); // Creates deep clone of eta.config, 1 layer deep
    if (baseConfig) copyProps(res, baseConfig);
    if (override) copyProps(res, override);
    return res;
}
/** Update Eta's base config */ function configure(options) {
    return copyProps(config, options);
}
/* END TYPES */ /**
 * Takes a template string and returns a template function that can be called with (data, config, [cb])
 *
 * @param str - The template string
 * @param config - A custom configuration object (optional)
 *
 * **Example**
 *
 * ```js
 * let compiledFn = eta.compile("Hi <%= it.user %>")
 * // function anonymous()
 * let compiledFnStr = compiledFn.toString()
 * // "function anonymous(it,E,cb\n) {\nvar tR='',include=E.include.bind(E),includeFile=E.includeFile.bind(E);tR+='Hi ';tR+=E.e(it.user);if(cb){cb(null,tR)} return tR\n}"
 * ```
 */ function compile(str, config) {
    const options = getConfig(config || {});
    /* ASYNC HANDLING */ // The below code is modified from mde/ejs. All credit should go to them.
    const ctor = options.async ? getAsyncFunctionConstructor() : Function;
    /* END ASYNC HANDLING */ try {
        return new ctor(options.varName, "E", // EtaConfig
        "cb", // optional callback
        compileToString(str, options)); // eslint-disable-line no-new-func
    } catch (e) {
        if (e instanceof SyntaxError) throw EtaErr("Bad template syntax\n\n" + e.message + "\n" + Array(e.message.length + 1).join("=") + "\n" + compileToString(str, options) + "\n" // This will put an extra newline before the callstack for extra readability
        );
        else throw e;
    }
}
const _BOM = /^\uFEFF/;
/* END TYPES */ /**
 * Get the path to the included file from the parent file path and the
 * specified path.
 *
 * If `name` does not have an extension, it will default to `.eta`
 *
 * @param name specified path
 * @param parentfile parent file path
 * @param isDirectory whether parentfile is a directory
 * @return absolute path to template
 */ function getWholeFilePath(name, parentfile, isDirectory) {
    const includePath = _path.resolve(isDirectory ? parentfile : _path.dirname(parentfile), // returns directory the parent file is in
    name // file
    ) + (_path.extname(name) ? "" : ".eta");
    return includePath;
}
/**
 * Get the absolute path to an included template
 *
 * If this is called with an absolute path (for example, starting with '/' or 'C:\')
 * then Eta will attempt to resolve the absolute path within options.views. If it cannot,
 * Eta will fallback to options.root or '/'
 *
 * If this is called with a relative path, Eta will:
 * - Look relative to the current template (if the current template has the `filename` property)
 * - Look inside each directory in options.views
 *
 * Note: if Eta is unable to find a template using path and options, it will throw an error.
 *
 * @param path    specified path
 * @param options compilation options
 * @return absolute path to template
 */ function getPath(path, options) {
    let includePath = false;
    const views = options.views;
    const searchedPaths = [];
    // If these four values are the same,
    // getPath() will return the same result every time.
    // We can cache the result to avoid expensive
    // file operations.
    const pathOptions = JSON.stringify({
        filename: options.filename,
        path: path,
        root: options.root,
        views: options.views
    });
    if (options.cache && options.filepathCache && options.filepathCache[pathOptions]) // Use the cached filepath
    return options.filepathCache[pathOptions];
    /** Add a filepath to the list of paths we've checked for a template */ function addPathToSearched(pathSearched) {
        if (!searchedPaths.includes(pathSearched)) searchedPaths.push(pathSearched);
    }
    /**
   * Take a filepath (like 'partials/mypartial.eta'). Attempt to find the template file inside `views`;
   * return the resulting template file path, or `false` to indicate that the template was not found.
   *
   * @param views the filepath that holds templates, or an array of filepaths that hold templates
   * @param path the path to the template
   */ function searchViews(views, path) {
        let filePath;
        // If views is an array, then loop through each directory
        // And attempt to find the template
        if (Array.isArray(views) && views.some(function(v) {
            filePath = getWholeFilePath(path, v, true);
            addPathToSearched(filePath);
            return (0, _fs.existsSync)(filePath);
        })) // If the above returned true, we know that the filePath was just set to a path
        // That exists (Array.some() returns as soon as it finds a valid element)
        return filePath;
        else if (typeof views === "string") {
            // Search for the file if views is a single directory
            filePath = getWholeFilePath(path, views, true);
            addPathToSearched(filePath);
            if ((0, _fs.existsSync)(filePath)) return filePath;
        }
        // Unable to find a file
        return false;
    }
    // Path starts with '/', 'C:\', etc.
    const match = /^[A-Za-z]+:\\|^\//.exec(path);
    // Absolute path, like /partials/partial.eta
    if (match && match.length) {
        // We have to trim the beginning '/' off the path, or else
        // path.resolve(dir, path) will always resolve to just path
        const formattedPath = path.replace(/^\/*/, "");
        // First, try to resolve the path within options.views
        includePath = searchViews(views, formattedPath);
        if (!includePath) {
            // If that fails, searchViews will return false. Try to find the path
            // inside options.root (by default '/', the base of the filesystem)
            const pathFromRoot = getWholeFilePath(formattedPath, options.root || "/", true);
            addPathToSearched(pathFromRoot);
            includePath = pathFromRoot;
        }
    } else {
        // Relative paths
        // Look relative to a passed filename first
        if (options.filename) {
            const filePath = getWholeFilePath(path, options.filename);
            addPathToSearched(filePath);
            if ((0, _fs.existsSync)(filePath)) includePath = filePath;
        }
        // Then look for the template in options.views
        if (!includePath) includePath = searchViews(views, path);
        if (!includePath) throw EtaErr('Could not find the template "' + path + '". Paths tried: ' + searchedPaths);
    }
    // If caching and filepathCache are enabled,
    // cache the input & output of this function.
    if (options.cache && options.filepathCache) options.filepathCache[pathOptions] = includePath;
    return includePath;
}
/**
 * Reads a file synchronously
 */ function readFile(filePath) {
    try {
        return (0, _fs.readFileSync)(filePath).toString().replace(_BOM, ""); // TODO: is replacing BOM's necessary?
    } catch  {
        throw EtaErr("Failed to read template at '" + filePath + "'");
    }
}
// express is set like: app.engine('html', require('eta').renderFile)
/* END TYPES */ /**
 * Reads a template, compiles it into a function, caches it if caching isn't disabled, returns the function
 *
 * @param filePath Absolute path to template file
 * @param options Eta configuration overrides
 * @param noCache Optionally, make Eta not cache the template
 */ function loadFile(filePath, options, noCache) {
    const config = getConfig(options);
    const template = readFile(filePath);
    try {
        const compiledTemplate = compile(template, config);
        if (!noCache) config.templates.define(config.filename, compiledTemplate);
        return compiledTemplate;
    } catch (e) {
        throw EtaErr("Loading file: " + filePath + " failed:\n\n" + e.message);
    }
}
/**
 * Get the template from a string or a file, either compiled on-the-fly or
 * read from cache (if enabled), and cache the template if needed.
 *
 * If `options.cache` is true, this function reads the file from
 * `options.filename` so it must be set prior to calling this function.
 *
 * @param options   compilation options
 * @return Eta template function
 */ function handleCache$1(options) {
    const filename = options.filename;
    if (options.cache) {
        const func = options.templates.get(filename);
        if (func) return func;
        return loadFile(filename, options);
    }
    // Caching is disabled, so pass noCache = true
    return loadFile(filename, options, true);
}
/**
 * Try calling handleCache with the given options and data and call the
 * callback with the result. If an error occurs, call the callback with
 * the error. Used by renderFile().
 *
 * @param data template data
 * @param options compilation options
 * @param cb callback
 */ function tryHandleCache(data, options, cb) {
    if (cb) try {
        // Note: if there is an error while rendering the template,
        // It will bubble up and be caught here
        const templateFn = handleCache$1(options);
        templateFn(data, options, cb);
    } catch (err) {
        return cb(err);
    }
    else {
        // No callback, try returning a promise
        if (typeof promiseImpl === "function") return new promiseImpl(function(resolve, reject) {
            try {
                const templateFn = handleCache$1(options);
                const result = templateFn(data, options);
                resolve(result);
            } catch (err) {
                reject(err);
            }
        });
        else throw EtaErr("Please provide a callback function, this env doesn't support Promises");
    }
}
/**
 * Get the template function.
 *
 * If `options.cache` is `true`, then the template is cached.
 *
 * This returns a template function and the config object with which that template function should be called.
 *
 * @remarks
 *
 * It's important that this returns a config object with `filename` set.
 * Otherwise, the included file would not be able to use relative paths
 *
 * @param path path for the specified file (if relative, specify `views` on `options`)
 * @param options compilation options
 * @return [Eta template function, new config object]
 */ function includeFile(path, options) {
    // the below creates a new options object, using the parent filepath of the old options object and the path
    const newFileOptions = getConfig({
        filename: getPath(path, options)
    }, options);
    // TODO: make sure properties are currectly copied over
    return [
        handleCache$1(newFileOptions),
        newFileOptions
    ];
}
function renderFile(filename, data, config, cb) {
    /*
  Here we have some function overloading.
  Essentially, the first 2 arguments to renderFile should always be the filename and data
  However, with Express, configuration options will be passed along with the data.
  Thus, Express will call renderFile with (filename, dataAndOptions, cb)
  And we want to also make (filename, data, options, cb) available
  */ let renderConfig;
    let callback;
    data = data || {}; // If data is undefined, we don't want accessing data.settings to error
    // First, assign our callback function to `callback`
    // We can leave it undefined if neither parameter is a function;
    // Callbacks are optional
    if (typeof cb === "function") // The 4th argument is the callback
    callback = cb;
    else if (typeof config === "function") // The 3rd arg is the callback
    callback = config;
    // If there is a config object passed in explicitly, use it
    if (typeof config === "object") renderConfig = getConfig(config || {});
    else {
        // Otherwise, get the config from the data object
        // And then grab some config options from data.settings
        // Which is where Express sometimes stores them
        renderConfig = getConfig(data);
        if (data.settings) {
            // Pull a few things from known locations
            if (data.settings.views) renderConfig.views = data.settings.views;
            if (data.settings["view cache"]) renderConfig.cache = true;
            // Undocumented after Express 2, but still usable, esp. for
            // items that are unsafe to be passed along with data, like `root`
            const viewOpts = data.settings["view options"];
            if (viewOpts) copyProps(renderConfig, viewOpts);
        }
    }
    // Set the filename option on the template
    // This will first try to resolve the file path (see getPath for details)
    renderConfig.filename = getPath(filename, renderConfig);
    return tryHandleCache(data, renderConfig, callback);
}
function renderFileAsync(filename, data, config, cb) {
    return renderFile(filename, typeof config === "function" ? {
        ...data,
        async: true
    } : data, typeof config === "object" ? {
        ...config,
        async: true
    } : config, cb);
}
/* END TYPES */ /**
 * Called with `includeFile(path, data)`
 */ function includeFileHelper(path, data) {
    const templateAndConfig = includeFile(path, this);
    return templateAndConfig[0](data, templateAndConfig[1]);
}
/* END TYPES */ function handleCache(template, options) {
    if (options.cache && options.name && options.templates.get(options.name)) return options.templates.get(options.name);
    const templateFunc = typeof template === "function" ? template : compile(template, options);
    // Note that we don't have to check if it already exists in the cache;
    // it would have returned earlier if it had
    if (options.cache && options.name) options.templates.define(options.name, templateFunc);
    return templateFunc;
}
function render(template, data, config, cb) {
    const options = getConfig(config || {});
    if (options.async) {
        if (cb) // If user passes callback
        try {
            // Note: if there is an error while rendering the template,
            // It will bubble up and be caught here
            const templateFn = handleCache(template, options);
            templateFn(data, options, cb);
        } catch (err) {
            return cb(err);
        }
        else {
            // No callback, try returning a promise
            if (typeof promiseImpl === "function") return new promiseImpl(function(resolve, reject) {
                try {
                    resolve(handleCache(template, options)(data, options));
                } catch (err) {
                    reject(err);
                }
            });
            else throw EtaErr("Please provide a callback function, this env doesn't support Promises");
        }
    } else return handleCache(template, options)(data, options);
}
function renderAsync(template, data, config, cb) {
    // Using Object.assign to lower bundle size, using spread operator makes it larger because of typescript injected polyfills
    return render(template, data, Object.assign({}, config, {
        async: true
    }), cb);
}
// @denoify-ignore
config.includeFile = includeFileHelper;
config.filepathCache = {};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup","fs":"8UDGZ","path":"k2fhP"}],"8UDGZ":[function(require,module,exports) {
"use strict";

},{}],"k2fhP":[function(require,module,exports) {
// 'path' module extracted from Node.js v8.11.1 (only the posix part)
// transplited with Babel
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
"use strict";
var process = require("process");
function assertPath(path) {
    if (typeof path !== "string") throw new TypeError("Path must be a string. Received " + JSON.stringify(path));
}
// Resolves . and .. elements in a path with directory names
function normalizeStringPosix(path, allowAboveRoot) {
    var res = "";
    var lastSegmentLength = 0;
    var lastSlash = -1;
    var dots = 0;
    var code;
    for(var i = 0; i <= path.length; ++i){
        if (i < path.length) code = path.charCodeAt(i);
        else if (code === 47 /*/*/ ) break;
        else code = 47 /*/*/ ;
        if (code === 47 /*/*/ ) {
            if (lastSlash === i - 1 || dots === 1) ;
            else if (lastSlash !== i - 1 && dots === 2) {
                if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/  || res.charCodeAt(res.length - 2) !== 46 /*.*/ ) {
                    if (res.length > 2) {
                        var lastSlashIndex = res.lastIndexOf("/");
                        if (lastSlashIndex !== res.length - 1) {
                            if (lastSlashIndex === -1) {
                                res = "";
                                lastSegmentLength = 0;
                            } else {
                                res = res.slice(0, lastSlashIndex);
                                lastSegmentLength = res.length - 1 - res.lastIndexOf("/");
                            }
                            lastSlash = i;
                            dots = 0;
                            continue;
                        }
                    } else if (res.length === 2 || res.length === 1) {
                        res = "";
                        lastSegmentLength = 0;
                        lastSlash = i;
                        dots = 0;
                        continue;
                    }
                }
                if (allowAboveRoot) {
                    if (res.length > 0) res += "/..";
                    else res = "..";
                    lastSegmentLength = 2;
                }
            } else {
                if (res.length > 0) res += "/" + path.slice(lastSlash + 1, i);
                else res = path.slice(lastSlash + 1, i);
                lastSegmentLength = i - lastSlash - 1;
            }
            lastSlash = i;
            dots = 0;
        } else if (code === 46 /*.*/  && dots !== -1) ++dots;
        else dots = -1;
    }
    return res;
}
function _format(sep, pathObject) {
    var dir = pathObject.dir || pathObject.root;
    var base = pathObject.base || (pathObject.name || "") + (pathObject.ext || "");
    if (!dir) return base;
    if (dir === pathObject.root) return dir + base;
    return dir + sep + base;
}
var posix = {
    // path.resolve([from ...], to)
    resolve: function resolve() {
        var resolvedPath = "";
        var resolvedAbsolute = false;
        var cwd;
        for(var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--){
            var path;
            if (i >= 0) path = arguments[i];
            else {
                if (cwd === undefined) cwd = process.cwd();
                path = cwd;
            }
            assertPath(path);
            // Skip empty entries
            if (path.length === 0) continue;
            resolvedPath = path + "/" + resolvedPath;
            resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/ ;
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        // Normalize the path
        resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);
        if (resolvedAbsolute) {
            if (resolvedPath.length > 0) return "/" + resolvedPath;
            else return "/";
        } else if (resolvedPath.length > 0) return resolvedPath;
        else return ".";
    },
    normalize: function normalize(path) {
        assertPath(path);
        if (path.length === 0) return ".";
        var isAbsolute = path.charCodeAt(0) === 47 /*/*/ ;
        var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/ ;
        // Normalize the path
        path = normalizeStringPosix(path, !isAbsolute);
        if (path.length === 0 && !isAbsolute) path = ".";
        if (path.length > 0 && trailingSeparator) path += "/";
        if (isAbsolute) return "/" + path;
        return path;
    },
    isAbsolute: function isAbsolute(path) {
        assertPath(path);
        return path.length > 0 && path.charCodeAt(0) === 47 /*/*/ ;
    },
    join: function join() {
        if (arguments.length === 0) return ".";
        var joined;
        for(var i = 0; i < arguments.length; ++i){
            var arg = arguments[i];
            assertPath(arg);
            if (arg.length > 0) {
                if (joined === undefined) joined = arg;
                else joined += "/" + arg;
            }
        }
        if (joined === undefined) return ".";
        return posix.normalize(joined);
    },
    relative: function relative(from, to) {
        assertPath(from);
        assertPath(to);
        if (from === to) return "";
        from = posix.resolve(from);
        to = posix.resolve(to);
        if (from === to) return "";
        // Trim any leading backslashes
        var fromStart = 1;
        for(; fromStart < from.length; ++fromStart){
            if (from.charCodeAt(fromStart) !== 47 /*/*/ ) break;
        }
        var fromEnd = from.length;
        var fromLen = fromEnd - fromStart;
        // Trim any leading backslashes
        var toStart = 1;
        for(; toStart < to.length; ++toStart){
            if (to.charCodeAt(toStart) !== 47 /*/*/ ) break;
        }
        var toEnd = to.length;
        var toLen = toEnd - toStart;
        // Compare paths to find the longest common path from root
        var length = fromLen < toLen ? fromLen : toLen;
        var lastCommonSep = -1;
        var i = 0;
        for(; i <= length; ++i){
            if (i === length) {
                if (toLen > length) {
                    if (to.charCodeAt(toStart + i) === 47 /*/*/ ) // We get here if `from` is the exact base path for `to`.
                    // For example: from='/foo/bar'; to='/foo/bar/baz'
                    return to.slice(toStart + i + 1);
                    else if (i === 0) // We get here if `from` is the root
                    // For example: from='/'; to='/foo'
                    return to.slice(toStart + i);
                } else if (fromLen > length) {
                    if (from.charCodeAt(fromStart + i) === 47 /*/*/ ) // We get here if `to` is the exact base path for `from`.
                    // For example: from='/foo/bar/baz'; to='/foo/bar'
                    lastCommonSep = i;
                    else if (i === 0) // We get here if `to` is the root.
                    // For example: from='/foo'; to='/'
                    lastCommonSep = 0;
                }
                break;
            }
            var fromCode = from.charCodeAt(fromStart + i);
            var toCode = to.charCodeAt(toStart + i);
            if (fromCode !== toCode) break;
            else if (fromCode === 47 /*/*/ ) lastCommonSep = i;
        }
        var out = "";
        // Generate the relative path based on the path difference between `to`
        // and `from`
        for(i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i)if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/ ) {
            if (out.length === 0) out += "..";
            else out += "/..";
        }
        // Lastly, append the rest of the destination (`to`) path that comes after
        // the common path parts
        if (out.length > 0) return out + to.slice(toStart + lastCommonSep);
        else {
            toStart += lastCommonSep;
            if (to.charCodeAt(toStart) === 47 /*/*/ ) ++toStart;
            return to.slice(toStart);
        }
    },
    _makeLong: function _makeLong(path) {
        return path;
    },
    dirname: function dirname(path) {
        assertPath(path);
        if (path.length === 0) return ".";
        var code = path.charCodeAt(0);
        var hasRoot = code === 47 /*/*/ ;
        var end = -1;
        var matchedSlash = true;
        for(var i = path.length - 1; i >= 1; --i){
            code = path.charCodeAt(i);
            if (code === 47 /*/*/ ) {
                if (!matchedSlash) {
                    end = i;
                    break;
                }
            } else // We saw the first non-path separator
            matchedSlash = false;
        }
        if (end === -1) return hasRoot ? "/" : ".";
        if (hasRoot && end === 1) return "//";
        return path.slice(0, end);
    },
    basename: function basename(path, ext) {
        if (ext !== undefined && typeof ext !== "string") throw new TypeError('"ext" argument must be a string');
        assertPath(path);
        var start = 0;
        var end = -1;
        var matchedSlash = true;
        var i;
        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {
            if (ext.length === path.length && ext === path) return "";
            var extIdx = ext.length - 1;
            var firstNonSlashEnd = -1;
            for(i = path.length - 1; i >= 0; --i){
                var code = path.charCodeAt(i);
                if (code === 47 /*/*/ ) // If we reached a path separator that was not part of a set of path
                // separators at the end of the string, stop now
                {
                    if (!matchedSlash) {
                        start = i + 1;
                        break;
                    }
                } else {
                    if (firstNonSlashEnd === -1) {
                        // We saw the first non-path separator, remember this index in case
                        // we need it if the extension ends up not matching
                        matchedSlash = false;
                        firstNonSlashEnd = i + 1;
                    }
                    if (extIdx >= 0) {
                        // Try to match the explicit extension
                        if (code === ext.charCodeAt(extIdx)) {
                            if (--extIdx === -1) // We matched the extension, so mark this as the end of our path
                            // component
                            end = i;
                        } else {
                            // Extension does not match, so our result is the entire path
                            // component
                            extIdx = -1;
                            end = firstNonSlashEnd;
                        }
                    }
                }
            }
            if (start === end) end = firstNonSlashEnd;
            else if (end === -1) end = path.length;
            return path.slice(start, end);
        } else {
            for(i = path.length - 1; i >= 0; --i){
                if (path.charCodeAt(i) === 47 /*/*/ ) // If we reached a path separator that was not part of a set of path
                // separators at the end of the string, stop now
                {
                    if (!matchedSlash) {
                        start = i + 1;
                        break;
                    }
                } else if (end === -1) {
                    // We saw the first non-path separator, mark this as the end of our
                    // path component
                    matchedSlash = false;
                    end = i + 1;
                }
            }
            if (end === -1) return "";
            return path.slice(start, end);
        }
    },
    extname: function extname(path) {
        assertPath(path);
        var startDot = -1;
        var startPart = 0;
        var end = -1;
        var matchedSlash = true;
        // Track the state of characters (if any) we see before our first dot and
        // after any path separator we find
        var preDotState = 0;
        for(var i = path.length - 1; i >= 0; --i){
            var code = path.charCodeAt(i);
            if (code === 47 /*/*/ ) {
                // If we reached a path separator that was not part of a set of path
                // separators at the end of the string, stop now
                if (!matchedSlash) {
                    startPart = i + 1;
                    break;
                }
                continue;
            }
            if (end === -1) {
                // We saw the first non-path separator, mark this as the end of our
                // extension
                matchedSlash = false;
                end = i + 1;
            }
            if (code === 46 /*.*/ ) {
                // If this is our first dot, mark it as the start of our extension
                if (startDot === -1) startDot = i;
                else if (preDotState !== 1) preDotState = 1;
            } else if (startDot !== -1) // We saw a non-dot and non-path separator before our dot, so we should
            // have a good chance at having a non-empty extension
            preDotState = -1;
        }
        if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot
        preDotState === 0 || // The (right-most) trimmed path component is exactly '..'
        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) return "";
        return path.slice(startDot, end);
    },
    format: function format(pathObject) {
        if (pathObject === null || typeof pathObject !== "object") throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof pathObject);
        return _format("/", pathObject);
    },
    parse: function parse(path) {
        assertPath(path);
        var ret = {
            root: "",
            dir: "",
            base: "",
            ext: "",
            name: ""
        };
        if (path.length === 0) return ret;
        var code = path.charCodeAt(0);
        var isAbsolute = code === 47 /*/*/ ;
        var start;
        if (isAbsolute) {
            ret.root = "/";
            start = 1;
        } else start = 0;
        var startDot = -1;
        var startPart = 0;
        var end = -1;
        var matchedSlash = true;
        var i = path.length - 1;
        // Track the state of characters (if any) we see before our first dot and
        // after any path separator we find
        var preDotState = 0;
        // Get non-dir info
        for(; i >= start; --i){
            code = path.charCodeAt(i);
            if (code === 47 /*/*/ ) {
                // If we reached a path separator that was not part of a set of path
                // separators at the end of the string, stop now
                if (!matchedSlash) {
                    startPart = i + 1;
                    break;
                }
                continue;
            }
            if (end === -1) {
                // We saw the first non-path separator, mark this as the end of our
                // extension
                matchedSlash = false;
                end = i + 1;
            }
            if (code === 46 /*.*/ ) {
                // If this is our first dot, mark it as the start of our extension
                if (startDot === -1) startDot = i;
                else if (preDotState !== 1) preDotState = 1;
            } else if (startDot !== -1) // We saw a non-dot and non-path separator before our dot, so we should
            // have a good chance at having a non-empty extension
            preDotState = -1;
        }
        if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot
        preDotState === 0 || // The (right-most) trimmed path component is exactly '..'
        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
            if (end !== -1) {
                if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);
                else ret.base = ret.name = path.slice(startPart, end);
            }
        } else {
            if (startPart === 0 && isAbsolute) {
                ret.name = path.slice(1, startDot);
                ret.base = path.slice(1, end);
            } else {
                ret.name = path.slice(startPart, startDot);
                ret.base = path.slice(startPart, end);
            }
            ret.ext = path.slice(startDot, end);
        }
        if (startPart > 0) ret.dir = path.slice(0, startPart - 1);
        else if (isAbsolute) ret.dir = "/";
        return ret;
    },
    sep: "/",
    delimiter: ":",
    win32: null,
    posix: null
};
posix.posix = posix;
module.exports = posix;

},{"process":"gq3cc"}],"gq3cc":[function(require,module,exports) {
// shim for using process in browser
var process = module.exports = {};
// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.
var cachedSetTimeout;
var cachedClearTimeout;
function defaultSetTimout() {
    throw new Error("setTimeout has not been defined");
}
function defaultClearTimeout() {
    throw new Error("clearTimeout has not been defined");
}
(function() {
    try {
        if (typeof setTimeout === "function") cachedSetTimeout = setTimeout;
        else cachedSetTimeout = defaultSetTimout;
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === "function") cachedClearTimeout = clearTimeout;
        else cachedClearTimeout = defaultClearTimeout;
    } catch (e1) {
        cachedClearTimeout = defaultClearTimeout;
    }
})();
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) //normal enviroments in sane situations
    return setTimeout(fun, 0);
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch (e1) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }
}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) //normal enviroments in sane situations
    return clearTimeout(marker);
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e1) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }
}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;
function cleanUpNextTick() {
    if (!draining || !currentQueue) return;
    draining = false;
    if (currentQueue.length) queue = currentQueue.concat(queue);
    else queueIndex = -1;
    if (queue.length) drainQueue();
}
function drainQueue() {
    if (draining) return;
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;
    var len = queue.length;
    while(len){
        currentQueue = queue;
        queue = [];
        while(++queueIndex < len)if (currentQueue) currentQueue[queueIndex].run();
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}
process.nextTick = function(fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) runTimeout(drainQueue);
};
// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function() {
    this.fun.apply(null, this.array);
};
process.title = "browser";
process.browser = true;
process.env = {};
process.argv = [];
process.version = ""; // empty string to avoid regexp issues
process.versions = {};
function noop() {}
process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;
process.listeners = function(name) {
    return [];
};
process.binding = function(name) {
    throw new Error("process.binding is not supported");
};
process.cwd = function() {
    return "/";
};
process.chdir = function(dir) {
    throw new Error("process.chdir is not supported");
};
process.umask = function() {
    return 0;
};

},{}],"h1Iyh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _component = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Component");
var _componentDefault = parcelHelpers.interopDefault(_component);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _gsap = require("gsap");
var _eta = require("eta");
exports.default = class extends (0, _componentDefault.default) {
    constructor(main){
        super({});
        this.main = main;
        this.string = _eta.render((0, _templateEtaDefault.default), {
            global: this.main
        });
    }
    async create() {}
};

},{"/src/js🧠🧠🧠/defaults/Component":"1K7Kz","bundle-text:./template.eta":"r5oBR","gsap":"gS77a","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"r5oBR":[function(require,module,exports) {
module.exports = "<footer class=\"footer\">\n  <div class=\"c-vw\">\n    <div class=\"footer_first\">\n      <a class=\"footer_logo mouseHover\" href=\"<%~ it.global.acf.home %>\" data-type=\"index\"><%~ it.global.icons.logo %></a>\n      <p><%~ it.global.acf.footer_sign_up_description %></p>\n      <div class=\"btn btn-i mouseHover\">\n        <div class=\"btn_t\">SIGN UP</div>\n      </div>\n    </div>\n    <div class=\"footer_menu\">\n      <div class=\"tab Tab\">\n        <div class=\"tabClick\">\n          <h3 class=\"tit4\">Menu</h3>\n        </div>\n        <div class=\"tabHold\">\n          <div class=\"tabBox\">\n            <div class=\"menu_el mouseHover\"><a data-type=\"podcastarchive\" href=\"<%~ it.global.acf.pods %>\" class=\"simp\" style=\"--main:#DF80AC\"><span>PODS</span></a></div>\n            <div class=\"menu_el mouseHover\"><a data-type=\"networkarchive\" href=\"<%~ it.global.acf.network %>\" class=\"simp\" style=\"--main:#DF80AC\"><span>Network</span></a></div>\n            <div class=\"menu_el mouseHover\"><a data-type=\"legalterms\" href=\"<%~ it.global.acf.legalterms %>\" class=\"simp\" style=\"--main:#DF80AC\"><span>legal terms</span></a></div>\n            <div class=\"menu_el mouseHover\"><a data-type=\"showarchive\" href=\"<%~ it.global.acf.shows %>\" class=\"simp\" style=\"--main:#DF80AC\"><span>shows</span></a></div>\n            <div class=\"menu_el mouseHover\"><a data-type=\"lists\" href=\"<%~ it.global.acf.lists %>\" class=\"simp\" style=\"--main:#DF80AC\"><span>lists</span></a></div>\n            <div class=\"menu_el mouseHover\"><a data-type=\"privacy\" href=\"<%~ it.global.acf.privacy %>\" class=\"simp\" style=\"--main:#DF80AC\"><span>privacy</span></a></div>\n            <div class=\"menu_el mouseHover\"><a data-type=\"articlearchive\" href=\"<%~ it.global.acf.articles %>\" class=\"simp\" style=\"--main:#DF80AC\"><span>articles</span></a></div>\n            <div class=\"menu_el mouseHover\"><a  href=\"<%~ it.global.acf.shop %>\" class=\"simp\" style=\"--main:#DF80AC\"><span>shop</span></a></div>\n            <div class=\"menu_el mouseHover\"><a data-type=\"login\" href=\"<%~ it.global.acf.login %>\" class=\"simp\" style=\"--main:#DF80AC\"><span>login</span></a></div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"footer_bottom\">\n      <p class=\"copy tit4\">©<%~ it.global.acf.actualyear %>, LIVING CORPORATE, LLC</p>\n      <p class=\"right tit4\"><%~ it.global.acf.footer_warning %></p>\n      <div class=\"social\">\n        <a class=\"mouseHover Stw\" href=\"<%~ it.global.acf.twitterlink %>\"><%~ it.global.icons.tw %></a>\n        <a class=\"mouseHover Sap\" href=\"<%~ it.global.acf.apple_podcast %>\"><%~ it.global.icons.radar %></a>\n        <a class=\"mouseHover Ssp\" href=\"<%~ it.global.acf.spotify %>\"><%~ it.global.icons.spotify %></a>\n        <a class=\"mouseHover Spl\" style=\"display:none!important\" href=\"<%~ it.global.acf.playmusic %>\"><%~ it.global.icons.triangulo %></a>\n        <a class=\"mouseHover Sst\" href=\"<%~ it.global.acf.stitcher %>\"><%~ it.global.icons.cuadraditos %></a>\n        <a class=\"mouseHover Ssl\" href=\"<%~ it.global.acf.slack %>\"><%~ it.global.icons.slack %></a>\n        <a class=\"mouseHover Sig\" href=\"<%~ it.global.acf.instagram %>\"><%~ it.global.icons.ig %></a>\n        <a class=\"mouseHover Sin\" href=\"<%~ it.global.acf.linkedin %>\"><%~ it.global.icons.in %></a>\n        <a class=\"mouseHover Sfb\" href=\"<%~ it.global.acf.facebook %>\"><%~ it.global.icons.fb %></a>\n      </div>\n    </div>\n  </div>\n</footer>";

},{}],"gMG9h":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _gsap = require("gsap");
var _gsapDefault = parcelHelpers.interopDefault(_gsap);
var _component = require("../defaults/Component");
var _componentDefault = parcelHelpers.interopDefault(_component);
var _introEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/intro.eta");
var _introEtaDefault = parcelHelpers.interopDefault(_introEta);
var _signinEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/signin.eta");
var _signinEtaDefault = parcelHelpers.interopDefault(_signinEta);
var _eta = require("eta");
var _autoBind = require("auto-bind");
var _autoBindDefault = parcelHelpers.interopDefault(_autoBind);
exports.default = class extends (0, _componentDefault.default) {
    constructor(main){
        super({
            element: document.documentElement
        });
        (0, _autoBindDefault.default)(this);
        this.main = main;
    }
    async initSignIn() {
        var is_accepted = localStorage.getItem("sign_LC");
        const params = new URLSearchParams(window.location.search);
        const isEmbed = params.get("isEmbed") != null;
        const hidePopup = document.getElementById("content")?.dataset?.signupal === "hide";
        if (!(is_accepted || isEmbed || hidePopup)) {
            let string = _eta.render((0, _signinEtaDefault.default), {
                global: this.main
            });
            setTimeout(()=>{
                document.querySelector("body").insertAdjacentHTML("afterbegin", string);
                this.signup = document.documentElement.querySelector(".signupal");
                setTimeout(()=>{
                    this.emit("linkseventlisteners");
                    this.signup.classList.add("signupal-act");
                }, 120000);
                this.closeSBg = this.signup.querySelector(".signupal_bg");
                this.closeS = this.signup.querySelector(".signupal_close");
                this.closeSBtn = this.signup.querySelector(".btn");
                // //  console.log(this.closeSBtn)
                this.clickModal = (type)=>{
                    localStorage.setItem("sign_LC", true);
                    this.signup.classList.remove("signupal-act");
                    setTimeout(()=>{
                        this.signup.remove();
                    }, 800);
                    if (type == 1) this.emit("tochange");
                };
                this.closeSBg.addEventListener("click", ()=>this.clickModal(0));
                this.closeS.addEventListener("click", ()=>this.clickModal(0));
                this.closeSBtn.addEventListener("click", ()=>this.clickModal(1));
            }, 6000);
        }
    }
    async init() {
        var is_accepted = true; //localStorage.getItem('intro_LC')
        if (is_accepted) {
            this.initSignIn();
            return false;
        } else {
            let string = _eta.render((0, _introEtaDefault.default), {
                global: this.main
            });
            document.querySelector("body").insertAdjacentHTML("afterbegin", string);
            this.intro = document.documentElement.querySelector(".introloader");
            setTimeout(()=>{
                document.documentElement.classList.add("intro-act");
                this.intro.classList.add("act");
            }, 10);
            this.initEvents();
            return true;
        }
    // this.timeline = gsap.timeline()
    // this.timeline.to(this.element, {
    //   autoAlpha: 0,
    //   duration: 1
    // })
    // this.timeline.call(_ => {
    // //  console.log('compit')
    //   this.emit('complete')
    // })
    }
    initEvents() {
        this.clickEnd = ()=>{
            localStorage.setItem("intro_LC", true);
            document.documentElement.classList.remove("intro-act");
            this.initSignIn();
            (0, _gsapDefault.default).to(this.intro, {
                opacity: 0,
                onComplete: ()=>{
                    this.intro.remove();
                }
            });
            this.emit("closeintro");
        };
        this.closeIntro = this.intro.querySelector(".btnCloseIntro");
        this.closeIntro.addEventListener("click", this.clickEnd);
    }
};

},{"gsap":"gS77a","../defaults/Component":"1K7Kz","bundle-text:/src/views👁️👁️👁️/ETA/intro.eta":"02qyC","bundle-text:/src/views👁️👁️👁️/ETA/signin.eta":"1wc49","eta":"blnnU","auto-bind":"iS0Jy","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"02qyC":[function(require,module,exports) {
module.exports = "<div class=\"introloader\">\n  <div class=\"introloader_box\">\n      <div class=\"introloader_logo \">\n        <%~ it.global.icons.logo %>\n        <%~ it.global.icons.logoxs %>\n      </div>\n  </div>\n  <div class=\"btnCloseIntro\"></div>\n  <img src=\"<%~ it.global.acf.image_intro %>\" />\n  <div class=\"c-vw\">\n    <div class=\"box\">\n      <h1 class=\"tit1\"><%~ it.global.acf.title_intro %></h1>\n      <h2 class=\"tit4\"><%~ it.global.acf.text_intro %></h2>\n      <div class=\"btn\">\n        <div class=\"btn_t\">Explore</div>\n      </div>\n      \n    </div>\n  </div>\n</div>";

},{}],"1wc49":[function(require,module,exports) {
module.exports = "<div class=\"signupal\">\n  <div class=\"signupal_bg\"></div>\n  <div class=\"signupal_content\">\n    \n    <div class=\"signupal_close\"><span></span><span></span></div>\n    <div class=\"signupal_content_text\">\n      <img src=\"<%~ it.global.acf.template %>/public/signupmodal.png\">\n      <h2 class=\"tit1\">SIGN UP NOW</h2>\n      <h3 class=\"tit4\">GET UNINTERRUPTED ACCESS TO all OUR CURATED CONTENT. EXPLORE AND UPDATE YOUR INTERESTS FROM YOUR PRIVATE AREA.</h3>\n      <div class=\"btn\" style=\"--base:#FEF9F3;--main:#DF80AC;\"><div class=\"btn_t\">SIGN UP</div></div>\n    </div>\n  </div>\n</div>";

},{}],"auzbB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _templatelogEta = require("bundle-text:./templatelog.eta");
var _templatelogEtaDefault = parcelHelpers.interopDefault(_templatelogEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
//COMPS
var _timerJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/components\uD83E\uDDBE/Timer.js");
var _timerJsDefault = parcelHelpers.interopDefault(_timerJs);
var _titleJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/components\uD83E\uDDBE/Title.js");
var _titleJsDefault = parcelHelpers.interopDefault(_titleJs);
var _slidragJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/components\uD83E\uDDBE/Slidrag.js");
var _slidragJsDefault = parcelHelpers.interopDefault(_slidragJs);
var _slidClickJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/components\uD83E\uDDBE/SlidClick.js");
var _slidClickJsDefault = parcelHelpers.interopDefault(_slidClickJs);
var _tabsJs = require("./Tabs.js");
var _tabsJsDefault = parcelHelpers.interopDefault(_tabsJs);
var _eta = require("eta");
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        var html = "";
        this.childscrolling = false;
        // //  console.log(this.main)
        if (!this.main.user) {
            const response = await fetch(this.main.acf.base + "/wp-json/wp/v2/pages/" + content.dataset.id + "?acf_format=standard");
            const data = await response.json();
            // //  console.log(data)
            html = _eta.render((0, _templateEtaDefault.default), {
                global: this.main,
                data: data,
                footer: this.footer
            });
            // //  console.log(html)
            document.querySelector("#content").innerHTML += html;
            this.DOM = {
                el: document.querySelector("main:not(.old)")
            };
            const el = this.DOM.el ? this.DOM.el.querySelector(".home_intro:not(:has(.home_intro_grid))") : undefined;
            if (el) this.intro = new (0, _timerJsDefault.default)(el, true);
            if (this.DOM.el.querySelector(".swiper")) this.slidrag = new (0, _slidragJsDefault.default)(this.DOM.el.querySelector(".swiper"));
            if (this.DOM.el.querySelector(".m-slidnum")) this.slidclick = new (0, _slidClickJsDefault.default)(this.DOM.el.querySelector(".m-slidnum"));
            this.indexlist = 0;
            this.DOM.listimg = this.DOM.el.querySelectorAll(".homeposts .image");
            this.DOM.listel = this.DOM.el.querySelectorAll(".homeposts .el");
        } else {
            const responsep = await fetch(this.main.acf.base + "/wp-json/wp/v2/gettopics/?topics=" + this.main.user.acf.topics);
            const datap = await responsep.json();
            const response1 = await fetch(this.main.acf.base + "/wp-json/wp/v2/pages/" + content.dataset.id + "?acf_format=standard");
            const data1 = await response1.json();
            // //  console.log(data);
            html = _eta.render((0, _templatelogEtaDefault.default), {
                global: this.main,
                data: data1,
                datap: datap,
                footer: this.footer
            });
            document.querySelector("#content").innerHTML += html;
            this.DOM = {
                el: document.querySelector("main:not(.old)")
            };
            const el1 = this.DOM.el ? this.DOM.el.querySelector(".home_intro:not(:has(.home_intro_grid))") : undefined;
            if (el1) this.intro = new (0, _timerJsDefault.default)(el1, true);
            this.tabscont = new (0, _tabsJsDefault.default)(this.DOM.el.querySelector(".m-tabposts"));
            this.tabscont.on("resize", ()=>{
                this.resizeLimit();
            });
        }
        this.DOM.intro = document.querySelector(".home_intro");
        this.DOM.image_grid = document.querySelector(".home_intro_grid");
        this.DOM.image_grid_overlay = document.querySelector(".home_intro_overlay");
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
        await this.loadImages();
        await this.createAnimations();
    }
    resizeLimit() {
        if (!this.scroll) return false;
        if (!this.avoidScroll) {
            for (let anim of this.anims){
                if (anim.stick != null) {
                    if (anim.stick.parent.classList.contains("homeposts_main")) anim.stick.limit = anim.stick.parent.clientHeight - 100;
                }
            }
            this.size = this.DOM.el.clientHeight - window.innerHeight;
            this.scroll.limit = this.size;
        // this.content.style.height = this.scroll.limit+'px'
        }
    }
    slideList(index) {
        if (this.indexlist != index) {
            if (this.indexlist != -1) {
                this.DOM.listimg[this.indexlist].classList.remove("act");
                this.DOM.listel[this.indexlist].classList.remove("act");
            }
            this.indexlist = index;
            if (index != -1) {
                // //  console.log(this.indexlist)
                this.DOM.listimg[this.indexlist].classList.add("act");
                this.DOM.listel[this.indexlist].classList.add("act");
            }
        }
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    addImageGridScroll() {
        let scrollTimer;
        let startY;
        const intro = this.DOM.intro;
        const image_grid = this.DOM.image_grid;
        const image_grid_overlay = this.DOM.image_grid_overlay;
        let scrollEndTimeout;
        const scroll = (e)=>{
            if (scrollTimer) clearTimeout(scrollTimer);
            const scrollEnd = ()=>{
                if (!scrollEndTimeout) {
                    scrollEndTimeout = setTimeout(()=>this.childscrolling = false, 1000);
                    scrollEndTimeout = null;
                }
            };
            // if element isnt fully visible dont scroll (while scrolling back up the page)
            const rect = intro.getBoundingClientRect();
            let progress = parseFloat(image_grid.dataset.progress || 100);
            if (rect.top < -10 && progress <= 0) {
                scrollEnd();
                return;
            }
            document.documentElement.classList.remove("is-scrolling");
            // progress starts from 100 and goes to 0
            // prevent negative movement overflow || prevent positive movement overflow
            if (e.deltaY < 0 && progress >= 100 || e.deltaY > 0 && progress <= 0) {
                scrollEnd();
                return;
            }
            progress -= e.deltaY * 0.10;
            progress = progress < 0 ? 0 : progress;
            progress = progress > 100 ? 100 : progress;
            image_grid.dataset.progress = progress;
            image_grid.style.transform = `scale(${2.3 * (progress / 100) + 1})`;
            image_grid_overlay.style.opacity = progress / 100;
            this.childscrolling = true;
            scrollTimer = setTimeout(()=>this.childscrolling = false, 500);
        };
        const onTouchStart = (e)=>{
            let progress = parseFloat(image_grid.dataset.progress || 100);
            if (progress > 0 && progress < 100) e.preventDefault();
            startY = e.touches[0].clientY;
        };
        const onTouchMove = (e)=>{
            const deltaY = startY - e.touches[0].clientY;
            startY = e.touches[0].clientY;
            e.deltaY = deltaY * 5;
            const rect = intro.getBoundingClientRect();
            let progress = parseFloat(image_grid.dataset.progress || 100);
            if (!(rect.top < 0 && progress <= 0 || e.deltaY < 0 && progress >= 100 || e.deltaY > 0 && progress <= 0)) e.preventDefault();
            scroll(e);
        };
        const onTouchEnd = ()=>startY = null;
        image_grid?.removeEventListener("wheel", scroll, {
            passive: true
        });
        image_grid?.removeEventListener("touchstart", onTouchStart);
        image_grid?.removeEventListener("touchmove", onTouchMove);
        image_grid?.removeEventListener("touchend", onTouchEnd, {
            passive: true
        });
        image_grid?.addEventListener("wheel", scroll, {
            passive: true
        });
        image_grid?.addEventListener("touchstart", onTouchStart);
        image_grid?.addEventListener("touchmove", onTouchMove);
        image_grid?.addEventListener("touchend", onTouchEnd, {
            passive: true
        });
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            this.anims[pos].stick.active = 0;
                            let index = this.sticks.indexOf(this.anims[pos]);
                            if (index > -1) this.sticks.splice(index, 1);
                        } else if (id == "v") // //  console.log('stahp')
                        this.intro?.stop();
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "e") {
                            this.anims[pos].classel.start();
                            this.slidetext = this.anims[pos];
                        } else if (id == "v") // //  console.log('start')
                        this.intro?.start();
                        else if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.sticks.push(this.anims[pos]);
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) {
            this.optionsob = {
                root: document.body,
                threshold: this.buildThresholdList(500)
            };
            this.optionsobo = {
                root: document.body,
                threshold: [
                    0,
                    1
                ]
            };
        } else {
            this.optionsob = {
                root: null,
                threshold: this.buildThresholdList(500)
            };
            this.optionso = {
                root: null,
                threshold: [
                    1
                ]
            };
        }
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
        this.callbacko = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (this.isVisible == 0) return false;
                // //  console.log(entry.isIntersecting+' '+entry.target.dataset.el)
                if (entry.boundingClientRect.y > 100) this.slideList(entry.target.dataset.el);
            });
        };
        this.observero = new IntersectionObserver(this.callbacko, this.optionso);
        if (this.DOM.el.querySelectorAll(".cOel")) this.DOM.el.querySelectorAll(".cOel").forEach((el)=>{
            this.observero.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-slidetime")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.childscrolling) super.smoothScroll(1);
        else if (this.isVisible == 1) super.smoothScroll();
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        await this.timeout(1);
        this.DOM.el?.classList.add("home-active");
        (0, _gsap.gsap).to(".home", {
            opacity: 1,
            ease: (0, _gsap.Power2).easeInOut,
            duration: .6
        });
        this.addImageGridScroll();
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        this.childscrolling = false;
        return super.hide();
    }
};

},{"../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./template.eta":"6slxD","bundle-text:./templatelog.eta":"kbClh","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","/src/js🧠🧠🧠/components🦾/Timer.js":"g0diQ","/src/js🧠🧠🧠/components🦾/Title.js":"jMrwY","/src/js🧠🧠🧠/components🦾/Slidrag.js":"fvLmn","/src/js🧠🧠🧠/components🦾/SlidClick.js":"2oKU6","./Tabs.js":"cIzjT","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"98P6v":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _autoBind = require("auto-bind");
var _autoBindDefault = parcelHelpers.interopDefault(_autoBind);
var _events = require("events");
var _eventsDefault = parcelHelpers.interopDefault(_events);
var _prefix = require("prefix");
var _prefixDefault = parcelHelpers.interopDefault(_prefix);
var _gsap = require("gsap");
var _mathJs = require("../basic/math.js");
exports.default = class extends (0, _eventsDefault.default) {
    constructor(main, footer){
        super();
        (0, _autoBindDefault.default)(this);
        this.content = document.querySelector("#content"), this.main = main;
        this.footer = footer;
        this.speed = 0;
        this.isVisible = 0;
        this.isScrollable = 1;
        this.sticks = [];
        this.anims = [];
        this.isAutoScroll = 0;
        this.transform = (0, _prefixDefault.default)("transform");
    }
    timeout(ms) {
        return new Promise((resolve)=>setTimeout(resolve, ms));
    }
    async create(content, main) {
        //Genera HTML
        this.sticks = [];
        this.anims = [];
        this.main = main;
        if (this.generate) {
            await this.generate(content);
            if (!this.main.isTouch) (0, _gsap.gsap).set(this.DOM.el, {
                y: window.innerHeight + "px"
            });
            else (0, _gsap.gsap).set(this.DOM.el, {
                position: "fixed",
                left: 0,
                top: 0,
                width: "100%",
                y: window.innerHeight + "px"
            });
        }
        //Genera elementos animaciones
        //Si tiene scroll, añade asscroll
        // await this.timeout(400)
        if (!this.main.isTouch) await this.createScroll();
        else {
            this.avoidScroll = 1;
            this.scroll = {
                ease: 0.1,
                position: 0,
                current: 0,
                target: 0
            };
            await this.callBacks();
        }
    }
    //Scroll
    buildThresholdList(numSteps) {
        var thresholds = [];
        for(var i = 1.0; i <= numSteps; i++){
            var ratio = i / numSteps;
            thresholds.push(ratio);
        }
        thresholds.push(0);
        return thresholds;
    }
    createScroll() {
        if (this.isScrollable) {
            this.size = this.DOM.el.clientHeight - window.innerHeight;
            this.scroll = {
                ease: 0.32,
                position: 0,
                current: 0,
                target: 0,
                limit: this.size
            };
        }
        this.callBacks();
    }
    resetGlobal() {
        this.emit("globalchange");
    }
    callBacks() {
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            this.anims[pos].stick.active = 0;
                            let index = this.sticks.indexOf(this.anims[pos]);
                            if (index > -1) this.sticks.splice(index, 1);
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.sticks.push(this.anims[pos]);
                        }
                    } else this.anims[pos].active == false && this.anims[pos].animated;
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    /**
   * Animations.
   */ makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    /**
   * Animations.
   */ svgTrans(a) {
        for (let b of a.querySelectorAll("svg"))if (b.getAttribute("width") && !b.getAttribute("viewBox")) {
            let txt = "0 0 " + b.getAttribute("width") + " " + b.getAttribute("height");
            // //  console.log(txt)
            b.setAttribute("viewBox", txt);
        }
    }
    async show() {
        this.onResize();
        if (this.DOM.el.querySelector(".m-social")) for (let a of this.DOM.el.querySelectorAll(".m-social"))this.svgTrans(a);
        if (this.DOM.el.querySelectorAll(".social")) for (let a1 of this.DOM.el.querySelectorAll(".social"))this.svgTrans(a1);
        // await this.timeout(420)
        if (this.DOM.el.querySelector("p:empty")) for (let p of this.DOM.el.querySelectorAll("p:empty"))p.remove();
        if (!this.main.isTouch) await (0, _gsap.gsap).to(this.DOM.el, {
            y: 0,
            ease: "bounceTrans",
            duration: 1.6
        });
        else await (0, _gsap.gsap).to(this.DOM.el, {
            y: 0,
            ease: "bounceTrans",
            duration: 1.6,
            onComplete: ()=>{
                this.DOM.el.style.position = "relative";
                this.DOM.el.style.left = "auto";
                this.DOM.el.style.top = "auto";
            }
        });
        this.resizeLimit();
        if (this.intro) this.intro.start(1);
        this.isVisible = 1;
        if (this.avoidScroll) document.documentElement.classList.add("scroll-ready");
        if (document.querySelector(".Tab")) {
            this.tabFn = (el)=>{
                if (el.classList.contains("act")) {
                    el.classList.remove("act");
                    (0, _gsap.gsap).to(el.querySelector(".tabHold"), {
                        height: 0,
                        onComplete: ()=>{
                            if (this.main.isTouch) this.resizeLimit();
                        }
                    });
                } else {
                    el.classList.add("act");
                    (0, _gsap.gsap).to(el.querySelector(".tabHold"), {
                        height: el.querySelector(".tabBox").clientHeight + "px",
                        onComplete: ()=>{
                            if (this.main.isTouch) this.resizeLimit();
                        }
                    });
                }
            };
            for (let p1 of this.DOM.el.querySelectorAll(".Tab"))p1.querySelector(".tabClick").addEventListener("click", ()=>this.tabFn(p1));
        }
        return Promise.resolve();
    }
    hide() {
        this.isVisible = 0;
        if (this.avoidScroll) document.documentElement.classList.remove("scroll-ready");
        return Promise.resolve();
    }
    //Images
    loadImages() {
        return Promise.resolve();
    }
    /**
   * Events.
   */ onResize() {
        window.requestAnimationFrame((_)=>{
            this.h = window.innerHeight;
            this.resizeLimit();
        });
    }
    resizeLimit() {
        if (!this.scroll) return false;
        if (!this.avoidScroll) {
            for (let anim of this.anims)if (anim.stick != null) {
                if (anim.stick.type) anim.stick.limit = anim.stick.parent.querySelector(".stck_control").clientHeight + anim.stick.son.clientHeight / 2;
                else // anim.stick.limit=anim.stick.parent.clientHeight
                anim.stick.limit = anim.stick.parent.querySelector(".stck_control").clientHeight;
            }
            if (this.isHorizontal) this.size = this.DOM.el.querySelector(".sizer").clientWidth - window.innerWidth;
            else this.size = this.DOM.el.clientHeight - window.innerHeight;
            this.scroll.limit = this.size;
        // this.content.style.height = this.scroll.limit+'px'
        }
    }
    onScroll(t) {
        this.scroll.target = document.body.scrollTop;
        this.mobileScroll();
        if (document.body.scrollTop == 0) document.documentElement.classList.remove("scrolled");
        else document.documentElement.classList.add("scrolled");
    }
    onTouchDown(event) {
        this.isDown = true;
    }
    onTouchMove(event) {
        if (!this.isDown) return;
    }
    onTouchUp(event) {
        this.isDown = false;
    }
    onWheel() {
        if (this.isVisible == 0) return;
    }
    /**
   * Frames.
   */ smoothScroll(x) {
        if (x) {
            this.scroll.target = this.scroll.last ?? 0;
            return;
        }
        if (this.isAutoScroll == 0) {
            this.scroll.target = (0, _mathJs.clamp)(0, this.scroll.limit, this.scroll.target) ?? this.scroll.target;
            this.scroll.current = (0, _mathJs.lerp)(this.scroll.current, this.scroll.target, this.scroll.ease) ?? this.scroll.current;
            // this.scroll.current = Math.floor(this.scroll.current)
            if (this.scroll.current < 0.1) {
                this.scroll.current = 0;
                document.documentElement.classList.remove("scrolled");
            } else document.documentElement.classList.add("scrolled");
            if (this.isHorizontal) this.DOM.el.style[this.transform] = `translate3d(-${this.scroll.current}px,0, 0)`;
            else this.DOM.el.style[this.transform] = `translate3d(0, -${this.scroll.current}px, 0)`;
        }
        this.scroll.last = this.scroll.current;
        for (let st of this.sticks){
            st.stick.target = this.h - st.el.getBoundingClientRect().y;
            // //  console.log(st.stick.pos+'pos')
            st.stick.current = (0, _mathJs.clamp)(0, st.stick.limit, st.stick.target);
            // st.stick.current = lerp(st.stick.current, st.stick.target,this.scroll.ease)
            // st.stick.current = Math.floor(st.stick.target)
            // st.stick.current = st.stick.target
            st.stick.prog = st.stick.current / st.stick.limit;
            if (st.stick.current < 0.1) st.stick.current = 0;
            // //  console.log(st.stick.prog)
            // //  console.log(st.stick.current+'currentaf')
            st.stick.son.style[this.transform] = `translate3d(0,${st.stick.current}px, 0)`;
        }
    }
    mobileScroll() {}
    update(speed) {
        if (this.isVisible == 0) return false;
        this.speed = speed;
        if (!this.avoidScroll) {
            this.smoothScroll();
            if (this.speed > 0.001 || this.speed < -0.001) {
                if (this.scroll) this.scroll.target += this.speed;
                for (let st of this.sticks)st.stick.target += this.speed;
                if (this.movestick != null) this.movestick.stick.target += this.speed;
                if (this.movetext != null) this.movetext.stick.target += this.speed;
            }
        }
    }
};

},{"auto-bind":"iS0Jy","events":"32fHr","prefix":"c1qtG","gsap":"gS77a","../basic/math.js":"bABGj","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"c1qtG":[function(require,module,exports) {
// check document first so it doesn't error in node.js
var style = typeof document != "undefined" ? document.createElement("p").style : {};
var prefixes = [
    "O",
    "ms",
    "Moz",
    "Webkit"
];
var upper = /([A-Z])/g;
var memo = {};
/**
 * prefix `key`
 *
 *   prefix('transform') // => WebkitTransform
 *
 * @param {String} key
 * @return {String}
 * @api public
 */ function prefix(key) {
    // Camel case
    key = key.replace(/-([a-z])/g, function(_, char) {
        return char.toUpperCase();
    });
    // Without prefix
    if (style[key] !== undefined) return key;
    // With prefix
    var Key = key.charAt(0).toUpperCase() + key.slice(1);
    var i = prefixes.length;
    while(i--){
        var name = prefixes[i] + Key;
        if (style[name] !== undefined) return name;
    }
    return key;
}
/**
 * Memoized version of `prefix`
 *
 * @param {String} key
 * @return {String}
 * @api public
 */ function prefixMemozied(key) {
    return key in memo ? memo[key] : memo[key] = prefix(key);
}
/**
 * Create a dashed prefix
 *
 * @param {String} key
 * @return {String}
 * @api public
 */ function prefixDashed(key) {
    key = prefix(key);
    if (upper.test(key)) {
        key = "-" + key.replace(upper, "-$1");
        upper.lastIndex = 0;
    }
    return key.toLowerCase();
}
module.exports = prefixMemozied;
module.exports.dash = prefixDashed;

},{}],"6slxD":[function(require,module,exports) {
module.exports = "<main class=\"home\">\n    <% if(it.data.acf?.use_grid_intro){ %>\n      <section class=\"home_intro\">\n        <div class=\"home_intro_overlay\">\n          <h1><%~ it.data.acf?.home_grid_heading || '' %></h1>\n          <span><%~ it.data.acf?.home_grid_subheading || '' %></span>\n        </div> \n\n        <div class=\"home_intro_grid\" data-progress=\"100\">\n          <%\n            let images = it.data.acf?.home_grid_images || [];\n            let video = it.data.acf?.home_grid_video || '';\n            let video_link = it.data.acf?.home_grid_video_link || '';\n\n            for(let i = 0; i < images.length; i++) { \n              if(i == Math.round(images.length/2)){ %>\n                <a class=\"home_intro_grid-image mouseHover\" href=\"<%~ video_link %>\">\n                  <video src=\"<%~ video %>\" autoplay loop muted playsinline></video> \n                </a>\n              <% } %>\n              <a class=\"home_intro_grid-image mouseHover\" href=\"<%~ images[i]?.link || '' %>\">\n                <img src=\"<%~ images[i].image %>\">\n              </a>\n          <% } %>\n        </div>\n      </section>\n    <% } else { %>\n      <section class=\"home_intro\">\n        <div class=\"iO iO-slidetime\"></div>\n        <div class=\"left\">\n\n          <% it.data.acf.slider.forEach(function(p,key){ \n          if(p.link.post_type=='network' || p.link.post_type==\"podcast\"){\n                text ='Listen'\n              }\n              else if(p.link.post_type=='post'){\n                text ='Read'\n              }\n              else{\n                text ='Watch'\n              }\n          %>\n          <div class=\"left_el\">\n            <div class=\"left_el_hold\">\n              <% if(p.subtitle){ %>\n              <h3 class=\"tit4\">\n                <div class=\"line\">\n                  <div class=\"word\"><%~ p.subtitle %></div>\n                </div>\n              </h3>\n              <% } %>\n              <h2 class=\"tit1\"><%~ p.title %></h2>\n              <div class=\"btnmore\">\n                <div class=\"btnmore_t\"><%~ text %></div>\n              </div>\n            </div>\n          </div>\n          <% }) %>\n          \n        </div>\n        <div class=\"right\">\n          <div class=\"right_hold\">\n          <% it.data.acf.slider.forEach(function(p,key){\n              if(p.link.post_type=='network' || p.link.post_type==\"podcast\"){\n                mousehov ='mouseListen'\n              }\n              else if(p.link.post_type=='post'){\n                mousehov ='mouseRead'\n              }\n              else{\n                mousehov ='mouseWatch'\n              } %>\n              <div class=\"border\"></div>\n              <a class=\"right_el <%~ mousehov %>\" href=\"<%~ p.link.permalink %>\" data-type=\"article\"><img\n                src=\"<%~ p.image %>\"></a>\n\n          <% }) %>\n          </div>\n          <div class=\"right_timer timer\">\n            <div class=\"timer_s\">99</div>\n            <div class=\"timer_b\">\n              <div class=\"timer_b_f\">\n                <div class=\"total\"></div>\n              </div>\n            </div>\n            <div class=\"timer_e\">0<%~ it.data.acf.slider.length %></div>\n          </div>\n        </div>\n      </section>\n    <% } %>\n\n      <section class=\"m-sectitle\">\n        <div class=\"c-vw\">\n          <div class=\"left\">\n            <h2 class=\"tit2\"><%~ it.data.acf.title_1 %></h2>\n          </div>\n          <div class=\"right\">\n            <div class=\"txt-bureau\">\n              <p><%~ it.data.acf.text_1 %></p>\n            </div><a href=\"<%~ it.global.acf.pods %>\" class=\"simp mouseHover\" style=\"--main:#E5855E\"><span>Tune in</span></a>\n          </div>\n        </div>\n      </section>\n      <section class=\"m-slidrag\">\n        <div class=\"swiper\">\n          <div class=\"swiper-wrapper mouseDrag\">\n          <% \n            if(it.data.acf.podcasts){\n            it.data.acf.podcasts.forEach(function(p,key){ %>\n            <div class=\"swiper-slide\">\n            <a class=\"pod\" href=\"<%~ p.permalink %>\" data-type=\"podcastdad\">\n                <div class=\"pod_image\"><svg viewbox=\"0 0 810 810\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                      d=\"M342.941 690.825C269.987 707.143 202.158 695.855 157.898 651.595C113.639 607.336 102.35 539.507 118.668 466.553C135.002 393.528 179.093 314.604 246.849 246.849C314.604 179.093 393.528 135.002 466.553 118.668C539.507 102.35 607.336 113.639 651.595 157.898C695.855 202.158 707.144 269.987 690.826 342.941C674.492 415.966 630.401 494.889 562.645 562.645C494.89 630.401 415.966 674.491 342.941 690.825ZM161.434 648.06C246.686 733.312 424.732 693.488 559.11 559.109C693.488 424.731 733.312 246.686 648.06 161.434C562.808 76.1816 384.762 116.006 250.384 250.384C116.006 384.762 76.1818 562.808 161.434 648.06Z\"\n                      fill=\"#FEF9F3\"></path>\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                      d=\"M342.068 686.922C269.905 703.063 203.68 691.72 160.727 648.767C117.774 605.815 106.431 539.589 122.572 467.426C138.716 395.249 182.375 316.98 249.677 249.677C316.979 182.375 395.249 138.716 467.426 122.572C539.589 106.431 605.814 117.774 648.767 160.727C691.72 203.68 703.063 269.905 686.922 342.068C670.778 414.245 627.119 492.515 559.817 559.817C492.514 627.119 414.245 670.778 342.068 686.922ZM161.434 648.06C246.686 733.312 424.732 693.488 559.11 559.11C693.488 424.732 733.312 246.686 648.06 161.434C562.808 76.182 384.762 116.006 250.384 250.384C116.006 384.763 76.1818 562.808 161.434 648.06Z\"\n                      fill=\"black\"></path>\n                  </svg>\n                  <div class=\"pod_image_hold\"><img src=\"<%~ p.image_a %>\"></div>\n                </div>\n                <div class=\"pod_info\">\n                  <h3 class=\"tit4\"><%~ p.post_title %></h3>\n                  <p></p>\n                </div>\n              </a></div>\n          <% })\n          \n          } %>\n            \n          </div>\n        </div>\n      </section>\n      <section class=\"m-cta signupmod\" style=\"--main:#E5855E\">\n        <div class=\"c-vw\">\n          <div class=\"hold\">\n            <%\n              var randomNum = Math.floor((Math.random() * it.global.acf.signup_text.length) + 1);\n              var title = it.global.acf.signup_text[randomNum-1].title;\n              var text = it.global.acf.signup_text[randomNum-1].text;\n              \n           %>\n            <h2 class=\"tit1\"><%~ title %></h2>\n            <h3 class=\"tit4\"><%~ text %> </h3>\n            </h3>\n            <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\">\n              <div class=\"btn_t\">TAP IN</div>\n            </a>\n          </div>\n        </div>\n      </section>\n      <section class=\"m-sectitle\">\n        <div class=\"c-vw\">\n          <div class=\"left\">\n            <h2 class=\"tit2\"><%~ it.data.acf.title_2 %></h2>\n          </div>\n          <div class=\"right\">\n            <div class=\"txt-bureau\">\n              <p><%~ it.data.acf.text_2 %></p>\n            </div><a href=\"<%~ it.global.acf.shows %>\" data-type=\"showarchive\" class=\"simp mouseHover\"><span>VIEW ALL</span></a>\n          </div>\n        </div>\n      </section>\n      <section class=\"m-slidnum\">\n        <div class=\"left\" style=\"--main:#895434\">\n          <div class=\"left_hold\">\n\n          <% it.data.acf.shows.forEach(function(p,key){ %>\n            <div class=\"left_el\">\n              <h3 class=\"tit1\"><%~ p.post_title %></h3>\n              <div class=\"btnmore\">\n                <div class=\"btnmore_t\">Watch</div>\n              </div>\n            </div>\n          <% }) %>\n            \n          </div>\n          <div class=\"pg\">\n\n          <% it.data.acf.shows.forEach(function(p,key){ %>\n            <div class=\"pgel mouseHover\" style=\"--base:#895434;--main:#FEF9F3\">\n              <div class=\"pgel_t\"><%~ key+1 %></div>\n            </div>\n          <% }) %>\n            \n          </div>\n        </div>\n        <div class=\"right\">\n          <% it.data.acf.shows.forEach(function(p,key){ %>\n          <a href=\"<%~ p.permalink %>\" data-type=\"showdad\" class=\"right_el mouseWatch\"><img src=\"<%~ p.image_a %>\"></a>\n          <% }) %>\n        </div>\n      </section>\n      <section class=\"m-sectitle\">\n        <div class=\"c-vw\">\n          <div class=\"left\">\n            <h2 class=\"tit2\"><%~ it.data.acf.title_3 %></h2>\n          </div>\n          <div class=\"right\">\n            <div class=\"txt-bureau\">\n              <p><%~ it.data.acf.text_3 %></p>\n            </div><a class=\"simp mouseHover\" href=\"<%~ it.global.acf.articles %>\"><span>VIEW ALL</span></a>\n          </div>\n        </div>\n      </section>\n      <section class=\"homeposts\">\n        <div class=\"homeposts_main\">\n\n            <% it.data.acf.articles.forEach(function(w,key){ %>\n            <a class=\"el mouseFollow\" data-image=\"<%~ w.image_a %>\" data-type=\"article\" href=\"<%~ w.permalink %>\">\n                <h3 class=\"tit2\"><span><%~ w.post_title %></span></h3>\n                <div class=\"date\"><%~ w.date %></div>\n            </a>\n            <% }) %>\n            \n        </div>\n      </section>\n      <section class=\"m-cta\" style=\"--main:#DF80AC\">\n        <div class=\"c-vw\">\n          <div class=\"hold\">\n          <%\n              var randomNum = Math.floor((Math.random() * it.global.acf.support_text.length) + 1);\n              var title = it.global.acf.support_text[randomNum-1].title;\n              var text = it.global.acf.support_text[randomNum-1].text;\n              \n           %>\n            <h2 class=\"tit1\"><%~ title %></h2>\n            <h3 class=\"tit4\"><%~ text %> </h3>\n            <a  class=\"btn mouseHover\" href=\"<%~ it.global.acf.support %>\">\n              <div class=\"btn_t\">Support Us</div>\n            </a>\n          </div>\n        </div>\n      </section>\n      <section class=\"m-sectitle\">\n        <div class=\"c-vw\">\n          <div class=\"center\">\n            <h2 class=\"tit2\">Featured Guests and Brands</h2><a href=\"<%~ it.global.acf.network %>\" data-type=\"networkarchive\" class=\"simp mouseHover\" style=\"--main:#E5855E\"><span>VIEW\n                ALL</span></a>\n          </div>\n        </div>\n      </section>\n      <section class=\"m-logos\">\n        <div class=\"c-vw\">\n        <%  it.global.acf.featured.forEach(function(p,key){ %>\n        <div><img src=\"<%~ p %>\" /></div>\n        <%\n        })\n        %>\n        </div>\n      </section>\n  <%~ it.footer %>\n</main>";

},{}],"kbClh":[function(require,module,exports) {
module.exports = "<main class=\"home\">\n  <% if(it.data.acf?.use_grid_intro){ %>\n    <section class=\"home_intro\">\n      <div class=\"home_intro_overlay\">\n        <h1><%~ it.data.acf?.home_grid_heading || '' %></h1>\n        <span><%~ it.data.acf?.home_grid_subheading || '' %></span>\n      </div> \n\n      <div class=\"home_intro_grid\" data-progress=\"100\">\n        <%\n          let images = it.data.acf?.home_grid_images || [];\n          let video = it.data.acf?.home_grid_video || '';\n          let video_link = it.data.acf?.home_grid_video_link || '';\n\n          for(let i = 0; i < images.length; i++) { \n            if(i == Math.round(images.length/2)){ %>\n              <a class=\"home_intro_grid-image mouseHover\" href=\"<%~ video_link %>\">\n                <video src=\"<%~ video %>\" autoplay loop muted playsinline></video> \n              </a>\n            <% } %>\n            <a class=\"home_intro_grid-image mouseHover\" href=\"<%~ images[i]?.link || '' %>\">\n              <img src=\"<%~ images[i].image %>\">\n            </a>\n        <% } %>\n      </div>\n    </section>\n  <% } else { %>\n    <section class=\"home_intro\">\n      <div class=\"iO iO-slidetime\"></div>\n      <div class=\"left\">\n\n        <% it.data.acf.slider.forEach(function(p,key){ \n        if(p.link.post_type=='network' || p.link.post_type==\"podcast\"){\n              text ='Listen'\n            }\n            else if(p.link.post_type=='post'){\n              text ='Read'\n            }\n            else{\n              text ='Watch'\n            }\n        %>\n        <div class=\"left_el\">\n          <div class=\"left_el_hold\">\n            <% if(p.subtitle){ %>\n            <h3 class=\"tit4\">\n              <div class=\"line\">\n                <div class=\"word\"><%~ p.subtitle %></div>\n              </div>\n            </h3>\n            <% } %>\n            <h2 class=\"tit1\"><%~ p.title %></h2>\n            <div class=\"btnmore\">\n              <div class=\"btnmore_t\"><%~ text %></div>\n            </div>\n          </div>\n        </div>\n        <% }) %>\n        \n      </div>\n      <div class=\"right\">\n        <div class=\"right_hold\">\n        <% it.data.acf.slider.forEach(function(p,key){\n            if(p.link.post_type=='network' || p.link.post_type==\"podcast\"){\n              mousehov ='mouseListen'\n            }\n            else if(p.link.post_type=='post'){\n              mousehov ='mouseRead'\n            }\n            else{\n              mousehov ='mouseWatch'\n            } %>\n            <div class=\"border\"></div>\n            <a class=\"right_el <%~ mousehov %>\" href=\"<%~ p.link.permalink %>\" data-type=\"article\"><img\n              src=\"<%~ p.image %>\"></a>\n\n        <% }) %>\n        </div>\n        <div class=\"right_timer timer\">\n          <div class=\"timer_s\">99</div>\n          <div class=\"timer_b\">\n            <div class=\"timer_b_f\">\n              <div class=\"total\"></div>\n            </div>\n          </div>\n          <div class=\"timer_e\">0<%~ it.data.acf.slider.length %></div>\n        </div>\n      </div>\n    </section>\n  <% } %>\n\n  <section class=\"m-sectitletext\">\n    <div class=\"c-vw\">\n      <div class=\"left\">\n        <h2 class=\"tit2\">Hi <%~ it.global.user.acf.firstname %></h2>\n      </div>\n      <div class=\"right\">\n        <div class=\"txt-bureau\">\n          <p>Explore our catalog of podcast discussions with hundreds of executives, entrepreneurs, elected officials, activists, and influencers all focused on the same thing: centering and amplifying Black and brown folks at work.</p>\n        </div>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-tabposts\" style=\"--main:#E5855E\">\n    <div class=\"m-tabposts_selector c-vw\">\n      <div class=\"m-tabposts_selector_type\">\n        <div class=\"tabClick simp act mouseHover\"><span>your Pods</span></div>\n        <div class=\"tabClick simp mouseHover\"><span>your Shows</span></div>\n        <div class=\"tabClick simp mouseHover\"><span>your ARTICLES</span></div>\n      </div>\n      <div class=\"m-tabposts_selector_blocks\">\n        <div class=\"blockClick mouseHover act\" data-type=\"list\"><svg viewbox=\"0 0 16 16\" fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\">\n            <rect width=\"4\" height=\"4\" fill=\"black\"></rect>\n            <rect x=\"6\" width=\"10\" height=\"4\" fill=\"black\"></rect>\n            <rect x=\"6\" y=\"6\" width=\"10\" height=\"4\" fill=\"black\"></rect>\n            <rect x=\"6\" y=\"12\" width=\"10\" height=\"4\" fill=\"black\"></rect>\n            <rect y=\"6\" width=\"4\" height=\"4\" fill=\"black\"></rect>\n            <rect y=\"12\" width=\"4\" height=\"4\" fill=\"black\"></rect>\n          </svg>\n        </div>\n        <div class=\"blockClick mouseHover\" data-type=\"block\"><svg viewbox=\"0 0 16 16\" fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\">\n            <rect width=\"7\" height=\"7\" fill=\"black\"></rect>\n            <rect y=\"9\" width=\"7\" height=\"7\" fill=\"black\"></rect>\n            <rect x=\"9\" width=\"7\" height=\"7\" fill=\"black\"></rect>\n            <rect x=\"9\" y=\"9\" width=\"7\" height=\"7\" fill=\"black\"></rect>\n          </svg>\n        </div>\n      </div>\n    </div>\n    <div class=\"holderall\">\n      <div class=\"m-tabposts_hold PodHold act\">\n        <% it.datap.pods.forEach(function(p,key){ %>\n            <div class=\"podlist\">\n              <div class=\"podlist_image\">\n                <a class=\"podlist_image_hold mouseHover\"  href=\"<%~ p.link %>\" data-type=\"podcastchild\"><img src=\"<%~ p.image %>\"></a>\n              </div>\n              <div class=\"podlist_info\">\n                <h3 class=\"tit4\"><%~ p.title %></h3>\n                <% if(p.featuring){ %>\n                <p class=\"desc\"><%~ p.featuring %></p>\n                <% }\n                else{\n                %>\n                <p class=\"desc\"><%~ p.description %></p>\n                <%\n                  }\n                 %>\n                <a class=\"btnplay mouseHover\" data-type=\"podcastchild\"  href=\"<%~ p.link %>\">\n                  <div class=\"btnplay_tri\"></div>\n                </a>\n                <div class=\"autor\">\n                  <% if(p.parentid>0){ %>\n                  <p><a class=\"mouseHover\" href=\"<%~ p.parent.permalink %>\" data-type=\"podcastdad\"><%~ p.parent.name %></a></p>\n                  <% }\n                  %>\n                </div>\n                <div class=\"podlist_info_bottom\">\n                  <div class=\"datapod\">\n                    <div class=\"datapod_date\"><%~ p.date %></div>\n                  <% if(p.duration){ %>\n                    <div class=\"datapod_time\"><%~ p.duration %></div>\n                  <%  } %>\n                  </div>\n                  <div class=\"shareclick mouseHover\">\n                    <%~ it.global.icons.share %>\n                    <div class=\"shareclick_close\"></div>\n                    <div class=\"shareclick_icons\">\n                      <a class=\"mouseHover Stw\" href=\"https://twitter.com/intent/tweet?url=<%~ p.link %>\"><%~ it.global.icons.tw %></a>\n                      <a class=\"mouseHover Sfb\" href=\"https://www.facebook.com/sharer/sharer.php?u=<%~ p.link %>\"><%~ it.global.icons.fb %></a>\n                      <a class=\"mouseHover Sin\" href=\"https://www.linkedin.com/shareArticle?url=<%~ p.link %>\"><%~ it.global.icons.in %></a>\n                      <a class=\"mouseHover Srd\" href=\"https://www.reddit.com/submit?url=<%~ p.link %>\"><%~ it.global.icons.reddit %></a>\n                      <a class=\"mouseHover Stb\" href=\"https://www.tumblr.com/share/link?url=<%~ p.link %>\"><%~ it.global.icons.tumbler %></a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          <% }) \n          if(it.datap.pods.length %2 != 0){\n          %>\n            <div class=\"podlist podlist-fake\"></div>\n\n          <%\n          }\n          %>\n      </div>\n      <div class=\"m-tabposts_hold showHold load blocks\">\n\n        <% it.datap.shows.forEach(function(p,key){ %>\n\n\n          <div class=\"show\">\n            <div class=\"show_hold\">\n              <div class=\"show_image\">\n                <a class=\"btnplay mouseHover\" data-type=\"showchild\" href=\"<%~ p.link %>\">\n                  <div class=\"btnplay_tri\"></div>\n                </a>\n                <img src=\"<%~ p.image %>\">\n              </div>\n              <div class=\"show_info\">\n                <h3 class=\"tit3\"><%~ p.title %></h3>\n                <div class=\"txt-bureau\">\n                  <p><%~ p.description %></p>\n                </div>\n                <div class=\"show_info_bottom\">\n                  <div class=\"date\"><%~ p.date %></div>\n                  <div class=\"shareclick mouseHover\">\n                    <%~ it.global.icons.share %>\n                    <div class=\"shareclick_close\"></div>\n                    <div class=\"shareclick_icons\">\n                      <a class=\"mouseHover Stw\" href=\"https://twitter.com/intent/tweet?url=<%~ p.link %>\"><%~ it.global.icons.tw %></a>\n                      <a class=\"mouseHover Sfb\" href=\"https://www.facebook.com/sharer/sharer.php?u=<%~ p.link %>\"><%~ it.global.icons.fb %></a>\n                      <a class=\"mouseHover Sin\" href=\"https://www.linkedin.com/shareArticle?url=<%~ p.link %>\"><%~ it.global.icons.in %></a>\n                      <a class=\"mouseHover Srd\" href=\"https://www.reddit.com/submit?url=<%~ p.link %>\"><%~ it.global.icons.reddit %></a>\n                      <a class=\"mouseHover Stb\" href=\"https://www.tumblr.com/share/link?url=<%~ p.link %>\"><%~ it.global.icons.tumbler %></a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        <% })\n        %>\n      </div>\n\n      <div class=\"m-tabposts_hold artHold blocks load\">\n\n        <% it.datap.posts.forEach(function(p,key){ %>\n          <a class=\"art mouseHover\" href=\"<%~ p.link %>\" data-type=\"article\">\n            <div class=\"art_hold\">\n              <div class=\"art_image\">\n                <div class=\"btnmore btnmore-hovered\">\n                  <div class=\"btnmore_t\">read more</div>\n                </div><img src=\"<%~ p.image %>\">\n              </div>\n              <div class=\"art_info\">\n                <h3 class=\"tit3\"><%~ p.title %></h3>\n                <% if(p.description!=null){ %>\n                <p class=\"desc\"><%~ p.description %></p>\n                <% } %>\n                <div class=\"date tit4\"><%~ p.date %></div>\n              </div>\n            </div>\n          </a>\n        <% }) %>\n      </div>\n    </div>\n\n  </section>\n\n  <section class=\"m-cta\" style=\"--main:#DF80AC\">\n    <div class=\"c-vw\">\n      <div class=\"hold\">\n      <%\n          var randomNum = Math.floor((Math.random() * it.global.acf.support_text.length) + 1);\n          var title = it.global.acf.support_text[randomNum-1].title;\n          var text = it.global.acf.support_text[randomNum-1].text;\n          \n        %>\n        <h2 class=\"tit1\"><%~ title %></h2>\n        <h3 class=\"tit4\"><%~ text %> </h3>\n        <a  class=\"btn mouseHover\" href=\"<%~ it.global.acf.support %>\">\n          <div class=\"btn_t\">Support</div>\n        </a>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-sectitle\">\n    <div class=\"c-vw\">\n      <div class=\"center\">\n        <h2 class=\"tit2\">Featured Guests and Brands</h2><a href=\"<%~ it.global.acf.network %>\" data-type=\"networkarchive\" class=\"simp mouseHover\" style=\"--main:#E5855E\"><span>VIEW\n            ALL</span></a>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-logos\">\n    <div class=\"c-vw\">\n    <%  it.global.acf.featured.forEach(function(p,key){ %>\n    <div><img src=\"<%~ p %>\" /></div>\n    <%\n    })\n    %>\n    </div>\n  </section>\n<%~ it.footer %>\n</main>";

},{}],"g0diQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _gsap = require("gsap");
var _splitType = require("split-type");
var _splitTypeDefault = parcelHelpers.interopDefault(_splitType);
exports.default = class {
    constructor(element, isActive){
        this.el = element;
        this.elsleft = this.el.querySelectorAll(".left_el");
        this.elsright = this.el.querySelectorAll(".right_el");
        this.total = this.el.querySelector(".total");
        this.poscontroler = this.el.querySelector(".timer_s");
        this.pos = -1;
        this.length = this.elsright.length - 1;
        this.borders = this.el.querySelectorAll(".border");
        this.splits = [];
        this.tweens = [];
        let tw;
        for (let [key, el] of this.el.querySelectorAll(".tit1").entries()){
            this.splits.push(new (0, _splitTypeDefault.default)(el, {
                types: "lines,words"
            }));
            tw = (0, _gsap.gsap).timeline({
                paused: true
            });
            for (let [index, s] of this.splits[key].words.entries()){
                (0, _gsap.gsap).set(s, {
                    yPercent: 120
                });
                tw.to(s, {
                    yPercent: 0,
                    duration: .6,
                    delay: index * .1,
                    ease: (0, _gsap.Power2).easeInOut
                }, "anim");
            }
            this.tweens.push(tw);
        }
        this.active = 0;
        this.isworking = 0;
        isActive;
        this.initEvents();
    }
    start(num) {
        // //  console.log('start'+num)
        if (num == 1) this.isworking = 1;
        if (num == null && this.isworking == 0) return false;
        if (this.active == 1) return false;
        if (this.pos == -1) {
            this.change();
            setTimeout(()=>{
                this.el.classList.add("delayed");
            }, 3000);
        } else {
            (0, _gsap.gsap).set(this.total, {
                width: "0%",
                opacity: 1
            });
            (0, _gsap.gsap).to(this.total, {
                opacity: 0,
                duration: .5,
                delay: 5,
                ease: (0, _gsap.Power2).linear
            });
            (0, _gsap.gsap).to(this.total, {
                width: "100%",
                duration: 5.5,
                ease: (0, _gsap.Power2).linear
            });
        }
        this.active = 1;
        this.intervalSlide = setInterval(()=>{
            (0, _gsap.gsap).set(this.total, {
                width: "0%",
                opacity: 1,
                onComplete: ()=>{
                    if (this.poscontroler.querySelector(".out")) this.poscontroler.querySelector(".out").remove();
                }
            });
            this.change();
        }, 5600);
    }
    change() {
        (0, _gsap.gsap).to(this.total, {
            opacity: 0,
            duration: .5,
            delay: 5,
            ease: (0, _gsap.Power2).linear
        });
        (0, _gsap.gsap).to(this.total, {
            width: "100%",
            duration: 5.5,
            ease: (0, _gsap.Power2).linear
        });
        if (this.pos > -1) {
            this.poscontroler.querySelector(".active").classList.add("out");
            (0, _gsap.gsap).to(this.borders[this.pos], {
                width: "0%",
                height: "0%",
                duration: .6,
                delay: .6,
                ease: "bounceNew"
            });
            (0, _gsap.gsap).to(this.elsright[this.pos], {
                "clip-path": "polygon(50% 50%, 50% 50%, 50% 50%, 50% 50%)",
                duration: .6,
                delay: .6,
                ease: "bounceNew"
            });
            this.elsleft[this.pos].classList.remove("active");
            this.elsright[this.pos].classList.remove("active");
            this.borders[this.pos].classList.remove("active");
            this.tweens[this.pos].reverse();
        }
        if (this.pos < this.length) this.pos++;
        else this.pos = 0;
        let num = this.pos + 1;
        if (num < 10) num = "0" + num;
        const span = document.createElement("span");
        span.innerHTML = num;
        this.poscontroler.appendChild(span);
        setTimeout(()=>{
            if (this.poscontroler.querySelector("span:not(.out)")) this.poscontroler.querySelector("span:not(.out)").classList.add("active");
        }, 60);
        this.elsleft[this.pos].classList.add("active");
        this.elsright[this.pos].classList.add("active");
        this.borders[this.pos].classList.add("active");
        setTimeout(()=>{
            this.tweens[this.pos].tweenTo("end");
        }, 600);
        (0, _gsap.gsap).to(this.borders[this.pos], {
            width: "80%",
            height: "80%",
            duration: 1.4,
            delay: .3,
            ease: "bounceNew"
        });
        (0, _gsap.gsap).to(this.elsright[this.pos], {
            "clip-path": "polygon(10% 10%, 90% 10%, 90% 90%, 10% 90%)",
            duration: 1.4,
            delay: .3,
            ease: "bounceNew"
        });
    }
    stop() {
        if (this.active == 0) return false;
        this.active = 0;
        (0, _gsap.gsap).set(this.total, {
            width: "0%",
            opacity: 1
        });
        clearInterval(this.intervalSlide);
    }
    initEvents() {
        // window.addEventListener('blur',this.stop)
        // window.addEventListener('focus',this.start)
        this.checkVis = ()=>{
            if (document.hidden) this.stop();
            else this.start();
        };
        document.addEventListener("visibilitychange", this.checkVis);
    }
    removeEvents() {}
};

},{"gsap":"gS77a","split-type":"3ncel","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"3ncel":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * SplitType
 * https://github.com/lukePeavey/SplitType
 * @version 0.2.5
 * @author Luke Peavey <lwpeavey@gmail.com>
 */ function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
/**
 * Shallow merges the properties of an object with the target object. Only
 * includes properties that exist on the target object. Non-writable properties
 * on the target object will not be over-written.
 *
 * @param {Object} target
 * @param {Object} object
 */ function extend(target, object) {
    return Object.getOwnPropertyNames(Object(target)).reduce(function(extended, key) {
        var currentValue = Object.getOwnPropertyDescriptor(Object(target), key);
        var newValue = Object.getOwnPropertyDescriptor(Object(object), key);
        return Object.defineProperty(extended, key, newValue || currentValue);
    }, {});
}
/**
 * Parses user supplied settings objects.
 */ function parseSettings(settings) {
    var object = extend(settings);
    if (object.types || object.split) // Support `split` as an alias for `types`
    object.types = object.types || object.split;
    if (object.absolute || object.position) // Support `position: absolute` as alias for `absolute: true`
    object.absolute = object.absolute || /absolute/.test(settings.position);
    return object;
}
/**
 * Returns true if `value` is a non-null object.
 * @param {any} value
 * @return {boolean}
 */ function isObject(value) {
    return value !== null && typeof value === "object";
}
/**
 * Checks if `value` is a valid array-like length.
 * Original source: Lodash
 *
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3)
 * // => true
 *
 * _.isLength(Number.MIN_VALUE)
 * // => false
 *
 * _.isLength(Infinity)
 * // => false
 *
 * _.isLength('3')
 * // => false
 */ function isLength(value) {
    return typeof value === "number" && value > -1 && value % 1 === 0;
}
/**
 * Checks if `value` is an array-like object
 * @param {any} value
 * @return {boolean} true if `value` is array-like`, else `false`
 * @example
 * isArrayLike(new Array())
 * // => true
 *
 * isArrayLike(document.querySelectorAll('div'))
 * // => true
 *
 * isArrayLike(document.getElementsByTagName('div'))
 * // => true
 *
 * isArrayLike(() => {})
 * // => false
 *
 * isArrayLike({foo: 'bar'})
 * // => false
 *
 * * isArrayLike(null)
 * // => false
 */ function isArrayLike(value) {
    return isObject(value) && isLength(value.length);
}
/**
 * Coerces `value` to an `Array`.
 *
 * @param {any} value
 * @return {any[]}
 * @example
 * // If `value` is any `Array`, returns original `Array`
 * let arr = [1, 2]
 * toArray(arr)
 * // => arr
 *
 * // If `value` is an `ArrayLike`, its equivalent to `Array.from(value)`
 * let nodeList = document.querySelectorAll('div')
 * toArray(nodeList)
 * // => HTMLElement[] s
 *
 * // If value is falsy, returns empty array
 * toArray(null)
 * // => []
 *
 * // For any other type of value, its equivalent to `Array.of(value)`
 * let element = document.createElement('div')
 * toArray(element)
 * // => [element]
 *
 */ function toArray(value) {
    if (Array.isArray(value)) return value;
    if (value == null) return [];
    return isArrayLike(value) ? Array.prototype.slice.call(value) : [
        value
    ];
}
/**
 * Returns true if `input` is one of the following:
 * - `Element`
 * - `Text`
 * - `Document`
 * - `DocumentFragment`
 */ function isNode(input) {
    return isObject(input) && /^(1|3|11)$/.test(input.nodeType);
}
/**
 * Checks if given value is a string
 *
 * @param {any} value
 * @return {boolean} `true` if `value` is a string, else `false`
 */ function isString(value) {
    return typeof value === "string";
}
/**
 * Flattens nested ArrayLike object (max 2 levels deep)
 */ function flatten(obj) {
    return toArray(obj).reduce(function(result, item) {
        return result.concat(toArray(item));
    }, []);
}
/**
 * Processes target elements for the splitType function. `target` can any
 * of the following types.
 * 1. `string` - A css selector
 * 2. `HTMLElement` - A single element
 * 3. `ArrayLike<HTMLElement>` - A collection of elements (ie NodeList)
 * 4. `Array<HTMLElement | ArrayLike<HTMLElement>>` - An array of elements
 *     and/or collections of elements
 *
 * Returns a flat array of HTML elements. If `target` does not contain any
 * valid elements, returns an empty array.
 *
 * @param {any} target
 * @returns {HTMLElement[]} A flat array HTML elements
 * @example
 *
 * // Single Element
 * const element = document.createElement('div')
 * getTargetElements()
 * // => [element]
 *
 * const nodeList = document.querySelectorAll('div')
 * getTargetElements(nodeList)
 * // => HTMLElement[] (all elements in `nodeList`)
 *
 * const nodeListA = document.querySelectorAll('div')
 * const nodeListB = document.querySelectorAll('p')
 * getTargetElements([nodeListA, nodeListB])
 * // => HTMLElement[] (all elements in `nodeListA` and `nodeListB`)
 *
 * // ID selector
 * getTargetElements('#id')
 * // => HTMLElement[]
 *
 * // Class selector
 * getTargetElements('.text')
 * // => HTMLElement[]
 *
 * // Non element object will not be returned
 * getTargetElements({foo: bar})
 * // => []
 *
 */ function getTargetElements(target) {
    var elements = target; // If `target` is a selector string...
    if (isString(target)) {
        if (/^(#[a-z]\w+)$/.test(target.trim())) // If `target` is an ID, use `getElementById`
        elements = document.getElementById(target.trim().slice(1));
        else // Else use `querySelectorAll`
        elements = document.querySelectorAll(target);
    }
    return flatten(elements).filter(isNode);
}
/**
 * Stores data associated with DOM elements. This is a simplified version of
 * jQuery's data method.
 */ function Data(owner, key, value) {
    var data = {};
    var id = null;
    if (isObject(owner)) {
        id = owner[Data.expando] || (owner[Data.expando] = ++Data.uid);
        data = Data.cache[id] || (Data.cache[id] = {});
    } // Get data
    if (value === undefined) {
        if (key === undefined) return data;
        return data[key];
    } else if (key !== undefined) {
        data[key] = value;
        return value;
    }
}
Data.expando = "splitType".concat(new Date() * 1);
Data.cache = {};
Data.uid = 0; // Remove all data associated with the given element
function RemoveData(element) {
    var id = element && element[Data.expando];
    if (id) {
        delete element[id];
        delete Data.cache[id];
    }
}
/**
 * Iterates values of an array or array-like object calling the provided
 * `callback` for each item. Based on `array.forEach`
 * @param {any} collection
 * @param {function} callback
 */ function forEach(collection, callback) {
    var arr = toArray(collection);
    for(var len = arr.length, i = 0; i < len; i++)callback(arr[i], i, arr);
}
/**
 * Splits a string into an array of words.
 *
 * @param {string} string
 * @param {string | RegExp} [separator = ' ']
 * @return {string[]} Array of words
 */ function toWords(string) {
    var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : " ";
    string = string ? String(string) : "";
    return string.split(separator);
}
/**
 * Based on lodash#split <https://lodash.com/license>
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters &
 * Editors
 */ var rsAstralRange = "\ud800-\udfff";
var rsComboMarksRange = "\\u0300-\\u036f\\ufe20-\\ufe23";
var rsComboSymbolsRange = "\\u20d0-\\u20f0";
var rsVarRange = "\\ufe0e\\ufe0f";
/** Used to compose unicode capture groups. */ var rsAstral = "[".concat(rsAstralRange, "]");
var rsCombo = "[".concat(rsComboMarksRange).concat(rsComboSymbolsRange, "]");
var rsFitz = "\ud83c[\udffb-\udfff]";
var rsModifier = "(?:".concat(rsCombo, "|").concat(rsFitz, ")");
var rsNonAstral = "[^".concat(rsAstralRange, "]");
var rsRegional = "(?:\ud83c[\udde6-\uddff]){2}";
var rsSurrPair = "[\ud800-\udbff][\udc00-\udfff]";
var rsZWJ = "\\u200d";
/** Used to compose unicode regexes. */ var reOptMod = "".concat(rsModifier, "?");
var rsOptVar = "[".concat(rsVarRange, "]?");
var rsOptJoin = "(?:" + rsZWJ + "(?:" + [
    rsNonAstral,
    rsRegional,
    rsSurrPair
].join("|") + ")" + rsOptVar + reOptMod + ")*";
var rsSeq = rsOptVar + reOptMod + rsOptJoin;
var rsSymbol = "(?:".concat([
    "".concat(rsNonAstral).concat(rsCombo, "?"),
    rsCombo,
    rsRegional,
    rsSurrPair,
    rsAstral
].join("|"), "\n)");
/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */ var reUnicode = RegExp("".concat(rsFitz, "(?=").concat(rsFitz, ")|").concat(rsSymbol).concat(rsSeq), "g");
/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */ var unicodeRange = [
    rsZWJ,
    rsAstralRange,
    rsComboMarksRange,
    rsComboSymbolsRange,
    rsVarRange
];
var reHasUnicode = RegExp("[".concat(unicodeRange.join(""), "]"));
/**
 * Converts an ASCII `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */ function asciiToArray(string) {
    return string.split("");
}
/**
 * Checks if `string` contains Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a symbol is found, else `false`.
 */ function hasUnicode(string) {
    return reHasUnicode.test(string);
}
/**
 * Converts a Unicode `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */ function unicodeToArray(string) {
    return string.match(reUnicode) || [];
}
/**
 * Converts `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */ function stringToArray(string) {
    return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
}
/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values.
 *
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */ function toString(value) {
    return value == null ? "" : String(value);
}
/**
 * Splits `string` into an array of characters. If `separator` is omitted,
 * it behaves likes split.split('').
 *
 * Unlike native string.split(''), it can split strings that contain unicode
 * characters like emojis and symbols.
 *
 * @param {string} [string=''] The string to split.
 * @param {RegExp|string} [separator=''] The separator pattern to split by.
 * @returns {Array} Returns the string segments.
 * @example
 * toChars('foo');
 * // => ['f', 'o', 'o']
 *
 * toChars('foo bar');
 * // => ["f", "o", "o", " ", "b", "a", "r"]
 *
 * toChars('f😀o');
 * // => ['f', '😀', 'o']
 *
 * toChars('f-😀-o', /-/);
 * // => ['f', '😀', 'o']
 *
 */ function toChars(string) {
    var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
    string = toString(string);
    if (string && isString(string)) {
        if (!separator && hasUnicode(string)) return stringToArray(string);
    }
    return string.split(separator);
}
/**
 * Create an HTML element with the the given attributes
 *
 * attributes can include standard HTML attribute, as well as the following
 * "special" properties:
 *   - children: HTMLElement | ArrayLike<HTMLElement>
 *   - textContent: string
 *   - innerHTML: string
 *
 * @param {string} name
 * @param  {Object} [attributes]
 * @returns {HTMLElement}
 */ function createElement(name, attributes) {
    var element = document.createElement(name);
    if (!attributes) // When called without the second argument, its just return the result
    // of `document.createElement`
    return element;
    Object.keys(attributes).forEach(function(attribute) {
        var value = attributes[attribute]; // Ignore attribute if value is `null`
        if (value === null) return; // Handle `textContent` and `innerHTML`
        if (attribute === "textContent" || attribute === "innerHTML") element[attribute] = value;
        else if (attribute === "children") forEach(value, function(child) {
            if (isNode(child)) element.appendChild(child);
        });
        else element.setAttribute(attribute, String(value).trim());
    });
    return element;
}
/**
 * Takes a comma separated list of `types` and returns an objet
 *
 * @param {string | string[]} value a comma separated list of split types
 * @return {{lines: boolean, words: boolean, chars: boolean}}
 */ function parseTypes(value) {
    var types = isString(value) || Array.isArray(value) ? String(value) : "";
    return {
        lines: /line/i.test(types),
        words: /word/i.test(types),
        chars: /(char)|(character)/i.test(types)
    };
}
/**
 * Gets the text content of an HTML element.
 *
 * Optionally, <br> tags can be replaced with a unique string so they can be
 * converted back HTML later on.
 *
 * @param {HTMLElement} element
 * @param {string} BR_SYMBOL
 * @return {string} the text content of the given element
 */ function getTextContent(element, LINE_BREAK_SYMBOL) {
    var brTag = /<br\s*\/?>/g;
    var textContent = element.textContent;
    if (LINE_BREAK_SYMBOL) {
        var innerHTML = element.innerHTML;
        var tempDiv = document.createElement("div");
        tempDiv.innerHTML = innerHTML.replace(brTag, " ".concat(LINE_BREAK_SYMBOL, " "));
        textContent = tempDiv.textContent;
    } // Remove extra white space
    return textContent.replace(/\s+/g, " ").trim();
}
var defaults = {
    splitClass: "",
    lineClass: "line",
    wordClass: "word",
    charClass: "char",
    types: "lines, words, chars",
    absolute: false,
    tagName: "div"
};
var createFragment = function createFragment() {
    return document.createDocumentFragment();
};
var createTextNode = function createTextNode(str) {
    return document.createTextNode(str);
};
/**
 * Splits the text content of a single element using the provided settings.
 * There are three possible split types: lines, words, and characters. Each one
 * is optional, so text can be split into any combination of the three types.
 *
 * @param {HTMLElement} element the target element
 * @param {Object} settings
 * @return {{
 *   lines: HTMLElement[],
 *   words: HTMLElement[],
 *   chars: HTMLElement[]
 * }}
 */ function splitSingleElement(element, settings) {
    settings = extend(defaults, settings); // The split types
    var types = parseTypes(settings.types); // the tag name for split text nodes
    var TAG_NAME = settings.tagName; // A unique string to temporarily replace <br> tags
    var BR_SYMBOL = "B".concat(new Date() * 1, "R"); // (boolean) true if position is set to absolute
    var isAbsolute = settings.position === "absolute" || settings.absolute; // The array of wrapped line elements
    var lines = []; // The array of wrapped words elements
    var words = []; // The array of wrapped character elements
    var chars = []; // The plain text content of the target element
    var splitText;
    /**------------------------------------------------
   ** SPLIT TEXT INTO WORDS AND CHARACTERS
   **-----------------------------------------------*/ // `splitText` is a wrapper to hold the HTML structure
    splitText = types.lines ? createElement("div") : createFragment(); // Get the element's text content.
    var TEXT_CONTENT = getTextContent(element, BR_SYMBOL); // Create an array of wrapped word elements.
    words = toWords(TEXT_CONTENT).reduce(function(result, WORD, idx, arr) {
        // Let `wordElement` be the wrapped element for the current word
        var wordElement;
        var characterElementsForCurrentWord; // If the current word is a symbol representing a `<br>` tag,
        // append a `<br>` tag to splitText and continue to the next word
        if (WORD === BR_SYMBOL) {
            splitText.appendChild(createElement("br"));
            return result;
        } // If splitting text into characters...
        if (types.chars) {
            // Iterate through the characters in the current word
            // TODO: support emojis in text
            characterElementsForCurrentWord = toChars(WORD).map(function(CHAR) {
                return createElement(TAG_NAME, {
                    class: "".concat(settings.splitClass, " ").concat(settings.charClass),
                    style: "display: inline-block;",
                    textContent: CHAR
                });
            }); // push the character nodes for this word onto the array of
            // all character nodes
            chars = chars.concat(characterElementsForCurrentWord);
        } // END IF;
        if (types.words || types.lines) {
            // | If Splitting Text Into Words...
            // | Create an element (`wordElement`) to wrap the current word.
            // | If we are also splitting text into characters, the word element
            // | will contain the wrapped character nodes for this word. If not,
            // | it will contain the `WORD`
            wordElement = createElement(TAG_NAME, {
                class: "".concat(settings.wordClass, " ").concat(settings.splitClass),
                style: "display: inline-block; position: ".concat(types.words ? "relative" : "static"),
                children: types.chars ? characterElementsForCurrentWord : null,
                textContent: !types.chars ? WORD : null
            });
            splitText.appendChild(wordElement);
        } else // | If NOT splitting into words OR lines...
        // | Append the characters elements directly to splitText.
        forEach(characterElementsForCurrentWord, function(characterElement) {
            splitText.appendChild(characterElement);
        });
        if (idx !== arr.length - 1) // Add a space after the word.
        splitText.appendChild(createTextNode(" "));
         // If we not splitting text into words, we return an empty array
        return types.words ? result.concat(wordElement) : result;
    }, []); // 4. Replace the original HTML content of the element with the `splitText`
    element.innerHTML = "";
    element.appendChild(splitText); // Unless we are splitting text into lines or using
    if (!isAbsolute && !types.lines) return {
        chars: chars,
        words: words,
        lines: []
    };
    /**------------------------------------------------
   ** GET STYLES AND POSITIONS
   **-----------------------------------------------*/ // There is no built-in way to detect natural line breaks in text (when a
    // block of text wraps to fit its container). To split text into lines, we
    // have to detect line breaks by checking the top offset of words. This is
    // why text was split into words first. To apply absolute
    // positioning, its also necessary to record the size and position of every
    // split node (lines, words, characters).
    // To consolidate DOM getting/settings, this is all done at the same time,
    // before actually splitting text into lines, which involves restructuring
    // the DOM again.
    var wordsInEachLine = [];
    var wordsInCurrentLine = [];
    var lineHeight;
    var elementHeight;
    var elementWidth;
    var contentBox;
    var lineOffsetY; // TODO: Is it necessary to store `nodes` in the cache?
    // nodes is a live HTML collection of the nodes in this element
    var nodes = Data(element, "nodes", element.getElementsByTagName(TAG_NAME)); // Cache the element's parent and next sibling (for DOM removal).
    var parent = element.parentElement;
    var nextSibling = element.nextElementSibling; // get the computed style object for the element
    var cs = window.getComputedStyle(element);
    var align = cs.textAlign; // If using absolute position...
    if (isAbsolute) {
        // Let contentBox be an object containing the width and offset position of
        // the element's content box (the area inside padding box). This is needed
        // (for absolute positioning) to set the width and position of line
        // elements, which have not been created yet.
        contentBox = {
            left: splitText.offsetLeft,
            top: splitText.offsetTop,
            width: splitText.offsetWidth
        }; // Let elementWidth and elementHeight equal the actual width/height of the
        // element. Also check if the element has inline height or width styles
        // already set. If it does, cache those values for later.
        elementWidth = element.offsetWidth;
        elementHeight = element.offsetHeight;
        Data(element).cssWidth = element.style.width;
        Data(element).cssHeight = element.style.height;
    } // Iterate over every split text node
    forEach(nodes, function(node) {
        if (node === splitText) return;
        var isWord = node.parentElement === splitText;
        var wordOffsetY; // a. Detect line breaks by checking the top offset of word nodes.
        //    For each line, create an array (line) containing the words in that
        //    line.
        if (types.lines && isWord) {
            // wordOffsetY is the top offset of the current word.
            wordOffsetY = Data(node, "top", node.offsetTop); // If wordOffsetY is different than the value of lineOffsetY...
            // Then this word is the beginning of a new line.
            // Set lineOffsetY to value of wordOffsetY.
            // Create a new array (line) to hold the words in this line.
            if (wordOffsetY !== lineOffsetY) {
                lineOffsetY = wordOffsetY;
                wordsInEachLine.push(wordsInCurrentLine = []);
            } // Add the current word node to the line array
            wordsInCurrentLine.push(node);
        } // b. Get the size and position of all split text nodes.
        if (isAbsolute) {
            // The values are stored using the data method
            // All split nodes have the same height (lineHeight). So its only
            // retrieved once.
            // If offset top has already been cached (step 11 a) use the stored value.
            Data(node).top = wordOffsetY || node.offsetTop;
            Data(node).left = node.offsetLeft;
            Data(node).width = node.offsetWidth;
            Data(node).height = lineHeight || (lineHeight = node.offsetHeight);
        }
    }); // END LOOP
    // Remove the element from the DOM
    if (parent) parent.removeChild(element);
    /**------------------------------------------------
   ** SPLIT LINES
   **-----------------------------------------------*/ if (types.lines) {
        // Let splitText be a new document createFragment to hold the HTML
        // structure.
        splitText = createFragment(); // Iterate over lines of text (see 11 b)
        // Let `line` be the array of words in the current line.
        // Return an array of the wrapped line elements (lineElements)
        lines = wordsInEachLine.map(function(wordsInThisLine) {
            // Create an element to wrap the current line.
            var lineElement = createElement(TAG_NAME, {
                class: "".concat(settings.splitClass, " ").concat(settings.lineClass),
                style: "display: block; text-align: ".concat(align, "; width: 100%;")
            }); // Append the `lineElement` to `SplitText`
            splitText.appendChild(lineElement); // Store size/position values for the line element.
            if (isAbsolute) {
                Data(lineElement).type = "line"; // the offset top of the first word in the line
                Data(lineElement).top = Data(wordsInThisLine[0]).top;
                Data(lineElement).height = lineHeight;
            } // Iterate over the word elements in the current line.
            forEach(wordsInThisLine, function(wordElement, idx, arr) {
                if (types.words) // | If we are splitting text into words,
                // | just append each wordElement to the lineElement.
                lineElement.appendChild(wordElement);
                else if (types.chars) // | If splitting text into characters but not words...
                // | Append the character elements directly to the line element
                forEach(wordElement.children, function(charNode) {
                    lineElement.appendChild(charNode);
                });
                else // | If NOT splitting into words OR characters...
                // | append the plain text content of the word to the line element
                lineElement.appendChild(createTextNode(wordElement.textContent));
                 // Add a space after the word
                if (idx !== arr.length - 1) lineElement.appendChild(createTextNode(" "));
            }); // END LOOP
            return lineElement;
        }); // END LOOP
        // 10. Insert the new splitText
        element.replaceChild(splitText, element.firstChild);
    }
    /**------------------------------------------------
   **  SET ABSOLUTE POSITION
   **-----------------------------------------------*/ // Apply absolute positioning to all split text elements (lines, words, and
    // characters). The size and relative position of split nodes has already
    // been recorded. Now we use those values to set each element to absolute
    // position. However, positions were logged before text was split into lines
    // (step 13 - 15). So some values need to be recalculated to account for the
    // modified DOM structure.
    if (isAbsolute) {
        // Set the width/height of the parent element, so it does not collapse
        // when its child nodes are set to absolute position.
        element.style.width = "".concat(element.style.width || elementWidth, "px");
        element.style.height = "".concat(elementHeight, "px"); // Iterate over all split nodes.
        forEach(nodes, function(node) {
            var isLineNode = Data(node).type === "line";
            var isChildOfLineNode = !isLineNode && Data(node.parentElement).type === "line"; // Set the top position of the current node.
            // -> If its a line node, we use the top offset of its first child
            // -> If its the child of line node, then its top offset is zero
            node.style.top = "".concat(isChildOfLineNode ? 0 : Data(node).top, "px"); // Set the left position of the current node.
            // -> If its a line node, this this is equal to the left offset of
            //    contentBox.
            // -> If its the child of a line node, the cached valued must be
            //    recalculated so its relative to the line node (which didn't
            //    exist when value was initially checked). NOTE: the value is
            //    recalculated without querying the DOM again
            node.style.left = isLineNode ? "".concat(contentBox.left, "px") : "".concat(Data(node).left - (isChildOfLineNode ? contentBox.left : 0), "px"); // Set the height of the current node to the cached value.
            node.style.height = "".concat(Data(node).height, "px"); //  Set the width of the current node.
            //  If its a line element, width is equal to the width of the contentBox.
            node.style.width = isLineNode ? "".concat(contentBox.width, "px") : "".concat(Data(node).width, "px"); // Finally, set the node's position to absolute.
            node.style.position = "absolute";
        });
    } // end if;
    // 14. Re-attach the element to the DOM
    if (parent) {
        if (nextSibling) parent.insertBefore(element, nextSibling);
        else parent.appendChild(element);
    }
    return {
        lines: lines,
        words: types.words ? words : [],
        chars: chars
    };
}
var _defaults = extend(defaults, {});
var SplitType = /*#__PURE__*/ function() {
    _createClass(SplitType, null, [
        {
            key: "defaults",
            /**
     * The default settings for all splitType instances
     */ get: function get() {
                return _defaults;
            },
            set: function set(options) {
                _defaults = extend(_defaults, parseSettings(options));
            }
        }
    ]);
    function SplitType(target, options) {
        _classCallCheck(this, SplitType);
        this.isSplit = false;
        this.settings = extend(_defaults, parseSettings(options));
        this.elements = getTargetElements(target) || [];
        if (this.elements.length) {
            // Store the original HTML content of each target element
            this.originals = this.elements.map(function(element) {
                return Data(element, "html", Data(element).html || element.innerHTML);
            });
            if (this.settings.types) // Initiate the split operation.
            this.split();
        }
    }
    /**
   * Splits the text in all target elements. This method is called
   * automatically when a new SplitType instance is created. It can also be
   * called manually to re-split text with new options.
   * @param {Object} options
   * @public
   */ _createClass(SplitType, [
        {
            key: "split",
            value: function split(options) {
                var _this = this;
                // If any of the target elements have already been split,
                // revert them back to their original content before splitting them.
                this.revert(); // Create arrays to hold the split lines, words, and characters
                this.lines = [];
                this.words = [];
                this.chars = []; // cache vertical scroll position before splitting
                var scrollPos = [
                    window.pageXOffset,
                    window.pageYOffset
                ]; // If new options were passed into the `split()` method, update settings
                if (options !== undefined) this.settings = extend(this.settings, parseSettings(options));
                 // Split text in each target element
                this.elements.forEach(function(element) {
                    // Add the split text nodes from this element to the arrays of all split
                    // text nodes for this instance.
                    var _split2 = splitSingleElement(element, _this.settings), lines = _split2.lines, words = _split2.words, chars = _split2.chars;
                    _this.lines = _this.lines.concat(lines);
                    _this.words = _this.words.concat(words);
                    _this.chars = _this.chars.concat(chars);
                    Data(element).isSplit = true;
                }); // Set isSplit to true for the SplitType instance
                this.isSplit = true; // Set scroll position to cached value.
                window.scrollTo(scrollPos[0], scrollPos[1]); // Clear data Cache
                this.elements.forEach(function(element) {
                    var nodes = Data(element).nodes || [];
                    toArray(nodes).forEach(RemoveData);
                });
            }
        },
        {
            key: "revert",
            value: function revert() {
                var _this2 = this;
                // Delete the arrays of split text elements
                if (this.isSplit) {
                    this.lines = null;
                    this.words = null;
                    this.chars = null;
                } // Remove split text from target elements and restore original content
                this.elements.forEach(function(element) {
                    if (Data(element).isSplit && Data(element).html) {
                        element.innerHTML = Data(element).html;
                        element.style.height = Data(element).cssHeight || "";
                        element.style.width = Data(element).cssWidth || "";
                        _this2.isSplit = false;
                    }
                });
            }
        }
    ]);
    return SplitType;
}();
exports.default = SplitType;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"jMrwY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _splitType = require("split-type");
var _splitTypeDefault = parcelHelpers.interopDefault(_splitType);
var _gsap = require("gsap");
// const wrapLines = (arr, wrapType, wrapClass) => {
//   arr.forEach(el => {
//       const wrapEl = document.createElement(wrapType)
//       wrapEl.classList = wrapClass
//       el.parentNode.appendChild(wrapEl)
//       wrapEl.appendChild(el)
//   });
// }
exports.default = class {
    constructor(element){
        this.DOM = {
            el: element
        };
        this.SplitTypeInstance = new (0, _splitTypeDefault.default)(this.DOM.el, {
            types: "lines,words"
        });
        // wrapLines(this.SplitTypeInstance.lines, 'div', 'lhold')
        // //  console.log(this.SplitTypeInstance)
        this.start();
        this.initEvents();
    }
    start() {
        this.isVisible = true;
        (0, _gsap.gsap).killTweensOf(this.SplitTypeInstance.words);
        // //  console.log(this.SplitTypeInstance)
        this.inTimeline = (0, _gsap.gsap).timeline({
            paused: true
        });
        for (let [index, s] of this.SplitTypeInstance.words.entries()){
            this.inTimeline.set(s, {
                yPercent: 120
            }, "start");
            this.inTimeline.to(s, {
                yPercent: 0,
                duration: .6,
                delay: index * .1,
                ease: (0, _gsap.Power2).easeInOut
            }, "anim");
        }
        this.inTimeline.play();
    }
    stop() {
        this.isVisible = false;
    }
    initEvents() {
        window.addEventListener("resize", ()=>{
            this.SplitTypeInstance.split();
            this.isVisible;
        });
    }
    removeEvents() {}
};

},{"split-type":"3ncel","gsap":"gS77a","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"fvLmn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _gsap = require("gsap");
var _swiper = require("swiper");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
exports.default = class {
    constructor(element){
        this.el = element;
        this.swiper = new (0, _swiper.Swiper)(this.el, {
            // Optional parameters
            loop: false,
            speed: 640,
            touchRatio: .8,
            slidesPerView: "auto",
            allowTouchMove: true
        });
        this.isMov = false;
        this.move = {
            current: 0,
            target: 0,
            ease: 1,
            first: 0
        };
        this.speed = {
            x: 0
        };
        this.update = this.update.bind(this);
        this.initEvents();
    }
    start() {
        this.isVisible = true;
    }
    stop() {
        this.isVisible = false;
    }
    initEvents() {
        // //  console.log('asasa')
        // this.swiper.on('drag',()=>{
        // //  console.log('a')
        //   document.documentElement.classList.add('mouse-down')
        // })
        // this.swiper.on('dragEnd',()=>{
        //   document.documentElement.classList.remove('mouse-down')
        // })
        document.documentElement.style.setProperty("--app-speed", "0deg");
        this.swiper.on("touchStart", (sw, ev)=>{
            document.documentElement.classList.add("mouse-down");
            sw.el.classList.add("swiper-drag");
            this.isMov = true;
            this.move.first = this.swiper.progress;
            this.update();
        });
        // this.swiper.on('progress',(sw)=>{
        // 	// //  console.log(sw.progress)
        // })
        this.swiper.on("touchEnd", (sw, ev)=>{
            document.documentElement.classList.remove("mouse-down");
            sw.el.classList.remove("swiper-drag");
            this.isMov = false;
            (0, _gsap.gsap).to(this.speed, {
                x: 0,
                ease: (0, _gsap.Power2).easeInOut,
                onUpdate: ()=>{
                    document.documentElement.style.setProperty("--app-speed", this.speed.x + "deg");
                }
            });
            window.cancelAnimationFrame(this.request);
        });
    }
    removeEvents() {}
    update() {
        this.move.target = this.swiper.progress;
        this.move.current = (0, _mathJs.lerp)(this.move.current, this.move.target, 0.8);
        this.speed.x = (this.move.first - this.move.current) * -80;
        this.speed.x = (0, _mathJs.clamp)(-25, 25, this.speed.x);
        document.documentElement.style.setProperty("--app-speed", this.speed.x + "deg");
        this.request = requestAnimationFrame(this.update);
    }
};

},{"gsap":"gS77a","swiper":"3ktAm","/src/js🧠🧠🧠/basic/math.js":"bABGj","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"3ktAm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Swiper 8.4.7
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 * https://swiperjs.com
 *
 * Copyright 2014-2023 Vladimir Kharlampidi
 *
 * Released under the MIT License
 *
 * Released on: January 30, 2023
 */ parcelHelpers.export(exports, "Swiper", ()=>(0, _coreJsDefault.default));
parcelHelpers.export(exports, "default", ()=>(0, _coreJsDefault.default));
parcelHelpers.export(exports, "Virtual", ()=>(0, _virtualJsDefault.default));
parcelHelpers.export(exports, "Keyboard", ()=>(0, _keyboardJsDefault.default));
parcelHelpers.export(exports, "Mousewheel", ()=>(0, _mousewheelJsDefault.default));
parcelHelpers.export(exports, "Navigation", ()=>(0, _navigationJsDefault.default));
parcelHelpers.export(exports, "Pagination", ()=>(0, _paginationJsDefault.default));
parcelHelpers.export(exports, "Scrollbar", ()=>(0, _scrollbarJsDefault.default));
parcelHelpers.export(exports, "Parallax", ()=>(0, _parallaxJsDefault.default));
parcelHelpers.export(exports, "Zoom", ()=>(0, _zoomJsDefault.default));
parcelHelpers.export(exports, "Lazy", ()=>(0, _lazyJsDefault.default));
parcelHelpers.export(exports, "Controller", ()=>(0, _controllerJsDefault.default));
parcelHelpers.export(exports, "A11y", ()=>(0, _a11YJsDefault.default));
parcelHelpers.export(exports, "History", ()=>(0, _historyJsDefault.default));
parcelHelpers.export(exports, "HashNavigation", ()=>(0, _hashNavigationJsDefault.default));
parcelHelpers.export(exports, "Autoplay", ()=>(0, _autoplayJsDefault.default));
parcelHelpers.export(exports, "Thumbs", ()=>(0, _thumbsJsDefault.default));
parcelHelpers.export(exports, "FreeMode", ()=>(0, _freeModeJsDefault.default));
parcelHelpers.export(exports, "Grid", ()=>(0, _gridJsDefault.default));
parcelHelpers.export(exports, "Manipulation", ()=>(0, _manipulationJsDefault.default));
parcelHelpers.export(exports, "EffectFade", ()=>(0, _effectFadeJsDefault.default));
parcelHelpers.export(exports, "EffectCube", ()=>(0, _effectCubeJsDefault.default));
parcelHelpers.export(exports, "EffectFlip", ()=>(0, _effectFlipJsDefault.default));
parcelHelpers.export(exports, "EffectCoverflow", ()=>(0, _effectCoverflowJsDefault.default));
parcelHelpers.export(exports, "EffectCreative", ()=>(0, _effectCreativeJsDefault.default));
parcelHelpers.export(exports, "EffectCards", ()=>(0, _effectCardsJsDefault.default));
var _coreJs = require("./core/core.js");
var _coreJsDefault = parcelHelpers.interopDefault(_coreJs);
var _virtualJs = require("./modules/virtual/virtual.js");
var _virtualJsDefault = parcelHelpers.interopDefault(_virtualJs);
var _keyboardJs = require("./modules/keyboard/keyboard.js");
var _keyboardJsDefault = parcelHelpers.interopDefault(_keyboardJs);
var _mousewheelJs = require("./modules/mousewheel/mousewheel.js");
var _mousewheelJsDefault = parcelHelpers.interopDefault(_mousewheelJs);
var _navigationJs = require("./modules/navigation/navigation.js");
var _navigationJsDefault = parcelHelpers.interopDefault(_navigationJs);
var _paginationJs = require("./modules/pagination/pagination.js");
var _paginationJsDefault = parcelHelpers.interopDefault(_paginationJs);
var _scrollbarJs = require("./modules/scrollbar/scrollbar.js");
var _scrollbarJsDefault = parcelHelpers.interopDefault(_scrollbarJs);
var _parallaxJs = require("./modules/parallax/parallax.js");
var _parallaxJsDefault = parcelHelpers.interopDefault(_parallaxJs);
var _zoomJs = require("./modules/zoom/zoom.js");
var _zoomJsDefault = parcelHelpers.interopDefault(_zoomJs);
var _lazyJs = require("./modules/lazy/lazy.js");
var _lazyJsDefault = parcelHelpers.interopDefault(_lazyJs);
var _controllerJs = require("./modules/controller/controller.js");
var _controllerJsDefault = parcelHelpers.interopDefault(_controllerJs);
var _a11YJs = require("./modules/a11y/a11y.js");
var _a11YJsDefault = parcelHelpers.interopDefault(_a11YJs);
var _historyJs = require("./modules/history/history.js");
var _historyJsDefault = parcelHelpers.interopDefault(_historyJs);
var _hashNavigationJs = require("./modules/hash-navigation/hash-navigation.js");
var _hashNavigationJsDefault = parcelHelpers.interopDefault(_hashNavigationJs);
var _autoplayJs = require("./modules/autoplay/autoplay.js");
var _autoplayJsDefault = parcelHelpers.interopDefault(_autoplayJs);
var _thumbsJs = require("./modules/thumbs/thumbs.js");
var _thumbsJsDefault = parcelHelpers.interopDefault(_thumbsJs);
var _freeModeJs = require("./modules/free-mode/free-mode.js");
var _freeModeJsDefault = parcelHelpers.interopDefault(_freeModeJs);
var _gridJs = require("./modules/grid/grid.js");
var _gridJsDefault = parcelHelpers.interopDefault(_gridJs);
var _manipulationJs = require("./modules/manipulation/manipulation.js");
var _manipulationJsDefault = parcelHelpers.interopDefault(_manipulationJs);
var _effectFadeJs = require("./modules/effect-fade/effect-fade.js");
var _effectFadeJsDefault = parcelHelpers.interopDefault(_effectFadeJs);
var _effectCubeJs = require("./modules/effect-cube/effect-cube.js");
var _effectCubeJsDefault = parcelHelpers.interopDefault(_effectCubeJs);
var _effectFlipJs = require("./modules/effect-flip/effect-flip.js");
var _effectFlipJsDefault = parcelHelpers.interopDefault(_effectFlipJs);
var _effectCoverflowJs = require("./modules/effect-coverflow/effect-coverflow.js");
var _effectCoverflowJsDefault = parcelHelpers.interopDefault(_effectCoverflowJs);
var _effectCreativeJs = require("./modules/effect-creative/effect-creative.js");
var _effectCreativeJsDefault = parcelHelpers.interopDefault(_effectCreativeJs);
var _effectCardsJs = require("./modules/effect-cards/effect-cards.js");
var _effectCardsJsDefault = parcelHelpers.interopDefault(_effectCardsJs);

},{"./core/core.js":"dxQSC","./modules/virtual/virtual.js":"6u53y","./modules/keyboard/keyboard.js":"7AjEs","./modules/mousewheel/mousewheel.js":"j4uiT","./modules/navigation/navigation.js":"dRmpf","./modules/pagination/pagination.js":"9Tgv2","./modules/scrollbar/scrollbar.js":"4DkLc","./modules/parallax/parallax.js":"5K6oK","./modules/zoom/zoom.js":"jZiSp","./modules/lazy/lazy.js":"4efs7","./modules/controller/controller.js":"5ctoV","./modules/a11y/a11y.js":"2SnLS","./modules/history/history.js":"8fpEM","./modules/hash-navigation/hash-navigation.js":"h6maS","./modules/autoplay/autoplay.js":"75AFh","./modules/thumbs/thumbs.js":"k6hjz","./modules/free-mode/free-mode.js":"ip0Dy","./modules/grid/grid.js":"dOf1v","./modules/manipulation/manipulation.js":"7BHUV","./modules/effect-fade/effect-fade.js":"7shH7","./modules/effect-cube/effect-cube.js":"itohZ","./modules/effect-flip/effect-flip.js":"dlwe1","./modules/effect-coverflow/effect-coverflow.js":"lrjJG","./modules/effect-creative/effect-creative.js":"67vWL","./modules/effect-cards/effect-cards.js":"cs8o6","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"dxQSC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/* eslint no-param-reassign: "off" */ var _ssrWindow = require("ssr-window");
var _domJs = require("../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
var _utilsJs = require("../shared/utils.js");
var _getSupportJs = require("../shared/get-support.js");
var _getDeviceJs = require("../shared/get-device.js");
var _getBrowserJs = require("../shared/get-browser.js");
var _resizeJs = require("./modules/resize/resize.js");
var _resizeJsDefault = parcelHelpers.interopDefault(_resizeJs);
var _observerJs = require("./modules/observer/observer.js");
var _observerJsDefault = parcelHelpers.interopDefault(_observerJs);
var _eventsEmitterJs = require("./events-emitter.js");
var _eventsEmitterJsDefault = parcelHelpers.interopDefault(_eventsEmitterJs);
var _indexJs = require("./update/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("./translate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("./transition/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("./slide/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("./loop/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
var _indexJs5 = require("./grab-cursor/index.js");
var _indexJsDefault5 = parcelHelpers.interopDefault(_indexJs5);
var _indexJs6 = require("./events/index.js");
var _indexJsDefault6 = parcelHelpers.interopDefault(_indexJs6);
var _indexJs7 = require("./breakpoints/index.js");
var _indexJsDefault7 = parcelHelpers.interopDefault(_indexJs7);
var _indexJs8 = require("./classes/index.js");
var _indexJsDefault8 = parcelHelpers.interopDefault(_indexJs8);
var _indexJs9 = require("./images/index.js");
var _indexJsDefault9 = parcelHelpers.interopDefault(_indexJs9);
var _indexJs10 = require("./check-overflow/index.js");
var _indexJsDefault10 = parcelHelpers.interopDefault(_indexJs10);
var _defaultsJs = require("./defaults.js");
var _defaultsJsDefault = parcelHelpers.interopDefault(_defaultsJs);
var _moduleExtendParamsJs = require("./moduleExtendParams.js");
var _moduleExtendParamsJsDefault = parcelHelpers.interopDefault(_moduleExtendParamsJs);
const prototypes = {
    eventsEmitter: (0, _eventsEmitterJsDefault.default),
    update: (0, _indexJsDefault.default),
    translate: (0, _indexJsDefault1.default),
    transition: (0, _indexJsDefault2.default),
    slide: (0, _indexJsDefault3.default),
    loop: (0, _indexJsDefault4.default),
    grabCursor: (0, _indexJsDefault5.default),
    events: (0, _indexJsDefault6.default),
    breakpoints: (0, _indexJsDefault7.default),
    checkOverflow: (0, _indexJsDefault10.default),
    classes: (0, _indexJsDefault8.default),
    images: (0, _indexJsDefault9.default)
};
const extendedDefaults = {};
class Swiper {
    constructor(...args){
        let el;
        let params;
        if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === "Object") params = args[0];
        else [el, params] = args;
        if (!params) params = {};
        params = (0, _utilsJs.extend)({}, params);
        if (el && !params.el) params.el = el;
        if (params.el && (0, _domJsDefault.default)(params.el).length > 1) {
            const swipers = [];
            (0, _domJsDefault.default)(params.el).each((containerEl)=>{
                const newParams = (0, _utilsJs.extend)({}, params, {
                    el: containerEl
                });
                swipers.push(new Swiper(newParams));
            }); // eslint-disable-next-line no-constructor-return
            return swipers;
        } // Swiper Instance
        const swiper = this;
        swiper.__swiper__ = true;
        swiper.support = (0, _getSupportJs.getSupport)();
        swiper.device = (0, _getDeviceJs.getDevice)({
            userAgent: params.userAgent
        });
        swiper.browser = (0, _getBrowserJs.getBrowser)();
        swiper.eventsListeners = {};
        swiper.eventsAnyListeners = [];
        swiper.modules = [
            ...swiper.__modules__
        ];
        if (params.modules && Array.isArray(params.modules)) swiper.modules.push(...params.modules);
        const allModulesParams = {};
        swiper.modules.forEach((mod)=>{
            mod({
                swiper,
                extendParams: (0, _moduleExtendParamsJsDefault.default)(params, allModulesParams),
                on: swiper.on.bind(swiper),
                once: swiper.once.bind(swiper),
                off: swiper.off.bind(swiper),
                emit: swiper.emit.bind(swiper)
            });
        }); // Extend defaults with modules params
        const swiperParams = (0, _utilsJs.extend)({}, (0, _defaultsJsDefault.default), allModulesParams); // Extend defaults with passed params
        swiper.params = (0, _utilsJs.extend)({}, swiperParams, extendedDefaults, params);
        swiper.originalParams = (0, _utilsJs.extend)({}, swiper.params);
        swiper.passedParams = (0, _utilsJs.extend)({}, params); // add event listeners
        if (swiper.params && swiper.params.on) Object.keys(swiper.params.on).forEach((eventName)=>{
            swiper.on(eventName, swiper.params.on[eventName]);
        });
        if (swiper.params && swiper.params.onAny) swiper.onAny(swiper.params.onAny);
         // Save Dom lib
        swiper.$ = (0, _domJsDefault.default); // Extend Swiper
        Object.assign(swiper, {
            enabled: swiper.params.enabled,
            el,
            // Classes
            classNames: [],
            // Slides
            slides: (0, _domJsDefault.default)(),
            slidesGrid: [],
            snapGrid: [],
            slidesSizesGrid: [],
            // isDirection
            isHorizontal () {
                return swiper.params.direction === "horizontal";
            },
            isVertical () {
                return swiper.params.direction === "vertical";
            },
            // Indexes
            activeIndex: 0,
            realIndex: 0,
            //
            isBeginning: true,
            isEnd: false,
            // Props
            translate: 0,
            previousTranslate: 0,
            progress: 0,
            velocity: 0,
            animating: false,
            // Locks
            allowSlideNext: swiper.params.allowSlideNext,
            allowSlidePrev: swiper.params.allowSlidePrev,
            // Touch Events
            touchEvents: function touchEvents() {
                const touch = [
                    "touchstart",
                    "touchmove",
                    "touchend",
                    "touchcancel"
                ];
                const desktop = [
                    "pointerdown",
                    "pointermove",
                    "pointerup"
                ];
                swiper.touchEventsTouch = {
                    start: touch[0],
                    move: touch[1],
                    end: touch[2],
                    cancel: touch[3]
                };
                swiper.touchEventsDesktop = {
                    start: desktop[0],
                    move: desktop[1],
                    end: desktop[2]
                };
                return swiper.support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;
            }(),
            touchEventsData: {
                isTouched: undefined,
                isMoved: undefined,
                allowTouchCallbacks: undefined,
                touchStartTime: undefined,
                isScrolling: undefined,
                currentTranslate: undefined,
                startTranslate: undefined,
                allowThresholdMove: undefined,
                // Form elements to match
                focusableElements: swiper.params.focusableElements,
                // Last click time
                lastClickTime: (0, _utilsJs.now)(),
                clickTimeout: undefined,
                // Velocities
                velocities: [],
                allowMomentumBounce: undefined,
                isTouchEvent: undefined,
                startMoving: undefined
            },
            // Clicks
            allowClick: true,
            // Touches
            allowTouchMove: swiper.params.allowTouchMove,
            touches: {
                startX: 0,
                startY: 0,
                currentX: 0,
                currentY: 0,
                diff: 0
            },
            // Images
            imagesToLoad: [],
            imagesLoaded: 0
        });
        swiper.emit("_swiper"); // Init
        if (swiper.params.init) swiper.init();
         // Return app instance
        // eslint-disable-next-line no-constructor-return
        return swiper;
    }
    enable() {
        const swiper = this;
        if (swiper.enabled) return;
        swiper.enabled = true;
        if (swiper.params.grabCursor) swiper.setGrabCursor();
        swiper.emit("enable");
    }
    disable() {
        const swiper = this;
        if (!swiper.enabled) return;
        swiper.enabled = false;
        if (swiper.params.grabCursor) swiper.unsetGrabCursor();
        swiper.emit("disable");
    }
    setProgress(progress, speed) {
        const swiper = this;
        progress = Math.min(Math.max(progress, 0), 1);
        const min = swiper.minTranslate();
        const max = swiper.maxTranslate();
        const current = (max - min) * progress + min;
        swiper.translateTo(current, typeof speed === "undefined" ? 0 : speed);
        swiper.updateActiveIndex();
        swiper.updateSlidesClasses();
    }
    emitContainerClasses() {
        const swiper = this;
        if (!swiper.params._emitClasses || !swiper.el) return;
        const cls = swiper.el.className.split(" ").filter((className)=>{
            return className.indexOf("swiper") === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;
        });
        swiper.emit("_containerClasses", cls.join(" "));
    }
    getSlideClasses(slideEl) {
        const swiper = this;
        if (swiper.destroyed) return "";
        return slideEl.className.split(" ").filter((className)=>{
            return className.indexOf("swiper-slide") === 0 || className.indexOf(swiper.params.slideClass) === 0;
        }).join(" ");
    }
    emitSlidesClasses() {
        const swiper = this;
        if (!swiper.params._emitClasses || !swiper.el) return;
        const updates = [];
        swiper.slides.each((slideEl)=>{
            const classNames = swiper.getSlideClasses(slideEl);
            updates.push({
                slideEl,
                classNames
            });
            swiper.emit("_slideClass", slideEl, classNames);
        });
        swiper.emit("_slideClasses", updates);
    }
    slidesPerViewDynamic(view = "current", exact = false) {
        const swiper = this;
        const { params , slides , slidesGrid , slidesSizesGrid , size: swiperSize , activeIndex  } = swiper;
        let spv = 1;
        if (params.centeredSlides) {
            let slideSize = slides[activeIndex].swiperSlideSize;
            let breakLoop;
            for(let i = activeIndex + 1; i < slides.length; i += 1)if (slides[i] && !breakLoop) {
                slideSize += slides[i].swiperSlideSize;
                spv += 1;
                if (slideSize > swiperSize) breakLoop = true;
            }
            for(let i1 = activeIndex - 1; i1 >= 0; i1 -= 1)if (slides[i1] && !breakLoop) {
                slideSize += slides[i1].swiperSlideSize;
                spv += 1;
                if (slideSize > swiperSize) breakLoop = true;
            }
        } else {
            // eslint-disable-next-line
            if (view === "current") for(let i2 = activeIndex + 1; i2 < slides.length; i2 += 1){
                const slideInView = exact ? slidesGrid[i2] + slidesSizesGrid[i2] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i2] - slidesGrid[activeIndex] < swiperSize;
                if (slideInView) spv += 1;
            }
            else // previous
            for(let i3 = activeIndex - 1; i3 >= 0; i3 -= 1){
                const slideInView1 = slidesGrid[activeIndex] - slidesGrid[i3] < swiperSize;
                if (slideInView1) spv += 1;
            }
        }
        return spv;
    }
    update() {
        const swiper = this;
        if (!swiper || swiper.destroyed) return;
        const { snapGrid , params  } = swiper; // Breakpoints
        if (params.breakpoints) swiper.setBreakpoint();
        swiper.updateSize();
        swiper.updateSlides();
        swiper.updateProgress();
        swiper.updateSlidesClasses();
        function setTranslate() {
            const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;
            const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());
            swiper.setTranslate(newTranslate);
            swiper.updateActiveIndex();
            swiper.updateSlidesClasses();
        }
        let translated;
        if (swiper.params.freeMode && swiper.params.freeMode.enabled) {
            setTranslate();
            if (swiper.params.autoHeight) swiper.updateAutoHeight();
        } else {
            if ((swiper.params.slidesPerView === "auto" || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);
            else translated = swiper.slideTo(swiper.activeIndex, 0, false, true);
            if (!translated) setTranslate();
        }
        if (params.watchOverflow && snapGrid !== swiper.snapGrid) swiper.checkOverflow();
        swiper.emit("update");
    }
    changeDirection(newDirection, needUpdate = true) {
        const swiper = this;
        const currentDirection = swiper.params.direction;
        if (!newDirection) // eslint-disable-next-line
        newDirection = currentDirection === "horizontal" ? "vertical" : "horizontal";
        if (newDirection === currentDirection || newDirection !== "horizontal" && newDirection !== "vertical") return swiper;
        swiper.$el.removeClass(`${swiper.params.containerModifierClass}${currentDirection}`).addClass(`${swiper.params.containerModifierClass}${newDirection}`);
        swiper.emitContainerClasses();
        swiper.params.direction = newDirection;
        swiper.slides.each((slideEl)=>{
            if (newDirection === "vertical") slideEl.style.width = "";
            else slideEl.style.height = "";
        });
        swiper.emit("changeDirection");
        if (needUpdate) swiper.update();
        return swiper;
    }
    changeLanguageDirection(direction) {
        const swiper = this;
        if (swiper.rtl && direction === "rtl" || !swiper.rtl && direction === "ltr") return;
        swiper.rtl = direction === "rtl";
        swiper.rtlTranslate = swiper.params.direction === "horizontal" && swiper.rtl;
        if (swiper.rtl) {
            swiper.$el.addClass(`${swiper.params.containerModifierClass}rtl`);
            swiper.el.dir = "rtl";
        } else {
            swiper.$el.removeClass(`${swiper.params.containerModifierClass}rtl`);
            swiper.el.dir = "ltr";
        }
        swiper.update();
    }
    mount(el) {
        const swiper = this;
        if (swiper.mounted) return true; // Find el
        const $el = (0, _domJsDefault.default)(el || swiper.params.el);
        el = $el[0];
        if (!el) return false;
        el.swiper = swiper;
        const getWrapperSelector = ()=>{
            return `.${(swiper.params.wrapperClass || "").trim().split(" ").join(".")}`;
        };
        const getWrapper = ()=>{
            if (el && el.shadowRoot && el.shadowRoot.querySelector) {
                const res = (0, _domJsDefault.default)(el.shadowRoot.querySelector(getWrapperSelector())); // Children needs to return slot items
                res.children = (options)=>$el.children(options);
                return res;
            }
            if (!$el.children) return (0, _domJsDefault.default)($el).children(getWrapperSelector());
            return $el.children(getWrapperSelector());
        }; // Find Wrapper
        let $wrapperEl = getWrapper();
        if ($wrapperEl.length === 0 && swiper.params.createElements) {
            const document = (0, _ssrWindow.getDocument)();
            const wrapper = document.createElement("div");
            $wrapperEl = (0, _domJsDefault.default)(wrapper);
            wrapper.className = swiper.params.wrapperClass;
            $el.append(wrapper);
            $el.children(`.${swiper.params.slideClass}`).each((slideEl)=>{
                $wrapperEl.append(slideEl);
            });
        }
        Object.assign(swiper, {
            $el,
            el,
            $wrapperEl,
            wrapperEl: $wrapperEl[0],
            mounted: true,
            // RTL
            rtl: el.dir.toLowerCase() === "rtl" || $el.css("direction") === "rtl",
            rtlTranslate: swiper.params.direction === "horizontal" && (el.dir.toLowerCase() === "rtl" || $el.css("direction") === "rtl"),
            wrongRTL: $wrapperEl.css("display") === "-webkit-box"
        });
        return true;
    }
    init(el) {
        const swiper = this;
        if (swiper.initialized) return swiper;
        const mounted = swiper.mount(el);
        if (mounted === false) return swiper;
        swiper.emit("beforeInit"); // Set breakpoint
        if (swiper.params.breakpoints) swiper.setBreakpoint();
         // Add Classes
        swiper.addClasses(); // Create loop
        if (swiper.params.loop) swiper.loopCreate();
         // Update size
        swiper.updateSize(); // Update slides
        swiper.updateSlides();
        if (swiper.params.watchOverflow) swiper.checkOverflow();
         // Set Grab Cursor
        if (swiper.params.grabCursor && swiper.enabled) swiper.setGrabCursor();
        if (swiper.params.preloadImages) swiper.preloadImages();
         // Slide To Initial Slide
        if (swiper.params.loop) swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit, false, true);
        else swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);
         // Attach events
        swiper.attachEvents(); // Init Flag
        swiper.initialized = true; // Emit
        swiper.emit("init");
        swiper.emit("afterInit");
        return swiper;
    }
    destroy(deleteInstance = true, cleanStyles = true) {
        const swiper = this;
        const { params , $el , $wrapperEl , slides  } = swiper;
        if (typeof swiper.params === "undefined" || swiper.destroyed) return null;
        swiper.emit("beforeDestroy"); // Init Flag
        swiper.initialized = false; // Detach events
        swiper.detachEvents(); // Destroy loop
        if (params.loop) swiper.loopDestroy();
         // Cleanup styles
        if (cleanStyles) {
            swiper.removeClasses();
            $el.removeAttr("style");
            $wrapperEl.removeAttr("style");
            if (slides && slides.length) slides.removeClass([
                params.slideVisibleClass,
                params.slideActiveClass,
                params.slideNextClass,
                params.slidePrevClass
            ].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index");
        }
        swiper.emit("destroy"); // Detach emitter events
        Object.keys(swiper.eventsListeners).forEach((eventName)=>{
            swiper.off(eventName);
        });
        if (deleteInstance !== false) {
            swiper.$el[0].swiper = null;
            (0, _utilsJs.deleteProps)(swiper);
        }
        swiper.destroyed = true;
        return null;
    }
    static extendDefaults(newDefaults) {
        (0, _utilsJs.extend)(extendedDefaults, newDefaults);
    }
    static get extendedDefaults() {
        return extendedDefaults;
    }
    static get defaults() {
        return 0, _defaultsJsDefault.default;
    }
    static installModule(mod) {
        if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];
        const modules = Swiper.prototype.__modules__;
        if (typeof mod === "function" && modules.indexOf(mod) < 0) modules.push(mod);
    }
    static use(module) {
        if (Array.isArray(module)) {
            module.forEach((m)=>Swiper.installModule(m));
            return Swiper;
        }
        Swiper.installModule(module);
        return Swiper;
    }
}
Object.keys(prototypes).forEach((prototypeGroup)=>{
    Object.keys(prototypes[prototypeGroup]).forEach((protoMethod)=>{
        Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];
    });
});
Swiper.use([
    (0, _resizeJsDefault.default),
    (0, _observerJsDefault.default)
]);
exports.default = Swiper;

},{"ssr-window":"d3jFK","../shared/dom.js":"fSctW","../shared/utils.js":"hr9mL","../shared/get-support.js":"hc4YA","../shared/get-device.js":"7D5UL","../shared/get-browser.js":"gGygP","./modules/resize/resize.js":"jmpPC","./modules/observer/observer.js":"gMwdx","./events-emitter.js":"hT26z","./update/index.js":"gRjYx","./translate/index.js":"hptMS","./transition/index.js":"aegTm","./slide/index.js":"a5vJi","./loop/index.js":"8FnLv","./grab-cursor/index.js":"jmzNi","./events/index.js":"7tVEy","./breakpoints/index.js":"4ystW","./classes/index.js":"cVRTi","./images/index.js":"dXTAC","./check-overflow/index.js":"iOuBv","./defaults.js":"hQOza","./moduleExtendParams.js":"2Uajx","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"d3jFK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "extend", ()=>extend);
parcelHelpers.export(exports, "getDocument", ()=>getDocument);
parcelHelpers.export(exports, "getWindow", ()=>getWindow);
parcelHelpers.export(exports, "ssrDocument", ()=>ssrDocument);
parcelHelpers.export(exports, "ssrWindow", ()=>ssrWindow);
/**
 * SSR Window 4.0.2
 * Better handling for window object in SSR environment
 * https://github.com/nolimits4web/ssr-window
 *
 * Copyright 2021, Vladimir Kharlampidi
 *
 * Licensed under MIT
 *
 * Released on: December 13, 2021
 */ /* eslint-disable no-param-reassign */ function isObject(obj) {
    return obj !== null && typeof obj === "object" && "constructor" in obj && obj.constructor === Object;
}
function extend(target = {}, src = {}) {
    Object.keys(src).forEach((key)=>{
        if (typeof target[key] === "undefined") target[key] = src[key];
        else if (isObject(src[key]) && isObject(target[key]) && Object.keys(src[key]).length > 0) extend(target[key], src[key]);
    });
}
const ssrDocument = {
    body: {},
    addEventListener () {},
    removeEventListener () {},
    activeElement: {
        blur () {},
        nodeName: ""
    },
    querySelector () {
        return null;
    },
    querySelectorAll () {
        return [];
    },
    getElementById () {
        return null;
    },
    createEvent () {
        return {
            initEvent () {}
        };
    },
    createElement () {
        return {
            children: [],
            childNodes: [],
            style: {},
            setAttribute () {},
            getElementsByTagName () {
                return [];
            }
        };
    },
    createElementNS () {
        return {};
    },
    importNode () {
        return null;
    },
    location: {
        hash: "",
        host: "",
        hostname: "",
        href: "",
        origin: "",
        pathname: "",
        protocol: "",
        search: ""
    }
};
function getDocument() {
    const doc = typeof document !== "undefined" ? document : {};
    extend(doc, ssrDocument);
    return doc;
}
const ssrWindow = {
    document: ssrDocument,
    navigator: {
        userAgent: ""
    },
    location: {
        hash: "",
        host: "",
        hostname: "",
        href: "",
        origin: "",
        pathname: "",
        protocol: "",
        search: ""
    },
    history: {
        replaceState () {},
        pushState () {},
        go () {},
        back () {}
    },
    CustomEvent: function CustomEvent() {
        return this;
    },
    addEventListener () {},
    removeEventListener () {},
    getComputedStyle () {
        return {
            getPropertyValue () {
                return "";
            }
        };
    },
    Image () {},
    Date () {},
    screen: {},
    setTimeout () {},
    clearTimeout () {},
    matchMedia () {
        return {};
    },
    requestAnimationFrame (callback) {
        if (typeof setTimeout === "undefined") {
            callback();
            return null;
        }
        return setTimeout(callback, 0);
    },
    cancelAnimationFrame (id) {
        if (typeof setTimeout === "undefined") return;
        clearTimeout(id);
    }
};
function getWindow() {
    const win = typeof window !== "undefined" ? window : {};
    extend(win, ssrWindow);
    return win;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"fSctW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _dom7 = require("dom7");
const Methods = {
    addClass: (0, _dom7.addClass),
    removeClass: (0, _dom7.removeClass),
    hasClass: (0, _dom7.hasClass),
    toggleClass: (0, _dom7.toggleClass),
    attr: (0, _dom7.attr),
    removeAttr: (0, _dom7.removeAttr),
    transform: (0, _dom7.transform),
    transition: (0, _dom7.transition),
    on: (0, _dom7.on),
    off: (0, _dom7.off),
    trigger: (0, _dom7.trigger),
    transitionEnd: (0, _dom7.transitionEnd),
    outerWidth: (0, _dom7.outerWidth),
    outerHeight: (0, _dom7.outerHeight),
    styles: (0, _dom7.styles),
    offset: (0, _dom7.offset),
    css: (0, _dom7.css),
    each: (0, _dom7.each),
    html: (0, _dom7.html),
    text: (0, _dom7.text),
    is: (0, _dom7.is),
    index: (0, _dom7.index),
    eq: (0, _dom7.eq),
    append: (0, _dom7.append),
    prepend: (0, _dom7.prepend),
    next: (0, _dom7.next),
    nextAll: (0, _dom7.nextAll),
    prev: (0, _dom7.prev),
    prevAll: (0, _dom7.prevAll),
    parent: (0, _dom7.parent),
    parents: (0, _dom7.parents),
    closest: (0, _dom7.closest),
    find: (0, _dom7.find),
    children: (0, _dom7.children),
    filter: (0, _dom7.filter),
    remove: (0, _dom7.remove)
};
Object.keys(Methods).forEach((methodName)=>{
    Object.defineProperty((0, _dom7.$).fn, methodName, {
        value: Methods[methodName],
        writable: true
    });
});
exports.default = (0, _dom7.$);

},{"dom7":"gSoAp","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"gSoAp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "$", ()=>$);
parcelHelpers.export(exports, "add", ()=>add);
parcelHelpers.export(exports, "addClass", ()=>addClass);
parcelHelpers.export(exports, "animate", ()=>animate);
parcelHelpers.export(exports, "animationEnd", ()=>animationEnd);
parcelHelpers.export(exports, "append", ()=>append);
parcelHelpers.export(exports, "appendTo", ()=>appendTo);
parcelHelpers.export(exports, "attr", ()=>attr);
parcelHelpers.export(exports, "blur", ()=>blur);
parcelHelpers.export(exports, "change", ()=>change);
parcelHelpers.export(exports, "children", ()=>children);
parcelHelpers.export(exports, "click", ()=>click);
parcelHelpers.export(exports, "closest", ()=>closest);
parcelHelpers.export(exports, "css", ()=>css);
parcelHelpers.export(exports, "data", ()=>data);
parcelHelpers.export(exports, "dataset", ()=>dataset);
parcelHelpers.export(exports, "detach", ()=>detach);
parcelHelpers.export(exports, "each", ()=>each);
parcelHelpers.export(exports, "empty", ()=>empty);
parcelHelpers.export(exports, "eq", ()=>eq);
parcelHelpers.export(exports, "filter", ()=>filter);
parcelHelpers.export(exports, "find", ()=>find);
parcelHelpers.export(exports, "focus", ()=>focus);
parcelHelpers.export(exports, "focusin", ()=>focusin);
parcelHelpers.export(exports, "focusout", ()=>focusout);
parcelHelpers.export(exports, "hasClass", ()=>hasClass);
parcelHelpers.export(exports, "height", ()=>height);
parcelHelpers.export(exports, "hide", ()=>hide);
parcelHelpers.export(exports, "html", ()=>html);
parcelHelpers.export(exports, "index", ()=>index);
parcelHelpers.export(exports, "insertAfter", ()=>insertAfter);
parcelHelpers.export(exports, "insertBefore", ()=>insertBefore);
parcelHelpers.export(exports, "is", ()=>is);
parcelHelpers.export(exports, "keydown", ()=>keydown);
parcelHelpers.export(exports, "keypress", ()=>keypress);
parcelHelpers.export(exports, "keyup", ()=>keyup);
parcelHelpers.export(exports, "mousedown", ()=>mousedown);
parcelHelpers.export(exports, "mouseenter", ()=>mouseenter);
parcelHelpers.export(exports, "mouseleave", ()=>mouseleave);
parcelHelpers.export(exports, "mousemove", ()=>mousemove);
parcelHelpers.export(exports, "mouseout", ()=>mouseout);
parcelHelpers.export(exports, "mouseover", ()=>mouseover);
parcelHelpers.export(exports, "mouseup", ()=>mouseup);
parcelHelpers.export(exports, "next", ()=>next);
parcelHelpers.export(exports, "nextAll", ()=>nextAll);
parcelHelpers.export(exports, "off", ()=>off);
parcelHelpers.export(exports, "offset", ()=>offset);
parcelHelpers.export(exports, "on", ()=>on);
parcelHelpers.export(exports, "once", ()=>once);
parcelHelpers.export(exports, "outerHeight", ()=>outerHeight);
parcelHelpers.export(exports, "outerWidth", ()=>outerWidth);
parcelHelpers.export(exports, "parent", ()=>parent);
parcelHelpers.export(exports, "parents", ()=>parents);
parcelHelpers.export(exports, "prepend", ()=>prepend);
parcelHelpers.export(exports, "prependTo", ()=>prependTo);
parcelHelpers.export(exports, "prev", ()=>prev);
parcelHelpers.export(exports, "prevAll", ()=>prevAll);
parcelHelpers.export(exports, "prop", ()=>prop);
parcelHelpers.export(exports, "remove", ()=>remove);
parcelHelpers.export(exports, "removeAttr", ()=>removeAttr);
parcelHelpers.export(exports, "removeClass", ()=>removeClass);
parcelHelpers.export(exports, "removeData", ()=>removeData);
parcelHelpers.export(exports, "resize", ()=>resize);
parcelHelpers.export(exports, "scroll", ()=>scroll);
parcelHelpers.export(exports, "scrollLeft", ()=>scrollLeft);
parcelHelpers.export(exports, "scrollTo", ()=>scrollTo);
parcelHelpers.export(exports, "scrollTop", ()=>scrollTop);
parcelHelpers.export(exports, "show", ()=>show);
parcelHelpers.export(exports, "siblings", ()=>siblings);
parcelHelpers.export(exports, "stop", ()=>stop);
parcelHelpers.export(exports, "styles", ()=>styles);
parcelHelpers.export(exports, "submit", ()=>submit);
parcelHelpers.export(exports, "text", ()=>text);
parcelHelpers.export(exports, "toggleClass", ()=>toggleClass);
parcelHelpers.export(exports, "touchend", ()=>touchend);
parcelHelpers.export(exports, "touchmove", ()=>touchmove);
parcelHelpers.export(exports, "touchstart", ()=>touchstart);
parcelHelpers.export(exports, "transform", ()=>transform);
parcelHelpers.export(exports, "transition", ()=>transition);
parcelHelpers.export(exports, "transitionEnd", ()=>transitionEnd);
parcelHelpers.export(exports, "transitionStart", ()=>transitionStart);
parcelHelpers.export(exports, "trigger", ()=>trigger);
parcelHelpers.export(exports, "val", ()=>val);
parcelHelpers.export(exports, "value", ()=>value);
parcelHelpers.export(exports, "width", ()=>width);
/**
 * Dom7 4.0.6
 * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API
 * https://framework7.io/docs/dom7.html
 *
 * Copyright 2023, Vladimir Kharlampidi
 *
 * Licensed under MIT
 *
 * Released on: February 2, 2023
 */ var _ssrWindow = require("ssr-window");
/* eslint-disable no-proto */ function makeReactive(obj) {
    const proto = obj.__proto__;
    Object.defineProperty(obj, "__proto__", {
        get () {
            return proto;
        },
        set (value) {
            proto.__proto__ = value;
        }
    });
}
class Dom7 extends Array {
    constructor(items){
        if (typeof items === "number") super(items);
        else {
            super(...items || []);
            makeReactive(this);
        }
    }
}
function arrayFlat(arr = []) {
    const res = [];
    arr.forEach((el)=>{
        if (Array.isArray(el)) res.push(...arrayFlat(el));
        else res.push(el);
    });
    return res;
}
function arrayFilter(arr, callback) {
    return Array.prototype.filter.call(arr, callback);
}
function arrayUnique(arr) {
    const uniqueArray = [];
    for(let i = 0; i < arr.length; i += 1)if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);
    return uniqueArray;
}
function toCamelCase(string) {
    return string.toLowerCase().replace(/-(.)/g, (match, group)=>group.toUpperCase());
}
// eslint-disable-next-line
function qsa(selector, context) {
    if (typeof selector !== "string") return [
        selector
    ];
    const a = [];
    const res = context.querySelectorAll(selector);
    for(let i = 0; i < res.length; i += 1)a.push(res[i]);
    return a;
}
function $(selector, context) {
    const window = (0, _ssrWindow.getWindow)();
    const document = (0, _ssrWindow.getDocument)();
    let arr = [];
    if (!context && selector instanceof Dom7) return selector;
    if (!selector) return new Dom7(arr);
    if (typeof selector === "string") {
        const html = selector.trim();
        if (html.indexOf("<") >= 0 && html.indexOf(">") >= 0) {
            let toCreate = "div";
            if (html.indexOf("<li") === 0) toCreate = "ul";
            if (html.indexOf("<tr") === 0) toCreate = "tbody";
            if (html.indexOf("<td") === 0 || html.indexOf("<th") === 0) toCreate = "tr";
            if (html.indexOf("<tbody") === 0) toCreate = "table";
            if (html.indexOf("<option") === 0) toCreate = "select";
            const tempParent = document.createElement(toCreate);
            tempParent.innerHTML = html;
            for(let i = 0; i < tempParent.childNodes.length; i += 1)arr.push(tempParent.childNodes[i]);
        } else arr = qsa(selector.trim(), context || document);
         // arr = qsa(selector, document);
    } else if (selector.nodeType || selector === window || selector === document) arr.push(selector);
    else if (Array.isArray(selector)) {
        if (selector instanceof Dom7) return selector;
        arr = selector;
    }
    return new Dom7(arrayUnique(arr));
}
$.fn = Dom7.prototype;
// eslint-disable-next-line
function addClass(...classes) {
    const classNames = arrayFlat(classes.map((c)=>c.split(" ")));
    this.forEach((el)=>{
        el.classList.add(...classNames);
    });
    return this;
}
function removeClass(...classes) {
    const classNames = arrayFlat(classes.map((c)=>c.split(" ")));
    this.forEach((el)=>{
        el.classList.remove(...classNames);
    });
    return this;
}
function toggleClass(...classes) {
    const classNames = arrayFlat(classes.map((c)=>c.split(" ")));
    this.forEach((el)=>{
        classNames.forEach((className)=>{
            el.classList.toggle(className);
        });
    });
}
function hasClass(...classes) {
    const classNames = arrayFlat(classes.map((c)=>c.split(" ")));
    return arrayFilter(this, (el)=>{
        return classNames.filter((className)=>el.classList.contains(className)).length > 0;
    }).length > 0;
}
function attr(attrs, value) {
    if (arguments.length === 1 && typeof attrs === "string") {
        // Get attr
        if (this[0]) return this[0].getAttribute(attrs);
        return undefined;
    } // Set attrs
    for(let i = 0; i < this.length; i += 1){
        if (arguments.length === 2) // String
        this[i].setAttribute(attrs, value);
        else // Object
        for(const attrName in attrs){
            this[i][attrName] = attrs[attrName];
            this[i].setAttribute(attrName, attrs[attrName]);
        }
    }
    return this;
}
function removeAttr(attr) {
    for(let i = 0; i < this.length; i += 1)this[i].removeAttribute(attr);
    return this;
}
function prop(props, value) {
    if (arguments.length === 1 && typeof props === "string") {
        // Get prop
        if (this[0]) return this[0][props];
    } else {
        // Set props
        for(let i = 0; i < this.length; i += 1){
            if (arguments.length === 2) // String
            this[i][props] = value;
            else // Object
            for(const propName in props)this[i][propName] = props[propName];
        }
        return this;
    }
    return this;
}
function data(key, value) {
    let el;
    if (typeof value === "undefined") {
        el = this[0];
        if (!el) return undefined; // Get value
        if (el.dom7ElementDataStorage && key in el.dom7ElementDataStorage) return el.dom7ElementDataStorage[key];
        const dataKey = el.getAttribute(`data-${key}`);
        if (dataKey) return dataKey;
        return undefined;
    } // Set value
    for(let i = 0; i < this.length; i += 1){
        el = this[i];
        if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};
        el.dom7ElementDataStorage[key] = value;
    }
    return this;
}
function removeData(key) {
    for(let i = 0; i < this.length; i += 1){
        const el = this[i];
        if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {
            el.dom7ElementDataStorage[key] = null;
            delete el.dom7ElementDataStorage[key];
        }
    }
}
function dataset() {
    const el = this[0];
    if (!el) return undefined;
    const dataset = {}; // eslint-disable-line
    if (el.dataset) for(const dataKey in el.dataset)dataset[dataKey] = el.dataset[dataKey];
    else for(let i = 0; i < el.attributes.length; i += 1){
        const attr = el.attributes[i];
        if (attr.name.indexOf("data-") >= 0) dataset[toCamelCase(attr.name.split("data-")[1])] = attr.value;
    }
    for(const key in dataset){
        if (dataset[key] === "false") dataset[key] = false;
        else if (dataset[key] === "true") dataset[key] = true;
        else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;
    }
    return dataset;
}
function val(value) {
    if (typeof value === "undefined") {
        // get value
        const el = this[0];
        if (!el) return undefined;
        if (el.multiple && el.nodeName.toLowerCase() === "select") {
            const values = [];
            for(let i = 0; i < el.selectedOptions.length; i += 1)values.push(el.selectedOptions[i].value);
            return values;
        }
        return el.value;
    } // set value
    for(let i1 = 0; i1 < this.length; i1 += 1){
        const el1 = this[i1];
        if (Array.isArray(value) && el1.multiple && el1.nodeName.toLowerCase() === "select") for(let j = 0; j < el1.options.length; j += 1)el1.options[j].selected = value.indexOf(el1.options[j].value) >= 0;
        else el1.value = value;
    }
    return this;
}
function value(value) {
    return this.val(value);
}
function transform(transform) {
    for(let i = 0; i < this.length; i += 1)this[i].style.transform = transform;
    return this;
}
function transition(duration) {
    for(let i = 0; i < this.length; i += 1)this[i].style.transitionDuration = typeof duration !== "string" ? `${duration}ms` : duration;
    return this;
}
function on(...args) {
    let [eventType, targetSelector, listener, capture] = args;
    if (typeof args[1] === "function") {
        [eventType, listener, capture] = args;
        targetSelector = undefined;
    }
    if (!capture) capture = false;
    function handleLiveEvent(e) {
        const target = e.target;
        if (!target) return;
        const eventData = e.target.dom7EventData || [];
        if (eventData.indexOf(e) < 0) eventData.unshift(e);
        if ($(target).is(targetSelector)) listener.apply(target, eventData);
        else {
            const parents = $(target).parents(); // eslint-disable-line
            for(let k = 0; k < parents.length; k += 1)if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);
        }
    }
    function handleEvent(e) {
        const eventData = e && e.target ? e.target.dom7EventData || [] : [];
        if (eventData.indexOf(e) < 0) eventData.unshift(e);
        listener.apply(this, eventData);
    }
    const events = eventType.split(" ");
    let j;
    for(let i = 0; i < this.length; i += 1){
        const el = this[i];
        if (!targetSelector) for(j = 0; j < events.length; j += 1){
            const event = events[j];
            if (!el.dom7Listeners) el.dom7Listeners = {};
            if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];
            el.dom7Listeners[event].push({
                listener,
                proxyListener: handleEvent
            });
            el.addEventListener(event, handleEvent, capture);
        }
        else // Live events
        for(j = 0; j < events.length; j += 1){
            const event1 = events[j];
            if (!el.dom7LiveListeners) el.dom7LiveListeners = {};
            if (!el.dom7LiveListeners[event1]) el.dom7LiveListeners[event1] = [];
            el.dom7LiveListeners[event1].push({
                listener,
                proxyListener: handleLiveEvent
            });
            el.addEventListener(event1, handleLiveEvent, capture);
        }
    }
    return this;
}
function off(...args) {
    let [eventType, targetSelector, listener, capture] = args;
    if (typeof args[1] === "function") {
        [eventType, listener, capture] = args;
        targetSelector = undefined;
    }
    if (!capture) capture = false;
    const events = eventType.split(" ");
    for(let i = 0; i < events.length; i += 1){
        const event = events[i];
        for(let j = 0; j < this.length; j += 1){
            const el = this[j];
            let handlers;
            if (!targetSelector && el.dom7Listeners) handlers = el.dom7Listeners[event];
            else if (targetSelector && el.dom7LiveListeners) handlers = el.dom7LiveListeners[event];
            if (handlers && handlers.length) for(let k = handlers.length - 1; k >= 0; k -= 1){
                const handler = handlers[k];
                if (listener && handler.listener === listener) {
                    el.removeEventListener(event, handler.proxyListener, capture);
                    handlers.splice(k, 1);
                } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {
                    el.removeEventListener(event, handler.proxyListener, capture);
                    handlers.splice(k, 1);
                } else if (!listener) {
                    el.removeEventListener(event, handler.proxyListener, capture);
                    handlers.splice(k, 1);
                }
            }
        }
    }
    return this;
}
function once(...args) {
    const dom = this;
    let [eventName, targetSelector, listener, capture] = args;
    if (typeof args[1] === "function") {
        [eventName, listener, capture] = args;
        targetSelector = undefined;
    }
    function onceHandler(...eventArgs) {
        listener.apply(this, eventArgs);
        dom.off(eventName, targetSelector, onceHandler, capture);
        if (onceHandler.dom7proxy) delete onceHandler.dom7proxy;
    }
    onceHandler.dom7proxy = listener;
    return dom.on(eventName, targetSelector, onceHandler, capture);
}
function trigger(...args) {
    const window = (0, _ssrWindow.getWindow)();
    const events = args[0].split(" ");
    const eventData = args[1];
    for(let i = 0; i < events.length; i += 1){
        const event = events[i];
        for(let j = 0; j < this.length; j += 1){
            const el = this[j];
            if (window.CustomEvent) {
                const evt = new window.CustomEvent(event, {
                    detail: eventData,
                    bubbles: true,
                    cancelable: true
                });
                el.dom7EventData = args.filter((data, dataIndex)=>dataIndex > 0);
                el.dispatchEvent(evt);
                el.dom7EventData = [];
                delete el.dom7EventData;
            }
        }
    }
    return this;
}
function transitionStart(callback) {
    const dom = this;
    function fireCallBack(e) {
        if (e.target !== this) return;
        callback.call(this, e);
        dom.off("transitionstart", fireCallBack);
    }
    if (callback) dom.on("transitionstart", fireCallBack);
    return this;
}
function transitionEnd(callback) {
    const dom = this;
    function fireCallBack(e) {
        if (e.target !== this) return;
        callback.call(this, e);
        dom.off("transitionend", fireCallBack);
    }
    if (callback) dom.on("transitionend", fireCallBack);
    return this;
}
function animationEnd(callback) {
    const dom = this;
    function fireCallBack(e) {
        if (e.target !== this) return;
        callback.call(this, e);
        dom.off("animationend", fireCallBack);
    }
    if (callback) dom.on("animationend", fireCallBack);
    return this;
}
function width() {
    const window = (0, _ssrWindow.getWindow)();
    if (this[0] === window) return window.innerWidth;
    if (this.length > 0) return parseFloat(this.css("width"));
    return null;
}
function outerWidth(includeMargins) {
    if (this.length > 0) {
        if (includeMargins) {
            const styles = this.styles();
            return this[0].offsetWidth + parseFloat(styles.getPropertyValue("margin-right")) + parseFloat(styles.getPropertyValue("margin-left"));
        }
        return this[0].offsetWidth;
    }
    return null;
}
function height() {
    const window = (0, _ssrWindow.getWindow)();
    if (this[0] === window) return window.innerHeight;
    if (this.length > 0) return parseFloat(this.css("height"));
    return null;
}
function outerHeight(includeMargins) {
    if (this.length > 0) {
        if (includeMargins) {
            const styles = this.styles();
            return this[0].offsetHeight + parseFloat(styles.getPropertyValue("margin-top")) + parseFloat(styles.getPropertyValue("margin-bottom"));
        }
        return this[0].offsetHeight;
    }
    return null;
}
function offset() {
    if (this.length > 0) {
        const window = (0, _ssrWindow.getWindow)();
        const document = (0, _ssrWindow.getDocument)();
        const el = this[0];
        const box = el.getBoundingClientRect();
        const body = document.body;
        const clientTop = el.clientTop || body.clientTop || 0;
        const clientLeft = el.clientLeft || body.clientLeft || 0;
        const scrollTop = el === window ? window.scrollY : el.scrollTop;
        const scrollLeft = el === window ? window.scrollX : el.scrollLeft;
        return {
            top: box.top + scrollTop - clientTop,
            left: box.left + scrollLeft - clientLeft
        };
    }
    return null;
}
function hide() {
    for(let i = 0; i < this.length; i += 1)this[i].style.display = "none";
    return this;
}
function show() {
    const window = (0, _ssrWindow.getWindow)();
    for(let i = 0; i < this.length; i += 1){
        const el = this[i];
        if (el.style.display === "none") el.style.display = "";
        if (window.getComputedStyle(el, null).getPropertyValue("display") === "none") // Still not visible
        el.style.display = "block";
    }
    return this;
}
function styles() {
    const window = (0, _ssrWindow.getWindow)();
    if (this[0]) return window.getComputedStyle(this[0], null);
    return {};
}
function css(props, value) {
    const window = (0, _ssrWindow.getWindow)();
    let i;
    if (arguments.length === 1) {
        if (typeof props === "string") {
            // .css('width')
            if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);
        } else {
            // .css({ width: '100px' })
            for(i = 0; i < this.length; i += 1)for(const prop in props)this[i].style[prop] = props[prop];
            return this;
        }
    }
    if (arguments.length === 2 && typeof props === "string") {
        // .css('width', '100px')
        for(i = 0; i < this.length; i += 1)this[i].style[props] = value;
        return this;
    }
    return this;
}
function each(callback) {
    if (!callback) return this;
    this.forEach((el, index)=>{
        callback.apply(el, [
            el,
            index
        ]);
    });
    return this;
}
function filter(callback) {
    const result = arrayFilter(this, callback);
    return $(result);
}
function html(html) {
    if (typeof html === "undefined") return this[0] ? this[0].innerHTML : null;
    for(let i = 0; i < this.length; i += 1)this[i].innerHTML = html;
    return this;
}
function text(text) {
    if (typeof text === "undefined") return this[0] ? this[0].textContent.trim() : null;
    for(let i = 0; i < this.length; i += 1)this[i].textContent = text;
    return this;
}
function is(selector) {
    const window = (0, _ssrWindow.getWindow)();
    const document = (0, _ssrWindow.getDocument)();
    const el = this[0];
    let compareWith;
    let i;
    if (!el || typeof selector === "undefined") return false;
    if (typeof selector === "string") {
        if (el.matches) return el.matches(selector);
        if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);
        if (el.msMatchesSelector) return el.msMatchesSelector(selector);
        compareWith = $(selector);
        for(i = 0; i < compareWith.length; i += 1){
            if (compareWith[i] === el) return true;
        }
        return false;
    }
    if (selector === document) return el === document;
    if (selector === window) return el === window;
    if (selector.nodeType || selector instanceof Dom7) {
        compareWith = selector.nodeType ? [
            selector
        ] : selector;
        for(i = 0; i < compareWith.length; i += 1){
            if (compareWith[i] === el) return true;
        }
        return false;
    }
    return false;
}
function index() {
    let child = this[0];
    let i;
    if (child) {
        i = 0; // eslint-disable-next-line
        while((child = child.previousSibling) !== null)if (child.nodeType === 1) i += 1;
        return i;
    }
    return undefined;
}
function eq(index) {
    if (typeof index === "undefined") return this;
    const length = this.length;
    if (index > length - 1) return $([]);
    if (index < 0) {
        const returnIndex = length + index;
        if (returnIndex < 0) return $([]);
        return $([
            this[returnIndex]
        ]);
    }
    return $([
        this[index]
    ]);
}
function append(...els) {
    let newChild;
    const document = (0, _ssrWindow.getDocument)();
    for(let k = 0; k < els.length; k += 1){
        newChild = els[k];
        for(let i = 0; i < this.length; i += 1){
            if (typeof newChild === "string") {
                const tempDiv = document.createElement("div");
                tempDiv.innerHTML = newChild;
                while(tempDiv.firstChild)this[i].appendChild(tempDiv.firstChild);
            } else if (newChild instanceof Dom7) for(let j = 0; j < newChild.length; j += 1)this[i].appendChild(newChild[j]);
            else this[i].appendChild(newChild);
        }
    }
    return this;
}
function appendTo(parent) {
    $(parent).append(this);
    return this;
}
function prepend(newChild) {
    const document = (0, _ssrWindow.getDocument)();
    let i;
    let j;
    for(i = 0; i < this.length; i += 1){
        if (typeof newChild === "string") {
            const tempDiv = document.createElement("div");
            tempDiv.innerHTML = newChild;
            for(j = tempDiv.childNodes.length - 1; j >= 0; j -= 1)this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);
        } else if (newChild instanceof Dom7) for(j = 0; j < newChild.length; j += 1)this[i].insertBefore(newChild[j], this[i].childNodes[0]);
        else this[i].insertBefore(newChild, this[i].childNodes[0]);
    }
    return this;
}
function prependTo(parent) {
    $(parent).prepend(this);
    return this;
}
function insertBefore(selector) {
    const before = $(selector);
    for(let i = 0; i < this.length; i += 1){
        if (before.length === 1) before[0].parentNode.insertBefore(this[i], before[0]);
        else if (before.length > 1) for(let j = 0; j < before.length; j += 1)before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);
    }
}
function insertAfter(selector) {
    const after = $(selector);
    for(let i = 0; i < this.length; i += 1){
        if (after.length === 1) after[0].parentNode.insertBefore(this[i], after[0].nextSibling);
        else if (after.length > 1) for(let j = 0; j < after.length; j += 1)after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);
    }
}
function next(selector) {
    if (this.length > 0) {
        if (selector) {
            if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) return $([
                this[0].nextElementSibling
            ]);
            return $([]);
        }
        if (this[0].nextElementSibling) return $([
            this[0].nextElementSibling
        ]);
        return $([]);
    }
    return $([]);
}
function nextAll(selector) {
    const nextEls = [];
    let el = this[0];
    if (!el) return $([]);
    while(el.nextElementSibling){
        const next = el.nextElementSibling; // eslint-disable-line
        if (selector) {
            if ($(next).is(selector)) nextEls.push(next);
        } else nextEls.push(next);
        el = next;
    }
    return $(nextEls);
}
function prev(selector) {
    if (this.length > 0) {
        const el = this[0];
        if (selector) {
            if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) return $([
                el.previousElementSibling
            ]);
            return $([]);
        }
        if (el.previousElementSibling) return $([
            el.previousElementSibling
        ]);
        return $([]);
    }
    return $([]);
}
function prevAll(selector) {
    const prevEls = [];
    let el = this[0];
    if (!el) return $([]);
    while(el.previousElementSibling){
        const prev = el.previousElementSibling; // eslint-disable-line
        if (selector) {
            if ($(prev).is(selector)) prevEls.push(prev);
        } else prevEls.push(prev);
        el = prev;
    }
    return $(prevEls);
}
function siblings(selector) {
    return this.nextAll(selector).add(this.prevAll(selector));
}
function parent(selector) {
    const parents = []; // eslint-disable-line
    for(let i = 0; i < this.length; i += 1)if (this[i].parentNode !== null) {
        if (selector) {
            if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);
        } else parents.push(this[i].parentNode);
    }
    return $(parents);
}
function parents(selector) {
    const parents = []; // eslint-disable-line
    for(let i = 0; i < this.length; i += 1){
        let parent = this[i].parentNode; // eslint-disable-line
        while(parent){
            if (selector) {
                if ($(parent).is(selector)) parents.push(parent);
            } else parents.push(parent);
            parent = parent.parentNode;
        }
    }
    return $(parents);
}
function closest(selector) {
    let closest = this; // eslint-disable-line
    if (typeof selector === "undefined") return $([]);
    if (!closest.is(selector)) closest = closest.parents(selector).eq(0);
    return closest;
}
function find(selector) {
    const foundElements = [];
    for(let i = 0; i < this.length; i += 1){
        const found = this[i].querySelectorAll(selector);
        for(let j = 0; j < found.length; j += 1)foundElements.push(found[j]);
    }
    return $(foundElements);
}
function children(selector) {
    const children = []; // eslint-disable-line
    for(let i = 0; i < this.length; i += 1){
        const childNodes = this[i].children;
        for(let j = 0; j < childNodes.length; j += 1)if (!selector || $(childNodes[j]).is(selector)) children.push(childNodes[j]);
    }
    return $(children);
}
function remove() {
    for(let i = 0; i < this.length; i += 1)if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);
    return this;
}
function detach() {
    return this.remove();
}
function add(...els) {
    const dom = this;
    let i;
    let j;
    for(i = 0; i < els.length; i += 1){
        const toAdd = $(els[i]);
        for(j = 0; j < toAdd.length; j += 1)dom.push(toAdd[j]);
    }
    return dom;
}
function empty() {
    for(let i = 0; i < this.length; i += 1){
        const el = this[i];
        if (el.nodeType === 1) {
            for(let j = 0; j < el.childNodes.length; j += 1)if (el.childNodes[j].parentNode) el.childNodes[j].parentNode.removeChild(el.childNodes[j]);
            el.textContent = "";
        }
    }
    return this;
}
// eslint-disable-next-line
function scrollTo(...args) {
    const window = (0, _ssrWindow.getWindow)();
    let [left, top, duration, easing, callback] = args;
    if (args.length === 4 && typeof easing === "function") {
        callback = easing;
        [left, top, duration, callback, easing] = args;
    }
    if (typeof easing === "undefined") easing = "swing";
    return this.each(function animate() {
        const el = this;
        let currentTop;
        let currentLeft;
        let maxTop;
        let maxLeft;
        let newTop;
        let newLeft;
        let scrollTop; // eslint-disable-line
        let scrollLeft; // eslint-disable-line
        let animateTop = top > 0 || top === 0;
        let animateLeft = left > 0 || left === 0;
        if (typeof easing === "undefined") easing = "swing";
        if (animateTop) {
            currentTop = el.scrollTop;
            if (!duration) el.scrollTop = top;
        }
        if (animateLeft) {
            currentLeft = el.scrollLeft;
            if (!duration) el.scrollLeft = left;
        }
        if (!duration) return;
        if (animateTop) {
            maxTop = el.scrollHeight - el.offsetHeight;
            newTop = Math.max(Math.min(top, maxTop), 0);
        }
        if (animateLeft) {
            maxLeft = el.scrollWidth - el.offsetWidth;
            newLeft = Math.max(Math.min(left, maxLeft), 0);
        }
        let startTime = null;
        if (animateTop && newTop === currentTop) animateTop = false;
        if (animateLeft && newLeft === currentLeft) animateLeft = false;
        function render(time = new Date().getTime()) {
            if (startTime === null) startTime = time;
            const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);
            const easeProgress = easing === "linear" ? progress : 0.5 - Math.cos(progress * Math.PI) / 2;
            let done;
            if (animateTop) scrollTop = currentTop + easeProgress * (newTop - currentTop);
            if (animateLeft) scrollLeft = currentLeft + easeProgress * (newLeft - currentLeft);
            if (animateTop && newTop > currentTop && scrollTop >= newTop) {
                el.scrollTop = newTop;
                done = true;
            }
            if (animateTop && newTop < currentTop && scrollTop <= newTop) {
                el.scrollTop = newTop;
                done = true;
            }
            if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {
                el.scrollLeft = newLeft;
                done = true;
            }
            if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {
                el.scrollLeft = newLeft;
                done = true;
            }
            if (done) {
                if (callback) callback();
                return;
            }
            if (animateTop) el.scrollTop = scrollTop;
            if (animateLeft) el.scrollLeft = scrollLeft;
            window.requestAnimationFrame(render);
        }
        window.requestAnimationFrame(render);
    });
} // scrollTop(top, duration, easing, callback) {
function scrollTop(...args) {
    let [top, duration, easing, callback] = args;
    if (args.length === 3 && typeof easing === "function") [top, duration, callback, easing] = args;
    const dom = this;
    if (typeof top === "undefined") {
        if (dom.length > 0) return dom[0].scrollTop;
        return null;
    }
    return dom.scrollTo(undefined, top, duration, easing, callback);
}
function scrollLeft(...args) {
    let [left, duration, easing, callback] = args;
    if (args.length === 3 && typeof easing === "function") [left, duration, callback, easing] = args;
    const dom = this;
    if (typeof left === "undefined") {
        if (dom.length > 0) return dom[0].scrollLeft;
        return null;
    }
    return dom.scrollTo(left, undefined, duration, easing, callback);
}
// eslint-disable-next-line
function animate(initialProps, initialParams) {
    const window = (0, _ssrWindow.getWindow)();
    const els = this;
    const a = {
        props: Object.assign({}, initialProps),
        params: Object.assign({
            duration: 300,
            easing: "swing" // or 'linear'
        }, initialParams),
        elements: els,
        animating: false,
        que: [],
        easingProgress (easing, progress) {
            if (easing === "swing") return 0.5 - Math.cos(progress * Math.PI) / 2;
            if (typeof easing === "function") return easing(progress);
            return progress;
        },
        stop () {
            if (a.frameId) window.cancelAnimationFrame(a.frameId);
            a.animating = false;
            a.elements.each((el)=>{
                const element = el;
                delete element.dom7AnimateInstance;
            });
            a.que = [];
        },
        done (complete) {
            a.animating = false;
            a.elements.each((el)=>{
                const element = el;
                delete element.dom7AnimateInstance;
            });
            if (complete) complete(els);
            if (a.que.length > 0) {
                const que = a.que.shift();
                a.animate(que[0], que[1]);
            }
        },
        animate (props, params) {
            if (a.animating) {
                a.que.push([
                    props,
                    params
                ]);
                return a;
            }
            const elements = []; // Define & Cache Initials & Units
            a.elements.each((el, index)=>{
                let initialFullValue;
                let initialValue;
                let unit;
                let finalValue;
                let finalFullValue;
                if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;
                elements[index] = {
                    container: el
                };
                Object.keys(props).forEach((prop)=>{
                    initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(",", ".");
                    initialValue = parseFloat(initialFullValue);
                    unit = initialFullValue.replace(initialValue, "");
                    finalValue = parseFloat(props[prop]);
                    finalFullValue = props[prop] + unit;
                    elements[index][prop] = {
                        initialFullValue,
                        initialValue,
                        unit,
                        finalValue,
                        finalFullValue,
                        currentValue: initialValue
                    };
                });
            });
            let startTime = null;
            let time;
            let elementsDone = 0;
            let propsDone = 0;
            let done;
            let began = false;
            a.animating = true;
            function render() {
                time = new Date().getTime();
                let progress;
                let easeProgress; // let el;
                if (!began) {
                    began = true;
                    if (params.begin) params.begin(els);
                }
                if (startTime === null) startTime = time;
                if (params.progress) // eslint-disable-next-line
                params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), startTime + params.duration - time < 0 ? 0 : startTime + params.duration - time, startTime);
                elements.forEach((element)=>{
                    const el = element;
                    if (done || el.done) return;
                    Object.keys(props).forEach((prop)=>{
                        if (done || el.done) return;
                        progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);
                        easeProgress = a.easingProgress(params.easing, progress);
                        const { initialValue , finalValue , unit  } = el[prop];
                        el[prop].currentValue = initialValue + easeProgress * (finalValue - initialValue);
                        const currentValue = el[prop].currentValue;
                        if (finalValue > initialValue && currentValue >= finalValue || finalValue < initialValue && currentValue <= finalValue) {
                            el.container.style[prop] = finalValue + unit;
                            propsDone += 1;
                            if (propsDone === Object.keys(props).length) {
                                el.done = true;
                                elementsDone += 1;
                            }
                            if (elementsDone === elements.length) done = true;
                        }
                        if (done) {
                            a.done(params.complete);
                            return;
                        }
                        el.container.style[prop] = currentValue + unit;
                    });
                });
                if (done) return; // Then call
                a.frameId = window.requestAnimationFrame(render);
            }
            a.frameId = window.requestAnimationFrame(render);
            return a;
        }
    };
    if (a.elements.length === 0) return els;
    let animateInstance;
    for(let i = 0; i < a.elements.length; i += 1)if (a.elements[i].dom7AnimateInstance) animateInstance = a.elements[i].dom7AnimateInstance;
    else a.elements[i].dom7AnimateInstance = a;
    if (!animateInstance) animateInstance = a;
    if (initialProps === "stop") animateInstance.stop();
    else animateInstance.animate(a.props, a.params);
    return els;
}
function stop() {
    const els = this;
    for(let i = 0; i < els.length; i += 1)if (els[i].dom7AnimateInstance) els[i].dom7AnimateInstance.stop();
}
const noTrigger = "resize scroll".split(" ");
function shortcut(name) {
    function eventHandler(...args) {
        if (typeof args[0] === "undefined") {
            for(let i = 0; i < this.length; i += 1)if (noTrigger.indexOf(name) < 0) {
                if (name in this[i]) this[i][name]();
                else $(this[i]).trigger(name);
            }
            return this;
        }
        return this.on(name, ...args);
    }
    return eventHandler;
}
const click = shortcut("click");
const blur = shortcut("blur");
const focus = shortcut("focus");
const focusin = shortcut("focusin");
const focusout = shortcut("focusout");
const keyup = shortcut("keyup");
const keydown = shortcut("keydown");
const keypress = shortcut("keypress");
const submit = shortcut("submit");
const change = shortcut("change");
const mousedown = shortcut("mousedown");
const mousemove = shortcut("mousemove");
const mouseup = shortcut("mouseup");
const mouseenter = shortcut("mouseenter");
const mouseleave = shortcut("mouseleave");
const mouseout = shortcut("mouseout");
const mouseover = shortcut("mouseover");
const touchstart = shortcut("touchstart");
const touchend = shortcut("touchend");
const touchmove = shortcut("touchmove");
const resize = shortcut("resize");
const scroll = shortcut("scroll");
exports.default = $;

},{"ssr-window":"d3jFK","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"hr9mL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "animateCSSModeScroll", ()=>animateCSSModeScroll);
parcelHelpers.export(exports, "deleteProps", ()=>deleteProps);
parcelHelpers.export(exports, "nextTick", ()=>nextTick);
parcelHelpers.export(exports, "now", ()=>now);
parcelHelpers.export(exports, "getTranslate", ()=>getTranslate);
parcelHelpers.export(exports, "isObject", ()=>isObject);
parcelHelpers.export(exports, "extend", ()=>extend);
parcelHelpers.export(exports, "getComputedStyle", ()=>getComputedStyle);
parcelHelpers.export(exports, "setCSSProperty", ()=>setCSSProperty);
var _ssrWindow = require("ssr-window");
function deleteProps(obj) {
    const object = obj;
    Object.keys(object).forEach((key)=>{
        try {
            object[key] = null;
        } catch (e) {}
        try {
            delete object[key];
        } catch (e1) {}
    });
}
function nextTick(callback, delay = 0) {
    return setTimeout(callback, delay);
}
function now() {
    return Date.now();
}
function getComputedStyle(el) {
    const window1 = (0, _ssrWindow.getWindow)();
    let style;
    if (window1.getComputedStyle) style = window1.getComputedStyle(el, null);
    if (!style && el.currentStyle) style = el.currentStyle;
    if (!style) style = el.style;
    return style;
}
function getTranslate(el, axis = "x") {
    const window1 = (0, _ssrWindow.getWindow)();
    let matrix;
    let curTransform;
    let transformMatrix;
    const curStyle = getComputedStyle(el, null);
    if (window1.WebKitCSSMatrix) {
        curTransform = curStyle.transform || curStyle.webkitTransform;
        if (curTransform.split(",").length > 6) curTransform = curTransform.split(", ").map((a)=>a.replace(",", ".")).join(", ");
         // Some old versions of Webkit choke when 'none' is passed; pass
        // empty string instead in this case
        transformMatrix = new window1.WebKitCSSMatrix(curTransform === "none" ? "" : curTransform);
    } else {
        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue("transform").replace("translate(", "matrix(1, 0, 0, 1,");
        matrix = transformMatrix.toString().split(",");
    }
    if (axis === "x") {
        // Latest Chrome and webkits Fix
        if (window1.WebKitCSSMatrix) curTransform = transformMatrix.m41; // Crazy IE10 Matrix
        else if (matrix.length === 16) curTransform = parseFloat(matrix[12]); // Normal Browsers
        else curTransform = parseFloat(matrix[4]);
    }
    if (axis === "y") {
        // Latest Chrome and webkits Fix
        if (window1.WebKitCSSMatrix) curTransform = transformMatrix.m42; // Crazy IE10 Matrix
        else if (matrix.length === 16) curTransform = parseFloat(matrix[13]); // Normal Browsers
        else curTransform = parseFloat(matrix[5]);
    }
    return curTransform || 0;
}
function isObject(o) {
    return typeof o === "object" && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === "Object";
}
function isNode(node) {
    // eslint-disable-next-line
    if (typeof window !== "undefined" && typeof window.HTMLElement !== "undefined") return node instanceof HTMLElement;
    return node && (node.nodeType === 1 || node.nodeType === 11);
}
function extend(...args) {
    const to = Object(args[0]);
    const noExtend = [
        "__proto__",
        "constructor",
        "prototype"
    ];
    for(let i = 1; i < args.length; i += 1){
        const nextSource = args[i];
        if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {
            const keysArray = Object.keys(Object(nextSource)).filter((key)=>noExtend.indexOf(key) < 0);
            for(let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1){
                const nextKey = keysArray[nextIndex];
                const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);
                if (desc !== undefined && desc.enumerable) {
                    if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {
                        if (nextSource[nextKey].__swiper__) to[nextKey] = nextSource[nextKey];
                        else extend(to[nextKey], nextSource[nextKey]);
                    } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {
                        to[nextKey] = {};
                        if (nextSource[nextKey].__swiper__) to[nextKey] = nextSource[nextKey];
                        else extend(to[nextKey], nextSource[nextKey]);
                    } else to[nextKey] = nextSource[nextKey];
                }
            }
        }
    }
    return to;
}
function setCSSProperty(el, varName, varValue) {
    el.style.setProperty(varName, varValue);
}
function animateCSSModeScroll({ swiper , targetPosition , side  }) {
    const window1 = (0, _ssrWindow.getWindow)();
    const startPosition = -swiper.translate;
    let startTime = null;
    let time;
    const duration = swiper.params.speed;
    swiper.wrapperEl.style.scrollSnapType = "none";
    window1.cancelAnimationFrame(swiper.cssModeFrameID);
    const dir = targetPosition > startPosition ? "next" : "prev";
    const isOutOfBound = (current, target)=>{
        return dir === "next" && current >= target || dir === "prev" && current <= target;
    };
    const animate = ()=>{
        time = new Date().getTime();
        if (startTime === null) startTime = time;
        const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);
        const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;
        let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);
        if (isOutOfBound(currentPosition, targetPosition)) currentPosition = targetPosition;
        swiper.wrapperEl.scrollTo({
            [side]: currentPosition
        });
        if (isOutOfBound(currentPosition, targetPosition)) {
            swiper.wrapperEl.style.overflow = "hidden";
            swiper.wrapperEl.style.scrollSnapType = "";
            setTimeout(()=>{
                swiper.wrapperEl.style.overflow = "";
                swiper.wrapperEl.scrollTo({
                    [side]: currentPosition
                });
            });
            window1.cancelAnimationFrame(swiper.cssModeFrameID);
            return;
        }
        swiper.cssModeFrameID = window1.requestAnimationFrame(animate);
    };
    animate();
}

},{"ssr-window":"d3jFK","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"hc4YA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getSupport", ()=>getSupport);
var _ssrWindow = require("ssr-window");
let support;
function calcSupport() {
    const window = (0, _ssrWindow.getWindow)();
    const document = (0, _ssrWindow.getDocument)();
    return {
        smoothScroll: document.documentElement && "scrollBehavior" in document.documentElement.style,
        touch: !!("ontouchstart" in window || window.DocumentTouch && document instanceof window.DocumentTouch),
        passiveListener: function checkPassiveListener() {
            let supportsPassive = false;
            try {
                const opts = Object.defineProperty({}, "passive", {
                    // eslint-disable-next-line
                    get () {
                        supportsPassive = true;
                    }
                });
                window.addEventListener("testPassiveListener", null, opts);
            } catch (e) {}
            return supportsPassive;
        }(),
        gestures: function checkGestures() {
            return "ongesturestart" in window;
        }()
    };
}
function getSupport() {
    if (!support) support = calcSupport();
    return support;
}

},{"ssr-window":"d3jFK","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"7D5UL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getDevice", ()=>getDevice);
var _ssrWindow = require("ssr-window");
var _getSupportJs = require("./get-support.js");
let deviceCached;
function calcDevice({ userAgent  } = {}) {
    const support = (0, _getSupportJs.getSupport)();
    const window = (0, _ssrWindow.getWindow)();
    const platform = window.navigator.platform;
    const ua = userAgent || window.navigator.userAgent;
    const device = {
        ios: false,
        android: false
    };
    const screenWidth = window.screen.width;
    const screenHeight = window.screen.height;
    const android = ua.match(/(Android);?[\s\/]+([\d.]+)?/); // eslint-disable-line
    let ipad = ua.match(/(iPad).*OS\s([\d_]+)/);
    const ipod = ua.match(/(iPod)(.*OS\s([\d_]+))?/);
    const iphone = !ipad && ua.match(/(iPhone\sOS|iOS)\s([\d_]+)/);
    const windows = platform === "Win32";
    let macos = platform === "MacIntel"; // iPadOs 13 fix
    const iPadScreens = [
        "1024x1366",
        "1366x1024",
        "834x1194",
        "1194x834",
        "834x1112",
        "1112x834",
        "768x1024",
        "1024x768",
        "820x1180",
        "1180x820",
        "810x1080",
        "1080x810"
    ];
    if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {
        ipad = ua.match(/(Version)\/([\d.]+)/);
        if (!ipad) ipad = [
            0,
            1,
            "13_0_0"
        ];
        macos = false;
    } // Android
    if (android && !windows) {
        device.os = "android";
        device.android = true;
    }
    if (ipad || iphone || ipod) {
        device.os = "ios";
        device.ios = true;
    } // Export object
    return device;
}
function getDevice(overrides = {}) {
    if (!deviceCached) deviceCached = calcDevice(overrides);
    return deviceCached;
}

},{"ssr-window":"d3jFK","./get-support.js":"hc4YA","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"gGygP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getBrowser", ()=>getBrowser);
var _ssrWindow = require("ssr-window");
let browser;
function calcBrowser() {
    const window = (0, _ssrWindow.getWindow)();
    function isSafari() {
        const ua = window.navigator.userAgent.toLowerCase();
        return ua.indexOf("safari") >= 0 && ua.indexOf("chrome") < 0 && ua.indexOf("android") < 0;
    }
    return {
        isSafari: isSafari(),
        isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)
    };
}
function getBrowser() {
    if (!browser) browser = calcBrowser();
    return browser;
}

},{"ssr-window":"d3jFK","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"jmpPC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _ssrWindow = require("ssr-window");
function Resize({ swiper , on , emit  }) {
    const window = (0, _ssrWindow.getWindow)();
    let observer = null;
    let animationFrame = null;
    const resizeHandler = ()=>{
        if (!swiper || swiper.destroyed || !swiper.initialized) return;
        emit("beforeResize");
        emit("resize");
    };
    const createObserver = ()=>{
        if (!swiper || swiper.destroyed || !swiper.initialized) return;
        observer = new ResizeObserver((entries)=>{
            animationFrame = window.requestAnimationFrame(()=>{
                const { width , height  } = swiper;
                let newWidth = width;
                let newHeight = height;
                entries.forEach(({ contentBoxSize , contentRect , target  })=>{
                    if (target && target !== swiper.el) return;
                    newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;
                    newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;
                });
                if (newWidth !== width || newHeight !== height) resizeHandler();
            });
        });
        observer.observe(swiper.el);
    };
    const removeObserver = ()=>{
        if (animationFrame) window.cancelAnimationFrame(animationFrame);
        if (observer && observer.unobserve && swiper.el) {
            observer.unobserve(swiper.el);
            observer = null;
        }
    };
    const orientationChangeHandler = ()=>{
        if (!swiper || swiper.destroyed || !swiper.initialized) return;
        emit("orientationchange");
    };
    on("init", ()=>{
        if (swiper.params.resizeObserver && typeof window.ResizeObserver !== "undefined") {
            createObserver();
            return;
        }
        window.addEventListener("resize", resizeHandler);
        window.addEventListener("orientationchange", orientationChangeHandler);
    });
    on("destroy", ()=>{
        removeObserver();
        window.removeEventListener("resize", resizeHandler);
        window.removeEventListener("orientationchange", orientationChangeHandler);
    });
}
exports.default = Resize;

},{"ssr-window":"d3jFK","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"gMwdx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _ssrWindow = require("ssr-window");
function Observer({ swiper , extendParams , on , emit  }) {
    const observers = [];
    const window = (0, _ssrWindow.getWindow)();
    const attach = (target, options = {})=>{
        const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;
        const observer = new ObserverFunc((mutations)=>{
            // The observerUpdate event should only be triggered
            // once despite the number of mutations.  Additional
            // triggers are redundant and are very costly
            if (mutations.length === 1) {
                emit("observerUpdate", mutations[0]);
                return;
            }
            const observerUpdate = function observerUpdate() {
                emit("observerUpdate", mutations[0]);
            };
            if (window.requestAnimationFrame) window.requestAnimationFrame(observerUpdate);
            else window.setTimeout(observerUpdate, 0);
        });
        observer.observe(target, {
            attributes: typeof options.attributes === "undefined" ? true : options.attributes,
            childList: typeof options.childList === "undefined" ? true : options.childList,
            characterData: typeof options.characterData === "undefined" ? true : options.characterData
        });
        observers.push(observer);
    };
    const init = ()=>{
        if (!swiper.params.observer) return;
        if (swiper.params.observeParents) {
            const containerParents = swiper.$el.parents();
            for(let i = 0; i < containerParents.length; i += 1)attach(containerParents[i]);
        } // Observe container
        attach(swiper.$el[0], {
            childList: swiper.params.observeSlideChildren
        }); // Observe wrapper
        attach(swiper.$wrapperEl[0], {
            attributes: false
        });
    };
    const destroy = ()=>{
        observers.forEach((observer)=>{
            observer.disconnect();
        });
        observers.splice(0, observers.length);
    };
    extendParams({
        observer: false,
        observeParents: false,
        observeSlideChildren: false
    });
    on("init", init);
    on("destroy", destroy);
}
exports.default = Observer;

},{"ssr-window":"d3jFK","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"hT26z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/* eslint-disable no-underscore-dangle */ exports.default = {
    on (events, handler, priority) {
        const self = this;
        if (!self.eventsListeners || self.destroyed) return self;
        if (typeof handler !== "function") return self;
        const method = priority ? "unshift" : "push";
        events.split(" ").forEach((event)=>{
            if (!self.eventsListeners[event]) self.eventsListeners[event] = [];
            self.eventsListeners[event][method](handler);
        });
        return self;
    },
    once (events, handler, priority) {
        const self = this;
        if (!self.eventsListeners || self.destroyed) return self;
        if (typeof handler !== "function") return self;
        function onceHandler(...args) {
            self.off(events, onceHandler);
            if (onceHandler.__emitterProxy) delete onceHandler.__emitterProxy;
            handler.apply(self, args);
        }
        onceHandler.__emitterProxy = handler;
        return self.on(events, onceHandler, priority);
    },
    onAny (handler, priority) {
        const self = this;
        if (!self.eventsListeners || self.destroyed) return self;
        if (typeof handler !== "function") return self;
        const method = priority ? "unshift" : "push";
        if (self.eventsAnyListeners.indexOf(handler) < 0) self.eventsAnyListeners[method](handler);
        return self;
    },
    offAny (handler) {
        const self = this;
        if (!self.eventsListeners || self.destroyed) return self;
        if (!self.eventsAnyListeners) return self;
        const index = self.eventsAnyListeners.indexOf(handler);
        if (index >= 0) self.eventsAnyListeners.splice(index, 1);
        return self;
    },
    off (events, handler) {
        const self = this;
        if (!self.eventsListeners || self.destroyed) return self;
        if (!self.eventsListeners) return self;
        events.split(" ").forEach((event)=>{
            if (typeof handler === "undefined") self.eventsListeners[event] = [];
            else if (self.eventsListeners[event]) self.eventsListeners[event].forEach((eventHandler, index)=>{
                if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) self.eventsListeners[event].splice(index, 1);
            });
        });
        return self;
    },
    emit (...args) {
        const self = this;
        if (!self.eventsListeners || self.destroyed) return self;
        if (!self.eventsListeners) return self;
        let events;
        let data;
        let context;
        if (typeof args[0] === "string" || Array.isArray(args[0])) {
            events = args[0];
            data = args.slice(1, args.length);
            context = self;
        } else {
            events = args[0].events;
            data = args[0].data;
            context = args[0].context || self;
        }
        data.unshift(context);
        const eventsArray = Array.isArray(events) ? events : events.split(" ");
        eventsArray.forEach((event)=>{
            if (self.eventsAnyListeners && self.eventsAnyListeners.length) self.eventsAnyListeners.forEach((eventHandler)=>{
                eventHandler.apply(context, [
                    event,
                    ...data
                ]);
            });
            if (self.eventsListeners && self.eventsListeners[event]) self.eventsListeners[event].forEach((eventHandler)=>{
                eventHandler.apply(context, data);
            });
        });
        return self;
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"gRjYx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _updateSizeJs = require("./updateSize.js");
var _updateSizeJsDefault = parcelHelpers.interopDefault(_updateSizeJs);
var _updateSlidesJs = require("./updateSlides.js");
var _updateSlidesJsDefault = parcelHelpers.interopDefault(_updateSlidesJs);
var _updateAutoHeightJs = require("./updateAutoHeight.js");
var _updateAutoHeightJsDefault = parcelHelpers.interopDefault(_updateAutoHeightJs);
var _updateSlidesOffsetJs = require("./updateSlidesOffset.js");
var _updateSlidesOffsetJsDefault = parcelHelpers.interopDefault(_updateSlidesOffsetJs);
var _updateSlidesProgressJs = require("./updateSlidesProgress.js");
var _updateSlidesProgressJsDefault = parcelHelpers.interopDefault(_updateSlidesProgressJs);
var _updateProgressJs = require("./updateProgress.js");
var _updateProgressJsDefault = parcelHelpers.interopDefault(_updateProgressJs);
var _updateSlidesClassesJs = require("./updateSlidesClasses.js");
var _updateSlidesClassesJsDefault = parcelHelpers.interopDefault(_updateSlidesClassesJs);
var _updateActiveIndexJs = require("./updateActiveIndex.js");
var _updateActiveIndexJsDefault = parcelHelpers.interopDefault(_updateActiveIndexJs);
var _updateClickedSlideJs = require("./updateClickedSlide.js");
var _updateClickedSlideJsDefault = parcelHelpers.interopDefault(_updateClickedSlideJs);
exports.default = {
    updateSize: (0, _updateSizeJsDefault.default),
    updateSlides: (0, _updateSlidesJsDefault.default),
    updateAutoHeight: (0, _updateAutoHeightJsDefault.default),
    updateSlidesOffset: (0, _updateSlidesOffsetJsDefault.default),
    updateSlidesProgress: (0, _updateSlidesProgressJsDefault.default),
    updateProgress: (0, _updateProgressJsDefault.default),
    updateSlidesClasses: (0, _updateSlidesClassesJsDefault.default),
    updateActiveIndex: (0, _updateActiveIndexJsDefault.default),
    updateClickedSlide: (0, _updateClickedSlideJsDefault.default)
};

},{"./updateSize.js":"2Spd0","./updateSlides.js":"kIvSc","./updateAutoHeight.js":"b5ojz","./updateSlidesOffset.js":"9kwd5","./updateSlidesProgress.js":"c5AX4","./updateProgress.js":"eHtUe","./updateSlidesClasses.js":"7Hwdv","./updateActiveIndex.js":"12g9j","./updateClickedSlide.js":"cdkzr","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"2Spd0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function updateSize() {
    const swiper = this;
    let width;
    let height;
    const $el = swiper.$el;
    if (typeof swiper.params.width !== "undefined" && swiper.params.width !== null) width = swiper.params.width;
    else width = $el[0].clientWidth;
    if (typeof swiper.params.height !== "undefined" && swiper.params.height !== null) height = swiper.params.height;
    else height = $el[0].clientHeight;
    if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) return;
     // Subtract paddings
    width = width - parseInt($el.css("padding-left") || 0, 10) - parseInt($el.css("padding-right") || 0, 10);
    height = height - parseInt($el.css("padding-top") || 0, 10) - parseInt($el.css("padding-bottom") || 0, 10);
    if (Number.isNaN(width)) width = 0;
    if (Number.isNaN(height)) height = 0;
    Object.assign(swiper, {
        width,
        height,
        size: swiper.isHorizontal() ? width : height
    });
}
exports.default = updateSize;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"kIvSc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _utilsJs = require("../../shared/utils.js");
function updateSlides() {
    const swiper = this;
    function getDirectionLabel(property) {
        if (swiper.isHorizontal()) return property;
         // prettier-ignore
        return ({
            "width": "height",
            "margin-top": "margin-left",
            "margin-bottom ": "margin-right",
            "margin-left": "margin-top",
            "margin-right": "margin-bottom",
            "padding-left": "padding-top",
            "padding-right": "padding-bottom",
            "marginRight": "marginBottom"
        })[property];
    }
    function getDirectionPropertyValue(node, label) {
        return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);
    }
    const params = swiper.params;
    const { $wrapperEl , size: swiperSize , rtlTranslate: rtl , wrongRTL  } = swiper;
    const isVirtual = swiper.virtual && params.virtual.enabled;
    const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;
    const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);
    const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;
    let snapGrid = [];
    const slidesGrid = [];
    const slidesSizesGrid = [];
    let offsetBefore = params.slidesOffsetBefore;
    if (typeof offsetBefore === "function") offsetBefore = params.slidesOffsetBefore.call(swiper);
    let offsetAfter = params.slidesOffsetAfter;
    if (typeof offsetAfter === "function") offsetAfter = params.slidesOffsetAfter.call(swiper);
    const previousSnapGridLength = swiper.snapGrid.length;
    const previousSlidesGridLength = swiper.slidesGrid.length;
    let spaceBetween = params.spaceBetween;
    let slidePosition = -offsetBefore;
    let prevSlideSize = 0;
    let index = 0;
    if (typeof swiperSize === "undefined") return;
    if (typeof spaceBetween === "string" && spaceBetween.indexOf("%") >= 0) spaceBetween = parseFloat(spaceBetween.replace("%", "")) / 100 * swiperSize;
    swiper.virtualSize = -spaceBetween; // reset margins
    if (rtl) slides.css({
        marginLeft: "",
        marginBottom: "",
        marginTop: ""
    });
    else slides.css({
        marginRight: "",
        marginBottom: "",
        marginTop: ""
    }); // reset cssMode offsets
    if (params.centeredSlides && params.cssMode) {
        (0, _utilsJs.setCSSProperty)(swiper.wrapperEl, "--swiper-centered-offset-before", "");
        (0, _utilsJs.setCSSProperty)(swiper.wrapperEl, "--swiper-centered-offset-after", "");
    }
    const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;
    if (gridEnabled) swiper.grid.initSlides(slidesLength);
     // Calc slides
    let slideSize;
    const shouldResetSlideSize = params.slidesPerView === "auto" && params.breakpoints && Object.keys(params.breakpoints).filter((key)=>{
        return typeof params.breakpoints[key].slidesPerView !== "undefined";
    }).length > 0;
    for(let i = 0; i < slidesLength; i += 1){
        slideSize = 0;
        const slide = slides.eq(i);
        if (gridEnabled) swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);
        if (slide.css("display") === "none") continue; // eslint-disable-line
        if (params.slidesPerView === "auto") {
            if (shouldResetSlideSize) slides[i].style[getDirectionLabel("width")] = ``;
            const slideStyles = getComputedStyle(slide[0]);
            const currentTransform = slide[0].style.transform;
            const currentWebKitTransform = slide[0].style.webkitTransform;
            if (currentTransform) slide[0].style.transform = "none";
            if (currentWebKitTransform) slide[0].style.webkitTransform = "none";
            if (params.roundLengths) slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);
            else {
                // eslint-disable-next-line
                const width = getDirectionPropertyValue(slideStyles, "width");
                const paddingLeft = getDirectionPropertyValue(slideStyles, "padding-left");
                const paddingRight = getDirectionPropertyValue(slideStyles, "padding-right");
                const marginLeft = getDirectionPropertyValue(slideStyles, "margin-left");
                const marginRight = getDirectionPropertyValue(slideStyles, "margin-right");
                const boxSizing = slideStyles.getPropertyValue("box-sizing");
                if (boxSizing && boxSizing === "border-box") slideSize = width + marginLeft + marginRight;
                else {
                    const { clientWidth , offsetWidth  } = slide[0];
                    slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);
                }
            }
            if (currentTransform) slide[0].style.transform = currentTransform;
            if (currentWebKitTransform) slide[0].style.webkitTransform = currentWebKitTransform;
            if (params.roundLengths) slideSize = Math.floor(slideSize);
        } else {
            slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;
            if (params.roundLengths) slideSize = Math.floor(slideSize);
            if (slides[i]) slides[i].style[getDirectionLabel("width")] = `${slideSize}px`;
        }
        if (slides[i]) slides[i].swiperSlideSize = slideSize;
        slidesSizesGrid.push(slideSize);
        if (params.centeredSlides) {
            slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;
            if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;
            if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;
            if (Math.abs(slidePosition) < 0.001) slidePosition = 0;
            if (params.roundLengths) slidePosition = Math.floor(slidePosition);
            if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);
            slidesGrid.push(slidePosition);
        } else {
            if (params.roundLengths) slidePosition = Math.floor(slidePosition);
            if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);
            slidesGrid.push(slidePosition);
            slidePosition = slidePosition + slideSize + spaceBetween;
        }
        swiper.virtualSize += slideSize + spaceBetween;
        prevSlideSize = slideSize;
        index += 1;
    }
    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;
    if (rtl && wrongRTL && (params.effect === "slide" || params.effect === "coverflow")) $wrapperEl.css({
        width: `${swiper.virtualSize + params.spaceBetween}px`
    });
    if (params.setWrapperSize) $wrapperEl.css({
        [getDirectionLabel("width")]: `${swiper.virtualSize + params.spaceBetween}px`
    });
    if (gridEnabled) swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);
     // Remove last grid elements depending on width
    if (!params.centeredSlides) {
        const newSlidesGrid = [];
        for(let i1 = 0; i1 < snapGrid.length; i1 += 1){
            let slidesGridItem = snapGrid[i1];
            if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);
            if (snapGrid[i1] <= swiper.virtualSize - swiperSize) newSlidesGrid.push(slidesGridItem);
        }
        snapGrid = newSlidesGrid;
        if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) snapGrid.push(swiper.virtualSize - swiperSize);
    }
    if (snapGrid.length === 0) snapGrid = [
        0
    ];
    if (params.spaceBetween !== 0) {
        const key = swiper.isHorizontal() && rtl ? "marginLeft" : getDirectionLabel("marginRight");
        slides.filter((_, slideIndex)=>{
            if (!params.cssMode) return true;
            if (slideIndex === slides.length - 1) return false;
            return true;
        }).css({
            [key]: `${spaceBetween}px`
        });
    }
    if (params.centeredSlides && params.centeredSlidesBounds) {
        let allSlidesSize = 0;
        slidesSizesGrid.forEach((slideSizeValue)=>{
            allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);
        });
        allSlidesSize -= params.spaceBetween;
        const maxSnap = allSlidesSize - swiperSize;
        snapGrid = snapGrid.map((snap)=>{
            if (snap < 0) return -offsetBefore;
            if (snap > maxSnap) return maxSnap + offsetAfter;
            return snap;
        });
    }
    if (params.centerInsufficientSlides) {
        let allSlidesSize1 = 0;
        slidesSizesGrid.forEach((slideSizeValue)=>{
            allSlidesSize1 += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);
        });
        allSlidesSize1 -= params.spaceBetween;
        if (allSlidesSize1 < swiperSize) {
            const allSlidesOffset = (swiperSize - allSlidesSize1) / 2;
            snapGrid.forEach((snap, snapIndex)=>{
                snapGrid[snapIndex] = snap - allSlidesOffset;
            });
            slidesGrid.forEach((snap, snapIndex)=>{
                slidesGrid[snapIndex] = snap + allSlidesOffset;
            });
        }
    }
    Object.assign(swiper, {
        slides,
        snapGrid,
        slidesGrid,
        slidesSizesGrid
    });
    if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {
        (0, _utilsJs.setCSSProperty)(swiper.wrapperEl, "--swiper-centered-offset-before", `${-snapGrid[0]}px`);
        (0, _utilsJs.setCSSProperty)(swiper.wrapperEl, "--swiper-centered-offset-after", `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);
        const addToSnapGrid = -swiper.snapGrid[0];
        const addToSlidesGrid = -swiper.slidesGrid[0];
        swiper.snapGrid = swiper.snapGrid.map((v)=>v + addToSnapGrid);
        swiper.slidesGrid = swiper.slidesGrid.map((v)=>v + addToSlidesGrid);
    }
    if (slidesLength !== previousSlidesLength) swiper.emit("slidesLengthChange");
    if (snapGrid.length !== previousSnapGridLength) {
        if (swiper.params.watchOverflow) swiper.checkOverflow();
        swiper.emit("snapGridLengthChange");
    }
    if (slidesGrid.length !== previousSlidesGridLength) swiper.emit("slidesGridLengthChange");
    if (params.watchSlidesProgress) swiper.updateSlidesOffset();
    if (!isVirtual && !params.cssMode && (params.effect === "slide" || params.effect === "fade")) {
        const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;
        const hasClassBackfaceClassAdded = swiper.$el.hasClass(backFaceHiddenClass);
        if (slidesLength <= params.maxBackfaceHiddenSlides) {
            if (!hasClassBackfaceClassAdded) swiper.$el.addClass(backFaceHiddenClass);
        } else if (hasClassBackfaceClassAdded) swiper.$el.removeClass(backFaceHiddenClass);
    }
}
exports.default = updateSlides;

},{"../../shared/utils.js":"hr9mL","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"b5ojz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _domJs = require("../../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
function updateAutoHeight(speed) {
    const swiper = this;
    const activeSlides = [];
    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;
    let newHeight = 0;
    let i;
    if (typeof speed === "number") swiper.setTransition(speed);
    else if (speed === true) swiper.setTransition(swiper.params.speed);
    const getSlideByIndex = (index)=>{
        if (isVirtual) return swiper.slides.filter((el)=>parseInt(el.getAttribute("data-swiper-slide-index"), 10) === index)[0];
        return swiper.slides.eq(index)[0];
    }; // Find slides currently in view
    if (swiper.params.slidesPerView !== "auto" && swiper.params.slidesPerView > 1) {
        if (swiper.params.centeredSlides) (swiper.visibleSlides || (0, _domJsDefault.default)([])).each((slide)=>{
            activeSlides.push(slide);
        });
        else for(i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1){
            const index = swiper.activeIndex + i;
            if (index > swiper.slides.length && !isVirtual) break;
            activeSlides.push(getSlideByIndex(index));
        }
    } else activeSlides.push(getSlideByIndex(swiper.activeIndex));
     // Find new height from highest slide in view
    for(i = 0; i < activeSlides.length; i += 1)if (typeof activeSlides[i] !== "undefined") {
        const height = activeSlides[i].offsetHeight;
        newHeight = height > newHeight ? height : newHeight;
    }
     // Update Height
    if (newHeight || newHeight === 0) swiper.$wrapperEl.css("height", `${newHeight}px`);
}
exports.default = updateAutoHeight;

},{"../../shared/dom.js":"fSctW","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"9kwd5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function updateSlidesOffset() {
    const swiper = this;
    const slides = swiper.slides;
    for(let i = 0; i < slides.length; i += 1)slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;
}
exports.default = updateSlidesOffset;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"c5AX4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _domJs = require("../../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
function updateSlidesProgress(translate = this && this.translate || 0) {
    const swiper = this;
    const params = swiper.params;
    const { slides , rtlTranslate: rtl , snapGrid  } = swiper;
    if (slides.length === 0) return;
    if (typeof slides[0].swiperSlideOffset === "undefined") swiper.updateSlidesOffset();
    let offsetCenter = -translate;
    if (rtl) offsetCenter = translate; // Visible Slides
    slides.removeClass(params.slideVisibleClass);
    swiper.visibleSlidesIndexes = [];
    swiper.visibleSlides = [];
    for(let i = 0; i < slides.length; i += 1){
        const slide = slides[i];
        let slideOffset = slide.swiperSlideOffset;
        if (params.cssMode && params.centeredSlides) slideOffset -= slides[0].swiperSlideOffset;
        const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);
        const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);
        const slideBefore = -(offsetCenter - slideOffset);
        const slideAfter = slideBefore + swiper.slidesSizesGrid[i];
        const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;
        if (isVisible) {
            swiper.visibleSlides.push(slide);
            swiper.visibleSlidesIndexes.push(i);
            slides.eq(i).addClass(params.slideVisibleClass);
        }
        slide.progress = rtl ? -slideProgress : slideProgress;
        slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;
    }
    swiper.visibleSlides = (0, _domJsDefault.default)(swiper.visibleSlides);
}
exports.default = updateSlidesProgress;

},{"../../shared/dom.js":"fSctW","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"eHtUe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function updateProgress(translate) {
    const swiper = this;
    if (typeof translate === "undefined") {
        const multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line
        translate = swiper && swiper.translate && swiper.translate * multiplier || 0;
    }
    const params = swiper.params;
    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();
    let { progress , isBeginning , isEnd  } = swiper;
    const wasBeginning = isBeginning;
    const wasEnd = isEnd;
    if (translatesDiff === 0) {
        progress = 0;
        isBeginning = true;
        isEnd = true;
    } else {
        progress = (translate - swiper.minTranslate()) / translatesDiff;
        isBeginning = progress <= 0;
        isEnd = progress >= 1;
    }
    Object.assign(swiper, {
        progress,
        isBeginning,
        isEnd
    });
    if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);
    if (isBeginning && !wasBeginning) swiper.emit("reachBeginning toEdge");
    if (isEnd && !wasEnd) swiper.emit("reachEnd toEdge");
    if (wasBeginning && !isBeginning || wasEnd && !isEnd) swiper.emit("fromEdge");
    swiper.emit("progress", progress);
}
exports.default = updateProgress;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"7Hwdv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function updateSlidesClasses() {
    const swiper = this;
    const { slides , params , $wrapperEl , activeIndex , realIndex  } = swiper;
    const isVirtual = swiper.virtual && params.virtual.enabled;
    slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);
    let activeSlide;
    if (isVirtual) activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index="${activeIndex}"]`);
    else activeSlide = slides.eq(activeIndex);
     // Active classes
    activeSlide.addClass(params.slideActiveClass);
    if (params.loop) {
        // Duplicate to all looped slides
        if (activeSlide.hasClass(params.slideDuplicateClass)) $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index="${realIndex}"]`).addClass(params.slideDuplicateActiveClass);
        else $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index="${realIndex}"]`).addClass(params.slideDuplicateActiveClass);
    } // Next Slide
    let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);
    if (params.loop && nextSlide.length === 0) {
        nextSlide = slides.eq(0);
        nextSlide.addClass(params.slideNextClass);
    } // Prev Slide
    let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);
    if (params.loop && prevSlide.length === 0) {
        prevSlide = slides.eq(-1);
        prevSlide.addClass(params.slidePrevClass);
    }
    if (params.loop) {
        // Duplicate to all looped slides
        if (nextSlide.hasClass(params.slideDuplicateClass)) $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index="${nextSlide.attr("data-swiper-slide-index")}"]`).addClass(params.slideDuplicateNextClass);
        else $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index="${nextSlide.attr("data-swiper-slide-index")}"]`).addClass(params.slideDuplicateNextClass);
        if (prevSlide.hasClass(params.slideDuplicateClass)) $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index="${prevSlide.attr("data-swiper-slide-index")}"]`).addClass(params.slideDuplicatePrevClass);
        else $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index="${prevSlide.attr("data-swiper-slide-index")}"]`).addClass(params.slideDuplicatePrevClass);
    }
    swiper.emitSlidesClasses();
}
exports.default = updateSlidesClasses;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"12g9j":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function updateActiveIndex(newActiveIndex) {
    const swiper = this;
    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;
    const { slidesGrid , snapGrid , params , activeIndex: previousIndex , realIndex: previousRealIndex , snapIndex: previousSnapIndex  } = swiper;
    let activeIndex = newActiveIndex;
    let snapIndex;
    if (typeof activeIndex === "undefined") {
        for(let i = 0; i < slidesGrid.length; i += 1){
            if (typeof slidesGrid[i + 1] !== "undefined") {
                if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) activeIndex = i;
                else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) activeIndex = i + 1;
            } else if (translate >= slidesGrid[i]) activeIndex = i;
        } // Normalize slideIndex
        if (params.normalizeSlideIndex) {
            if (activeIndex < 0 || typeof activeIndex === "undefined") activeIndex = 0;
        }
    }
    if (snapGrid.indexOf(translate) >= 0) snapIndex = snapGrid.indexOf(translate);
    else {
        const skip = Math.min(params.slidesPerGroupSkip, activeIndex);
        snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);
    }
    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;
    if (activeIndex === previousIndex) {
        if (snapIndex !== previousSnapIndex) {
            swiper.snapIndex = snapIndex;
            swiper.emit("snapIndexChange");
        }
        return;
    } // Get real index
    const realIndex = parseInt(swiper.slides.eq(activeIndex).attr("data-swiper-slide-index") || activeIndex, 10);
    Object.assign(swiper, {
        snapIndex,
        realIndex,
        previousIndex,
        activeIndex
    });
    swiper.emit("activeIndexChange");
    swiper.emit("snapIndexChange");
    if (previousRealIndex !== realIndex) swiper.emit("realIndexChange");
    if (swiper.initialized || swiper.params.runCallbacksOnInit) swiper.emit("slideChange");
}
exports.default = updateActiveIndex;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"cdkzr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _domJs = require("../../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
function updateClickedSlide(e) {
    const swiper = this;
    const params = swiper.params;
    const slide = (0, _domJsDefault.default)(e).closest(`.${params.slideClass}`)[0];
    let slideFound = false;
    let slideIndex;
    if (slide) {
        for(let i = 0; i < swiper.slides.length; i += 1)if (swiper.slides[i] === slide) {
            slideFound = true;
            slideIndex = i;
            break;
        }
    }
    if (slide && slideFound) {
        swiper.clickedSlide = slide;
        if (swiper.virtual && swiper.params.virtual.enabled) swiper.clickedIndex = parseInt((0, _domJsDefault.default)(slide).attr("data-swiper-slide-index"), 10);
        else swiper.clickedIndex = slideIndex;
    } else {
        swiper.clickedSlide = undefined;
        swiper.clickedIndex = undefined;
        return;
    }
    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) swiper.slideToClickedSlide();
}
exports.default = updateClickedSlide;

},{"../../shared/dom.js":"fSctW","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"hptMS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getTranslateJs = require("./getTranslate.js");
var _getTranslateJsDefault = parcelHelpers.interopDefault(_getTranslateJs);
var _setTranslateJs = require("./setTranslate.js");
var _setTranslateJsDefault = parcelHelpers.interopDefault(_setTranslateJs);
var _minTranslateJs = require("./minTranslate.js");
var _minTranslateJsDefault = parcelHelpers.interopDefault(_minTranslateJs);
var _maxTranslateJs = require("./maxTranslate.js");
var _maxTranslateJsDefault = parcelHelpers.interopDefault(_maxTranslateJs);
var _translateToJs = require("./translateTo.js");
var _translateToJsDefault = parcelHelpers.interopDefault(_translateToJs);
exports.default = {
    getTranslate: (0, _getTranslateJsDefault.default),
    setTranslate: (0, _setTranslateJsDefault.default),
    minTranslate: (0, _minTranslateJsDefault.default),
    maxTranslate: (0, _maxTranslateJsDefault.default),
    translateTo: (0, _translateToJsDefault.default)
};

},{"./getTranslate.js":"45PCR","./setTranslate.js":"3nm1U","./minTranslate.js":"lThZi","./maxTranslate.js":"lPtLZ","./translateTo.js":"lTrlM","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"45PCR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _utilsJs = require("../../shared/utils.js");
function getSwiperTranslate(axis = this.isHorizontal() ? "x" : "y") {
    const swiper = this;
    const { params , rtlTranslate: rtl , translate , $wrapperEl  } = swiper;
    if (params.virtualTranslate) return rtl ? -translate : translate;
    if (params.cssMode) return translate;
    let currentTranslate = (0, _utilsJs.getTranslate)($wrapperEl[0], axis);
    if (rtl) currentTranslate = -currentTranslate;
    return currentTranslate || 0;
}
exports.default = getSwiperTranslate;

},{"../../shared/utils.js":"hr9mL","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"3nm1U":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function setTranslate(translate, byController) {
    const swiper = this;
    const { rtlTranslate: rtl , params , $wrapperEl , wrapperEl , progress  } = swiper;
    let x = 0;
    let y = 0;
    const z = 0;
    if (swiper.isHorizontal()) x = rtl ? -translate : translate;
    else y = translate;
    if (params.roundLengths) {
        x = Math.floor(x);
        y = Math.floor(y);
    }
    if (params.cssMode) wrapperEl[swiper.isHorizontal() ? "scrollLeft" : "scrollTop"] = swiper.isHorizontal() ? -x : -y;
    else if (!params.virtualTranslate) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);
    swiper.previousTranslate = swiper.translate;
    swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress
    let newProgress;
    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();
    if (translatesDiff === 0) newProgress = 0;
    else newProgress = (translate - swiper.minTranslate()) / translatesDiff;
    if (newProgress !== progress) swiper.updateProgress(translate);
    swiper.emit("setTranslate", swiper.translate, byController);
}
exports.default = setTranslate;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"lThZi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function minTranslate() {
    return -this.snapGrid[0];
}
exports.default = minTranslate;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"lPtLZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function maxTranslate() {
    return -this.snapGrid[this.snapGrid.length - 1];
}
exports.default = maxTranslate;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"lTrlM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _utilsJs = require("../../shared/utils.js");
function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {
    const swiper = this;
    const { params , wrapperEl  } = swiper;
    if (swiper.animating && params.preventInteractionOnTransition) return false;
    const minTranslate = swiper.minTranslate();
    const maxTranslate = swiper.maxTranslate();
    let newTranslate;
    if (translateBounds && translate > minTranslate) newTranslate = minTranslate;
    else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;
    else newTranslate = translate; // Update progress
    swiper.updateProgress(newTranslate);
    if (params.cssMode) {
        const isH = swiper.isHorizontal();
        if (speed === 0) wrapperEl[isH ? "scrollLeft" : "scrollTop"] = -newTranslate;
        else {
            if (!swiper.support.smoothScroll) {
                (0, _utilsJs.animateCSSModeScroll)({
                    swiper,
                    targetPosition: -newTranslate,
                    side: isH ? "left" : "top"
                });
                return true;
            }
            wrapperEl.scrollTo({
                [isH ? "left" : "top"]: -newTranslate,
                behavior: "smooth"
            });
        }
        return true;
    }
    if (speed === 0) {
        swiper.setTransition(0);
        swiper.setTranslate(newTranslate);
        if (runCallbacks) {
            swiper.emit("beforeTransitionStart", speed, internal);
            swiper.emit("transitionEnd");
        }
    } else {
        swiper.setTransition(speed);
        swiper.setTranslate(newTranslate);
        if (runCallbacks) {
            swiper.emit("beforeTransitionStart", speed, internal);
            swiper.emit("transitionStart");
        }
        if (!swiper.animating) {
            swiper.animating = true;
            if (!swiper.onTranslateToWrapperTransitionEnd) swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {
                if (!swiper || swiper.destroyed) return;
                if (e.target !== this) return;
                swiper.$wrapperEl[0].removeEventListener("transitionend", swiper.onTranslateToWrapperTransitionEnd);
                swiper.$wrapperEl[0].removeEventListener("webkitTransitionEnd", swiper.onTranslateToWrapperTransitionEnd);
                swiper.onTranslateToWrapperTransitionEnd = null;
                delete swiper.onTranslateToWrapperTransitionEnd;
                if (runCallbacks) swiper.emit("transitionEnd");
            };
            swiper.$wrapperEl[0].addEventListener("transitionend", swiper.onTranslateToWrapperTransitionEnd);
            swiper.$wrapperEl[0].addEventListener("webkitTransitionEnd", swiper.onTranslateToWrapperTransitionEnd);
        }
    }
    return true;
}
exports.default = translateTo;

},{"../../shared/utils.js":"hr9mL","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"aegTm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _setTransitionJs = require("./setTransition.js");
var _setTransitionJsDefault = parcelHelpers.interopDefault(_setTransitionJs);
var _transitionStartJs = require("./transitionStart.js");
var _transitionStartJsDefault = parcelHelpers.interopDefault(_transitionStartJs);
var _transitionEndJs = require("./transitionEnd.js");
var _transitionEndJsDefault = parcelHelpers.interopDefault(_transitionEndJs);
exports.default = {
    setTransition: (0, _setTransitionJsDefault.default),
    transitionStart: (0, _transitionStartJsDefault.default),
    transitionEnd: (0, _transitionEndJsDefault.default)
};

},{"./setTransition.js":"8Bqyc","./transitionStart.js":"3ebLG","./transitionEnd.js":"cLZgE","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"8Bqyc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function setTransition(duration, byController) {
    const swiper = this;
    if (!swiper.params.cssMode) swiper.$wrapperEl.transition(duration);
    swiper.emit("setTransition", duration, byController);
}
exports.default = setTransition;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"3ebLG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _transitionEmitJs = require("./transitionEmit.js");
var _transitionEmitJsDefault = parcelHelpers.interopDefault(_transitionEmitJs);
function transitionStart(runCallbacks = true, direction) {
    const swiper = this;
    const { params  } = swiper;
    if (params.cssMode) return;
    if (params.autoHeight) swiper.updateAutoHeight();
    (0, _transitionEmitJsDefault.default)({
        swiper,
        runCallbacks,
        direction,
        step: "Start"
    });
}
exports.default = transitionStart;

},{"./transitionEmit.js":"gVqPe","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"gVqPe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function transitionEmit({ swiper , runCallbacks , direction , step  }) {
    const { activeIndex , previousIndex  } = swiper;
    let dir = direction;
    if (!dir) {
        if (activeIndex > previousIndex) dir = "next";
        else if (activeIndex < previousIndex) dir = "prev";
        else dir = "reset";
    }
    swiper.emit(`transition${step}`);
    if (runCallbacks && activeIndex !== previousIndex) {
        if (dir === "reset") {
            swiper.emit(`slideResetTransition${step}`);
            return;
        }
        swiper.emit(`slideChangeTransition${step}`);
        if (dir === "next") swiper.emit(`slideNextTransition${step}`);
        else swiper.emit(`slidePrevTransition${step}`);
    }
}
exports.default = transitionEmit;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"cLZgE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _transitionEmitJs = require("./transitionEmit.js");
var _transitionEmitJsDefault = parcelHelpers.interopDefault(_transitionEmitJs);
function transitionEnd(runCallbacks = true, direction) {
    const swiper = this;
    const { params  } = swiper;
    swiper.animating = false;
    if (params.cssMode) return;
    swiper.setTransition(0);
    (0, _transitionEmitJsDefault.default)({
        swiper,
        runCallbacks,
        direction,
        step: "End"
    });
}
exports.default = transitionEnd;

},{"./transitionEmit.js":"gVqPe","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"a5vJi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _slideToJs = require("./slideTo.js");
var _slideToJsDefault = parcelHelpers.interopDefault(_slideToJs);
var _slideToLoopJs = require("./slideToLoop.js");
var _slideToLoopJsDefault = parcelHelpers.interopDefault(_slideToLoopJs);
var _slideNextJs = require("./slideNext.js");
var _slideNextJsDefault = parcelHelpers.interopDefault(_slideNextJs);
var _slidePrevJs = require("./slidePrev.js");
var _slidePrevJsDefault = parcelHelpers.interopDefault(_slidePrevJs);
var _slideResetJs = require("./slideReset.js");
var _slideResetJsDefault = parcelHelpers.interopDefault(_slideResetJs);
var _slideToClosestJs = require("./slideToClosest.js");
var _slideToClosestJsDefault = parcelHelpers.interopDefault(_slideToClosestJs);
var _slideToClickedSlideJs = require("./slideToClickedSlide.js");
var _slideToClickedSlideJsDefault = parcelHelpers.interopDefault(_slideToClickedSlideJs);
exports.default = {
    slideTo: (0, _slideToJsDefault.default),
    slideToLoop: (0, _slideToLoopJsDefault.default),
    slideNext: (0, _slideNextJsDefault.default),
    slidePrev: (0, _slidePrevJsDefault.default),
    slideReset: (0, _slideResetJsDefault.default),
    slideToClosest: (0, _slideToClosestJsDefault.default),
    slideToClickedSlide: (0, _slideToClickedSlideJsDefault.default)
};

},{"./slideTo.js":"cKukx","./slideToLoop.js":"aNbvL","./slideNext.js":"2JCH7","./slidePrev.js":"9hrN2","./slideReset.js":"dyB0y","./slideToClosest.js":"01X2I","./slideToClickedSlide.js":"dDHpD","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"cKukx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _utilsJs = require("../../shared/utils.js");
function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {
    if (typeof index !== "number" && typeof index !== "string") throw new Error(`The 'index' argument cannot have type other than 'number' or 'string'. [${typeof index}] given.`);
    if (typeof index === "string") {
        /**
     * The `index` argument converted from `string` to `number`.
     * @type {number}
     */ const indexAsNumber = parseInt(index, 10);
        /**
     * Determines whether the `index` argument is a valid `number`
     * after being converted from the `string` type.
     * @type {boolean}
     */ const isValidNumber = isFinite(indexAsNumber);
        if (!isValidNumber) throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${index}] given.`);
         // Knowing that the converted `index` is a valid number,
        // we can update the original argument's value.
        index = indexAsNumber;
    }
    const swiper = this;
    let slideIndex = index;
    if (slideIndex < 0) slideIndex = 0;
    const { params , snapGrid , slidesGrid , previousIndex , activeIndex , rtlTranslate: rtl , wrapperEl , enabled  } = swiper;
    if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) return false;
    const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);
    let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);
    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;
    const translate = -snapGrid[snapIndex]; // Normalize slideIndex
    if (params.normalizeSlideIndex) for(let i = 0; i < slidesGrid.length; i += 1){
        const normalizedTranslate = -Math.floor(translate * 100);
        const normalizedGrid = Math.floor(slidesGrid[i] * 100);
        const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);
        if (typeof slidesGrid[i + 1] !== "undefined") {
            if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) slideIndex = i;
            else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) slideIndex = i + 1;
        } else if (normalizedTranslate >= normalizedGrid) slideIndex = i;
    }
     // Directions locks
    if (swiper.initialized && slideIndex !== activeIndex) {
        if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) return false;
        if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {
            if ((activeIndex || 0) !== slideIndex) return false;
        }
    }
    if (slideIndex !== (previousIndex || 0) && runCallbacks) swiper.emit("beforeSlideChangeStart");
     // Update progress
    swiper.updateProgress(translate);
    let direction;
    if (slideIndex > activeIndex) direction = "next";
    else if (slideIndex < activeIndex) direction = "prev";
    else direction = "reset"; // Update Index
    if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {
        swiper.updateActiveIndex(slideIndex); // Update Height
        if (params.autoHeight) swiper.updateAutoHeight();
        swiper.updateSlidesClasses();
        if (params.effect !== "slide") swiper.setTranslate(translate);
        if (direction !== "reset") {
            swiper.transitionStart(runCallbacks, direction);
            swiper.transitionEnd(runCallbacks, direction);
        }
        return false;
    }
    if (params.cssMode) {
        const isH = swiper.isHorizontal();
        const t = rtl ? translate : -translate;
        if (speed === 0) {
            const isVirtual = swiper.virtual && swiper.params.virtual.enabled;
            if (isVirtual) {
                swiper.wrapperEl.style.scrollSnapType = "none";
                swiper._immediateVirtual = true;
            }
            wrapperEl[isH ? "scrollLeft" : "scrollTop"] = t;
            if (isVirtual) requestAnimationFrame(()=>{
                swiper.wrapperEl.style.scrollSnapType = "";
                swiper._swiperImmediateVirtual = false;
            });
        } else {
            if (!swiper.support.smoothScroll) {
                (0, _utilsJs.animateCSSModeScroll)({
                    swiper,
                    targetPosition: t,
                    side: isH ? "left" : "top"
                });
                return true;
            }
            wrapperEl.scrollTo({
                [isH ? "left" : "top"]: t,
                behavior: "smooth"
            });
        }
        return true;
    }
    swiper.setTransition(speed);
    swiper.setTranslate(translate);
    swiper.updateActiveIndex(slideIndex);
    swiper.updateSlidesClasses();
    swiper.emit("beforeTransitionStart", speed, internal);
    swiper.transitionStart(runCallbacks, direction);
    if (speed === 0) swiper.transitionEnd(runCallbacks, direction);
    else if (!swiper.animating) {
        swiper.animating = true;
        if (!swiper.onSlideToWrapperTransitionEnd) swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {
            if (!swiper || swiper.destroyed) return;
            if (e.target !== this) return;
            swiper.$wrapperEl[0].removeEventListener("transitionend", swiper.onSlideToWrapperTransitionEnd);
            swiper.$wrapperEl[0].removeEventListener("webkitTransitionEnd", swiper.onSlideToWrapperTransitionEnd);
            swiper.onSlideToWrapperTransitionEnd = null;
            delete swiper.onSlideToWrapperTransitionEnd;
            swiper.transitionEnd(runCallbacks, direction);
        };
        swiper.$wrapperEl[0].addEventListener("transitionend", swiper.onSlideToWrapperTransitionEnd);
        swiper.$wrapperEl[0].addEventListener("webkitTransitionEnd", swiper.onSlideToWrapperTransitionEnd);
    }
    return true;
}
exports.default = slideTo;

},{"../../shared/utils.js":"hr9mL","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"aNbvL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {
    if (typeof index === "string") {
        /**
     * The `index` argument converted from `string` to `number`.
     * @type {number}
     */ const indexAsNumber = parseInt(index, 10);
        /**
     * Determines whether the `index` argument is a valid `number`
     * after being converted from the `string` type.
     * @type {boolean}
     */ const isValidNumber = isFinite(indexAsNumber);
        if (!isValidNumber) throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${index}] given.`);
         // Knowing that the converted `index` is a valid number,
        // we can update the original argument's value.
        index = indexAsNumber;
    }
    const swiper = this;
    let newIndex = index;
    if (swiper.params.loop) newIndex += swiper.loopedSlides;
    return swiper.slideTo(newIndex, speed, runCallbacks, internal);
}
exports.default = slideToLoop;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"2JCH7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function slideNext(speed = this.params.speed, runCallbacks = true, internal) {
    const swiper = this;
    const { animating , enabled , params  } = swiper;
    if (!enabled) return swiper;
    let perGroup = params.slidesPerGroup;
    if (params.slidesPerView === "auto" && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) perGroup = Math.max(swiper.slidesPerViewDynamic("current", true), 1);
    const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;
    if (params.loop) {
        if (animating && params.loopPreventsSlide) return false;
        swiper.loopFix(); // eslint-disable-next-line
        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;
    }
    if (params.rewind && swiper.isEnd) return swiper.slideTo(0, speed, runCallbacks, internal);
    return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);
}
exports.default = slideNext;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"9hrN2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {
    const swiper = this;
    const { params , animating , snapGrid , slidesGrid , rtlTranslate , enabled  } = swiper;
    if (!enabled) return swiper;
    if (params.loop) {
        if (animating && params.loopPreventsSlide) return false;
        swiper.loopFix(); // eslint-disable-next-line
        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;
    }
    const translate = rtlTranslate ? swiper.translate : -swiper.translate;
    function normalize(val) {
        if (val < 0) return -Math.floor(Math.abs(val));
        return Math.floor(val);
    }
    const normalizedTranslate = normalize(translate);
    const normalizedSnapGrid = snapGrid.map((val)=>normalize(val));
    let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];
    if (typeof prevSnap === "undefined" && params.cssMode) {
        let prevSnapIndex;
        snapGrid.forEach((snap, snapIndex)=>{
            if (normalizedTranslate >= snap) // prevSnap = snap;
            prevSnapIndex = snapIndex;
        });
        if (typeof prevSnapIndex !== "undefined") prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];
    }
    let prevIndex = 0;
    if (typeof prevSnap !== "undefined") {
        prevIndex = slidesGrid.indexOf(prevSnap);
        if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;
        if (params.slidesPerView === "auto" && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {
            prevIndex = prevIndex - swiper.slidesPerViewDynamic("previous", true) + 1;
            prevIndex = Math.max(prevIndex, 0);
        }
    }
    if (params.rewind && swiper.isBeginning) {
        const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;
        return swiper.slideTo(lastIndex, speed, runCallbacks, internal);
    }
    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);
}
exports.default = slidePrev;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"dyB0y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function slideReset(speed = this.params.speed, runCallbacks = true, internal) {
    const swiper = this;
    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);
}
exports.default = slideReset;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"01X2I":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {
    const swiper = this;
    let index = swiper.activeIndex;
    const skip = Math.min(swiper.params.slidesPerGroupSkip, index);
    const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);
    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;
    if (translate >= swiper.snapGrid[snapIndex]) {
        // The current translate is on or after the current snap index, so the choice
        // is between the current index and the one after it.
        const currentSnap = swiper.snapGrid[snapIndex];
        const nextSnap = swiper.snapGrid[snapIndex + 1];
        if (translate - currentSnap > (nextSnap - currentSnap) * threshold) index += swiper.params.slidesPerGroup;
    } else {
        // The current translate is before the current snap index, so the choice
        // is between the current index and the one before it.
        const prevSnap = swiper.snapGrid[snapIndex - 1];
        const currentSnap1 = swiper.snapGrid[snapIndex];
        if (translate - prevSnap <= (currentSnap1 - prevSnap) * threshold) index -= swiper.params.slidesPerGroup;
    }
    index = Math.max(index, 0);
    index = Math.min(index, swiper.slidesGrid.length - 1);
    return swiper.slideTo(index, speed, runCallbacks, internal);
}
exports.default = slideToClosest;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"dDHpD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _domJs = require("../../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
var _utilsJs = require("../../shared/utils.js");
function slideToClickedSlide() {
    const swiper = this;
    const { params , $wrapperEl  } = swiper;
    const slidesPerView = params.slidesPerView === "auto" ? swiper.slidesPerViewDynamic() : params.slidesPerView;
    let slideToIndex = swiper.clickedIndex;
    let realIndex;
    if (params.loop) {
        if (swiper.animating) return;
        realIndex = parseInt((0, _domJsDefault.default)(swiper.clickedSlide).attr("data-swiper-slide-index"), 10);
        if (params.centeredSlides) {
            if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {
                swiper.loopFix();
                slideToIndex = $wrapperEl.children(`.${params.slideClass}[data-swiper-slide-index="${realIndex}"]:not(.${params.slideDuplicateClass})`).eq(0).index();
                (0, _utilsJs.nextTick)(()=>{
                    swiper.slideTo(slideToIndex);
                });
            } else swiper.slideTo(slideToIndex);
        } else if (slideToIndex > swiper.slides.length - slidesPerView) {
            swiper.loopFix();
            slideToIndex = $wrapperEl.children(`.${params.slideClass}[data-swiper-slide-index="${realIndex}"]:not(.${params.slideDuplicateClass})`).eq(0).index();
            (0, _utilsJs.nextTick)(()=>{
                swiper.slideTo(slideToIndex);
            });
        } else swiper.slideTo(slideToIndex);
    } else swiper.slideTo(slideToIndex);
}
exports.default = slideToClickedSlide;

},{"../../shared/dom.js":"fSctW","../../shared/utils.js":"hr9mL","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"8FnLv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _loopCreateJs = require("./loopCreate.js");
var _loopCreateJsDefault = parcelHelpers.interopDefault(_loopCreateJs);
var _loopFixJs = require("./loopFix.js");
var _loopFixJsDefault = parcelHelpers.interopDefault(_loopFixJs);
var _loopDestroyJs = require("./loopDestroy.js");
var _loopDestroyJsDefault = parcelHelpers.interopDefault(_loopDestroyJs);
exports.default = {
    loopCreate: (0, _loopCreateJsDefault.default),
    loopFix: (0, _loopFixJsDefault.default),
    loopDestroy: (0, _loopDestroyJsDefault.default)
};

},{"./loopCreate.js":"hjvfp","./loopFix.js":"iMlm2","./loopDestroy.js":"26MRM","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"hjvfp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _ssrWindow = require("ssr-window");
var _domJs = require("../../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
function loopCreate() {
    const swiper = this;
    const document = (0, _ssrWindow.getDocument)();
    const { params , $wrapperEl  } = swiper; // Remove duplicated slides
    const $selector = $wrapperEl.children().length > 0 ? (0, _domJsDefault.default)($wrapperEl.children()[0].parentNode) : $wrapperEl;
    $selector.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();
    let slides = $selector.children(`.${params.slideClass}`);
    if (params.loopFillGroupWithBlank) {
        const blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;
        if (blankSlidesNum !== params.slidesPerGroup) {
            for(let i = 0; i < blankSlidesNum; i += 1){
                const blankNode = (0, _domJsDefault.default)(document.createElement("div")).addClass(`${params.slideClass} ${params.slideBlankClass}`);
                $selector.append(blankNode);
            }
            slides = $selector.children(`.${params.slideClass}`);
        }
    }
    if (params.slidesPerView === "auto" && !params.loopedSlides) params.loopedSlides = slides.length;
    swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));
    swiper.loopedSlides += params.loopAdditionalSlides;
    if (swiper.loopedSlides > slides.length && swiper.params.loopedSlidesLimit) swiper.loopedSlides = slides.length;
    const prependSlides = [];
    const appendSlides = [];
    slides.each((el, index)=>{
        const slide = (0, _domJsDefault.default)(el);
        slide.attr("data-swiper-slide-index", index);
    });
    for(let i1 = 0; i1 < swiper.loopedSlides; i1 += 1){
        const index = i1 - Math.floor(i1 / slides.length) * slides.length;
        appendSlides.push(slides.eq(index)[0]);
        prependSlides.unshift(slides.eq(slides.length - index - 1)[0]);
    }
    for(let i2 = 0; i2 < appendSlides.length; i2 += 1)$selector.append((0, _domJsDefault.default)(appendSlides[i2].cloneNode(true)).addClass(params.slideDuplicateClass));
    for(let i3 = prependSlides.length - 1; i3 >= 0; i3 -= 1)$selector.prepend((0, _domJsDefault.default)(prependSlides[i3].cloneNode(true)).addClass(params.slideDuplicateClass));
}
exports.default = loopCreate;

},{"ssr-window":"d3jFK","../../shared/dom.js":"fSctW","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"iMlm2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function loopFix() {
    const swiper = this;
    swiper.emit("beforeLoopFix");
    const { activeIndex , slides , loopedSlides , allowSlidePrev , allowSlideNext , snapGrid , rtlTranslate: rtl  } = swiper;
    let newIndex;
    swiper.allowSlidePrev = true;
    swiper.allowSlideNext = true;
    const snapTranslate = -snapGrid[activeIndex];
    const diff = snapTranslate - swiper.getTranslate(); // Fix For Negative Oversliding
    if (activeIndex < loopedSlides) {
        newIndex = slides.length - loopedSlides * 3 + activeIndex;
        newIndex += loopedSlides;
        const slideChanged = swiper.slideTo(newIndex, 0, false, true);
        if (slideChanged && diff !== 0) swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);
    } else if (activeIndex >= slides.length - loopedSlides) {
        // Fix For Positive Oversliding
        newIndex = -slides.length + activeIndex + loopedSlides;
        newIndex += loopedSlides;
        const slideChanged1 = swiper.slideTo(newIndex, 0, false, true);
        if (slideChanged1 && diff !== 0) swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);
    }
    swiper.allowSlidePrev = allowSlidePrev;
    swiper.allowSlideNext = allowSlideNext;
    swiper.emit("loopFix");
}
exports.default = loopFix;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"26MRM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function loopDestroy() {
    const swiper = this;
    const { $wrapperEl , params , slides  } = swiper;
    $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();
    slides.removeAttr("data-swiper-slide-index");
}
exports.default = loopDestroy;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"jmzNi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _setGrabCursorJs = require("./setGrabCursor.js");
var _setGrabCursorJsDefault = parcelHelpers.interopDefault(_setGrabCursorJs);
var _unsetGrabCursorJs = require("./unsetGrabCursor.js");
var _unsetGrabCursorJsDefault = parcelHelpers.interopDefault(_unsetGrabCursorJs);
exports.default = {
    setGrabCursor: (0, _setGrabCursorJsDefault.default),
    unsetGrabCursor: (0, _unsetGrabCursorJsDefault.default)
};

},{"./setGrabCursor.js":"dyT5z","./unsetGrabCursor.js":"ajpay","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"dyT5z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function setGrabCursor(moving) {
    const swiper = this;
    if (swiper.support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;
    const el = swiper.params.touchEventsTarget === "container" ? swiper.el : swiper.wrapperEl;
    el.style.cursor = "move";
    el.style.cursor = moving ? "grabbing" : "grab";
}
exports.default = setGrabCursor;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"ajpay":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function unsetGrabCursor() {
    const swiper = this;
    if (swiper.support.touch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;
    swiper[swiper.params.touchEventsTarget === "container" ? "el" : "wrapperEl"].style.cursor = "";
}
exports.default = unsetGrabCursor;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"7tVEy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _ssrWindow = require("ssr-window");
var _onTouchStartJs = require("./onTouchStart.js");
var _onTouchStartJsDefault = parcelHelpers.interopDefault(_onTouchStartJs);
var _onTouchMoveJs = require("./onTouchMove.js");
var _onTouchMoveJsDefault = parcelHelpers.interopDefault(_onTouchMoveJs);
var _onTouchEndJs = require("./onTouchEnd.js");
var _onTouchEndJsDefault = parcelHelpers.interopDefault(_onTouchEndJs);
var _onResizeJs = require("./onResize.js");
var _onResizeJsDefault = parcelHelpers.interopDefault(_onResizeJs);
var _onClickJs = require("./onClick.js");
var _onClickJsDefault = parcelHelpers.interopDefault(_onClickJs);
var _onScrollJs = require("./onScroll.js");
var _onScrollJsDefault = parcelHelpers.interopDefault(_onScrollJs);
let dummyEventAttached = false;
function dummyEventListener() {}
const events = (swiper, method)=>{
    const document = (0, _ssrWindow.getDocument)();
    const { params , touchEvents , el , wrapperEl , device , support  } = swiper;
    const capture = !!params.nested;
    const domMethod = method === "on" ? "addEventListener" : "removeEventListener";
    const swiperMethod = method; // Touch Events
    if (!support.touch) {
        el[domMethod](touchEvents.start, swiper.onTouchStart, false);
        document[domMethod](touchEvents.move, swiper.onTouchMove, capture);
        document[domMethod](touchEvents.end, swiper.onTouchEnd, false);
    } else {
        const passiveListener = touchEvents.start === "touchstart" && support.passiveListener && params.passiveListeners ? {
            passive: true,
            capture: false
        } : false;
        el[domMethod](touchEvents.start, swiper.onTouchStart, passiveListener);
        el[domMethod](touchEvents.move, swiper.onTouchMove, support.passiveListener ? {
            passive: false,
            capture
        } : capture);
        el[domMethod](touchEvents.end, swiper.onTouchEnd, passiveListener);
        if (touchEvents.cancel) el[domMethod](touchEvents.cancel, swiper.onTouchEnd, passiveListener);
    } // Prevent Links Clicks
    if (params.preventClicks || params.preventClicksPropagation) el[domMethod]("click", swiper.onClick, true);
    if (params.cssMode) wrapperEl[domMethod]("scroll", swiper.onScroll);
     // Resize handler
    if (params.updateOnWindowResize) swiper[swiperMethod](device.ios || device.android ? "resize orientationchange observerUpdate" : "resize observerUpdate", (0, _onResizeJsDefault.default), true);
    else swiper[swiperMethod]("observerUpdate", (0, _onResizeJsDefault.default), true);
};
function attachEvents() {
    const swiper = this;
    const document = (0, _ssrWindow.getDocument)();
    const { params , support  } = swiper;
    swiper.onTouchStart = (0, _onTouchStartJsDefault.default).bind(swiper);
    swiper.onTouchMove = (0, _onTouchMoveJsDefault.default).bind(swiper);
    swiper.onTouchEnd = (0, _onTouchEndJsDefault.default).bind(swiper);
    if (params.cssMode) swiper.onScroll = (0, _onScrollJsDefault.default).bind(swiper);
    swiper.onClick = (0, _onClickJsDefault.default).bind(swiper);
    if (support.touch && !dummyEventAttached) {
        document.addEventListener("touchstart", dummyEventListener);
        dummyEventAttached = true;
    }
    events(swiper, "on");
}
function detachEvents() {
    const swiper = this;
    events(swiper, "off");
}
exports.default = {
    attachEvents,
    detachEvents
};

},{"ssr-window":"d3jFK","./onTouchStart.js":"LOSU4","./onTouchMove.js":"kFU5Z","./onTouchEnd.js":"8yCvB","./onResize.js":"dYhob","./onClick.js":"jmaI7","./onScroll.js":"eEwnK","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"LOSU4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _ssrWindow = require("ssr-window");
var _domJs = require("../../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
var _utilsJs = require("../../shared/utils.js"); // Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd
function closestElement(selector, base = this) {
    function __closestFrom(el) {
        if (!el || el === (0, _ssrWindow.getDocument)() || el === (0, _ssrWindow.getWindow)()) return null;
        if (el.assignedSlot) el = el.assignedSlot;
        const found = el.closest(selector);
        if (!found && !el.getRootNode) return null;
        return found || __closestFrom(el.getRootNode().host);
    }
    return __closestFrom(base);
}
function onTouchStart(event) {
    const swiper = this;
    const document = (0, _ssrWindow.getDocument)();
    const window = (0, _ssrWindow.getWindow)();
    const data = swiper.touchEventsData;
    const { params , touches , enabled  } = swiper;
    if (!enabled) return;
    if (swiper.animating && params.preventInteractionOnTransition) return;
    if (!swiper.animating && params.cssMode && params.loop) swiper.loopFix();
    let e = event;
    if (e.originalEvent) e = e.originalEvent;
    let $targetEl = (0, _domJsDefault.default)(e.target);
    if (params.touchEventsTarget === "wrapper") {
        if (!$targetEl.closest(swiper.wrapperEl).length) return;
    }
    data.isTouchEvent = e.type === "touchstart";
    if (!data.isTouchEvent && "which" in e && e.which === 3) return;
    if (!data.isTouchEvent && "button" in e && e.button > 0) return;
    if (data.isTouched && data.isMoved) return; // change target el for shadow root component
    const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== ""; // eslint-disable-next-line
    const eventPath = event.composedPath ? event.composedPath() : event.path;
    if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) $targetEl = (0, _domJsDefault.default)(eventPath[0]);
    const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;
    const isTargetShadow = !!(e.target && e.target.shadowRoot); // use closestElement for shadow root element to get the actual closest for nested shadow root element
    if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, $targetEl[0]) : $targetEl.closest(noSwipingSelector)[0])) {
        swiper.allowClick = true;
        return;
    }
    if (params.swipeHandler) {
        if (!$targetEl.closest(params.swipeHandler)[0]) return;
    }
    touches.currentX = e.type === "touchstart" ? e.targetTouches[0].pageX : e.pageX;
    touches.currentY = e.type === "touchstart" ? e.targetTouches[0].pageY : e.pageY;
    const startX = touches.currentX;
    const startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore
    const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;
    const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;
    if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {
        if (edgeSwipeDetection === "prevent") event.preventDefault();
        else return;
    }
    Object.assign(data, {
        isTouched: true,
        isMoved: false,
        allowTouchCallbacks: true,
        isScrolling: undefined,
        startMoving: undefined
    });
    touches.startX = startX;
    touches.startY = startY;
    data.touchStartTime = (0, _utilsJs.now)();
    swiper.allowClick = true;
    swiper.updateSize();
    swiper.swipeDirection = undefined;
    if (params.threshold > 0) data.allowThresholdMove = false;
    if (e.type !== "touchstart") {
        let preventDefault = true;
        if ($targetEl.is(data.focusableElements)) {
            preventDefault = false;
            if ($targetEl[0].nodeName === "SELECT") data.isTouched = false;
        }
        if (document.activeElement && (0, _domJsDefault.default)(document.activeElement).is(data.focusableElements) && document.activeElement !== $targetEl[0]) document.activeElement.blur();
        const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;
        if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !$targetEl[0].isContentEditable) e.preventDefault();
    }
    if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) swiper.freeMode.onTouchStart();
    swiper.emit("touchStart", e);
}
exports.default = onTouchStart;

},{"ssr-window":"d3jFK","../../shared/dom.js":"fSctW","../../shared/utils.js":"hr9mL","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"kFU5Z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _ssrWindow = require("ssr-window");
var _domJs = require("../../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
var _utilsJs = require("../../shared/utils.js");
function onTouchMove(event) {
    const document = (0, _ssrWindow.getDocument)();
    const swiper = this;
    const data = swiper.touchEventsData;
    const { params , touches , rtlTranslate: rtl , enabled  } = swiper;
    if (!enabled) return;
    let e = event;
    if (e.originalEvent) e = e.originalEvent;
    if (!data.isTouched) {
        if (data.startMoving && data.isScrolling) swiper.emit("touchMoveOpposite", e);
        return;
    }
    if (data.isTouchEvent && e.type !== "touchmove") return;
    const targetTouch = e.type === "touchmove" && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);
    const pageX = e.type === "touchmove" ? targetTouch.pageX : e.pageX;
    const pageY = e.type === "touchmove" ? targetTouch.pageY : e.pageY;
    if (e.preventedByNestedSwiper) {
        touches.startX = pageX;
        touches.startY = pageY;
        return;
    }
    if (!swiper.allowTouchMove) {
        if (!(0, _domJsDefault.default)(e.target).is(data.focusableElements)) swiper.allowClick = false;
        if (data.isTouched) {
            Object.assign(touches, {
                startX: pageX,
                startY: pageY,
                currentX: pageX,
                currentY: pageY
            });
            data.touchStartTime = (0, _utilsJs.now)();
        }
        return;
    }
    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {
        if (swiper.isVertical()) // Vertical
        {
            if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {
                data.isTouched = false;
                data.isMoved = false;
                return;
            }
        } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) return;
    }
    if (data.isTouchEvent && document.activeElement) {
        if (e.target === document.activeElement && (0, _domJsDefault.default)(e.target).is(data.focusableElements)) {
            data.isMoved = true;
            swiper.allowClick = false;
            return;
        }
    }
    if (data.allowTouchCallbacks) swiper.emit("touchMove", e);
    if (e.targetTouches && e.targetTouches.length > 1) return;
    touches.currentX = pageX;
    touches.currentY = pageY;
    const diffX = touches.currentX - touches.startX;
    const diffY = touches.currentY - touches.startY;
    if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;
    if (typeof data.isScrolling === "undefined") {
        let touchAngle;
        if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) data.isScrolling = false;
        else // eslint-disable-next-line
        if (diffX * diffX + diffY * diffY >= 25) {
            touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;
            data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;
        }
    }
    if (data.isScrolling) swiper.emit("touchMoveOpposite", e);
    if (typeof data.startMoving === "undefined") {
        if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) data.startMoving = true;
    }
    if (data.isScrolling) {
        data.isTouched = false;
        return;
    }
    if (!data.startMoving) return;
    swiper.allowClick = false;
    if (!params.cssMode && e.cancelable) e.preventDefault();
    if (params.touchMoveStopPropagation && !params.nested) e.stopPropagation();
    if (!data.isMoved) {
        if (params.loop && !params.cssMode) swiper.loopFix();
        data.startTranslate = swiper.getTranslate();
        swiper.setTransition(0);
        if (swiper.animating) swiper.$wrapperEl.trigger("webkitTransitionEnd transitionend");
        data.allowMomentumBounce = false; // Grab Cursor
        if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) swiper.setGrabCursor(true);
        swiper.emit("sliderFirstMove", e);
    }
    swiper.emit("sliderMove", e);
    data.isMoved = true;
    let diff = swiper.isHorizontal() ? diffX : diffY;
    touches.diff = diff;
    diff *= params.touchRatio;
    if (rtl) diff = -diff;
    swiper.swipeDirection = diff > 0 ? "prev" : "next";
    data.currentTranslate = diff + data.startTranslate;
    let disableParentSwiper = true;
    let resistanceRatio = params.resistanceRatio;
    if (params.touchReleaseOnEdges) resistanceRatio = 0;
    if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {
        disableParentSwiper = false;
        if (params.resistance) data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;
    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {
        disableParentSwiper = false;
        if (params.resistance) data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;
    }
    if (disableParentSwiper) e.preventedByNestedSwiper = true;
     // Directions locks
    if (!swiper.allowSlideNext && swiper.swipeDirection === "next" && data.currentTranslate < data.startTranslate) data.currentTranslate = data.startTranslate;
    if (!swiper.allowSlidePrev && swiper.swipeDirection === "prev" && data.currentTranslate > data.startTranslate) data.currentTranslate = data.startTranslate;
    if (!swiper.allowSlidePrev && !swiper.allowSlideNext) data.currentTranslate = data.startTranslate;
     // Threshold
    if (params.threshold > 0) {
        if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {
            if (!data.allowThresholdMove) {
                data.allowThresholdMove = true;
                touches.startX = touches.currentX;
                touches.startY = touches.currentY;
                data.currentTranslate = data.startTranslate;
                touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;
                return;
            }
        } else {
            data.currentTranslate = data.startTranslate;
            return;
        }
    }
    if (!params.followFinger || params.cssMode) return; // Update active index in free mode
    if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {
        swiper.updateActiveIndex();
        swiper.updateSlidesClasses();
    }
    if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) swiper.freeMode.onTouchMove();
     // Update progress
    swiper.updateProgress(data.currentTranslate); // Update translate
    swiper.setTranslate(data.currentTranslate);
}
exports.default = onTouchMove;

},{"ssr-window":"d3jFK","../../shared/dom.js":"fSctW","../../shared/utils.js":"hr9mL","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"8yCvB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _utilsJs = require("../../shared/utils.js");
function onTouchEnd(event) {
    const swiper = this;
    const data = swiper.touchEventsData;
    const { params , touches , rtlTranslate: rtl , slidesGrid , enabled  } = swiper;
    if (!enabled) return;
    let e = event;
    if (e.originalEvent) e = e.originalEvent;
    if (data.allowTouchCallbacks) swiper.emit("touchEnd", e);
    data.allowTouchCallbacks = false;
    if (!data.isTouched) {
        if (data.isMoved && params.grabCursor) swiper.setGrabCursor(false);
        data.isMoved = false;
        data.startMoving = false;
        return;
    } // Return Grab Cursor
    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) swiper.setGrabCursor(false);
     // Time diff
    const touchEndTime = (0, _utilsJs.now)();
    const timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click
    if (swiper.allowClick) {
        const pathTree = e.path || e.composedPath && e.composedPath();
        swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);
        swiper.emit("tap click", e);
        if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) swiper.emit("doubleTap doubleClick", e);
    }
    data.lastClickTime = (0, _utilsJs.now)();
    (0, _utilsJs.nextTick)(()=>{
        if (!swiper.destroyed) swiper.allowClick = true;
    });
    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {
        data.isTouched = false;
        data.isMoved = false;
        data.startMoving = false;
        return;
    }
    data.isTouched = false;
    data.isMoved = false;
    data.startMoving = false;
    let currentPos;
    if (params.followFinger) currentPos = rtl ? swiper.translate : -swiper.translate;
    else currentPos = -data.currentTranslate;
    if (params.cssMode) return;
    if (swiper.params.freeMode && params.freeMode.enabled) {
        swiper.freeMode.onTouchEnd({
            currentPos
        });
        return;
    } // Find current slide
    let stopIndex = 0;
    let groupSize = swiper.slidesSizesGrid[0];
    for(let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup){
        const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;
        if (typeof slidesGrid[i + increment] !== "undefined") {
            if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {
                stopIndex = i;
                groupSize = slidesGrid[i + increment] - slidesGrid[i];
            }
        } else if (currentPos >= slidesGrid[i]) {
            stopIndex = i;
            groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];
        }
    }
    let rewindFirstIndex = null;
    let rewindLastIndex = null;
    if (params.rewind) {
        if (swiper.isBeginning) rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;
        else if (swiper.isEnd) rewindFirstIndex = 0;
    } // Find current slide size
    const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;
    const increment1 = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;
    if (timeDiff > params.longSwipesMs) {
        // Long touches
        if (!params.longSwipes) {
            swiper.slideTo(swiper.activeIndex);
            return;
        }
        if (swiper.swipeDirection === "next") {
            if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment1);
            else swiper.slideTo(stopIndex);
        }
        if (swiper.swipeDirection === "prev") {
            if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + increment1);
            else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) swiper.slideTo(rewindLastIndex);
            else swiper.slideTo(stopIndex);
        }
    } else {
        // Short swipes
        if (!params.shortSwipes) {
            swiper.slideTo(swiper.activeIndex);
            return;
        }
        const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);
        if (!isNavButtonTarget) {
            if (swiper.swipeDirection === "next") swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment1);
            if (swiper.swipeDirection === "prev") swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);
        } else if (e.target === swiper.navigation.nextEl) swiper.slideTo(stopIndex + increment1);
        else swiper.slideTo(stopIndex);
    }
}
exports.default = onTouchEnd;

},{"../../shared/utils.js":"hr9mL","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"dYhob":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function onResize() {
    const swiper = this;
    const { params , el  } = swiper;
    if (el && el.offsetWidth === 0) return; // Breakpoints
    if (params.breakpoints) swiper.setBreakpoint();
     // Save locks
    const { allowSlideNext , allowSlidePrev , snapGrid  } = swiper; // Disable locks on resize
    swiper.allowSlideNext = true;
    swiper.allowSlidePrev = true;
    swiper.updateSize();
    swiper.updateSlides();
    swiper.updateSlidesClasses();
    if ((params.slidesPerView === "auto" || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides) swiper.slideTo(swiper.slides.length - 1, 0, false, true);
    else swiper.slideTo(swiper.activeIndex, 0, false, true);
    if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) swiper.autoplay.run();
     // Return locks after resize
    swiper.allowSlidePrev = allowSlidePrev;
    swiper.allowSlideNext = allowSlideNext;
    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) swiper.checkOverflow();
}
exports.default = onResize;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"jmaI7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function onClick(e) {
    const swiper = this;
    if (!swiper.enabled) return;
    if (!swiper.allowClick) {
        if (swiper.params.preventClicks) e.preventDefault();
        if (swiper.params.preventClicksPropagation && swiper.animating) {
            e.stopPropagation();
            e.stopImmediatePropagation();
        }
    }
}
exports.default = onClick;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"eEwnK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function onScroll() {
    const swiper = this;
    const { wrapperEl , rtlTranslate , enabled  } = swiper;
    if (!enabled) return;
    swiper.previousTranslate = swiper.translate;
    if (swiper.isHorizontal()) swiper.translate = -wrapperEl.scrollLeft;
    else swiper.translate = -wrapperEl.scrollTop;
     // eslint-disable-next-line
    if (swiper.translate === 0) swiper.translate = 0;
    swiper.updateActiveIndex();
    swiper.updateSlidesClasses();
    let newProgress;
    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();
    if (translatesDiff === 0) newProgress = 0;
    else newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;
    if (newProgress !== swiper.progress) swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);
    swiper.emit("setTranslate", swiper.translate, false);
}
exports.default = onScroll;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"4ystW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _setBreakpointJs = require("./setBreakpoint.js");
var _setBreakpointJsDefault = parcelHelpers.interopDefault(_setBreakpointJs);
var _getBreakpointJs = require("./getBreakpoint.js");
var _getBreakpointJsDefault = parcelHelpers.interopDefault(_getBreakpointJs);
exports.default = {
    setBreakpoint: (0, _setBreakpointJsDefault.default),
    getBreakpoint: (0, _getBreakpointJsDefault.default)
};

},{"./setBreakpoint.js":"lesJy","./getBreakpoint.js":"1cC8m","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"lesJy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _utilsJs = require("../../shared/utils.js");
const isGridEnabled = (swiper, params)=>{
    return swiper.grid && params.grid && params.grid.rows > 1;
};
function setBreakpoint() {
    const swiper = this;
    const { activeIndex , initialized , loopedSlides =0 , params , $el  } = swiper;
    const breakpoints = params.breakpoints;
    if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters
    const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);
    if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;
    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;
    const breakpointParams = breakpointOnlyParams || swiper.originalParams;
    const wasMultiRow = isGridEnabled(swiper, params);
    const isMultiRow = isGridEnabled(swiper, breakpointParams);
    const wasEnabled = params.enabled;
    if (wasMultiRow && !isMultiRow) {
        $el.removeClass(`${params.containerModifierClass}grid ${params.containerModifierClass}grid-column`);
        swiper.emitContainerClasses();
    } else if (!wasMultiRow && isMultiRow) {
        $el.addClass(`${params.containerModifierClass}grid`);
        if (breakpointParams.grid.fill && breakpointParams.grid.fill === "column" || !breakpointParams.grid.fill && params.grid.fill === "column") $el.addClass(`${params.containerModifierClass}grid-column`);
        swiper.emitContainerClasses();
    } // Toggle navigation, pagination, scrollbar
    [
        "navigation",
        "pagination",
        "scrollbar"
    ].forEach((prop)=>{
        const wasModuleEnabled = params[prop] && params[prop].enabled;
        const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;
        if (wasModuleEnabled && !isModuleEnabled) swiper[prop].disable();
        if (!wasModuleEnabled && isModuleEnabled) swiper[prop].enable();
    });
    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;
    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);
    if (directionChanged && initialized) swiper.changeDirection();
    (0, _utilsJs.extend)(swiper.params, breakpointParams);
    const isEnabled = swiper.params.enabled;
    Object.assign(swiper, {
        allowTouchMove: swiper.params.allowTouchMove,
        allowSlideNext: swiper.params.allowSlideNext,
        allowSlidePrev: swiper.params.allowSlidePrev
    });
    if (wasEnabled && !isEnabled) swiper.disable();
    else if (!wasEnabled && isEnabled) swiper.enable();
    swiper.currentBreakpoint = breakpoint;
    swiper.emit("_beforeBreakpoint", breakpointParams);
    if (needsReLoop && initialized) {
        swiper.loopDestroy();
        swiper.loopCreate();
        swiper.updateSlides();
        swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);
    }
    swiper.emit("breakpoint", breakpointParams);
}
exports.default = setBreakpoint;

},{"../../shared/utils.js":"hr9mL","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"1cC8m":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _ssrWindow = require("ssr-window");
function getBreakpoint(breakpoints, base = "window", containerEl) {
    if (!breakpoints || base === "container" && !containerEl) return undefined;
    let breakpoint = false;
    const window = (0, _ssrWindow.getWindow)();
    const currentHeight = base === "window" ? window.innerHeight : containerEl.clientHeight;
    const points = Object.keys(breakpoints).map((point)=>{
        if (typeof point === "string" && point.indexOf("@") === 0) {
            const minRatio = parseFloat(point.substr(1));
            const value = currentHeight * minRatio;
            return {
                value,
                point
            };
        }
        return {
            value: point,
            point
        };
    });
    points.sort((a, b)=>parseInt(a.value, 10) - parseInt(b.value, 10));
    for(let i = 0; i < points.length; i += 1){
        const { point , value  } = points[i];
        if (base === "window") {
            if (window.matchMedia(`(min-width: ${value}px)`).matches) breakpoint = point;
        } else if (value <= containerEl.clientWidth) breakpoint = point;
    }
    return breakpoint || "max";
}
exports.default = getBreakpoint;

},{"ssr-window":"d3jFK","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"cVRTi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _addClassesJs = require("./addClasses.js");
var _addClassesJsDefault = parcelHelpers.interopDefault(_addClassesJs);
var _removeClassesJs = require("./removeClasses.js");
var _removeClassesJsDefault = parcelHelpers.interopDefault(_removeClassesJs);
exports.default = {
    addClasses: (0, _addClassesJsDefault.default),
    removeClasses: (0, _removeClassesJsDefault.default)
};

},{"./addClasses.js":"8HCtQ","./removeClasses.js":"8Occm","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"8HCtQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function prepareClasses(entries, prefix) {
    const resultClasses = [];
    entries.forEach((item)=>{
        if (typeof item === "object") Object.keys(item).forEach((classNames)=>{
            if (item[classNames]) resultClasses.push(prefix + classNames);
        });
        else if (typeof item === "string") resultClasses.push(prefix + item);
    });
    return resultClasses;
}
function addClasses() {
    const swiper = this;
    const { classNames , params , rtl , $el , device , support  } = swiper; // prettier-ignore
    const suffixes = prepareClasses([
        "initialized",
        params.direction,
        {
            "pointer-events": !support.touch
        },
        {
            "free-mode": swiper.params.freeMode && params.freeMode.enabled
        },
        {
            "autoheight": params.autoHeight
        },
        {
            "rtl": rtl
        },
        {
            "grid": params.grid && params.grid.rows > 1
        },
        {
            "grid-column": params.grid && params.grid.rows > 1 && params.grid.fill === "column"
        },
        {
            "android": device.android
        },
        {
            "ios": device.ios
        },
        {
            "css-mode": params.cssMode
        },
        {
            "centered": params.cssMode && params.centeredSlides
        },
        {
            "watch-progress": params.watchSlidesProgress
        }
    ], params.containerModifierClass);
    classNames.push(...suffixes);
    $el.addClass([
        ...classNames
    ].join(" "));
    swiper.emitContainerClasses();
}
exports.default = addClasses;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"8Occm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function removeClasses() {
    const swiper = this;
    const { $el , classNames  } = swiper;
    $el.removeClass(classNames.join(" "));
    swiper.emitContainerClasses();
}
exports.default = removeClasses;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"dXTAC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _loadImageJs = require("./loadImage.js");
var _loadImageJsDefault = parcelHelpers.interopDefault(_loadImageJs);
var _preloadImagesJs = require("./preloadImages.js");
var _preloadImagesJsDefault = parcelHelpers.interopDefault(_preloadImagesJs);
exports.default = {
    loadImage: (0, _loadImageJsDefault.default),
    preloadImages: (0, _preloadImagesJsDefault.default)
};

},{"./loadImage.js":"bx2Bx","./preloadImages.js":"03dYu","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"bx2Bx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _ssrWindow = require("ssr-window");
var _domJs = require("../../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {
    const window = (0, _ssrWindow.getWindow)();
    let image;
    function onReady() {
        if (callback) callback();
    }
    const isPicture = (0, _domJsDefault.default)(imageEl).parent("picture")[0];
    if (!isPicture && (!imageEl.complete || !checkForComplete)) {
        if (src) {
            image = new window.Image();
            image.onload = onReady;
            image.onerror = onReady;
            if (sizes) image.sizes = sizes;
            if (srcset) image.srcset = srcset;
            if (src) image.src = src;
        } else onReady();
    } else // image already loaded...
    onReady();
}
exports.default = loadImage;

},{"ssr-window":"d3jFK","../../shared/dom.js":"fSctW","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"03dYu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function preloadImages() {
    const swiper = this;
    swiper.imagesToLoad = swiper.$el.find("img");
    function onReady() {
        if (typeof swiper === "undefined" || swiper === null || !swiper || swiper.destroyed) return;
        if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;
        if (swiper.imagesLoaded === swiper.imagesToLoad.length) {
            if (swiper.params.updateOnImagesReady) swiper.update();
            swiper.emit("imagesReady");
        }
    }
    for(let i = 0; i < swiper.imagesToLoad.length; i += 1){
        const imageEl = swiper.imagesToLoad[i];
        swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute("src"), imageEl.srcset || imageEl.getAttribute("srcset"), imageEl.sizes || imageEl.getAttribute("sizes"), true, onReady);
    }
}
exports.default = preloadImages;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"iOuBv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function checkOverflow() {
    const swiper = this;
    const { isLocked: wasLocked , params  } = swiper;
    const { slidesOffsetBefore  } = params;
    if (slidesOffsetBefore) {
        const lastSlideIndex = swiper.slides.length - 1;
        const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;
        swiper.isLocked = swiper.size > lastSlideRightEdge;
    } else swiper.isLocked = swiper.snapGrid.length === 1;
    if (params.allowSlideNext === true) swiper.allowSlideNext = !swiper.isLocked;
    if (params.allowSlidePrev === true) swiper.allowSlidePrev = !swiper.isLocked;
    if (wasLocked && wasLocked !== swiper.isLocked) swiper.isEnd = false;
    if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? "lock" : "unlock");
}
exports.default = {
    checkOverflow
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"hQOza":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = {
    init: true,
    direction: "horizontal",
    touchEventsTarget: "wrapper",
    initialSlide: 0,
    speed: 300,
    cssMode: false,
    updateOnWindowResize: true,
    resizeObserver: true,
    nested: false,
    createElements: false,
    enabled: true,
    focusableElements: "input, select, option, textarea, button, video, label",
    // Overrides
    width: null,
    height: null,
    //
    preventInteractionOnTransition: false,
    // ssr
    userAgent: null,
    url: null,
    // To support iOS's swipe-to-go-back gesture (when being used in-app).
    edgeSwipeDetection: false,
    edgeSwipeThreshold: 20,
    // Autoheight
    autoHeight: false,
    // Set wrapper width
    setWrapperSize: false,
    // Virtual Translate
    virtualTranslate: false,
    // Effects
    effect: "slide",
    // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'
    // Breakpoints
    breakpoints: undefined,
    breakpointsBase: "window",
    // Slides grid
    spaceBetween: 0,
    slidesPerView: 1,
    slidesPerGroup: 1,
    slidesPerGroupSkip: 0,
    slidesPerGroupAuto: false,
    centeredSlides: false,
    centeredSlidesBounds: false,
    slidesOffsetBefore: 0,
    // in px
    slidesOffsetAfter: 0,
    // in px
    normalizeSlideIndex: true,
    centerInsufficientSlides: false,
    // Disable swiper and hide navigation when container not overflow
    watchOverflow: true,
    // Round length
    roundLengths: false,
    // Touches
    touchRatio: 1,
    touchAngle: 45,
    simulateTouch: true,
    shortSwipes: true,
    longSwipes: true,
    longSwipesRatio: 0.5,
    longSwipesMs: 300,
    followFinger: true,
    allowTouchMove: true,
    threshold: 0,
    touchMoveStopPropagation: false,
    touchStartPreventDefault: true,
    touchStartForcePreventDefault: false,
    touchReleaseOnEdges: false,
    // Unique Navigation Elements
    uniqueNavElements: true,
    // Resistance
    resistance: true,
    resistanceRatio: 0.85,
    // Progress
    watchSlidesProgress: false,
    // Cursor
    grabCursor: false,
    // Clicks
    preventClicks: true,
    preventClicksPropagation: true,
    slideToClickedSlide: false,
    // Images
    preloadImages: true,
    updateOnImagesReady: true,
    // loop
    loop: false,
    loopAdditionalSlides: 0,
    loopedSlides: null,
    loopedSlidesLimit: true,
    loopFillGroupWithBlank: false,
    loopPreventsSlide: true,
    // rewind
    rewind: false,
    // Swiping/no swiping
    allowSlidePrev: true,
    allowSlideNext: true,
    swipeHandler: null,
    // '.swipe-handler',
    noSwiping: true,
    noSwipingClass: "swiper-no-swiping",
    noSwipingSelector: null,
    // Passive Listeners
    passiveListeners: true,
    maxBackfaceHiddenSlides: 10,
    // NS
    containerModifierClass: "swiper-",
    // NEW
    slideClass: "swiper-slide",
    slideBlankClass: "swiper-slide-invisible-blank",
    slideActiveClass: "swiper-slide-active",
    slideDuplicateActiveClass: "swiper-slide-duplicate-active",
    slideVisibleClass: "swiper-slide-visible",
    slideDuplicateClass: "swiper-slide-duplicate",
    slideNextClass: "swiper-slide-next",
    slideDuplicateNextClass: "swiper-slide-duplicate-next",
    slidePrevClass: "swiper-slide-prev",
    slideDuplicatePrevClass: "swiper-slide-duplicate-prev",
    wrapperClass: "swiper-wrapper",
    // Callbacks
    runCallbacksOnInit: true,
    // Internals
    _emitClasses: false
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"2Uajx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _utilsJs = require("../shared/utils.js");
function moduleExtendParams(params, allModulesParams) {
    return function extendParams(obj = {}) {
        const moduleParamName = Object.keys(obj)[0];
        const moduleParams = obj[moduleParamName];
        if (typeof moduleParams !== "object" || moduleParams === null) {
            (0, _utilsJs.extend)(allModulesParams, obj);
            return;
        }
        if ([
            "navigation",
            "pagination",
            "scrollbar"
        ].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) params[moduleParamName] = {
            auto: true
        };
        if (!(moduleParamName in params && "enabled" in moduleParams)) {
            (0, _utilsJs.extend)(allModulesParams, obj);
            return;
        }
        if (params[moduleParamName] === true) params[moduleParamName] = {
            enabled: true
        };
        if (typeof params[moduleParamName] === "object" && !("enabled" in params[moduleParamName])) params[moduleParamName].enabled = true;
        if (!params[moduleParamName]) params[moduleParamName] = {
            enabled: false
        };
        (0, _utilsJs.extend)(allModulesParams, obj);
    };
}
exports.default = moduleExtendParams;

},{"../shared/utils.js":"hr9mL","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"6u53y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _domJs = require("../../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
var _utilsJs = require("../../shared/utils.js");
function Virtual({ swiper , extendParams , on , emit  }) {
    extendParams({
        virtual: {
            enabled: false,
            slides: [],
            cache: true,
            renderSlide: null,
            renderExternal: null,
            renderExternalUpdate: true,
            addSlidesBefore: 0,
            addSlidesAfter: 0
        }
    });
    let cssModeTimeout;
    swiper.virtual = {
        cache: {},
        from: undefined,
        to: undefined,
        slides: [],
        offset: 0,
        slidesGrid: []
    };
    function renderSlide(slide, index) {
        const params = swiper.params.virtual;
        if (params.cache && swiper.virtual.cache[index]) return swiper.virtual.cache[index];
        const $slideEl = params.renderSlide ? (0, _domJsDefault.default)(params.renderSlide.call(swiper, slide, index)) : (0, _domJsDefault.default)(`<div class="${swiper.params.slideClass}" data-swiper-slide-index="${index}">${slide}</div>`);
        if (!$slideEl.attr("data-swiper-slide-index")) $slideEl.attr("data-swiper-slide-index", index);
        if (params.cache) swiper.virtual.cache[index] = $slideEl;
        return $slideEl;
    }
    function update(force) {
        const { slidesPerView , slidesPerGroup , centeredSlides  } = swiper.params;
        const { addSlidesBefore , addSlidesAfter  } = swiper.params.virtual;
        const { from: previousFrom , to: previousTo , slides , slidesGrid: previousSlidesGrid , offset: previousOffset  } = swiper.virtual;
        if (!swiper.params.cssMode) swiper.updateActiveIndex();
        const activeIndex = swiper.activeIndex || 0;
        let offsetProp;
        if (swiper.rtlTranslate) offsetProp = "right";
        else offsetProp = swiper.isHorizontal() ? "left" : "top";
        let slidesAfter;
        let slidesBefore;
        if (centeredSlides) {
            slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;
            slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;
        } else {
            slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;
            slidesBefore = slidesPerGroup + addSlidesBefore;
        }
        const from = Math.max((activeIndex || 0) - slidesBefore, 0);
        const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);
        const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);
        Object.assign(swiper.virtual, {
            from,
            to,
            offset,
            slidesGrid: swiper.slidesGrid
        });
        function onRendered() {
            swiper.updateSlides();
            swiper.updateProgress();
            swiper.updateSlidesClasses();
            if (swiper.lazy && swiper.params.lazy.enabled) swiper.lazy.load();
            emit("virtualUpdate");
        }
        if (previousFrom === from && previousTo === to && !force) {
            if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) swiper.slides.css(offsetProp, `${offset}px`);
            swiper.updateProgress();
            emit("virtualUpdate");
            return;
        }
        if (swiper.params.virtual.renderExternal) {
            swiper.params.virtual.renderExternal.call(swiper, {
                offset,
                from,
                to,
                slides: function getSlides() {
                    const slidesToRender = [];
                    for(let i = from; i <= to; i += 1)slidesToRender.push(slides[i]);
                    return slidesToRender;
                }()
            });
            if (swiper.params.virtual.renderExternalUpdate) onRendered();
            else emit("virtualUpdate");
            return;
        }
        const prependIndexes = [];
        const appendIndexes = [];
        if (force) swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();
        else {
            for(let i = previousFrom; i <= previousTo; i += 1)if (i < from || i > to) swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index="${i}"]`).remove();
        }
        for(let i1 = 0; i1 < slides.length; i1 += 1)if (i1 >= from && i1 <= to) {
            if (typeof previousTo === "undefined" || force) appendIndexes.push(i1);
            else {
                if (i1 > previousTo) appendIndexes.push(i1);
                if (i1 < previousFrom) prependIndexes.push(i1);
            }
        }
        appendIndexes.forEach((index)=>{
            swiper.$wrapperEl.append(renderSlide(slides[index], index));
        });
        prependIndexes.sort((a, b)=>b - a).forEach((index)=>{
            swiper.$wrapperEl.prepend(renderSlide(slides[index], index));
        });
        swiper.$wrapperEl.children(".swiper-slide").css(offsetProp, `${offset}px`);
        onRendered();
    }
    function appendSlide(slides) {
        if (typeof slides === "object" && "length" in slides) {
            for(let i = 0; i < slides.length; i += 1)if (slides[i]) swiper.virtual.slides.push(slides[i]);
        } else swiper.virtual.slides.push(slides);
        update(true);
    }
    function prependSlide(slides) {
        const activeIndex = swiper.activeIndex;
        let newActiveIndex = activeIndex + 1;
        let numberOfNewSlides = 1;
        if (Array.isArray(slides)) {
            for(let i = 0; i < slides.length; i += 1)if (slides[i]) swiper.virtual.slides.unshift(slides[i]);
            newActiveIndex = activeIndex + slides.length;
            numberOfNewSlides = slides.length;
        } else swiper.virtual.slides.unshift(slides);
        if (swiper.params.virtual.cache) {
            const cache = swiper.virtual.cache;
            const newCache = {};
            Object.keys(cache).forEach((cachedIndex)=>{
                const $cachedEl = cache[cachedIndex];
                const cachedElIndex = $cachedEl.attr("data-swiper-slide-index");
                if (cachedElIndex) $cachedEl.attr("data-swiper-slide-index", parseInt(cachedElIndex, 10) + numberOfNewSlides);
                newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;
            });
            swiper.virtual.cache = newCache;
        }
        update(true);
        swiper.slideTo(newActiveIndex, 0);
    }
    function removeSlide(slidesIndexes) {
        if (typeof slidesIndexes === "undefined" || slidesIndexes === null) return;
        let activeIndex = swiper.activeIndex;
        if (Array.isArray(slidesIndexes)) for(let i = slidesIndexes.length - 1; i >= 0; i -= 1){
            swiper.virtual.slides.splice(slidesIndexes[i], 1);
            if (swiper.params.virtual.cache) delete swiper.virtual.cache[slidesIndexes[i]];
            if (slidesIndexes[i] < activeIndex) activeIndex -= 1;
            activeIndex = Math.max(activeIndex, 0);
        }
        else {
            swiper.virtual.slides.splice(slidesIndexes, 1);
            if (swiper.params.virtual.cache) delete swiper.virtual.cache[slidesIndexes];
            if (slidesIndexes < activeIndex) activeIndex -= 1;
            activeIndex = Math.max(activeIndex, 0);
        }
        update(true);
        swiper.slideTo(activeIndex, 0);
    }
    function removeAllSlides() {
        swiper.virtual.slides = [];
        if (swiper.params.virtual.cache) swiper.virtual.cache = {};
        update(true);
        swiper.slideTo(0, 0);
    }
    on("beforeInit", ()=>{
        if (!swiper.params.virtual.enabled) return;
        swiper.virtual.slides = swiper.params.virtual.slides;
        swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);
        swiper.params.watchSlidesProgress = true;
        swiper.originalParams.watchSlidesProgress = true;
        if (!swiper.params.initialSlide) update();
    });
    on("setTranslate", ()=>{
        if (!swiper.params.virtual.enabled) return;
        if (swiper.params.cssMode && !swiper._immediateVirtual) {
            clearTimeout(cssModeTimeout);
            cssModeTimeout = setTimeout(()=>{
                update();
            }, 100);
        } else update();
    });
    on("init update resize", ()=>{
        if (!swiper.params.virtual.enabled) return;
        if (swiper.params.cssMode) (0, _utilsJs.setCSSProperty)(swiper.wrapperEl, "--swiper-virtual-size", `${swiper.virtualSize}px`);
    });
    Object.assign(swiper.virtual, {
        appendSlide,
        prependSlide,
        removeSlide,
        removeAllSlides,
        update
    });
}
exports.default = Virtual;

},{"../../shared/dom.js":"fSctW","../../shared/utils.js":"hr9mL","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"7AjEs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/* eslint-disable consistent-return */ var _ssrWindow = require("ssr-window");
var _domJs = require("../../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
function Keyboard({ swiper , extendParams , on , emit  }) {
    const document = (0, _ssrWindow.getDocument)();
    const window = (0, _ssrWindow.getWindow)();
    swiper.keyboard = {
        enabled: false
    };
    extendParams({
        keyboard: {
            enabled: false,
            onlyInViewport: true,
            pageUpDown: true
        }
    });
    function handle(event) {
        if (!swiper.enabled) return;
        const { rtlTranslate: rtl  } = swiper;
        let e = event;
        if (e.originalEvent) e = e.originalEvent; // jquery fix
        const kc = e.keyCode || e.charCode;
        const pageUpDown = swiper.params.keyboard.pageUpDown;
        const isPageUp = pageUpDown && kc === 33;
        const isPageDown = pageUpDown && kc === 34;
        const isArrowLeft = kc === 37;
        const isArrowRight = kc === 39;
        const isArrowUp = kc === 38;
        const isArrowDown = kc === 40; // Directions locks
        if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) return false;
        if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) return false;
        if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) return undefined;
        if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === "input" || document.activeElement.nodeName.toLowerCase() === "textarea")) return undefined;
        if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {
            let inView = false; // Check that swiper should be inside of visible area of window
            if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) return undefined;
            const $el = swiper.$el;
            const swiperWidth = $el[0].clientWidth;
            const swiperHeight = $el[0].clientHeight;
            const windowWidth = window.innerWidth;
            const windowHeight = window.innerHeight;
            const swiperOffset = swiper.$el.offset();
            if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;
            const swiperCoord = [
                [
                    swiperOffset.left,
                    swiperOffset.top
                ],
                [
                    swiperOffset.left + swiperWidth,
                    swiperOffset.top
                ],
                [
                    swiperOffset.left,
                    swiperOffset.top + swiperHeight
                ],
                [
                    swiperOffset.left + swiperWidth,
                    swiperOffset.top + swiperHeight
                ]
            ];
            for(let i = 0; i < swiperCoord.length; i += 1){
                const point = swiperCoord[i];
                if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {
                    if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line
                    inView = true;
                }
            }
            if (!inView) return undefined;
        }
        if (swiper.isHorizontal()) {
            if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {
                if (e.preventDefault) e.preventDefault();
                else e.returnValue = false;
            }
            if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();
            if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();
        } else {
            if (isPageUp || isPageDown || isArrowUp || isArrowDown) {
                if (e.preventDefault) e.preventDefault();
                else e.returnValue = false;
            }
            if (isPageDown || isArrowDown) swiper.slideNext();
            if (isPageUp || isArrowUp) swiper.slidePrev();
        }
        emit("keyPress", kc);
        return undefined;
    }
    function enable() {
        if (swiper.keyboard.enabled) return;
        (0, _domJsDefault.default)(document).on("keydown", handle);
        swiper.keyboard.enabled = true;
    }
    function disable() {
        if (!swiper.keyboard.enabled) return;
        (0, _domJsDefault.default)(document).off("keydown", handle);
        swiper.keyboard.enabled = false;
    }
    on("init", ()=>{
        if (swiper.params.keyboard.enabled) enable();
    });
    on("destroy", ()=>{
        if (swiper.keyboard.enabled) disable();
    });
    Object.assign(swiper.keyboard, {
        enable,
        disable
    });
}
exports.default = Keyboard;

},{"ssr-window":"d3jFK","../../shared/dom.js":"fSctW","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"j4uiT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/* eslint-disable consistent-return */ var _ssrWindow = require("ssr-window");
var _domJs = require("../../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
var _utilsJs = require("../../shared/utils.js");
function Mousewheel({ swiper , extendParams , on , emit  }) {
    const window = (0, _ssrWindow.getWindow)();
    extendParams({
        mousewheel: {
            enabled: false,
            releaseOnEdges: false,
            invert: false,
            forceToAxis: false,
            sensitivity: 1,
            eventsTarget: "container",
            thresholdDelta: null,
            thresholdTime: null
        }
    });
    swiper.mousewheel = {
        enabled: false
    };
    let timeout;
    let lastScrollTime = (0, _utilsJs.now)();
    let lastEventBeforeSnap;
    const recentWheelEvents = [];
    function normalize(e) {
        // Reasonable defaults
        const PIXEL_STEP = 10;
        const LINE_HEIGHT = 40;
        const PAGE_HEIGHT = 800;
        let sX = 0;
        let sY = 0; // spinX, spinY
        let pX = 0;
        let pY = 0; // pixelX, pixelY
        // Legacy
        if ("detail" in e) sY = e.detail;
        if ("wheelDelta" in e) sY = -e.wheelDelta / 120;
        if ("wheelDeltaY" in e) sY = -e.wheelDeltaY / 120;
        if ("wheelDeltaX" in e) sX = -e.wheelDeltaX / 120;
         // side scrolling on FF with DOMMouseScroll
        if ("axis" in e && e.axis === e.HORIZONTAL_AXIS) {
            sX = sY;
            sY = 0;
        }
        pX = sX * PIXEL_STEP;
        pY = sY * PIXEL_STEP;
        if ("deltaY" in e) pY = e.deltaY;
        if ("deltaX" in e) pX = e.deltaX;
        if (e.shiftKey && !pX) {
            // if user scrolls with shift he wants horizontal scroll
            pX = pY;
            pY = 0;
        }
        if ((pX || pY) && e.deltaMode) {
            if (e.deltaMode === 1) {
                // delta in LINE units
                pX *= LINE_HEIGHT;
                pY *= LINE_HEIGHT;
            } else {
                // delta in PAGE units
                pX *= PAGE_HEIGHT;
                pY *= PAGE_HEIGHT;
            }
        } // Fall-back if spin cannot be determined
        if (pX && !sX) sX = pX < 1 ? -1 : 1;
        if (pY && !sY) sY = pY < 1 ? -1 : 1;
        return {
            spinX: sX,
            spinY: sY,
            pixelX: pX,
            pixelY: pY
        };
    }
    function handleMouseEnter() {
        if (!swiper.enabled) return;
        swiper.mouseEntered = true;
    }
    function handleMouseLeave() {
        if (!swiper.enabled) return;
        swiper.mouseEntered = false;
    }
    function animateSlider(newEvent) {
        if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) // Prevent if delta of wheel scroll delta is below configured threshold
        return false;
        if (swiper.params.mousewheel.thresholdTime && (0, _utilsJs.now)() - lastScrollTime < swiper.params.mousewheel.thresholdTime) // Prevent if time between scrolls is below configured threshold
        return false;
         // If the movement is NOT big enough and
        // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):
        //   Don't go any further (avoid insignificant scroll movement).
        if (newEvent.delta >= 6 && (0, _utilsJs.now)() - lastScrollTime < 60) // Return false as a default
        return true;
         // If user is scrolling towards the end:
        //   If the slider hasn't hit the latest slide or
        //   if the slider is a loop and
        //   if the slider isn't moving right now:
        //     Go to next slide and
        //     emit a scroll event.
        // Else (the user is scrolling towards the beginning) and
        // if the slider hasn't hit the first slide or
        // if the slider is a loop and
        // if the slider isn't moving right now:
        //   Go to prev slide and
        //   emit a scroll event.
        if (newEvent.direction < 0) {
            if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {
                swiper.slideNext();
                emit("scroll", newEvent.raw);
            }
        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {
            swiper.slidePrev();
            emit("scroll", newEvent.raw);
        } // If you got here is because an animation has been triggered so store the current time
        lastScrollTime = new window.Date().getTime(); // Return false as a default
        return false;
    }
    function releaseScroll(newEvent) {
        const params = swiper.params.mousewheel;
        if (newEvent.direction < 0) {
            if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) // Return true to animate scroll on edges
            return true;
        } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) // Return true to animate scroll on edges
        return true;
        return false;
    }
    function handle(event1) {
        let e = event1;
        let disableParentSwiper = true;
        if (!swiper.enabled) return;
        const params = swiper.params.mousewheel;
        if (swiper.params.cssMode) e.preventDefault();
        let target = swiper.$el;
        if (swiper.params.mousewheel.eventsTarget !== "container") target = (0, _domJsDefault.default)(swiper.params.mousewheel.eventsTarget);
        if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;
        if (e.originalEvent) e = e.originalEvent; // jquery fix
        let delta = 0;
        const rtlFactor = swiper.rtlTranslate ? -1 : 1;
        const data = normalize(e);
        if (params.forceToAxis) {
            if (swiper.isHorizontal()) {
                if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;
                else return true;
            } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;
            else return true;
        } else delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;
        if (delta === 0) return true;
        if (params.invert) delta = -delta; // Get the scroll positions
        let positions = swiper.getTranslate() + delta * params.sensitivity;
        if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();
        if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate(); // When loop is true:
        //     the disableParentSwiper will be true.
        // When loop is false:
        //     if the scroll positions is not on edge,
        //     then the disableParentSwiper will be true.
        //     if the scroll on edge positions,
        //     then the disableParentSwiper will be false.
        disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());
        if (disableParentSwiper && swiper.params.nested) e.stopPropagation();
        if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {
            // Register the new event in a variable which stores the relevant data
            const newEvent = {
                time: (0, _utilsJs.now)(),
                delta: Math.abs(delta),
                direction: Math.sign(delta),
                raw: event1
            }; // Keep the most recent events
            if (recentWheelEvents.length >= 2) recentWheelEvents.shift(); // only store the last N events
            const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;
            recentWheelEvents.push(newEvent); // If there is at least one previous recorded event:
            //   If direction has changed or
            //   if the scroll is quicker than the previous one:
            //     Animate the slider.
            // Else (this is the first time the wheel is moved):
            //     Animate the slider.
            if (prevEvent) {
                if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) animateSlider(newEvent);
            } else animateSlider(newEvent);
             // If it's time to release the scroll:
            //   Return now so you don't hit the preventDefault.
            if (releaseScroll(newEvent)) return true;
        } else {
            // Freemode or scrollContainer:
            // If we recently snapped after a momentum scroll, then ignore wheel events
            // to give time for the deceleration to finish. Stop ignoring after 500 msecs
            // or if it's a new scroll (larger delta or inverse sign as last event before
            // an end-of-momentum snap).
            const newEvent1 = {
                time: (0, _utilsJs.now)(),
                delta: Math.abs(delta),
                direction: Math.sign(delta)
            };
            const ignoreWheelEvents = lastEventBeforeSnap && newEvent1.time < lastEventBeforeSnap.time + 500 && newEvent1.delta <= lastEventBeforeSnap.delta && newEvent1.direction === lastEventBeforeSnap.direction;
            if (!ignoreWheelEvents) {
                lastEventBeforeSnap = undefined;
                if (swiper.params.loop) swiper.loopFix();
                let position = swiper.getTranslate() + delta * params.sensitivity;
                const wasBeginning = swiper.isBeginning;
                const wasEnd = swiper.isEnd;
                if (position >= swiper.minTranslate()) position = swiper.minTranslate();
                if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();
                swiper.setTransition(0);
                swiper.setTranslate(position);
                swiper.updateProgress();
                swiper.updateActiveIndex();
                swiper.updateSlidesClasses();
                if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) swiper.updateSlidesClasses();
                if (swiper.params.freeMode.sticky) {
                    // When wheel scrolling starts with sticky (aka snap) enabled, then detect
                    // the end of a momentum scroll by storing recent (N=15?) wheel events.
                    // 1. do all N events have decreasing or same (absolute value) delta?
                    // 2. did all N events arrive in the last M (M=500?) msecs?
                    // 3. does the earliest event have an (absolute value) delta that's
                    //    at least P (P=1?) larger than the most recent event's delta?
                    // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?
                    // If 1-4 are "yes" then we're near the end of a momentum scroll deceleration.
                    // Snap immediately and ignore remaining wheel events in this scroll.
                    // See comment above for "remaining wheel events in this scroll" determination.
                    // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.
                    clearTimeout(timeout);
                    timeout = undefined;
                    if (recentWheelEvents.length >= 15) recentWheelEvents.shift(); // only store the last N events
                    const prevEvent1 = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;
                    const firstEvent = recentWheelEvents[0];
                    recentWheelEvents.push(newEvent1);
                    if (prevEvent1 && (newEvent1.delta > prevEvent1.delta || newEvent1.direction !== prevEvent1.direction)) // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.
                    recentWheelEvents.splice(0);
                    else if (recentWheelEvents.length >= 15 && newEvent1.time - firstEvent.time < 500 && firstEvent.delta - newEvent1.delta >= 1 && newEvent1.delta <= 6) {
                        // We're at the end of the deceleration of a momentum scroll, so there's no need
                        // to wait for more events. Snap ASAP on the next tick.
                        // Also, because there's some remaining momentum we'll bias the snap in the
                        // direction of the ongoing scroll because it's better UX for the scroll to snap
                        // in the same direction as the scroll instead of reversing to snap.  Therefore,
                        // if it's already scrolled more than 20% in the current direction, keep going.
                        const snapToThreshold = delta > 0 ? 0.8 : 0.2;
                        lastEventBeforeSnap = newEvent1;
                        recentWheelEvents.splice(0);
                        timeout = (0, _utilsJs.nextTick)(()=>{
                            swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);
                        }, 0); // no delay; move on next tick
                    }
                    if (!timeout) // if we get here, then we haven't detected the end of a momentum scroll, so
                    // we'll consider a scroll "complete" when there haven't been any wheel events
                    // for 500ms.
                    timeout = (0, _utilsJs.nextTick)(()=>{
                        const snapToThreshold = 0.5;
                        lastEventBeforeSnap = newEvent1;
                        recentWheelEvents.splice(0);
                        swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);
                    }, 500);
                } // Emit event
                if (!ignoreWheelEvents) emit("scroll", e); // Stop autoplay
                if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop(); // Return page scroll on edge positions
                if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;
            }
        }
        if (e.preventDefault) e.preventDefault();
        else e.returnValue = false;
        return false;
    }
    function events(method) {
        let target = swiper.$el;
        if (swiper.params.mousewheel.eventsTarget !== "container") target = (0, _domJsDefault.default)(swiper.params.mousewheel.eventsTarget);
        target[method]("mouseenter", handleMouseEnter);
        target[method]("mouseleave", handleMouseLeave);
        target[method]("wheel", handle);
    }
    function enable() {
        if (swiper.params.cssMode) {
            swiper.wrapperEl.removeEventListener("wheel", handle);
            return true;
        }
        if (swiper.mousewheel.enabled) return false;
        events("on");
        swiper.mousewheel.enabled = true;
        return true;
    }
    function disable() {
        if (swiper.params.cssMode) {
            swiper.wrapperEl.addEventListener(event, handle);
            return true;
        }
        if (!swiper.mousewheel.enabled) return false;
        events("off");
        swiper.mousewheel.enabled = false;
        return true;
    }
    on("init", ()=>{
        if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) disable();
        if (swiper.params.mousewheel.enabled) enable();
    });
    on("destroy", ()=>{
        if (swiper.params.cssMode) enable();
        if (swiper.mousewheel.enabled) disable();
    });
    Object.assign(swiper.mousewheel, {
        enable,
        disable
    });
}
exports.default = Mousewheel;

},{"ssr-window":"d3jFK","../../shared/dom.js":"fSctW","../../shared/utils.js":"hr9mL","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"dRmpf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _createElementIfNotDefinedJs = require("../../shared/create-element-if-not-defined.js");
var _createElementIfNotDefinedJsDefault = parcelHelpers.interopDefault(_createElementIfNotDefinedJs);
var _domJs = require("../../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
function Navigation({ swiper , extendParams , on , emit  }) {
    extendParams({
        navigation: {
            nextEl: null,
            prevEl: null,
            hideOnClick: false,
            disabledClass: "swiper-button-disabled",
            hiddenClass: "swiper-button-hidden",
            lockClass: "swiper-button-lock",
            navigationDisabledClass: "swiper-navigation-disabled"
        }
    });
    swiper.navigation = {
        nextEl: null,
        $nextEl: null,
        prevEl: null,
        $prevEl: null
    };
    function getEl(el) {
        let $el;
        if (el) {
            $el = (0, _domJsDefault.default)(el);
            if (swiper.params.uniqueNavElements && typeof el === "string" && $el.length > 1 && swiper.$el.find(el).length === 1) $el = swiper.$el.find(el);
        }
        return $el;
    }
    function toggleEl($el, disabled) {
        const params = swiper.params.navigation;
        if ($el && $el.length > 0) {
            $el[disabled ? "addClass" : "removeClass"](params.disabledClass);
            if ($el[0] && $el[0].tagName === "BUTTON") $el[0].disabled = disabled;
            if (swiper.params.watchOverflow && swiper.enabled) $el[swiper.isLocked ? "addClass" : "removeClass"](params.lockClass);
        }
    }
    function update() {
        // Update Navigation Buttons
        if (swiper.params.loop) return;
        const { $nextEl , $prevEl  } = swiper.navigation;
        toggleEl($prevEl, swiper.isBeginning && !swiper.params.rewind);
        toggleEl($nextEl, swiper.isEnd && !swiper.params.rewind);
    }
    function onPrevClick(e) {
        e.preventDefault();
        if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;
        swiper.slidePrev();
        emit("navigationPrev");
    }
    function onNextClick(e) {
        e.preventDefault();
        if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;
        swiper.slideNext();
        emit("navigationNext");
    }
    function init() {
        const params = swiper.params.navigation;
        swiper.params.navigation = (0, _createElementIfNotDefinedJsDefault.default)(swiper, swiper.originalParams.navigation, swiper.params.navigation, {
            nextEl: "swiper-button-next",
            prevEl: "swiper-button-prev"
        });
        if (!(params.nextEl || params.prevEl)) return;
        const $nextEl = getEl(params.nextEl);
        const $prevEl = getEl(params.prevEl);
        if ($nextEl && $nextEl.length > 0) $nextEl.on("click", onNextClick);
        if ($prevEl && $prevEl.length > 0) $prevEl.on("click", onPrevClick);
        Object.assign(swiper.navigation, {
            $nextEl,
            nextEl: $nextEl && $nextEl[0],
            $prevEl,
            prevEl: $prevEl && $prevEl[0]
        });
        if (!swiper.enabled) {
            if ($nextEl) $nextEl.addClass(params.lockClass);
            if ($prevEl) $prevEl.addClass(params.lockClass);
        }
    }
    function destroy() {
        const { $nextEl , $prevEl  } = swiper.navigation;
        if ($nextEl && $nextEl.length) {
            $nextEl.off("click", onNextClick);
            $nextEl.removeClass(swiper.params.navigation.disabledClass);
        }
        if ($prevEl && $prevEl.length) {
            $prevEl.off("click", onPrevClick);
            $prevEl.removeClass(swiper.params.navigation.disabledClass);
        }
    }
    on("init", ()=>{
        if (swiper.params.navigation.enabled === false) // eslint-disable-next-line
        disable();
        else {
            init();
            update();
        }
    });
    on("toEdge fromEdge lock unlock", ()=>{
        update();
    });
    on("destroy", ()=>{
        destroy();
    });
    on("enable disable", ()=>{
        const { $nextEl , $prevEl  } = swiper.navigation;
        if ($nextEl) $nextEl[swiper.enabled ? "removeClass" : "addClass"](swiper.params.navigation.lockClass);
        if ($prevEl) $prevEl[swiper.enabled ? "removeClass" : "addClass"](swiper.params.navigation.lockClass);
    });
    on("click", (_s, e)=>{
        const { $nextEl , $prevEl  } = swiper.navigation;
        const targetEl = e.target;
        if (swiper.params.navigation.hideOnClick && !(0, _domJsDefault.default)(targetEl).is($prevEl) && !(0, _domJsDefault.default)(targetEl).is($nextEl)) {
            if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;
            let isHidden;
            if ($nextEl) isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);
            else if ($prevEl) isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);
            if (isHidden === true) emit("navigationShow");
            else emit("navigationHide");
            if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);
            if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);
        }
    });
    const enable = ()=>{
        swiper.$el.removeClass(swiper.params.navigation.navigationDisabledClass);
        init();
        update();
    };
    const disable = ()=>{
        swiper.$el.addClass(swiper.params.navigation.navigationDisabledClass);
        destroy();
    };
    Object.assign(swiper.navigation, {
        enable,
        disable,
        update,
        init,
        destroy
    });
}
exports.default = Navigation;

},{"../../shared/create-element-if-not-defined.js":"9uZbO","../../shared/dom.js":"fSctW","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"9uZbO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _ssrWindow = require("ssr-window");
function createElementIfNotDefined(swiper, originalParams, params, checkProps) {
    const document = (0, _ssrWindow.getDocument)();
    if (swiper.params.createElements) Object.keys(checkProps).forEach((key)=>{
        if (!params[key] && params.auto === true) {
            let element = swiper.$el.children(`.${checkProps[key]}`)[0];
            if (!element) {
                element = document.createElement("div");
                element.className = checkProps[key];
                swiper.$el.append(element);
            }
            params[key] = element;
            originalParams[key] = element;
        }
    });
    return params;
}
exports.default = createElementIfNotDefined;

},{"ssr-window":"d3jFK","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"9Tgv2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _domJs = require("../../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
var _classesToSelectorJs = require("../../shared/classes-to-selector.js");
var _classesToSelectorJsDefault = parcelHelpers.interopDefault(_classesToSelectorJs);
var _createElementIfNotDefinedJs = require("../../shared/create-element-if-not-defined.js");
var _createElementIfNotDefinedJsDefault = parcelHelpers.interopDefault(_createElementIfNotDefinedJs);
function Pagination({ swiper , extendParams , on , emit  }) {
    const pfx = "swiper-pagination";
    extendParams({
        pagination: {
            el: null,
            bulletElement: "span",
            clickable: false,
            hideOnClick: false,
            renderBullet: null,
            renderProgressbar: null,
            renderFraction: null,
            renderCustom: null,
            progressbarOpposite: false,
            type: "bullets",
            // 'bullets' or 'progressbar' or 'fraction' or 'custom'
            dynamicBullets: false,
            dynamicMainBullets: 1,
            formatFractionCurrent: (number)=>number,
            formatFractionTotal: (number)=>number,
            bulletClass: `${pfx}-bullet`,
            bulletActiveClass: `${pfx}-bullet-active`,
            modifierClass: `${pfx}-`,
            currentClass: `${pfx}-current`,
            totalClass: `${pfx}-total`,
            hiddenClass: `${pfx}-hidden`,
            progressbarFillClass: `${pfx}-progressbar-fill`,
            progressbarOppositeClass: `${pfx}-progressbar-opposite`,
            clickableClass: `${pfx}-clickable`,
            lockClass: `${pfx}-lock`,
            horizontalClass: `${pfx}-horizontal`,
            verticalClass: `${pfx}-vertical`,
            paginationDisabledClass: `${pfx}-disabled`
        }
    });
    swiper.pagination = {
        el: null,
        $el: null,
        bullets: []
    };
    let bulletSize;
    let dynamicBulletIndex = 0;
    function isPaginationDisabled() {
        return !swiper.params.pagination.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0;
    }
    function setSideBullets($bulletEl, position) {
        const { bulletActiveClass  } = swiper.params.pagination;
        $bulletEl[position]().addClass(`${bulletActiveClass}-${position}`)[position]().addClass(`${bulletActiveClass}-${position}-${position}`);
    }
    function update() {
        // Render || Update Pagination bullets/items
        const rtl = swiper.rtl;
        const params = swiper.params.pagination;
        if (isPaginationDisabled()) return;
        const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;
        const $el = swiper.pagination.$el; // Current/Total
        let current;
        const total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;
        if (swiper.params.loop) {
            current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);
            if (current > slidesLength - 1 - swiper.loopedSlides * 2) current -= slidesLength - swiper.loopedSlides * 2;
            if (current > total - 1) current -= total;
            if (current < 0 && swiper.params.paginationType !== "bullets") current = total + current;
        } else if (typeof swiper.snapIndex !== "undefined") current = swiper.snapIndex;
        else current = swiper.activeIndex || 0;
         // Types
        if (params.type === "bullets" && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {
            const bullets = swiper.pagination.bullets;
            let firstIndex;
            let lastIndex;
            let midIndex;
            if (params.dynamicBullets) {
                bulletSize = bullets.eq(0)[swiper.isHorizontal() ? "outerWidth" : "outerHeight"](true);
                $el.css(swiper.isHorizontal() ? "width" : "height", `${bulletSize * (params.dynamicMainBullets + 4)}px`);
                if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {
                    dynamicBulletIndex += current - (swiper.previousIndex - swiper.loopedSlides || 0);
                    if (dynamicBulletIndex > params.dynamicMainBullets - 1) dynamicBulletIndex = params.dynamicMainBullets - 1;
                    else if (dynamicBulletIndex < 0) dynamicBulletIndex = 0;
                }
                firstIndex = Math.max(current - dynamicBulletIndex, 0);
                lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);
                midIndex = (lastIndex + firstIndex) / 2;
            }
            bullets.removeClass([
                "",
                "-next",
                "-next-next",
                "-prev",
                "-prev-prev",
                "-main"
            ].map((suffix)=>`${params.bulletActiveClass}${suffix}`).join(" "));
            if ($el.length > 1) bullets.each((bullet)=>{
                const $bullet = (0, _domJsDefault.default)(bullet);
                const bulletIndex = $bullet.index();
                if (bulletIndex === current) $bullet.addClass(params.bulletActiveClass);
                if (params.dynamicBullets) {
                    if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) $bullet.addClass(`${params.bulletActiveClass}-main`);
                    if (bulletIndex === firstIndex) setSideBullets($bullet, "prev");
                    if (bulletIndex === lastIndex) setSideBullets($bullet, "next");
                }
            });
            else {
                const $bullet = bullets.eq(current);
                const bulletIndex = $bullet.index();
                $bullet.addClass(params.bulletActiveClass);
                if (params.dynamicBullets) {
                    const $firstDisplayedBullet = bullets.eq(firstIndex);
                    const $lastDisplayedBullet = bullets.eq(lastIndex);
                    for(let i = firstIndex; i <= lastIndex; i += 1)bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);
                    if (swiper.params.loop) {
                        if (bulletIndex >= bullets.length) {
                            for(let i1 = params.dynamicMainBullets; i1 >= 0; i1 -= 1)bullets.eq(bullets.length - i1).addClass(`${params.bulletActiveClass}-main`);
                            bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(`${params.bulletActiveClass}-prev`);
                        } else {
                            setSideBullets($firstDisplayedBullet, "prev");
                            setSideBullets($lastDisplayedBullet, "next");
                        }
                    } else {
                        setSideBullets($firstDisplayedBullet, "prev");
                        setSideBullets($lastDisplayedBullet, "next");
                    }
                }
            }
            if (params.dynamicBullets) {
                const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);
                const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;
                const offsetProp = rtl ? "right" : "left";
                bullets.css(swiper.isHorizontal() ? offsetProp : "top", `${bulletsOffset}px`);
            }
        }
        if (params.type === "fraction") {
            $el.find((0, _classesToSelectorJsDefault.default)(params.currentClass)).text(params.formatFractionCurrent(current + 1));
            $el.find((0, _classesToSelectorJsDefault.default)(params.totalClass)).text(params.formatFractionTotal(total));
        }
        if (params.type === "progressbar") {
            let progressbarDirection;
            if (params.progressbarOpposite) progressbarDirection = swiper.isHorizontal() ? "vertical" : "horizontal";
            else progressbarDirection = swiper.isHorizontal() ? "horizontal" : "vertical";
            const scale = (current + 1) / total;
            let scaleX = 1;
            let scaleY = 1;
            if (progressbarDirection === "horizontal") scaleX = scale;
            else scaleY = scale;
            $el.find((0, _classesToSelectorJsDefault.default)(params.progressbarFillClass)).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);
        }
        if (params.type === "custom" && params.renderCustom) {
            $el.html(params.renderCustom(swiper, current + 1, total));
            emit("paginationRender", $el[0]);
        } else emit("paginationUpdate", $el[0]);
        if (swiper.params.watchOverflow && swiper.enabled) $el[swiper.isLocked ? "addClass" : "removeClass"](params.lockClass);
    }
    function render() {
        // Render Container
        const params = swiper.params.pagination;
        if (isPaginationDisabled()) return;
        const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;
        const $el = swiper.pagination.$el;
        let paginationHTML = "";
        if (params.type === "bullets") {
            let numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;
            if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.loop && numberOfBullets > slidesLength) numberOfBullets = slidesLength;
            for(let i = 0; i < numberOfBullets; i += 1)if (params.renderBullet) paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);
            else paginationHTML += `<${params.bulletElement} class="${params.bulletClass}"></${params.bulletElement}>`;
            $el.html(paginationHTML);
            swiper.pagination.bullets = $el.find((0, _classesToSelectorJsDefault.default)(params.bulletClass));
        }
        if (params.type === "fraction") {
            if (params.renderFraction) paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);
            else paginationHTML = `<span class="${params.currentClass}"></span>` + " / " + `<span class="${params.totalClass}"></span>`;
            $el.html(paginationHTML);
        }
        if (params.type === "progressbar") {
            if (params.renderProgressbar) paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);
            else paginationHTML = `<span class="${params.progressbarFillClass}"></span>`;
            $el.html(paginationHTML);
        }
        if (params.type !== "custom") emit("paginationRender", swiper.pagination.$el[0]);
    }
    function init() {
        swiper.params.pagination = (0, _createElementIfNotDefinedJsDefault.default)(swiper, swiper.originalParams.pagination, swiper.params.pagination, {
            el: "swiper-pagination"
        });
        const params = swiper.params.pagination;
        if (!params.el) return;
        let $el = (0, _domJsDefault.default)(params.el);
        if ($el.length === 0) return;
        if (swiper.params.uniqueNavElements && typeof params.el === "string" && $el.length > 1) {
            $el = swiper.$el.find(params.el); // check if it belongs to another nested Swiper
            if ($el.length > 1) $el = $el.filter((el)=>{
                if ((0, _domJsDefault.default)(el).parents(".swiper")[0] !== swiper.el) return false;
                return true;
            });
        }
        if (params.type === "bullets" && params.clickable) $el.addClass(params.clickableClass);
        $el.addClass(params.modifierClass + params.type);
        $el.addClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);
        if (params.type === "bullets" && params.dynamicBullets) {
            $el.addClass(`${params.modifierClass}${params.type}-dynamic`);
            dynamicBulletIndex = 0;
            if (params.dynamicMainBullets < 1) params.dynamicMainBullets = 1;
        }
        if (params.type === "progressbar" && params.progressbarOpposite) $el.addClass(params.progressbarOppositeClass);
        if (params.clickable) $el.on("click", (0, _classesToSelectorJsDefault.default)(params.bulletClass), function onClick(e) {
            e.preventDefault();
            let index = (0, _domJsDefault.default)(this).index() * swiper.params.slidesPerGroup;
            if (swiper.params.loop) index += swiper.loopedSlides;
            swiper.slideTo(index);
        });
        Object.assign(swiper.pagination, {
            $el,
            el: $el[0]
        });
        if (!swiper.enabled) $el.addClass(params.lockClass);
    }
    function destroy() {
        const params = swiper.params.pagination;
        if (isPaginationDisabled()) return;
        const $el = swiper.pagination.$el;
        $el.removeClass(params.hiddenClass);
        $el.removeClass(params.modifierClass + params.type);
        $el.removeClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);
        if (swiper.pagination.bullets && swiper.pagination.bullets.removeClass) swiper.pagination.bullets.removeClass(params.bulletActiveClass);
        if (params.clickable) $el.off("click", (0, _classesToSelectorJsDefault.default)(params.bulletClass));
    }
    on("init", ()=>{
        if (swiper.params.pagination.enabled === false) // eslint-disable-next-line
        disable();
        else {
            init();
            render();
            update();
        }
    });
    on("activeIndexChange", ()=>{
        if (swiper.params.loop) update();
        else if (typeof swiper.snapIndex === "undefined") update();
    });
    on("snapIndexChange", ()=>{
        if (!swiper.params.loop) update();
    });
    on("slidesLengthChange", ()=>{
        if (swiper.params.loop) {
            render();
            update();
        }
    });
    on("snapGridLengthChange", ()=>{
        if (!swiper.params.loop) {
            render();
            update();
        }
    });
    on("destroy", ()=>{
        destroy();
    });
    on("enable disable", ()=>{
        const { $el  } = swiper.pagination;
        if ($el) $el[swiper.enabled ? "removeClass" : "addClass"](swiper.params.pagination.lockClass);
    });
    on("lock unlock", ()=>{
        update();
    });
    on("click", (_s, e)=>{
        const targetEl = e.target;
        const { $el  } = swiper.pagination;
        if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && $el && $el.length > 0 && !(0, _domJsDefault.default)(targetEl).hasClass(swiper.params.pagination.bulletClass)) {
            if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;
            const isHidden = $el.hasClass(swiper.params.pagination.hiddenClass);
            if (isHidden === true) emit("paginationShow");
            else emit("paginationHide");
            $el.toggleClass(swiper.params.pagination.hiddenClass);
        }
    });
    const enable = ()=>{
        swiper.$el.removeClass(swiper.params.pagination.paginationDisabledClass);
        if (swiper.pagination.$el) swiper.pagination.$el.removeClass(swiper.params.pagination.paginationDisabledClass);
        init();
        render();
        update();
    };
    const disable = ()=>{
        swiper.$el.addClass(swiper.params.pagination.paginationDisabledClass);
        if (swiper.pagination.$el) swiper.pagination.$el.addClass(swiper.params.pagination.paginationDisabledClass);
        destroy();
    };
    Object.assign(swiper.pagination, {
        enable,
        disable,
        render,
        update,
        init,
        destroy
    });
}
exports.default = Pagination;

},{"../../shared/dom.js":"fSctW","../../shared/classes-to-selector.js":"99TL7","../../shared/create-element-if-not-defined.js":"9uZbO","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"99TL7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function classesToSelector(classes = "") {
    return `.${classes.trim().replace(/([\.:!\/])/g, "\\$1") // eslint-disable-line
    .replace(/ /g, ".")}`;
}
exports.default = classesToSelector;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"4DkLc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _ssrWindow = require("ssr-window");
var _domJs = require("../../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
var _utilsJs = require("../../shared/utils.js");
var _createElementIfNotDefinedJs = require("../../shared/create-element-if-not-defined.js");
var _createElementIfNotDefinedJsDefault = parcelHelpers.interopDefault(_createElementIfNotDefinedJs);
function Scrollbar({ swiper , extendParams , on , emit  }) {
    const document = (0, _ssrWindow.getDocument)();
    let isTouched = false;
    let timeout = null;
    let dragTimeout = null;
    let dragStartPos;
    let dragSize;
    let trackSize;
    let divider;
    extendParams({
        scrollbar: {
            el: null,
            dragSize: "auto",
            hide: false,
            draggable: false,
            snapOnRelease: true,
            lockClass: "swiper-scrollbar-lock",
            dragClass: "swiper-scrollbar-drag",
            scrollbarDisabledClass: "swiper-scrollbar-disabled",
            horizontalClass: `swiper-scrollbar-horizontal`,
            verticalClass: `swiper-scrollbar-vertical`
        }
    });
    swiper.scrollbar = {
        el: null,
        dragEl: null,
        $el: null,
        $dragEl: null
    };
    function setTranslate() {
        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;
        const { scrollbar , rtlTranslate: rtl , progress  } = swiper;
        const { $dragEl , $el  } = scrollbar;
        const params = swiper.params.scrollbar;
        let newSize = dragSize;
        let newPos = (trackSize - dragSize) * progress;
        if (rtl) {
            newPos = -newPos;
            if (newPos > 0) {
                newSize = dragSize - newPos;
                newPos = 0;
            } else if (-newPos + dragSize > trackSize) newSize = trackSize + newPos;
        } else if (newPos < 0) {
            newSize = dragSize + newPos;
            newPos = 0;
        } else if (newPos + dragSize > trackSize) newSize = trackSize - newPos;
        if (swiper.isHorizontal()) {
            $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);
            $dragEl[0].style.width = `${newSize}px`;
        } else {
            $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);
            $dragEl[0].style.height = `${newSize}px`;
        }
        if (params.hide) {
            clearTimeout(timeout);
            $el[0].style.opacity = 1;
            timeout = setTimeout(()=>{
                $el[0].style.opacity = 0;
                $el.transition(400);
            }, 1000);
        }
    }
    function setTransition(duration) {
        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;
        swiper.scrollbar.$dragEl.transition(duration);
    }
    function updateSize() {
        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;
        const { scrollbar  } = swiper;
        const { $dragEl , $el  } = scrollbar;
        $dragEl[0].style.width = "";
        $dragEl[0].style.height = "";
        trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;
        divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));
        if (swiper.params.scrollbar.dragSize === "auto") dragSize = trackSize * divider;
        else dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);
        if (swiper.isHorizontal()) $dragEl[0].style.width = `${dragSize}px`;
        else $dragEl[0].style.height = `${dragSize}px`;
        if (divider >= 1) $el[0].style.display = "none";
        else $el[0].style.display = "";
        if (swiper.params.scrollbar.hide) $el[0].style.opacity = 0;
        if (swiper.params.watchOverflow && swiper.enabled) scrollbar.$el[swiper.isLocked ? "addClass" : "removeClass"](swiper.params.scrollbar.lockClass);
    }
    function getPointerPosition(e) {
        if (swiper.isHorizontal()) return e.type === "touchstart" || e.type === "touchmove" ? e.targetTouches[0].clientX : e.clientX;
        return e.type === "touchstart" || e.type === "touchmove" ? e.targetTouches[0].clientY : e.clientY;
    }
    function setDragPosition(e) {
        const { scrollbar , rtlTranslate: rtl  } = swiper;
        const { $el  } = scrollbar;
        let positionRatio;
        positionRatio = (getPointerPosition(e) - $el.offset()[swiper.isHorizontal() ? "left" : "top"] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);
        positionRatio = Math.max(Math.min(positionRatio, 1), 0);
        if (rtl) positionRatio = 1 - positionRatio;
        const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;
        swiper.updateProgress(position);
        swiper.setTranslate(position);
        swiper.updateActiveIndex();
        swiper.updateSlidesClasses();
    }
    function onDragStart(e) {
        const params = swiper.params.scrollbar;
        const { scrollbar , $wrapperEl  } = swiper;
        const { $el , $dragEl  } = scrollbar;
        isTouched = true;
        dragStartPos = e.target === $dragEl[0] || e.target === $dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? "left" : "top"] : null;
        e.preventDefault();
        e.stopPropagation();
        $wrapperEl.transition(100);
        $dragEl.transition(100);
        setDragPosition(e);
        clearTimeout(dragTimeout);
        $el.transition(0);
        if (params.hide) $el.css("opacity", 1);
        if (swiper.params.cssMode) swiper.$wrapperEl.css("scroll-snap-type", "none");
        emit("scrollbarDragStart", e);
    }
    function onDragMove(e) {
        const { scrollbar , $wrapperEl  } = swiper;
        const { $el , $dragEl  } = scrollbar;
        if (!isTouched) return;
        if (e.preventDefault) e.preventDefault();
        else e.returnValue = false;
        setDragPosition(e);
        $wrapperEl.transition(0);
        $el.transition(0);
        $dragEl.transition(0);
        emit("scrollbarDragMove", e);
    }
    function onDragEnd(e) {
        const params = swiper.params.scrollbar;
        const { scrollbar , $wrapperEl  } = swiper;
        const { $el  } = scrollbar;
        if (!isTouched) return;
        isTouched = false;
        if (swiper.params.cssMode) {
            swiper.$wrapperEl.css("scroll-snap-type", "");
            $wrapperEl.transition("");
        }
        if (params.hide) {
            clearTimeout(dragTimeout);
            dragTimeout = (0, _utilsJs.nextTick)(()=>{
                $el.css("opacity", 0);
                $el.transition(400);
            }, 1000);
        }
        emit("scrollbarDragEnd", e);
        if (params.snapOnRelease) swiper.slideToClosest();
    }
    function events(method) {
        const { scrollbar , touchEventsTouch , touchEventsDesktop , params , support  } = swiper;
        const $el = scrollbar.$el;
        if (!$el) return;
        const target = $el[0];
        const activeListener = support.passiveListener && params.passiveListeners ? {
            passive: false,
            capture: false
        } : false;
        const passiveListener = support.passiveListener && params.passiveListeners ? {
            passive: true,
            capture: false
        } : false;
        if (!target) return;
        const eventMethod = method === "on" ? "addEventListener" : "removeEventListener";
        if (!support.touch) {
            target[eventMethod](touchEventsDesktop.start, onDragStart, activeListener);
            document[eventMethod](touchEventsDesktop.move, onDragMove, activeListener);
            document[eventMethod](touchEventsDesktop.end, onDragEnd, passiveListener);
        } else {
            target[eventMethod](touchEventsTouch.start, onDragStart, activeListener);
            target[eventMethod](touchEventsTouch.move, onDragMove, activeListener);
            target[eventMethod](touchEventsTouch.end, onDragEnd, passiveListener);
        }
    }
    function enableDraggable() {
        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;
        events("on");
    }
    function disableDraggable() {
        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;
        events("off");
    }
    function init() {
        const { scrollbar , $el: $swiperEl  } = swiper;
        swiper.params.scrollbar = (0, _createElementIfNotDefinedJsDefault.default)(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {
            el: "swiper-scrollbar"
        });
        const params = swiper.params.scrollbar;
        if (!params.el) return;
        let $el = (0, _domJsDefault.default)(params.el);
        if (swiper.params.uniqueNavElements && typeof params.el === "string" && $el.length > 1 && $swiperEl.find(params.el).length === 1) $el = $swiperEl.find(params.el);
        $el.addClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);
        let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);
        if ($dragEl.length === 0) {
            $dragEl = (0, _domJsDefault.default)(`<div class="${swiper.params.scrollbar.dragClass}"></div>`);
            $el.append($dragEl);
        }
        Object.assign(scrollbar, {
            $el,
            el: $el[0],
            $dragEl,
            dragEl: $dragEl[0]
        });
        if (params.draggable) enableDraggable();
        if ($el) $el[swiper.enabled ? "removeClass" : "addClass"](swiper.params.scrollbar.lockClass);
    }
    function destroy() {
        const params = swiper.params.scrollbar;
        const $el = swiper.scrollbar.$el;
        if ($el) $el.removeClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);
        disableDraggable();
    }
    on("init", ()=>{
        if (swiper.params.scrollbar.enabled === false) // eslint-disable-next-line
        disable();
        else {
            init();
            updateSize();
            setTranslate();
        }
    });
    on("update resize observerUpdate lock unlock", ()=>{
        updateSize();
    });
    on("setTranslate", ()=>{
        setTranslate();
    });
    on("setTransition", (_s, duration)=>{
        setTransition(duration);
    });
    on("enable disable", ()=>{
        const { $el  } = swiper.scrollbar;
        if ($el) $el[swiper.enabled ? "removeClass" : "addClass"](swiper.params.scrollbar.lockClass);
    });
    on("destroy", ()=>{
        destroy();
    });
    const enable = ()=>{
        swiper.$el.removeClass(swiper.params.scrollbar.scrollbarDisabledClass);
        if (swiper.scrollbar.$el) swiper.scrollbar.$el.removeClass(swiper.params.scrollbar.scrollbarDisabledClass);
        init();
        updateSize();
        setTranslate();
    };
    const disable = ()=>{
        swiper.$el.addClass(swiper.params.scrollbar.scrollbarDisabledClass);
        if (swiper.scrollbar.$el) swiper.scrollbar.$el.addClass(swiper.params.scrollbar.scrollbarDisabledClass);
        destroy();
    };
    Object.assign(swiper.scrollbar, {
        enable,
        disable,
        updateSize,
        setTranslate,
        init,
        destroy
    });
}
exports.default = Scrollbar;

},{"ssr-window":"d3jFK","../../shared/dom.js":"fSctW","../../shared/utils.js":"hr9mL","../../shared/create-element-if-not-defined.js":"9uZbO","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"5K6oK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _domJs = require("../../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
function Parallax({ swiper , extendParams , on  }) {
    extendParams({
        parallax: {
            enabled: false
        }
    });
    const setTransform = (el, progress)=>{
        const { rtl  } = swiper;
        const $el = (0, _domJsDefault.default)(el);
        const rtlFactor = rtl ? -1 : 1;
        const p = $el.attr("data-swiper-parallax") || "0";
        let x = $el.attr("data-swiper-parallax-x");
        let y = $el.attr("data-swiper-parallax-y");
        const scale = $el.attr("data-swiper-parallax-scale");
        const opacity = $el.attr("data-swiper-parallax-opacity");
        if (x || y) {
            x = x || "0";
            y = y || "0";
        } else if (swiper.isHorizontal()) {
            x = p;
            y = "0";
        } else {
            y = p;
            x = "0";
        }
        if (x.indexOf("%") >= 0) x = `${parseInt(x, 10) * progress * rtlFactor}%`;
        else x = `${x * progress * rtlFactor}px`;
        if (y.indexOf("%") >= 0) y = `${parseInt(y, 10) * progress}%`;
        else y = `${y * progress}px`;
        if (typeof opacity !== "undefined" && opacity !== null) {
            const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));
            $el[0].style.opacity = currentOpacity;
        }
        if (typeof scale === "undefined" || scale === null) $el.transform(`translate3d(${x}, ${y}, 0px)`);
        else {
            const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));
            $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);
        }
    };
    const setTranslate = ()=>{
        const { $el , slides , progress , snapGrid  } = swiper;
        $el.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each((el)=>{
            setTransform(el, progress);
        });
        slides.each((slideEl, slideIndex)=>{
            let slideProgress = slideEl.progress;
            if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== "auto") slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);
            slideProgress = Math.min(Math.max(slideProgress, -1), 1);
            (0, _domJsDefault.default)(slideEl).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each((el)=>{
                setTransform(el, slideProgress);
            });
        });
    };
    const setTransition = (duration = swiper.params.speed)=>{
        const { $el  } = swiper;
        $el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each((parallaxEl)=>{
            const $parallaxEl = (0, _domJsDefault.default)(parallaxEl);
            let parallaxDuration = parseInt($parallaxEl.attr("data-swiper-parallax-duration"), 10) || duration;
            if (duration === 0) parallaxDuration = 0;
            $parallaxEl.transition(parallaxDuration);
        });
    };
    on("beforeInit", ()=>{
        if (!swiper.params.parallax.enabled) return;
        swiper.params.watchSlidesProgress = true;
        swiper.originalParams.watchSlidesProgress = true;
    });
    on("init", ()=>{
        if (!swiper.params.parallax.enabled) return;
        setTranslate();
    });
    on("setTranslate", ()=>{
        if (!swiper.params.parallax.enabled) return;
        setTranslate();
    });
    on("setTransition", (_swiper, duration)=>{
        if (!swiper.params.parallax.enabled) return;
        setTransition(duration);
    });
}
exports.default = Parallax;

},{"../../shared/dom.js":"fSctW","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"jZiSp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _ssrWindow = require("ssr-window");
var _domJs = require("../../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
var _utilsJs = require("../../shared/utils.js");
function Zoom({ swiper , extendParams , on , emit  }) {
    const window = (0, _ssrWindow.getWindow)();
    extendParams({
        zoom: {
            enabled: false,
            maxRatio: 3,
            minRatio: 1,
            toggle: true,
            containerClass: "swiper-zoom-container",
            zoomedSlideClass: "swiper-slide-zoomed"
        }
    });
    swiper.zoom = {
        enabled: false
    };
    let currentScale = 1;
    let isScaling = false;
    let gesturesEnabled;
    let fakeGestureTouched;
    let fakeGestureMoved;
    const gesture = {
        $slideEl: undefined,
        slideWidth: undefined,
        slideHeight: undefined,
        $imageEl: undefined,
        $imageWrapEl: undefined,
        maxRatio: 3
    };
    const image = {
        isTouched: undefined,
        isMoved: undefined,
        currentX: undefined,
        currentY: undefined,
        minX: undefined,
        minY: undefined,
        maxX: undefined,
        maxY: undefined,
        width: undefined,
        height: undefined,
        startX: undefined,
        startY: undefined,
        touchesStart: {},
        touchesCurrent: {}
    };
    const velocity = {
        x: undefined,
        y: undefined,
        prevPositionX: undefined,
        prevPositionY: undefined,
        prevTime: undefined
    };
    let scale = 1;
    Object.defineProperty(swiper.zoom, "scale", {
        get () {
            return scale;
        },
        set (value) {
            if (scale !== value) {
                const imageEl = gesture.$imageEl ? gesture.$imageEl[0] : undefined;
                const slideEl = gesture.$slideEl ? gesture.$slideEl[0] : undefined;
                emit("zoomChange", value, imageEl, slideEl);
            }
            scale = value;
        }
    });
    function getDistanceBetweenTouches(e) {
        if (e.targetTouches.length < 2) return 1;
        const x1 = e.targetTouches[0].pageX;
        const y1 = e.targetTouches[0].pageY;
        const x2 = e.targetTouches[1].pageX;
        const y2 = e.targetTouches[1].pageY;
        const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);
        return distance;
    } // Events
    function onGestureStart(e) {
        const support = swiper.support;
        const params = swiper.params.zoom;
        fakeGestureTouched = false;
        fakeGestureMoved = false;
        if (!support.gestures) {
            if (e.type !== "touchstart" || e.type === "touchstart" && e.targetTouches.length < 2) return;
            fakeGestureTouched = true;
            gesture.scaleStart = getDistanceBetweenTouches(e);
        }
        if (!gesture.$slideEl || !gesture.$slideEl.length) {
            gesture.$slideEl = (0, _domJsDefault.default)(e.target).closest(`.${swiper.params.slideClass}`);
            if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);
            gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find("picture, img, svg, canvas, .swiper-zoom-target").eq(0);
            gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);
            gesture.maxRatio = gesture.$imageWrapEl.attr("data-swiper-zoom") || params.maxRatio;
            if (gesture.$imageWrapEl.length === 0) {
                gesture.$imageEl = undefined;
                return;
            }
        }
        if (gesture.$imageEl) gesture.$imageEl.transition(0);
        isScaling = true;
    }
    function onGestureChange(e) {
        const support = swiper.support;
        const params = swiper.params.zoom;
        const zoom = swiper.zoom;
        if (!support.gestures) {
            if (e.type !== "touchmove" || e.type === "touchmove" && e.targetTouches.length < 2) return;
            fakeGestureMoved = true;
            gesture.scaleMove = getDistanceBetweenTouches(e);
        }
        if (!gesture.$imageEl || gesture.$imageEl.length === 0) {
            if (e.type === "gesturechange") onGestureStart(e);
            return;
        }
        if (support.gestures) zoom.scale = e.scale * currentScale;
        else zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;
        if (zoom.scale > gesture.maxRatio) zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;
        if (zoom.scale < params.minRatio) zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;
        gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);
    }
    function onGestureEnd(e) {
        const device = swiper.device;
        const support = swiper.support;
        const params = swiper.params.zoom;
        const zoom = swiper.zoom;
        if (!support.gestures) {
            if (!fakeGestureTouched || !fakeGestureMoved) return;
            if (e.type !== "touchend" || e.type === "touchend" && e.changedTouches.length < 2 && !device.android) return;
            fakeGestureTouched = false;
            fakeGestureMoved = false;
        }
        if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;
        zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);
        gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);
        currentScale = zoom.scale;
        isScaling = false;
        if (zoom.scale === 1) gesture.$slideEl = undefined;
    }
    function onTouchStart(e) {
        const device = swiper.device;
        if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;
        if (image.isTouched) return;
        if (device.android && e.cancelable) e.preventDefault();
        image.isTouched = true;
        image.touchesStart.x = e.type === "touchstart" ? e.targetTouches[0].pageX : e.pageX;
        image.touchesStart.y = e.type === "touchstart" ? e.targetTouches[0].pageY : e.pageY;
    }
    function onTouchMove(e) {
        const zoom = swiper.zoom;
        if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;
        swiper.allowClick = false;
        if (!image.isTouched || !gesture.$slideEl) return;
        if (!image.isMoved) {
            image.width = gesture.$imageEl[0].offsetWidth;
            image.height = gesture.$imageEl[0].offsetHeight;
            image.startX = (0, _utilsJs.getTranslate)(gesture.$imageWrapEl[0], "x") || 0;
            image.startY = (0, _utilsJs.getTranslate)(gesture.$imageWrapEl[0], "y") || 0;
            gesture.slideWidth = gesture.$slideEl[0].offsetWidth;
            gesture.slideHeight = gesture.$slideEl[0].offsetHeight;
            gesture.$imageWrapEl.transition(0);
        } // Define if we need image drag
        const scaledWidth = image.width * zoom.scale;
        const scaledHeight = image.height * zoom.scale;
        if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;
        image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);
        image.maxX = -image.minX;
        image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);
        image.maxY = -image.minY;
        image.touchesCurrent.x = e.type === "touchmove" ? e.targetTouches[0].pageX : e.pageX;
        image.touchesCurrent.y = e.type === "touchmove" ? e.targetTouches[0].pageY : e.pageY;
        if (!image.isMoved && !isScaling) {
            if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {
                image.isTouched = false;
                return;
            }
            if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {
                image.isTouched = false;
                return;
            }
        }
        if (e.cancelable) e.preventDefault();
        e.stopPropagation();
        image.isMoved = true;
        image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;
        image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;
        if (image.currentX < image.minX) image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;
        if (image.currentX > image.maxX) image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;
        if (image.currentY < image.minY) image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;
        if (image.currentY > image.maxY) image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;
         // Velocity
        if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;
        if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;
        if (!velocity.prevTime) velocity.prevTime = Date.now();
        velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;
        velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;
        if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;
        if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;
        velocity.prevPositionX = image.touchesCurrent.x;
        velocity.prevPositionY = image.touchesCurrent.y;
        velocity.prevTime = Date.now();
        gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);
    }
    function onTouchEnd() {
        const zoom = swiper.zoom;
        if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;
        if (!image.isTouched || !image.isMoved) {
            image.isTouched = false;
            image.isMoved = false;
            return;
        }
        image.isTouched = false;
        image.isMoved = false;
        let momentumDurationX = 300;
        let momentumDurationY = 300;
        const momentumDistanceX = velocity.x * momentumDurationX;
        const newPositionX = image.currentX + momentumDistanceX;
        const momentumDistanceY = velocity.y * momentumDurationY;
        const newPositionY = image.currentY + momentumDistanceY; // Fix duration
        if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);
        if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);
        const momentumDuration = Math.max(momentumDurationX, momentumDurationY);
        image.currentX = newPositionX;
        image.currentY = newPositionY; // Define if we need image drag
        const scaledWidth = image.width * zoom.scale;
        const scaledHeight = image.height * zoom.scale;
        image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);
        image.maxX = -image.minX;
        image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);
        image.maxY = -image.minY;
        image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);
        image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);
        gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);
    }
    function onTransitionEnd() {
        const zoom = swiper.zoom;
        if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {
            if (gesture.$imageEl) gesture.$imageEl.transform("translate3d(0,0,0) scale(1)");
            if (gesture.$imageWrapEl) gesture.$imageWrapEl.transform("translate3d(0,0,0)");
            zoom.scale = 1;
            currentScale = 1;
            gesture.$slideEl = undefined;
            gesture.$imageEl = undefined;
            gesture.$imageWrapEl = undefined;
        }
    }
    function zoomIn(e) {
        const zoom = swiper.zoom;
        const params = swiper.params.zoom;
        if (!gesture.$slideEl) {
            if (e && e.target) gesture.$slideEl = (0, _domJsDefault.default)(e.target).closest(`.${swiper.params.slideClass}`);
            if (!gesture.$slideEl) {
                if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);
                else gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);
            }
            gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find("picture, img, svg, canvas, .swiper-zoom-target").eq(0);
            gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);
        }
        if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;
        if (swiper.params.cssMode) {
            swiper.wrapperEl.style.overflow = "hidden";
            swiper.wrapperEl.style.touchAction = "none";
        }
        gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);
        let touchX;
        let touchY;
        let offsetX;
        let offsetY;
        let diffX;
        let diffY;
        let translateX;
        let translateY;
        let imageWidth;
        let imageHeight;
        let scaledWidth;
        let scaledHeight;
        let translateMinX;
        let translateMinY;
        let translateMaxX;
        let translateMaxY;
        let slideWidth;
        let slideHeight;
        if (typeof image.touchesStart.x === "undefined" && e) {
            touchX = e.type === "touchend" ? e.changedTouches[0].pageX : e.pageX;
            touchY = e.type === "touchend" ? e.changedTouches[0].pageY : e.pageY;
        } else {
            touchX = image.touchesStart.x;
            touchY = image.touchesStart.y;
        }
        zoom.scale = gesture.$imageWrapEl.attr("data-swiper-zoom") || params.maxRatio;
        currentScale = gesture.$imageWrapEl.attr("data-swiper-zoom") || params.maxRatio;
        if (e) {
            slideWidth = gesture.$slideEl[0].offsetWidth;
            slideHeight = gesture.$slideEl[0].offsetHeight;
            offsetX = gesture.$slideEl.offset().left + window.scrollX;
            offsetY = gesture.$slideEl.offset().top + window.scrollY;
            diffX = offsetX + slideWidth / 2 - touchX;
            diffY = offsetY + slideHeight / 2 - touchY;
            imageWidth = gesture.$imageEl[0].offsetWidth;
            imageHeight = gesture.$imageEl[0].offsetHeight;
            scaledWidth = imageWidth * zoom.scale;
            scaledHeight = imageHeight * zoom.scale;
            translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);
            translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);
            translateMaxX = -translateMinX;
            translateMaxY = -translateMinY;
            translateX = diffX * zoom.scale;
            translateY = diffY * zoom.scale;
            if (translateX < translateMinX) translateX = translateMinX;
            if (translateX > translateMaxX) translateX = translateMaxX;
            if (translateY < translateMinY) translateY = translateMinY;
            if (translateY > translateMaxY) translateY = translateMaxY;
        } else {
            translateX = 0;
            translateY = 0;
        }
        gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);
        gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);
    }
    function zoomOut() {
        const zoom = swiper.zoom;
        const params = swiper.params.zoom;
        if (!gesture.$slideEl) {
            if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);
            else gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);
            gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find("picture, img, svg, canvas, .swiper-zoom-target").eq(0);
            gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);
        }
        if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;
        if (swiper.params.cssMode) {
            swiper.wrapperEl.style.overflow = "";
            swiper.wrapperEl.style.touchAction = "";
        }
        zoom.scale = 1;
        currentScale = 1;
        gesture.$imageWrapEl.transition(300).transform("translate3d(0,0,0)");
        gesture.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)");
        gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);
        gesture.$slideEl = undefined;
    } // Toggle Zoom
    function zoomToggle(e) {
        const zoom = swiper.zoom;
        if (zoom.scale && zoom.scale !== 1) // Zoom Out
        zoomOut();
        else // Zoom In
        zoomIn(e);
    }
    function getListeners() {
        const support = swiper.support;
        const passiveListener = swiper.touchEvents.start === "touchstart" && support.passiveListener && swiper.params.passiveListeners ? {
            passive: true,
            capture: false
        } : false;
        const activeListenerWithCapture = support.passiveListener ? {
            passive: false,
            capture: true
        } : true;
        return {
            passiveListener,
            activeListenerWithCapture
        };
    }
    function getSlideSelector() {
        return `.${swiper.params.slideClass}`;
    }
    function toggleGestures(method) {
        const { passiveListener  } = getListeners();
        const slideSelector = getSlideSelector();
        swiper.$wrapperEl[method]("gesturestart", slideSelector, onGestureStart, passiveListener);
        swiper.$wrapperEl[method]("gesturechange", slideSelector, onGestureChange, passiveListener);
        swiper.$wrapperEl[method]("gestureend", slideSelector, onGestureEnd, passiveListener);
    }
    function enableGestures() {
        if (gesturesEnabled) return;
        gesturesEnabled = true;
        toggleGestures("on");
    }
    function disableGestures() {
        if (!gesturesEnabled) return;
        gesturesEnabled = false;
        toggleGestures("off");
    } // Attach/Detach Events
    function enable() {
        const zoom = swiper.zoom;
        if (zoom.enabled) return;
        zoom.enabled = true;
        const support = swiper.support;
        const { passiveListener , activeListenerWithCapture  } = getListeners();
        const slideSelector = getSlideSelector(); // Scale image
        if (support.gestures) {
            swiper.$wrapperEl.on(swiper.touchEvents.start, enableGestures, passiveListener);
            swiper.$wrapperEl.on(swiper.touchEvents.end, disableGestures, passiveListener);
        } else if (swiper.touchEvents.start === "touchstart") {
            swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);
            swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);
            swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);
            if (swiper.touchEvents.cancel) swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);
        } // Move image
        swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, onTouchMove, activeListenerWithCapture);
    }
    function disable() {
        const zoom = swiper.zoom;
        if (!zoom.enabled) return;
        const support = swiper.support;
        zoom.enabled = false;
        const { passiveListener , activeListenerWithCapture  } = getListeners();
        const slideSelector = getSlideSelector(); // Scale image
        if (support.gestures) {
            swiper.$wrapperEl.off(swiper.touchEvents.start, enableGestures, passiveListener);
            swiper.$wrapperEl.off(swiper.touchEvents.end, disableGestures, passiveListener);
        } else if (swiper.touchEvents.start === "touchstart") {
            swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);
            swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);
            swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);
            if (swiper.touchEvents.cancel) swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);
        } // Move image
        swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, onTouchMove, activeListenerWithCapture);
    }
    on("init", ()=>{
        if (swiper.params.zoom.enabled) enable();
    });
    on("destroy", ()=>{
        disable();
    });
    on("touchStart", (_s, e)=>{
        if (!swiper.zoom.enabled) return;
        onTouchStart(e);
    });
    on("touchEnd", (_s, e)=>{
        if (!swiper.zoom.enabled) return;
        onTouchEnd(e);
    });
    on("doubleTap", (_s, e)=>{
        if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) zoomToggle(e);
    });
    on("transitionEnd", ()=>{
        if (swiper.zoom.enabled && swiper.params.zoom.enabled) onTransitionEnd();
    });
    on("slideChange", ()=>{
        if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) onTransitionEnd();
    });
    Object.assign(swiper.zoom, {
        enable,
        disable,
        in: zoomIn,
        out: zoomOut,
        toggle: zoomToggle
    });
}
exports.default = Zoom;

},{"ssr-window":"d3jFK","../../shared/dom.js":"fSctW","../../shared/utils.js":"hr9mL","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"4efs7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _ssrWindow = require("ssr-window");
var _domJs = require("../../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
function Lazy({ swiper , extendParams , on , emit  }) {
    extendParams({
        lazy: {
            checkInView: false,
            enabled: false,
            loadPrevNext: false,
            loadPrevNextAmount: 1,
            loadOnTransitionStart: false,
            scrollingElement: "",
            elementClass: "swiper-lazy",
            loadingClass: "swiper-lazy-loading",
            loadedClass: "swiper-lazy-loaded",
            preloaderClass: "swiper-lazy-preloader"
        }
    });
    swiper.lazy = {};
    let scrollHandlerAttached = false;
    let initialImageLoaded = false;
    function loadInSlide(index, loadInDuplicate = true) {
        const params = swiper.params.lazy;
        if (typeof index === "undefined") return;
        if (swiper.slides.length === 0) return;
        const isVirtual = swiper.virtual && swiper.params.virtual.enabled;
        const $slideEl = isVirtual ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index="${index}"]`) : swiper.slides.eq(index);
        const $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);
        if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) $images.push($slideEl[0]);
        if ($images.length === 0) return;
        $images.each((imageEl)=>{
            const $imageEl = (0, _domJsDefault.default)(imageEl);
            $imageEl.addClass(params.loadingClass);
            const background = $imageEl.attr("data-background");
            const src = $imageEl.attr("data-src");
            const srcset = $imageEl.attr("data-srcset");
            const sizes = $imageEl.attr("data-sizes");
            const $pictureEl = $imageEl.parent("picture");
            swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, ()=>{
                if (typeof swiper === "undefined" || swiper === null || !swiper || swiper && !swiper.params || swiper.destroyed) return;
                if (background) {
                    $imageEl.css("background-image", `url("${background}")`);
                    $imageEl.removeAttr("data-background");
                } else {
                    if (srcset) {
                        $imageEl.attr("srcset", srcset);
                        $imageEl.removeAttr("data-srcset");
                    }
                    if (sizes) {
                        $imageEl.attr("sizes", sizes);
                        $imageEl.removeAttr("data-sizes");
                    }
                    if ($pictureEl.length) $pictureEl.children("source").each((sourceEl)=>{
                        const $source = (0, _domJsDefault.default)(sourceEl);
                        if ($source.attr("data-srcset")) {
                            $source.attr("srcset", $source.attr("data-srcset"));
                            $source.removeAttr("data-srcset");
                        }
                    });
                    if (src) {
                        $imageEl.attr("src", src);
                        $imageEl.removeAttr("data-src");
                    }
                }
                $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);
                $slideEl.find(`.${params.preloaderClass}`).remove();
                if (swiper.params.loop && loadInDuplicate) {
                    const slideOriginalIndex = $slideEl.attr("data-swiper-slide-index");
                    if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {
                        const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index="${slideOriginalIndex}"]:not(.${swiper.params.slideDuplicateClass})`);
                        loadInSlide(originalSlide.index(), false);
                    } else {
                        const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index="${slideOriginalIndex}"]`);
                        loadInSlide(duplicatedSlide.index(), false);
                    }
                }
                emit("lazyImageReady", $slideEl[0], $imageEl[0]);
                if (swiper.params.autoHeight) swiper.updateAutoHeight();
            });
            emit("lazyImageLoad", $slideEl[0], $imageEl[0]);
        });
    }
    function load() {
        const { $wrapperEl , params: swiperParams , slides , activeIndex  } = swiper;
        const isVirtual = swiper.virtual && swiperParams.virtual.enabled;
        const params = swiperParams.lazy;
        let slidesPerView = swiperParams.slidesPerView;
        if (slidesPerView === "auto") slidesPerView = 0;
        function slideExist(index) {
            if (isVirtual) {
                if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index="${index}"]`).length) return true;
            } else if (slides[index]) return true;
            return false;
        }
        function slideIndex(slideEl) {
            if (isVirtual) return (0, _domJsDefault.default)(slideEl).attr("data-swiper-slide-index");
            return (0, _domJsDefault.default)(slideEl).index();
        }
        if (!initialImageLoaded) initialImageLoaded = true;
        if (swiper.params.watchSlidesProgress) $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((slideEl)=>{
            const index = isVirtual ? (0, _domJsDefault.default)(slideEl).attr("data-swiper-slide-index") : (0, _domJsDefault.default)(slideEl).index();
            loadInSlide(index);
        });
        else if (slidesPerView > 1) {
            for(let i = activeIndex; i < activeIndex + slidesPerView; i += 1)if (slideExist(i)) loadInSlide(i);
        } else loadInSlide(activeIndex);
        if (params.loadPrevNext) {
            if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {
                const amount = params.loadPrevNextAmount;
                const spv = Math.ceil(slidesPerView);
                const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);
                const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0); // Next Slides
                for(let i1 = activeIndex + spv; i1 < maxIndex; i1 += 1)if (slideExist(i1)) loadInSlide(i1);
                 // Prev Slides
                for(let i2 = minIndex; i2 < activeIndex; i2 += 1)if (slideExist(i2)) loadInSlide(i2);
            } else {
                const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);
                if (nextSlide.length > 0) loadInSlide(slideIndex(nextSlide));
                const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);
                if (prevSlide.length > 0) loadInSlide(slideIndex(prevSlide));
            }
        }
    }
    function checkInViewOnLoad() {
        const window = (0, _ssrWindow.getWindow)();
        if (!swiper || swiper.destroyed) return;
        const $scrollElement = swiper.params.lazy.scrollingElement ? (0, _domJsDefault.default)(swiper.params.lazy.scrollingElement) : (0, _domJsDefault.default)(window);
        const isWindow = $scrollElement[0] === window;
        const scrollElementWidth = isWindow ? window.innerWidth : $scrollElement[0].offsetWidth;
        const scrollElementHeight = isWindow ? window.innerHeight : $scrollElement[0].offsetHeight;
        const swiperOffset = swiper.$el.offset();
        const { rtlTranslate: rtl  } = swiper;
        let inView = false;
        if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;
        const swiperCoord = [
            [
                swiperOffset.left,
                swiperOffset.top
            ],
            [
                swiperOffset.left + swiper.width,
                swiperOffset.top
            ],
            [
                swiperOffset.left,
                swiperOffset.top + swiper.height
            ],
            [
                swiperOffset.left + swiper.width,
                swiperOffset.top + swiper.height
            ]
        ];
        for(let i = 0; i < swiperCoord.length; i += 1){
            const point = swiperCoord[i];
            if (point[0] >= 0 && point[0] <= scrollElementWidth && point[1] >= 0 && point[1] <= scrollElementHeight) {
                if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line
                inView = true;
            }
        }
        const passiveListener = swiper.touchEvents.start === "touchstart" && swiper.support.passiveListener && swiper.params.passiveListeners ? {
            passive: true,
            capture: false
        } : false;
        if (inView) {
            load();
            $scrollElement.off("scroll", checkInViewOnLoad, passiveListener);
        } else if (!scrollHandlerAttached) {
            scrollHandlerAttached = true;
            $scrollElement.on("scroll", checkInViewOnLoad, passiveListener);
        }
    }
    on("beforeInit", ()=>{
        if (swiper.params.lazy.enabled && swiper.params.preloadImages) swiper.params.preloadImages = false;
    });
    on("init", ()=>{
        if (swiper.params.lazy.enabled) {
            if (swiper.params.lazy.checkInView) checkInViewOnLoad();
            else load();
        }
    });
    on("scroll", ()=>{
        if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.freeMode.sticky) load();
    });
    on("scrollbarDragMove resize _freeModeNoMomentumRelease", ()=>{
        if (swiper.params.lazy.enabled) {
            if (swiper.params.lazy.checkInView) checkInViewOnLoad();
            else load();
        }
    });
    on("transitionStart", ()=>{
        if (swiper.params.lazy.enabled) {
            if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !initialImageLoaded) {
                if (swiper.params.lazy.checkInView) checkInViewOnLoad();
                else load();
            }
        }
    });
    on("transitionEnd", ()=>{
        if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {
            if (swiper.params.lazy.checkInView) checkInViewOnLoad();
            else load();
        }
    });
    on("slideChange", ()=>{
        const { lazy , cssMode , watchSlidesProgress , touchReleaseOnEdges , resistanceRatio  } = swiper.params;
        if (lazy.enabled && (cssMode || watchSlidesProgress && (touchReleaseOnEdges || resistanceRatio === 0))) load();
    });
    on("destroy", ()=>{
        if (!swiper.$el) return;
        swiper.$el.find(`.${swiper.params.lazy.loadingClass}`).removeClass(swiper.params.lazy.loadingClass);
    });
    Object.assign(swiper.lazy, {
        load,
        loadInSlide
    });
}
exports.default = Lazy;

},{"ssr-window":"d3jFK","../../shared/dom.js":"fSctW","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"5ctoV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/* eslint no-bitwise: ["error", { "allow": [">>"] }] */ var _utilsJs = require("../../shared/utils.js");
function Controller({ swiper , extendParams , on  }) {
    extendParams({
        controller: {
            control: undefined,
            inverse: false,
            by: "slide" // or 'container'
        }
    });
    swiper.controller = {
        control: undefined
    };
    function LinearSpline(x, y) {
        const binarySearch = function search() {
            let maxIndex;
            let minIndex;
            let guess;
            return (array, val)=>{
                minIndex = -1;
                maxIndex = array.length;
                while(maxIndex - minIndex > 1){
                    guess = maxIndex + minIndex >> 1;
                    if (array[guess] <= val) minIndex = guess;
                    else maxIndex = guess;
                }
                return maxIndex;
            };
        }();
        this.x = x;
        this.y = y;
        this.lastIndex = x.length - 1; // Given an x value (x2), return the expected y2 value:
        // (x1,y1) is the known point before given value,
        // (x3,y3) is the known point after given value.
        let i1;
        let i3;
        this.interpolate = function interpolate(x2) {
            if (!x2) return 0; // Get the indexes of x1 and x3 (the array indexes before and after given x2):
            i3 = binarySearch(this.x, x2);
            i1 = i3 - 1; // We have our indexes i1 & i3, so we can calculate already:
            // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1
            return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];
        };
        return this;
    } // xxx: for now i will just save one spline function to to
    function getInterpolateFunction(c) {
        if (!swiper.controller.spline) swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);
    }
    function setTranslate(_t, byController) {
        const controlled = swiper.controller.control;
        let multiplier;
        let controlledTranslate;
        const Swiper = swiper.constructor;
        function setControlledTranslate(c) {
            // this will create an Interpolate function based on the snapGrids
            // x is the Grid of the scrolled scroller and y will be the controlled scroller
            // it makes sense to create this only once and recall it for the interpolation
            // the function does a lot of value caching for performance
            const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;
            if (swiper.params.controller.by === "slide") {
                getInterpolateFunction(c); // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid
                // but it did not work out
                controlledTranslate = -swiper.controller.spline.interpolate(-translate);
            }
            if (!controlledTranslate || swiper.params.controller.by === "container") {
                multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());
                controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();
            }
            if (swiper.params.controller.inverse) controlledTranslate = c.maxTranslate() - controlledTranslate;
            c.updateProgress(controlledTranslate);
            c.setTranslate(controlledTranslate, swiper);
            c.updateActiveIndex();
            c.updateSlidesClasses();
        }
        if (Array.isArray(controlled)) {
            for(let i = 0; i < controlled.length; i += 1)if (controlled[i] !== byController && controlled[i] instanceof Swiper) setControlledTranslate(controlled[i]);
        } else if (controlled instanceof Swiper && byController !== controlled) setControlledTranslate(controlled);
    }
    function setTransition(duration, byController) {
        const Swiper = swiper.constructor;
        const controlled = swiper.controller.control;
        let i;
        function setControlledTransition(c) {
            c.setTransition(duration, swiper);
            if (duration !== 0) {
                c.transitionStart();
                if (c.params.autoHeight) (0, _utilsJs.nextTick)(()=>{
                    c.updateAutoHeight();
                });
                c.$wrapperEl.transitionEnd(()=>{
                    if (!controlled) return;
                    if (c.params.loop && swiper.params.controller.by === "slide") c.loopFix();
                    c.transitionEnd();
                });
            }
        }
        if (Array.isArray(controlled)) {
            for(i = 0; i < controlled.length; i += 1)if (controlled[i] !== byController && controlled[i] instanceof Swiper) setControlledTransition(controlled[i]);
        } else if (controlled instanceof Swiper && byController !== controlled) setControlledTransition(controlled);
    }
    function removeSpline() {
        if (!swiper.controller.control) return;
        if (swiper.controller.spline) {
            swiper.controller.spline = undefined;
            delete swiper.controller.spline;
        }
    }
    on("beforeInit", ()=>{
        swiper.controller.control = swiper.params.controller.control;
    });
    on("update", ()=>{
        removeSpline();
    });
    on("resize", ()=>{
        removeSpline();
    });
    on("observerUpdate", ()=>{
        removeSpline();
    });
    on("setTranslate", (_s, translate, byController)=>{
        if (!swiper.controller.control) return;
        swiper.controller.setTranslate(translate, byController);
    });
    on("setTransition", (_s, duration, byController)=>{
        if (!swiper.controller.control) return;
        swiper.controller.setTransition(duration, byController);
    });
    Object.assign(swiper.controller, {
        setTranslate,
        setTransition
    });
}
exports.default = Controller;

},{"../../shared/utils.js":"hr9mL","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"2SnLS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _classesToSelectorJs = require("../../shared/classes-to-selector.js");
var _classesToSelectorJsDefault = parcelHelpers.interopDefault(_classesToSelectorJs);
var _domJs = require("../../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
function A11y({ swiper , extendParams , on  }) {
    extendParams({
        a11y: {
            enabled: true,
            notificationClass: "swiper-notification",
            prevSlideMessage: "Previous slide",
            nextSlideMessage: "Next slide",
            firstSlideMessage: "This is the first slide",
            lastSlideMessage: "This is the last slide",
            paginationBulletMessage: "Go to slide {{index}}",
            slideLabelMessage: "{{index}} / {{slidesLength}}",
            containerMessage: null,
            containerRoleDescriptionMessage: null,
            itemRoleDescriptionMessage: null,
            slideRole: "group",
            id: null
        }
    });
    swiper.a11y = {
        clicked: false
    };
    let liveRegion = null;
    function notify(message) {
        const notification = liveRegion;
        if (notification.length === 0) return;
        notification.html("");
        notification.html(message);
    }
    function getRandomNumber(size = 16) {
        const randomChar = ()=>Math.round(16 * Math.random()).toString(16);
        return "x".repeat(size).replace(/x/g, randomChar);
    }
    function makeElFocusable($el) {
        $el.attr("tabIndex", "0");
    }
    function makeElNotFocusable($el) {
        $el.attr("tabIndex", "-1");
    }
    function addElRole($el, role) {
        $el.attr("role", role);
    }
    function addElRoleDescription($el, description) {
        $el.attr("aria-roledescription", description);
    }
    function addElControls($el, controls) {
        $el.attr("aria-controls", controls);
    }
    function addElLabel($el, label) {
        $el.attr("aria-label", label);
    }
    function addElId($el, id) {
        $el.attr("id", id);
    }
    function addElLive($el, live) {
        $el.attr("aria-live", live);
    }
    function disableEl($el) {
        $el.attr("aria-disabled", true);
    }
    function enableEl($el) {
        $el.attr("aria-disabled", false);
    }
    function onEnterOrSpaceKey(e) {
        if (e.keyCode !== 13 && e.keyCode !== 32) return;
        const params = swiper.params.a11y;
        const $targetEl = (0, _domJsDefault.default)(e.target);
        if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {
            if (!(swiper.isEnd && !swiper.params.loop)) swiper.slideNext();
            if (swiper.isEnd) notify(params.lastSlideMessage);
            else notify(params.nextSlideMessage);
        }
        if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {
            if (!(swiper.isBeginning && !swiper.params.loop)) swiper.slidePrev();
            if (swiper.isBeginning) notify(params.firstSlideMessage);
            else notify(params.prevSlideMessage);
        }
        if (swiper.pagination && $targetEl.is((0, _classesToSelectorJsDefault.default)(swiper.params.pagination.bulletClass))) $targetEl[0].click();
    }
    function updateNavigation() {
        if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;
        const { $nextEl , $prevEl  } = swiper.navigation;
        if ($prevEl && $prevEl.length > 0) {
            if (swiper.isBeginning) {
                disableEl($prevEl);
                makeElNotFocusable($prevEl);
            } else {
                enableEl($prevEl);
                makeElFocusable($prevEl);
            }
        }
        if ($nextEl && $nextEl.length > 0) {
            if (swiper.isEnd) {
                disableEl($nextEl);
                makeElNotFocusable($nextEl);
            } else {
                enableEl($nextEl);
                makeElFocusable($nextEl);
            }
        }
    }
    function hasPagination() {
        return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;
    }
    function hasClickablePagination() {
        return hasPagination() && swiper.params.pagination.clickable;
    }
    function updatePagination() {
        const params = swiper.params.a11y;
        if (!hasPagination()) return;
        swiper.pagination.bullets.each((bulletEl)=>{
            const $bulletEl = (0, _domJsDefault.default)(bulletEl);
            if (swiper.params.pagination.clickable) {
                makeElFocusable($bulletEl);
                if (!swiper.params.pagination.renderBullet) {
                    addElRole($bulletEl, "button");
                    addElLabel($bulletEl, params.paginationBulletMessage.replace(/\{\{index\}\}/, $bulletEl.index() + 1));
                }
            }
            if ($bulletEl.is(`.${swiper.params.pagination.bulletActiveClass}`)) $bulletEl.attr("aria-current", "true");
            else $bulletEl.removeAttr("aria-current");
        });
    }
    const initNavEl = ($el, wrapperId, message)=>{
        makeElFocusable($el);
        if ($el[0].tagName !== "BUTTON") {
            addElRole($el, "button");
            $el.on("keydown", onEnterOrSpaceKey);
        }
        addElLabel($el, message);
        addElControls($el, wrapperId);
    };
    const handlePointerDown = ()=>{
        swiper.a11y.clicked = true;
    };
    const handlePointerUp = ()=>{
        requestAnimationFrame(()=>{
            requestAnimationFrame(()=>{
                if (!swiper.destroyed) swiper.a11y.clicked = false;
            });
        });
    };
    const handleFocus = (e)=>{
        if (swiper.a11y.clicked) return;
        const slideEl = e.target.closest(`.${swiper.params.slideClass}`);
        if (!slideEl || !swiper.slides.includes(slideEl)) return;
        const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;
        const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);
        if (isActive || isVisible) return;
        if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;
        if (swiper.isHorizontal()) swiper.el.scrollLeft = 0;
        else swiper.el.scrollTop = 0;
        swiper.slideTo(swiper.slides.indexOf(slideEl), 0);
    };
    const initSlides = ()=>{
        const params = swiper.params.a11y;
        if (params.itemRoleDescriptionMessage) addElRoleDescription((0, _domJsDefault.default)(swiper.slides), params.itemRoleDescriptionMessage);
        if (params.slideRole) addElRole((0, _domJsDefault.default)(swiper.slides), params.slideRole);
        const slidesLength = swiper.params.loop ? swiper.slides.filter((el)=>!el.classList.contains(swiper.params.slideDuplicateClass)).length : swiper.slides.length;
        if (params.slideLabelMessage) swiper.slides.each((slideEl, index)=>{
            const $slideEl = (0, _domJsDefault.default)(slideEl);
            const slideIndex = swiper.params.loop ? parseInt($slideEl.attr("data-swiper-slide-index"), 10) : index;
            const ariaLabelMessage = params.slideLabelMessage.replace(/\{\{index\}\}/, slideIndex + 1).replace(/\{\{slidesLength\}\}/, slidesLength);
            addElLabel($slideEl, ariaLabelMessage);
        });
    };
    const init = ()=>{
        const params = swiper.params.a11y;
        swiper.$el.append(liveRegion); // Container
        const $containerEl = swiper.$el;
        if (params.containerRoleDescriptionMessage) addElRoleDescription($containerEl, params.containerRoleDescriptionMessage);
        if (params.containerMessage) addElLabel($containerEl, params.containerMessage);
         // Wrapper
        const $wrapperEl = swiper.$wrapperEl;
        const wrapperId = params.id || $wrapperEl.attr("id") || `swiper-wrapper-${getRandomNumber(16)}`;
        const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? "off" : "polite";
        addElId($wrapperEl, wrapperId);
        addElLive($wrapperEl, live); // Slide
        initSlides(); // Navigation
        let $nextEl;
        let $prevEl;
        if (swiper.navigation && swiper.navigation.$nextEl) $nextEl = swiper.navigation.$nextEl;
        if (swiper.navigation && swiper.navigation.$prevEl) $prevEl = swiper.navigation.$prevEl;
        if ($nextEl && $nextEl.length) initNavEl($nextEl, wrapperId, params.nextSlideMessage);
        if ($prevEl && $prevEl.length) initNavEl($prevEl, wrapperId, params.prevSlideMessage);
         // Pagination
        if (hasClickablePagination()) swiper.pagination.$el.on("keydown", (0, _classesToSelectorJsDefault.default)(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);
         // Tab focus
        swiper.$el.on("focus", handleFocus, true);
        swiper.$el.on("pointerdown", handlePointerDown, true);
        swiper.$el.on("pointerup", handlePointerUp, true);
    };
    function destroy() {
        if (liveRegion && liveRegion.length > 0) liveRegion.remove();
        let $nextEl;
        let $prevEl;
        if (swiper.navigation && swiper.navigation.$nextEl) $nextEl = swiper.navigation.$nextEl;
        if (swiper.navigation && swiper.navigation.$prevEl) $prevEl = swiper.navigation.$prevEl;
        if ($nextEl) $nextEl.off("keydown", onEnterOrSpaceKey);
        if ($prevEl) $prevEl.off("keydown", onEnterOrSpaceKey);
         // Pagination
        if (hasClickablePagination()) swiper.pagination.$el.off("keydown", (0, _classesToSelectorJsDefault.default)(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);
         // Tab focus
        swiper.$el.off("focus", handleFocus, true);
        swiper.$el.off("pointerdown", handlePointerDown, true);
        swiper.$el.off("pointerup", handlePointerUp, true);
    }
    on("beforeInit", ()=>{
        liveRegion = (0, _domJsDefault.default)(`<span class="${swiper.params.a11y.notificationClass}" aria-live="assertive" aria-atomic="true"></span>`);
    });
    on("afterInit", ()=>{
        if (!swiper.params.a11y.enabled) return;
        init();
    });
    on("slidesLengthChange snapGridLengthChange slidesGridLengthChange", ()=>{
        if (!swiper.params.a11y.enabled) return;
        initSlides();
    });
    on("fromEdge toEdge afterInit lock unlock", ()=>{
        if (!swiper.params.a11y.enabled) return;
        updateNavigation();
    });
    on("paginationUpdate", ()=>{
        if (!swiper.params.a11y.enabled) return;
        updatePagination();
    });
    on("destroy", ()=>{
        if (!swiper.params.a11y.enabled) return;
        destroy();
    });
}
exports.default = A11y;

},{"../../shared/classes-to-selector.js":"99TL7","../../shared/dom.js":"fSctW","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"8fpEM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _ssrWindow = require("ssr-window");
function History({ swiper , extendParams , on  }) {
    extendParams({
        history: {
            enabled: false,
            root: "",
            replaceState: false,
            key: "slides",
            keepQuery: false
        }
    });
    let initialized = false;
    let paths = {};
    const slugify = (text)=>{
        return text.toString().replace(/\s+/g, "-").replace(/[^\w-]+/g, "").replace(/--+/g, "-").replace(/^-+/, "").replace(/-+$/, "");
    };
    const getPathValues = (urlOverride)=>{
        const window = (0, _ssrWindow.getWindow)();
        let location;
        if (urlOverride) location = new URL(urlOverride);
        else location = window.location;
        const pathArray = location.pathname.slice(1).split("/").filter((part)=>part !== "");
        const total = pathArray.length;
        const key = pathArray[total - 2];
        const value = pathArray[total - 1];
        return {
            key,
            value
        };
    };
    const setHistory = (key, index)=>{
        const window = (0, _ssrWindow.getWindow)();
        if (!initialized || !swiper.params.history.enabled) return;
        let location;
        if (swiper.params.url) location = new URL(swiper.params.url);
        else location = window.location;
        const slide = swiper.slides.eq(index);
        let value = slugify(slide.attr("data-history"));
        if (swiper.params.history.root.length > 0) {
            let root = swiper.params.history.root;
            if (root[root.length - 1] === "/") root = root.slice(0, root.length - 1);
            value = `${root}/${key}/${value}`;
        } else if (!location.pathname.includes(key)) value = `${key}/${value}`;
        if (swiper.params.history.keepQuery) value += location.search;
        const currentState = window.history.state;
        if (currentState && currentState.value === value) return;
        if (swiper.params.history.replaceState) window.history.replaceState({
            value
        }, null, value);
        else window.history.pushState({
            value
        }, null, value);
    };
    const scrollToSlide = (speed, value, runCallbacks)=>{
        if (value) for(let i = 0, length = swiper.slides.length; i < length; i += 1){
            const slide = swiper.slides.eq(i);
            const slideHistory = slugify(slide.attr("data-history"));
            if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {
                const index = slide.index();
                swiper.slideTo(index, speed, runCallbacks);
            }
        }
        else swiper.slideTo(0, speed, runCallbacks);
    };
    const setHistoryPopState = ()=>{
        paths = getPathValues(swiper.params.url);
        scrollToSlide(swiper.params.speed, paths.value, false);
    };
    const init = ()=>{
        const window = (0, _ssrWindow.getWindow)();
        if (!swiper.params.history) return;
        if (!window.history || !window.history.pushState) {
            swiper.params.history.enabled = false;
            swiper.params.hashNavigation.enabled = true;
            return;
        }
        initialized = true;
        paths = getPathValues(swiper.params.url);
        if (!paths.key && !paths.value) return;
        scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);
        if (!swiper.params.history.replaceState) window.addEventListener("popstate", setHistoryPopState);
    };
    const destroy = ()=>{
        const window = (0, _ssrWindow.getWindow)();
        if (!swiper.params.history.replaceState) window.removeEventListener("popstate", setHistoryPopState);
    };
    on("init", ()=>{
        if (swiper.params.history.enabled) init();
    });
    on("destroy", ()=>{
        if (swiper.params.history.enabled) destroy();
    });
    on("transitionEnd _freeModeNoMomentumRelease", ()=>{
        if (initialized) setHistory(swiper.params.history.key, swiper.activeIndex);
    });
    on("slideChange", ()=>{
        if (initialized && swiper.params.cssMode) setHistory(swiper.params.history.key, swiper.activeIndex);
    });
}
exports.default = History;

},{"ssr-window":"d3jFK","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"h6maS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _ssrWindow = require("ssr-window");
var _domJs = require("../../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
function HashNavigation({ swiper , extendParams , emit , on  }) {
    let initialized = false;
    const document = (0, _ssrWindow.getDocument)();
    const window = (0, _ssrWindow.getWindow)();
    extendParams({
        hashNavigation: {
            enabled: false,
            replaceState: false,
            watchState: false
        }
    });
    const onHashChange = ()=>{
        emit("hashChange");
        const newHash = document.location.hash.replace("#", "");
        const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr("data-hash");
        if (newHash !== activeSlideHash) {
            const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash="${newHash}"]`).index();
            if (typeof newIndex === "undefined") return;
            swiper.slideTo(newIndex);
        }
    };
    const setHash = ()=>{
        if (!initialized || !swiper.params.hashNavigation.enabled) return;
        if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {
            window.history.replaceState(null, null, `#${swiper.slides.eq(swiper.activeIndex).attr("data-hash")}` || "");
            emit("hashSet");
        } else {
            const slide = swiper.slides.eq(swiper.activeIndex);
            const hash = slide.attr("data-hash") || slide.attr("data-history");
            document.location.hash = hash || "";
            emit("hashSet");
        }
    };
    const init = ()=>{
        if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;
        initialized = true;
        const hash = document.location.hash.replace("#", "");
        if (hash) {
            const speed = 0;
            for(let i = 0, length = swiper.slides.length; i < length; i += 1){
                const slide = swiper.slides.eq(i);
                const slideHash = slide.attr("data-hash") || slide.attr("data-history");
                if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {
                    const index = slide.index();
                    swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);
                }
            }
        }
        if (swiper.params.hashNavigation.watchState) (0, _domJsDefault.default)(window).on("hashchange", onHashChange);
    };
    const destroy = ()=>{
        if (swiper.params.hashNavigation.watchState) (0, _domJsDefault.default)(window).off("hashchange", onHashChange);
    };
    on("init", ()=>{
        if (swiper.params.hashNavigation.enabled) init();
    });
    on("destroy", ()=>{
        if (swiper.params.hashNavigation.enabled) destroy();
    });
    on("transitionEnd _freeModeNoMomentumRelease", ()=>{
        if (initialized) setHash();
    });
    on("slideChange", ()=>{
        if (initialized && swiper.params.cssMode) setHash();
    });
}
exports.default = HashNavigation;

},{"ssr-window":"d3jFK","../../shared/dom.js":"fSctW","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"75AFh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/* eslint no-underscore-dangle: "off" */ /* eslint no-use-before-define: "off" */ var _ssrWindow = require("ssr-window");
var _utilsJs = require("../../shared/utils.js");
function Autoplay({ swiper , extendParams , on , emit  }) {
    let timeout;
    swiper.autoplay = {
        running: false,
        paused: false
    };
    extendParams({
        autoplay: {
            enabled: false,
            delay: 3000,
            waitForTransition: true,
            disableOnInteraction: true,
            stopOnLastSlide: false,
            reverseDirection: false,
            pauseOnMouseEnter: false
        }
    });
    function run() {
        if (!swiper.size) {
            swiper.autoplay.running = false;
            swiper.autoplay.paused = false;
            return;
        }
        const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);
        let delay = swiper.params.autoplay.delay;
        if ($activeSlideEl.attr("data-swiper-autoplay")) delay = $activeSlideEl.attr("data-swiper-autoplay") || swiper.params.autoplay.delay;
        clearTimeout(timeout);
        timeout = (0, _utilsJs.nextTick)(()=>{
            let autoplayResult;
            if (swiper.params.autoplay.reverseDirection) {
                if (swiper.params.loop) {
                    swiper.loopFix();
                    autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);
                    emit("autoplay");
                } else if (!swiper.isBeginning) {
                    autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);
                    emit("autoplay");
                } else if (!swiper.params.autoplay.stopOnLastSlide) {
                    autoplayResult = swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);
                    emit("autoplay");
                } else stop();
            } else if (swiper.params.loop) {
                swiper.loopFix();
                autoplayResult = swiper.slideNext(swiper.params.speed, true, true);
                emit("autoplay");
            } else if (!swiper.isEnd) {
                autoplayResult = swiper.slideNext(swiper.params.speed, true, true);
                emit("autoplay");
            } else if (!swiper.params.autoplay.stopOnLastSlide) {
                autoplayResult = swiper.slideTo(0, swiper.params.speed, true, true);
                emit("autoplay");
            } else stop();
            if (swiper.params.cssMode && swiper.autoplay.running) run();
            else if (autoplayResult === false) run();
        }, delay);
    }
    function start() {
        if (typeof timeout !== "undefined") return false;
        if (swiper.autoplay.running) return false;
        swiper.autoplay.running = true;
        emit("autoplayStart");
        run();
        return true;
    }
    function stop() {
        if (!swiper.autoplay.running) return false;
        if (typeof timeout === "undefined") return false;
        if (timeout) {
            clearTimeout(timeout);
            timeout = undefined;
        }
        swiper.autoplay.running = false;
        emit("autoplayStop");
        return true;
    }
    function pause(speed) {
        if (!swiper.autoplay.running) return;
        if (swiper.autoplay.paused) return;
        if (timeout) clearTimeout(timeout);
        swiper.autoplay.paused = true;
        if (speed === 0 || !swiper.params.autoplay.waitForTransition) {
            swiper.autoplay.paused = false;
            run();
        } else [
            "transitionend",
            "webkitTransitionEnd"
        ].forEach((event)=>{
            swiper.$wrapperEl[0].addEventListener(event, onTransitionEnd);
        });
    }
    function onVisibilityChange() {
        const document = (0, _ssrWindow.getDocument)();
        if (document.visibilityState === "hidden" && swiper.autoplay.running) pause();
        if (document.visibilityState === "visible" && swiper.autoplay.paused) {
            run();
            swiper.autoplay.paused = false;
        }
    }
    function onTransitionEnd(e) {
        if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;
        if (e.target !== swiper.$wrapperEl[0]) return;
        [
            "transitionend",
            "webkitTransitionEnd"
        ].forEach((event)=>{
            swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);
        });
        swiper.autoplay.paused = false;
        if (!swiper.autoplay.running) stop();
        else run();
    }
    function onMouseEnter() {
        if (swiper.params.autoplay.disableOnInteraction) stop();
        else {
            emit("autoplayPause");
            pause();
        }
        [
            "transitionend",
            "webkitTransitionEnd"
        ].forEach((event)=>{
            swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);
        });
    }
    function onMouseLeave() {
        if (swiper.params.autoplay.disableOnInteraction) return;
        swiper.autoplay.paused = false;
        emit("autoplayResume");
        run();
    }
    function attachMouseEvents() {
        if (swiper.params.autoplay.pauseOnMouseEnter) {
            swiper.$el.on("mouseenter", onMouseEnter);
            swiper.$el.on("mouseleave", onMouseLeave);
        }
    }
    function detachMouseEvents() {
        swiper.$el.off("mouseenter", onMouseEnter);
        swiper.$el.off("mouseleave", onMouseLeave);
    }
    on("init", ()=>{
        if (swiper.params.autoplay.enabled) {
            start();
            const document = (0, _ssrWindow.getDocument)();
            document.addEventListener("visibilitychange", onVisibilityChange);
            attachMouseEvents();
        }
    });
    on("beforeTransitionStart", (_s, speed, internal)=>{
        if (swiper.autoplay.running) {
            if (internal || !swiper.params.autoplay.disableOnInteraction) swiper.autoplay.pause(speed);
            else stop();
        }
    });
    on("sliderFirstMove", ()=>{
        if (swiper.autoplay.running) {
            if (swiper.params.autoplay.disableOnInteraction) stop();
            else pause();
        }
    });
    on("touchEnd", ()=>{
        if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) run();
    });
    on("destroy", ()=>{
        detachMouseEvents();
        if (swiper.autoplay.running) stop();
        const document = (0, _ssrWindow.getDocument)();
        document.removeEventListener("visibilitychange", onVisibilityChange);
    });
    Object.assign(swiper.autoplay, {
        pause,
        run,
        start,
        stop
    });
}
exports.default = Autoplay;

},{"ssr-window":"d3jFK","../../shared/utils.js":"hr9mL","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"k6hjz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _utilsJs = require("../../shared/utils.js");
var _domJs = require("../../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
function Thumb({ swiper , extendParams , on  }) {
    extendParams({
        thumbs: {
            swiper: null,
            multipleActiveThumbs: true,
            autoScrollOffset: 0,
            slideThumbActiveClass: "swiper-slide-thumb-active",
            thumbsContainerClass: "swiper-thumbs"
        }
    });
    let initialized = false;
    let swiperCreated = false;
    swiper.thumbs = {
        swiper: null
    };
    function onThumbClick() {
        const thumbsSwiper = swiper.thumbs.swiper;
        if (!thumbsSwiper || thumbsSwiper.destroyed) return;
        const clickedIndex = thumbsSwiper.clickedIndex;
        const clickedSlide = thumbsSwiper.clickedSlide;
        if (clickedSlide && (0, _domJsDefault.default)(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;
        if (typeof clickedIndex === "undefined" || clickedIndex === null) return;
        let slideToIndex;
        if (thumbsSwiper.params.loop) slideToIndex = parseInt((0, _domJsDefault.default)(thumbsSwiper.clickedSlide).attr("data-swiper-slide-index"), 10);
        else slideToIndex = clickedIndex;
        if (swiper.params.loop) {
            let currentIndex = swiper.activeIndex;
            if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {
                swiper.loopFix(); // eslint-disable-next-line
                swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;
                currentIndex = swiper.activeIndex;
            }
            const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index="${slideToIndex}"]`).eq(0).index();
            const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index="${slideToIndex}"]`).eq(0).index();
            if (typeof prevIndex === "undefined") slideToIndex = nextIndex;
            else if (typeof nextIndex === "undefined") slideToIndex = prevIndex;
            else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;
            else slideToIndex = prevIndex;
        }
        swiper.slideTo(slideToIndex);
    }
    function init() {
        const { thumbs: thumbsParams  } = swiper.params;
        if (initialized) return false;
        initialized = true;
        const SwiperClass = swiper.constructor;
        if (thumbsParams.swiper instanceof SwiperClass) {
            swiper.thumbs.swiper = thumbsParams.swiper;
            Object.assign(swiper.thumbs.swiper.originalParams, {
                watchSlidesProgress: true,
                slideToClickedSlide: false
            });
            Object.assign(swiper.thumbs.swiper.params, {
                watchSlidesProgress: true,
                slideToClickedSlide: false
            });
        } else if ((0, _utilsJs.isObject)(thumbsParams.swiper)) {
            const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);
            Object.assign(thumbsSwiperParams, {
                watchSlidesProgress: true,
                slideToClickedSlide: false
            });
            swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);
            swiperCreated = true;
        }
        swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);
        swiper.thumbs.swiper.on("tap", onThumbClick);
        return true;
    }
    function update(initial) {
        const thumbsSwiper = swiper.thumbs.swiper;
        if (!thumbsSwiper || thumbsSwiper.destroyed) return;
        const slidesPerView = thumbsSwiper.params.slidesPerView === "auto" ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView; // Activate thumbs
        let thumbsToActivate = 1;
        const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;
        if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) thumbsToActivate = swiper.params.slidesPerView;
        if (!swiper.params.thumbs.multipleActiveThumbs) thumbsToActivate = 1;
        thumbsToActivate = Math.floor(thumbsToActivate);
        thumbsSwiper.slides.removeClass(thumbActiveClass);
        if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) for(let i = 0; i < thumbsToActivate; i += 1)thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index="${swiper.realIndex + i}"]`).addClass(thumbActiveClass);
        else for(let i1 = 0; i1 < thumbsToActivate; i1 += 1)thumbsSwiper.slides.eq(swiper.realIndex + i1).addClass(thumbActiveClass);
        const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;
        const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;
        if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {
            let currentThumbsIndex = thumbsSwiper.activeIndex;
            let newThumbsIndex;
            let direction;
            if (thumbsSwiper.params.loop) {
                if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {
                    thumbsSwiper.loopFix(); // eslint-disable-next-line
                    thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;
                    currentThumbsIndex = thumbsSwiper.activeIndex;
                } // Find actual thumbs index to slide to
                const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index="${swiper.realIndex}"]`).eq(0).index();
                const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index="${swiper.realIndex}"]`).eq(0).index();
                if (typeof prevThumbsIndex === "undefined") newThumbsIndex = nextThumbsIndex;
                else if (typeof nextThumbsIndex === "undefined") newThumbsIndex = prevThumbsIndex;
                else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = thumbsSwiper.params.slidesPerGroup > 1 ? nextThumbsIndex : currentThumbsIndex;
                else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;
                else newThumbsIndex = prevThumbsIndex;
                direction = swiper.activeIndex > swiper.previousIndex ? "next" : "prev";
            } else {
                newThumbsIndex = swiper.realIndex;
                direction = newThumbsIndex > swiper.previousIndex ? "next" : "prev";
            }
            if (useOffset) newThumbsIndex += direction === "next" ? autoScrollOffset : -1 * autoScrollOffset;
            if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {
                if (thumbsSwiper.params.centeredSlides) {
                    if (newThumbsIndex > currentThumbsIndex) newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;
                    else newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;
                } else newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup;
                thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);
            }
        }
    }
    on("beforeInit", ()=>{
        const { thumbs  } = swiper.params;
        if (!thumbs || !thumbs.swiper) return;
        init();
        update(true);
    });
    on("slideChange update resize observerUpdate", ()=>{
        update();
    });
    on("setTransition", (_s, duration)=>{
        const thumbsSwiper = swiper.thumbs.swiper;
        if (!thumbsSwiper || thumbsSwiper.destroyed) return;
        thumbsSwiper.setTransition(duration);
    });
    on("beforeDestroy", ()=>{
        const thumbsSwiper = swiper.thumbs.swiper;
        if (!thumbsSwiper || thumbsSwiper.destroyed) return;
        if (swiperCreated) thumbsSwiper.destroy();
    });
    Object.assign(swiper.thumbs, {
        init,
        update
    });
}
exports.default = Thumb;

},{"../../shared/utils.js":"hr9mL","../../shared/dom.js":"fSctW","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"ip0Dy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _utilsJs = require("../../shared/utils.js");
function freeMode({ swiper , extendParams , emit , once  }) {
    extendParams({
        freeMode: {
            enabled: false,
            momentum: true,
            momentumRatio: 1,
            momentumBounce: true,
            momentumBounceRatio: 1,
            momentumVelocityRatio: 1,
            sticky: false,
            minimumVelocity: 0.02
        }
    });
    function onTouchStart() {
        const translate = swiper.getTranslate();
        swiper.setTranslate(translate);
        swiper.setTransition(0);
        swiper.touchEventsData.velocities.length = 0;
        swiper.freeMode.onTouchEnd({
            currentPos: swiper.rtl ? swiper.translate : -swiper.translate
        });
    }
    function onTouchMove() {
        const { touchEventsData: data , touches  } = swiper; // Velocity
        if (data.velocities.length === 0) data.velocities.push({
            position: touches[swiper.isHorizontal() ? "startX" : "startY"],
            time: data.touchStartTime
        });
        data.velocities.push({
            position: touches[swiper.isHorizontal() ? "currentX" : "currentY"],
            time: (0, _utilsJs.now)()
        });
    }
    function onTouchEnd({ currentPos  }) {
        const { params , $wrapperEl , rtlTranslate: rtl , snapGrid , touchEventsData: data  } = swiper; // Time diff
        const touchEndTime = (0, _utilsJs.now)();
        const timeDiff = touchEndTime - data.touchStartTime;
        if (currentPos < -swiper.minTranslate()) {
            swiper.slideTo(swiper.activeIndex);
            return;
        }
        if (currentPos > -swiper.maxTranslate()) {
            if (swiper.slides.length < snapGrid.length) swiper.slideTo(snapGrid.length - 1);
            else swiper.slideTo(swiper.slides.length - 1);
            return;
        }
        if (params.freeMode.momentum) {
            if (data.velocities.length > 1) {
                const lastMoveEvent = data.velocities.pop();
                const velocityEvent = data.velocities.pop();
                const distance = lastMoveEvent.position - velocityEvent.position;
                const time = lastMoveEvent.time - velocityEvent.time;
                swiper.velocity = distance / time;
                swiper.velocity /= 2;
                if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) swiper.velocity = 0;
                 // this implies that the user stopped moving a finger then released.
                // There would be no events with distance zero, so the last event is stale.
                if (time > 150 || (0, _utilsJs.now)() - lastMoveEvent.time > 300) swiper.velocity = 0;
            } else swiper.velocity = 0;
            swiper.velocity *= params.freeMode.momentumVelocityRatio;
            data.velocities.length = 0;
            let momentumDuration = 1000 * params.freeMode.momentumRatio;
            const momentumDistance = swiper.velocity * momentumDuration;
            let newPosition = swiper.translate + momentumDistance;
            if (rtl) newPosition = -newPosition;
            let doBounce = false;
            let afterBouncePosition;
            const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;
            let needsLoopFix;
            if (newPosition < swiper.maxTranslate()) {
                if (params.freeMode.momentumBounce) {
                    if (newPosition + swiper.maxTranslate() < -bounceAmount) newPosition = swiper.maxTranslate() - bounceAmount;
                    afterBouncePosition = swiper.maxTranslate();
                    doBounce = true;
                    data.allowMomentumBounce = true;
                } else newPosition = swiper.maxTranslate();
                if (params.loop && params.centeredSlides) needsLoopFix = true;
            } else if (newPosition > swiper.minTranslate()) {
                if (params.freeMode.momentumBounce) {
                    if (newPosition - swiper.minTranslate() > bounceAmount) newPosition = swiper.minTranslate() + bounceAmount;
                    afterBouncePosition = swiper.minTranslate();
                    doBounce = true;
                    data.allowMomentumBounce = true;
                } else newPosition = swiper.minTranslate();
                if (params.loop && params.centeredSlides) needsLoopFix = true;
            } else if (params.freeMode.sticky) {
                let nextSlide;
                for(let j = 0; j < snapGrid.length; j += 1)if (snapGrid[j] > -newPosition) {
                    nextSlide = j;
                    break;
                }
                if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === "next") newPosition = snapGrid[nextSlide];
                else newPosition = snapGrid[nextSlide - 1];
                newPosition = -newPosition;
            }
            if (needsLoopFix) once("transitionEnd", ()=>{
                swiper.loopFix();
            });
             // Fix duration
            if (swiper.velocity !== 0) {
                if (rtl) momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);
                else momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);
                if (params.freeMode.sticky) {
                    // If freeMode.sticky is active and the user ends a swipe with a slow-velocity
                    // event, then durations can be 20+ seconds to slide one (or zero!) slides.
                    // It's easy to see this when simulating touch with mouse events. To fix this,
                    // limit single-slide swipes to the default slide duration. This also has the
                    // nice side effect of matching slide speed if the user stopped moving before
                    // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.
                    // For faster swipes, also apply limits (albeit higher ones).
                    const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);
                    const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];
                    if (moveDistance < currentSlideSize) momentumDuration = params.speed;
                    else if (moveDistance < 2 * currentSlideSize) momentumDuration = params.speed * 1.5;
                    else momentumDuration = params.speed * 2.5;
                }
            } else if (params.freeMode.sticky) {
                swiper.slideToClosest();
                return;
            }
            if (params.freeMode.momentumBounce && doBounce) {
                swiper.updateProgress(afterBouncePosition);
                swiper.setTransition(momentumDuration);
                swiper.setTranslate(newPosition);
                swiper.transitionStart(true, swiper.swipeDirection);
                swiper.animating = true;
                $wrapperEl.transitionEnd(()=>{
                    if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;
                    emit("momentumBounce");
                    swiper.setTransition(params.speed);
                    setTimeout(()=>{
                        swiper.setTranslate(afterBouncePosition);
                        $wrapperEl.transitionEnd(()=>{
                            if (!swiper || swiper.destroyed) return;
                            swiper.transitionEnd();
                        });
                    }, 0);
                });
            } else if (swiper.velocity) {
                emit("_freeModeNoMomentumRelease");
                swiper.updateProgress(newPosition);
                swiper.setTransition(momentumDuration);
                swiper.setTranslate(newPosition);
                swiper.transitionStart(true, swiper.swipeDirection);
                if (!swiper.animating) {
                    swiper.animating = true;
                    $wrapperEl.transitionEnd(()=>{
                        if (!swiper || swiper.destroyed) return;
                        swiper.transitionEnd();
                    });
                }
            } else swiper.updateProgress(newPosition);
            swiper.updateActiveIndex();
            swiper.updateSlidesClasses();
        } else if (params.freeMode.sticky) {
            swiper.slideToClosest();
            return;
        } else if (params.freeMode) emit("_freeModeNoMomentumRelease");
        if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {
            swiper.updateProgress();
            swiper.updateActiveIndex();
            swiper.updateSlidesClasses();
        }
    }
    Object.assign(swiper, {
        freeMode: {
            onTouchStart,
            onTouchMove,
            onTouchEnd
        }
    });
}
exports.default = freeMode;

},{"../../shared/utils.js":"hr9mL","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"dOf1v":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function Grid({ swiper , extendParams  }) {
    extendParams({
        grid: {
            rows: 1,
            fill: "column"
        }
    });
    let slidesNumberEvenToRows;
    let slidesPerRow;
    let numFullColumns;
    const initSlides = (slidesLength)=>{
        const { slidesPerView  } = swiper.params;
        const { rows , fill  } = swiper.params.grid;
        slidesPerRow = slidesNumberEvenToRows / rows;
        numFullColumns = Math.floor(slidesLength / rows);
        if (Math.floor(slidesLength / rows) === slidesLength / rows) slidesNumberEvenToRows = slidesLength;
        else slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;
        if (slidesPerView !== "auto" && fill === "row") slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);
    };
    const updateSlide = (i, slide, slidesLength, getDirectionLabel)=>{
        const { slidesPerGroup , spaceBetween  } = swiper.params;
        const { rows , fill  } = swiper.params.grid; // Set slides order
        let newSlideOrderIndex;
        let column;
        let row;
        if (fill === "row" && slidesPerGroup > 1) {
            const groupIndex = Math.floor(i / (slidesPerGroup * rows));
            const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;
            const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);
            row = Math.floor(slideIndexInGroup / columnsInGroup);
            column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;
            newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;
            slide.css({
                "-webkit-order": newSlideOrderIndex,
                order: newSlideOrderIndex
            });
        } else if (fill === "column") {
            column = Math.floor(i / rows);
            row = i - column * rows;
            if (column > numFullColumns || column === numFullColumns && row === rows - 1) {
                row += 1;
                if (row >= rows) {
                    row = 0;
                    column += 1;
                }
            }
        } else {
            row = Math.floor(i / slidesPerRow);
            column = i - row * slidesPerRow;
        }
        slide.css(getDirectionLabel("margin-top"), row !== 0 ? spaceBetween && `${spaceBetween}px` : "");
    };
    const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel)=>{
        const { spaceBetween , centeredSlides , roundLengths  } = swiper.params;
        const { rows  } = swiper.params.grid;
        swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;
        swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;
        swiper.$wrapperEl.css({
            [getDirectionLabel("width")]: `${swiper.virtualSize + spaceBetween}px`
        });
        if (centeredSlides) {
            snapGrid.splice(0, snapGrid.length);
            const newSlidesGrid = [];
            for(let i = 0; i < snapGrid.length; i += 1){
                let slidesGridItem = snapGrid[i];
                if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);
                if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);
            }
            snapGrid.push(...newSlidesGrid);
        }
    };
    swiper.grid = {
        initSlides,
        updateSlide,
        updateWrapperSize
    };
}
exports.default = Grid;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"7BHUV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _appendSlideJs = require("./methods/appendSlide.js");
var _appendSlideJsDefault = parcelHelpers.interopDefault(_appendSlideJs);
var _prependSlideJs = require("./methods/prependSlide.js");
var _prependSlideJsDefault = parcelHelpers.interopDefault(_prependSlideJs);
var _addSlideJs = require("./methods/addSlide.js");
var _addSlideJsDefault = parcelHelpers.interopDefault(_addSlideJs);
var _removeSlideJs = require("./methods/removeSlide.js");
var _removeSlideJsDefault = parcelHelpers.interopDefault(_removeSlideJs);
var _removeAllSlidesJs = require("./methods/removeAllSlides.js");
var _removeAllSlidesJsDefault = parcelHelpers.interopDefault(_removeAllSlidesJs);
function Manipulation({ swiper  }) {
    Object.assign(swiper, {
        appendSlide: (0, _appendSlideJsDefault.default).bind(swiper),
        prependSlide: (0, _prependSlideJsDefault.default).bind(swiper),
        addSlide: (0, _addSlideJsDefault.default).bind(swiper),
        removeSlide: (0, _removeSlideJsDefault.default).bind(swiper),
        removeAllSlides: (0, _removeAllSlidesJsDefault.default).bind(swiper)
    });
}
exports.default = Manipulation;

},{"./methods/appendSlide.js":"37wdO","./methods/prependSlide.js":"4LeEL","./methods/addSlide.js":"1uGI5","./methods/removeSlide.js":"5YE9K","./methods/removeAllSlides.js":"76vYk","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"37wdO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function appendSlide(slides) {
    const swiper = this;
    const { $wrapperEl , params  } = swiper;
    if (params.loop) swiper.loopDestroy();
    if (typeof slides === "object" && "length" in slides) {
        for(let i = 0; i < slides.length; i += 1)if (slides[i]) $wrapperEl.append(slides[i]);
    } else $wrapperEl.append(slides);
    if (params.loop) swiper.loopCreate();
    if (!params.observer) swiper.update();
}
exports.default = appendSlide;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"4LeEL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function prependSlide(slides) {
    const swiper = this;
    const { params , $wrapperEl , activeIndex  } = swiper;
    if (params.loop) swiper.loopDestroy();
    let newActiveIndex = activeIndex + 1;
    if (typeof slides === "object" && "length" in slides) {
        for(let i = 0; i < slides.length; i += 1)if (slides[i]) $wrapperEl.prepend(slides[i]);
        newActiveIndex = activeIndex + slides.length;
    } else $wrapperEl.prepend(slides);
    if (params.loop) swiper.loopCreate();
    if (!params.observer) swiper.update();
    swiper.slideTo(newActiveIndex, 0, false);
}
exports.default = prependSlide;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"1uGI5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function addSlide(index, slides) {
    const swiper = this;
    const { $wrapperEl , params , activeIndex  } = swiper;
    let activeIndexBuffer = activeIndex;
    if (params.loop) {
        activeIndexBuffer -= swiper.loopedSlides;
        swiper.loopDestroy();
        swiper.slides = $wrapperEl.children(`.${params.slideClass}`);
    }
    const baseLength = swiper.slides.length;
    if (index <= 0) {
        swiper.prependSlide(slides);
        return;
    }
    if (index >= baseLength) {
        swiper.appendSlide(slides);
        return;
    }
    let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;
    const slidesBuffer = [];
    for(let i = baseLength - 1; i >= index; i -= 1){
        const currentSlide = swiper.slides.eq(i);
        currentSlide.remove();
        slidesBuffer.unshift(currentSlide);
    }
    if (typeof slides === "object" && "length" in slides) {
        for(let i1 = 0; i1 < slides.length; i1 += 1)if (slides[i1]) $wrapperEl.append(slides[i1]);
        newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;
    } else $wrapperEl.append(slides);
    for(let i2 = 0; i2 < slidesBuffer.length; i2 += 1)$wrapperEl.append(slidesBuffer[i2]);
    if (params.loop) swiper.loopCreate();
    if (!params.observer) swiper.update();
    if (params.loop) swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);
    else swiper.slideTo(newActiveIndex, 0, false);
}
exports.default = addSlide;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"5YE9K":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function removeSlide(slidesIndexes) {
    const swiper = this;
    const { params , $wrapperEl , activeIndex  } = swiper;
    let activeIndexBuffer = activeIndex;
    if (params.loop) {
        activeIndexBuffer -= swiper.loopedSlides;
        swiper.loopDestroy();
        swiper.slides = $wrapperEl.children(`.${params.slideClass}`);
    }
    let newActiveIndex = activeIndexBuffer;
    let indexToRemove;
    if (typeof slidesIndexes === "object" && "length" in slidesIndexes) {
        for(let i = 0; i < slidesIndexes.length; i += 1){
            indexToRemove = slidesIndexes[i];
            if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();
            if (indexToRemove < newActiveIndex) newActiveIndex -= 1;
        }
        newActiveIndex = Math.max(newActiveIndex, 0);
    } else {
        indexToRemove = slidesIndexes;
        if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();
        if (indexToRemove < newActiveIndex) newActiveIndex -= 1;
        newActiveIndex = Math.max(newActiveIndex, 0);
    }
    if (params.loop) swiper.loopCreate();
    if (!params.observer) swiper.update();
    if (params.loop) swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);
    else swiper.slideTo(newActiveIndex, 0, false);
}
exports.default = removeSlide;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"76vYk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function removeAllSlides() {
    const swiper = this;
    const slidesIndexes = [];
    for(let i = 0; i < swiper.slides.length; i += 1)slidesIndexes.push(i);
    swiper.removeSlide(slidesIndexes);
}
exports.default = removeAllSlides;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"7shH7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _effectInitJs = require("../../shared/effect-init.js");
var _effectInitJsDefault = parcelHelpers.interopDefault(_effectInitJs);
var _effectTargetJs = require("../../shared/effect-target.js");
var _effectTargetJsDefault = parcelHelpers.interopDefault(_effectTargetJs);
var _effectVirtualTransitionEndJs = require("../../shared/effect-virtual-transition-end.js");
var _effectVirtualTransitionEndJsDefault = parcelHelpers.interopDefault(_effectVirtualTransitionEndJs);
function EffectFade({ swiper , extendParams , on  }) {
    extendParams({
        fadeEffect: {
            crossFade: false,
            transformEl: null
        }
    });
    const setTranslate = ()=>{
        const { slides  } = swiper;
        const params = swiper.params.fadeEffect;
        for(let i = 0; i < slides.length; i += 1){
            const $slideEl = swiper.slides.eq(i);
            const offset = $slideEl[0].swiperSlideOffset;
            let tx = -offset;
            if (!swiper.params.virtualTranslate) tx -= swiper.translate;
            let ty = 0;
            if (!swiper.isHorizontal()) {
                ty = tx;
                tx = 0;
            }
            const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);
            const $targetEl = (0, _effectTargetJsDefault.default)(params, $slideEl);
            $targetEl.css({
                opacity: slideOpacity
            }).transform(`translate3d(${tx}px, ${ty}px, 0px)`);
        }
    };
    const setTransition = (duration)=>{
        const { transformEl  } = swiper.params.fadeEffect;
        const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;
        $transitionElements.transition(duration);
        (0, _effectVirtualTransitionEndJsDefault.default)({
            swiper,
            duration,
            transformEl,
            allSlides: true
        });
    };
    (0, _effectInitJsDefault.default)({
        effect: "fade",
        swiper,
        on,
        setTranslate,
        setTransition,
        overwriteParams: ()=>({
                slidesPerView: 1,
                slidesPerGroup: 1,
                watchSlidesProgress: true,
                spaceBetween: 0,
                virtualTranslate: !swiper.params.cssMode
            })
    });
}
exports.default = EffectFade;

},{"../../shared/effect-init.js":"2Lp1D","../../shared/effect-target.js":"drZTC","../../shared/effect-virtual-transition-end.js":"1OpVh","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"2Lp1D":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function effectInit(params) {
    const { effect , swiper , on , setTranslate , setTransition , overwriteParams , perspective , recreateShadows , getEffectParams  } = params;
    on("beforeInit", ()=>{
        if (swiper.params.effect !== effect) return;
        swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);
        if (perspective && perspective()) swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);
        const overwriteParamsResult = overwriteParams ? overwriteParams() : {};
        Object.assign(swiper.params, overwriteParamsResult);
        Object.assign(swiper.originalParams, overwriteParamsResult);
    });
    on("setTranslate", ()=>{
        if (swiper.params.effect !== effect) return;
        setTranslate();
    });
    on("setTransition", (_s, duration)=>{
        if (swiper.params.effect !== effect) return;
        setTransition(duration);
    });
    on("transitionEnd", ()=>{
        if (swiper.params.effect !== effect) return;
        if (recreateShadows) {
            if (!getEffectParams || !getEffectParams().slideShadows) return; // remove shadows
            swiper.slides.each((slideEl)=>{
                const $slideEl = swiper.$(slideEl);
                $slideEl.find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").remove();
            }); // create new one
            recreateShadows();
        }
    });
    let requireUpdateOnVirtual;
    on("virtualUpdate", ()=>{
        if (swiper.params.effect !== effect) return;
        if (!swiper.slides.length) requireUpdateOnVirtual = true;
        requestAnimationFrame(()=>{
            if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {
                setTranslate();
                requireUpdateOnVirtual = false;
            }
        });
    });
}
exports.default = effectInit;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"drZTC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function effectTarget(effectParams, $slideEl) {
    if (effectParams.transformEl) return $slideEl.find(effectParams.transformEl).css({
        "backface-visibility": "hidden",
        "-webkit-backface-visibility": "hidden"
    });
    return $slideEl;
}
exports.default = effectTarget;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"1OpVh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function effectVirtualTransitionEnd({ swiper , duration , transformEl , allSlides  }) {
    const { slides , activeIndex , $wrapperEl  } = swiper;
    if (swiper.params.virtualTranslate && duration !== 0) {
        let eventTriggered = false;
        let $transitionEndTarget;
        if (allSlides) $transitionEndTarget = transformEl ? slides.find(transformEl) : slides;
        else $transitionEndTarget = transformEl ? slides.eq(activeIndex).find(transformEl) : slides.eq(activeIndex);
        $transitionEndTarget.transitionEnd(()=>{
            if (eventTriggered) return;
            if (!swiper || swiper.destroyed) return;
            eventTriggered = true;
            swiper.animating = false;
            const triggerEvents = [
                "webkitTransitionEnd",
                "transitionend"
            ];
            for(let i = 0; i < triggerEvents.length; i += 1)$wrapperEl.trigger(triggerEvents[i]);
        });
    }
}
exports.default = effectVirtualTransitionEnd;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"itohZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _domJs = require("../../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
var _effectInitJs = require("../../shared/effect-init.js");
var _effectInitJsDefault = parcelHelpers.interopDefault(_effectInitJs);
function EffectCube({ swiper , extendParams , on  }) {
    extendParams({
        cubeEffect: {
            slideShadows: true,
            shadow: true,
            shadowOffset: 20,
            shadowScale: 0.94
        }
    });
    const createSlideShadows = ($slideEl, progress, isHorizontal)=>{
        let shadowBefore = isHorizontal ? $slideEl.find(".swiper-slide-shadow-left") : $slideEl.find(".swiper-slide-shadow-top");
        let shadowAfter = isHorizontal ? $slideEl.find(".swiper-slide-shadow-right") : $slideEl.find(".swiper-slide-shadow-bottom");
        if (shadowBefore.length === 0) {
            shadowBefore = (0, _domJsDefault.default)(`<div class="swiper-slide-shadow-${isHorizontal ? "left" : "top"}"></div>`);
            $slideEl.append(shadowBefore);
        }
        if (shadowAfter.length === 0) {
            shadowAfter = (0, _domJsDefault.default)(`<div class="swiper-slide-shadow-${isHorizontal ? "right" : "bottom"}"></div>`);
            $slideEl.append(shadowAfter);
        }
        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);
        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);
    };
    const recreateShadows = ()=>{
        // create new ones
        const isHorizontal = swiper.isHorizontal();
        swiper.slides.each((slideEl)=>{
            const progress = Math.max(Math.min(slideEl.progress, 1), -1);
            createSlideShadows((0, _domJsDefault.default)(slideEl), progress, isHorizontal);
        });
    };
    const setTranslate = ()=>{
        const { $el , $wrapperEl , slides , width: swiperWidth , height: swiperHeight , rtlTranslate: rtl , size: swiperSize , browser  } = swiper;
        const params = swiper.params.cubeEffect;
        const isHorizontal = swiper.isHorizontal();
        const isVirtual = swiper.virtual && swiper.params.virtual.enabled;
        let wrapperRotate = 0;
        let $cubeShadowEl;
        if (params.shadow) {
            if (isHorizontal) {
                $cubeShadowEl = $wrapperEl.find(".swiper-cube-shadow");
                if ($cubeShadowEl.length === 0) {
                    $cubeShadowEl = (0, _domJsDefault.default)('<div class="swiper-cube-shadow"></div>');
                    $wrapperEl.append($cubeShadowEl);
                }
                $cubeShadowEl.css({
                    height: `${swiperWidth}px`
                });
            } else {
                $cubeShadowEl = $el.find(".swiper-cube-shadow");
                if ($cubeShadowEl.length === 0) {
                    $cubeShadowEl = (0, _domJsDefault.default)('<div class="swiper-cube-shadow"></div>');
                    $el.append($cubeShadowEl);
                }
            }
        }
        for(let i = 0; i < slides.length; i += 1){
            const $slideEl = slides.eq(i);
            let slideIndex = i;
            if (isVirtual) slideIndex = parseInt($slideEl.attr("data-swiper-slide-index"), 10);
            let slideAngle = slideIndex * 90;
            let round = Math.floor(slideAngle / 360);
            if (rtl) {
                slideAngle = -slideAngle;
                round = Math.floor(-slideAngle / 360);
            }
            const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);
            let tx = 0;
            let ty = 0;
            let tz = 0;
            if (slideIndex % 4 === 0) {
                tx = -round * 4 * swiperSize;
                tz = 0;
            } else if ((slideIndex - 1) % 4 === 0) {
                tx = 0;
                tz = -round * 4 * swiperSize;
            } else if ((slideIndex - 2) % 4 === 0) {
                tx = swiperSize + round * 4 * swiperSize;
                tz = swiperSize;
            } else if ((slideIndex - 3) % 4 === 0) {
                tx = -swiperSize;
                tz = 3 * swiperSize + swiperSize * 4 * round;
            }
            if (rtl) tx = -tx;
            if (!isHorizontal) {
                ty = tx;
                tx = 0;
            }
            const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;
            if (progress <= 1 && progress > -1) {
                wrapperRotate = slideIndex * 90 + progress * 90;
                if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;
            }
            $slideEl.transform(transform);
            if (params.slideShadows) createSlideShadows($slideEl, progress, isHorizontal);
        }
        $wrapperEl.css({
            "-webkit-transform-origin": `50% 50% -${swiperSize / 2}px`,
            "transform-origin": `50% 50% -${swiperSize / 2}px`
        });
        if (params.shadow) {
            if (isHorizontal) $cubeShadowEl.transform(`translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);
            else {
                const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;
                const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);
                const scale1 = params.shadowScale;
                const scale2 = params.shadowScale / multiplier;
                const offset = params.shadowOffset;
                $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);
            }
        }
        const zFactor = browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0;
        $wrapperEl.transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);
        $wrapperEl[0].style.setProperty("--swiper-cube-translate-z", `${zFactor}px`);
    };
    const setTransition = (duration)=>{
        const { $el , slides  } = swiper;
        slides.transition(duration).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(duration);
        if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) $el.find(".swiper-cube-shadow").transition(duration);
    };
    (0, _effectInitJsDefault.default)({
        effect: "cube",
        swiper,
        on,
        setTranslate,
        setTransition,
        recreateShadows,
        getEffectParams: ()=>swiper.params.cubeEffect,
        perspective: ()=>true,
        overwriteParams: ()=>({
                slidesPerView: 1,
                slidesPerGroup: 1,
                watchSlidesProgress: true,
                resistanceRatio: 0,
                spaceBetween: 0,
                centeredSlides: false,
                virtualTranslate: true
            })
    });
}
exports.default = EffectCube;

},{"../../shared/dom.js":"fSctW","../../shared/effect-init.js":"2Lp1D","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"dlwe1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _domJs = require("../../shared/dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
var _createShadowJs = require("../../shared/create-shadow.js");
var _createShadowJsDefault = parcelHelpers.interopDefault(_createShadowJs);
var _effectInitJs = require("../../shared/effect-init.js");
var _effectInitJsDefault = parcelHelpers.interopDefault(_effectInitJs);
var _effectTargetJs = require("../../shared/effect-target.js");
var _effectTargetJsDefault = parcelHelpers.interopDefault(_effectTargetJs);
var _effectVirtualTransitionEndJs = require("../../shared/effect-virtual-transition-end.js");
var _effectVirtualTransitionEndJsDefault = parcelHelpers.interopDefault(_effectVirtualTransitionEndJs);
function EffectFlip({ swiper , extendParams , on  }) {
    extendParams({
        flipEffect: {
            slideShadows: true,
            limitRotation: true,
            transformEl: null
        }
    });
    const createSlideShadows = ($slideEl, progress, params)=>{
        let shadowBefore = swiper.isHorizontal() ? $slideEl.find(".swiper-slide-shadow-left") : $slideEl.find(".swiper-slide-shadow-top");
        let shadowAfter = swiper.isHorizontal() ? $slideEl.find(".swiper-slide-shadow-right") : $slideEl.find(".swiper-slide-shadow-bottom");
        if (shadowBefore.length === 0) shadowBefore = (0, _createShadowJsDefault.default)(params, $slideEl, swiper.isHorizontal() ? "left" : "top");
        if (shadowAfter.length === 0) shadowAfter = (0, _createShadowJsDefault.default)(params, $slideEl, swiper.isHorizontal() ? "right" : "bottom");
        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);
        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);
    };
    const recreateShadows = ()=>{
        // Set shadows
        const params = swiper.params.flipEffect;
        swiper.slides.each((slideEl)=>{
            const $slideEl = (0, _domJsDefault.default)(slideEl);
            let progress = $slideEl[0].progress;
            if (swiper.params.flipEffect.limitRotation) progress = Math.max(Math.min(slideEl.progress, 1), -1);
            createSlideShadows($slideEl, progress, params);
        });
    };
    const setTranslate = ()=>{
        const { slides , rtlTranslate: rtl  } = swiper;
        const params = swiper.params.flipEffect;
        for(let i = 0; i < slides.length; i += 1){
            const $slideEl = slides.eq(i);
            let progress = $slideEl[0].progress;
            if (swiper.params.flipEffect.limitRotation) progress = Math.max(Math.min($slideEl[0].progress, 1), -1);
            const offset = $slideEl[0].swiperSlideOffset;
            const rotate = -180 * progress;
            let rotateY = rotate;
            let rotateX = 0;
            let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;
            let ty = 0;
            if (!swiper.isHorizontal()) {
                ty = tx;
                tx = 0;
                rotateX = -rotateY;
                rotateY = 0;
            } else if (rtl) rotateY = -rotateY;
            $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;
            if (params.slideShadows) createSlideShadows($slideEl, progress, params);
            const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;
            const $targetEl = (0, _effectTargetJsDefault.default)(params, $slideEl);
            $targetEl.transform(transform);
        }
    };
    const setTransition = (duration)=>{
        const { transformEl  } = swiper.params.flipEffect;
        const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;
        $transitionElements.transition(duration).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(duration);
        (0, _effectVirtualTransitionEndJsDefault.default)({
            swiper,
            duration,
            transformEl
        });
    };
    (0, _effectInitJsDefault.default)({
        effect: "flip",
        swiper,
        on,
        setTranslate,
        setTransition,
        recreateShadows,
        getEffectParams: ()=>swiper.params.flipEffect,
        perspective: ()=>true,
        overwriteParams: ()=>({
                slidesPerView: 1,
                slidesPerGroup: 1,
                watchSlidesProgress: true,
                spaceBetween: 0,
                virtualTranslate: !swiper.params.cssMode
            })
    });
}
exports.default = EffectFlip;

},{"../../shared/dom.js":"fSctW","../../shared/create-shadow.js":"4B12q","../../shared/effect-init.js":"2Lp1D","../../shared/effect-target.js":"drZTC","../../shared/effect-virtual-transition-end.js":"1OpVh","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"4B12q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _domJs = require("./dom.js");
var _domJsDefault = parcelHelpers.interopDefault(_domJs);
function createShadow(params, $slideEl, side) {
    const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ""}`;
    const $shadowContainer = params.transformEl ? $slideEl.find(params.transformEl) : $slideEl;
    let $shadowEl = $shadowContainer.children(`.${shadowClass}`);
    if (!$shadowEl.length) {
        $shadowEl = (0, _domJsDefault.default)(`<div class="swiper-slide-shadow${side ? `-${side}` : ""}"></div>`);
        $shadowContainer.append($shadowEl);
    }
    return $shadowEl;
}
exports.default = createShadow;

},{"./dom.js":"fSctW","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"lrjJG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _createShadowJs = require("../../shared/create-shadow.js");
var _createShadowJsDefault = parcelHelpers.interopDefault(_createShadowJs);
var _effectInitJs = require("../../shared/effect-init.js");
var _effectInitJsDefault = parcelHelpers.interopDefault(_effectInitJs);
var _effectTargetJs = require("../../shared/effect-target.js");
var _effectTargetJsDefault = parcelHelpers.interopDefault(_effectTargetJs);
function EffectCoverflow({ swiper , extendParams , on  }) {
    extendParams({
        coverflowEffect: {
            rotate: 50,
            stretch: 0,
            depth: 100,
            scale: 1,
            modifier: 1,
            slideShadows: true,
            transformEl: null
        }
    });
    const setTranslate = ()=>{
        const { width: swiperWidth , height: swiperHeight , slides , slidesSizesGrid  } = swiper;
        const params = swiper.params.coverflowEffect;
        const isHorizontal = swiper.isHorizontal();
        const transform = swiper.translate;
        const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;
        const rotate = isHorizontal ? params.rotate : -params.rotate;
        const translate = params.depth; // Each slide offset from center
        for(let i = 0, length = slides.length; i < length; i += 1){
            const $slideEl = slides.eq(i);
            const slideSize = slidesSizesGrid[i];
            const slideOffset = $slideEl[0].swiperSlideOffset;
            const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;
            const offsetMultiplier = typeof params.modifier === "function" ? params.modifier(centerOffset) : centerOffset * params.modifier;
            let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;
            let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0
            let translateZ = -translate * Math.abs(offsetMultiplier);
            let stretch = params.stretch; // Allow percentage to make a relative stretch for responsive sliders
            if (typeof stretch === "string" && stretch.indexOf("%") !== -1) stretch = parseFloat(params.stretch) / 100 * slideSize;
            let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;
            let translateX = isHorizontal ? stretch * offsetMultiplier : 0;
            let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier); // Fix for ultra small values
            if (Math.abs(translateX) < 0.001) translateX = 0;
            if (Math.abs(translateY) < 0.001) translateY = 0;
            if (Math.abs(translateZ) < 0.001) translateZ = 0;
            if (Math.abs(rotateY) < 0.001) rotateY = 0;
            if (Math.abs(rotateX) < 0.001) rotateX = 0;
            if (Math.abs(scale) < 0.001) scale = 0;
            const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;
            const $targetEl = (0, _effectTargetJsDefault.default)(params, $slideEl);
            $targetEl.transform(slideTransform);
            $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;
            if (params.slideShadows) {
                // Set shadows
                let $shadowBeforeEl = isHorizontal ? $slideEl.find(".swiper-slide-shadow-left") : $slideEl.find(".swiper-slide-shadow-top");
                let $shadowAfterEl = isHorizontal ? $slideEl.find(".swiper-slide-shadow-right") : $slideEl.find(".swiper-slide-shadow-bottom");
                if ($shadowBeforeEl.length === 0) $shadowBeforeEl = (0, _createShadowJsDefault.default)(params, $slideEl, isHorizontal ? "left" : "top");
                if ($shadowAfterEl.length === 0) $shadowAfterEl = (0, _createShadowJsDefault.default)(params, $slideEl, isHorizontal ? "right" : "bottom");
                if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;
                if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;
            }
        }
    };
    const setTransition = (duration)=>{
        const { transformEl  } = swiper.params.coverflowEffect;
        const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;
        $transitionElements.transition(duration).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(duration);
    };
    (0, _effectInitJsDefault.default)({
        effect: "coverflow",
        swiper,
        on,
        setTranslate,
        setTransition,
        perspective: ()=>true,
        overwriteParams: ()=>({
                watchSlidesProgress: true
            })
    });
}
exports.default = EffectCoverflow;

},{"../../shared/create-shadow.js":"4B12q","../../shared/effect-init.js":"2Lp1D","../../shared/effect-target.js":"drZTC","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"67vWL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _createShadowJs = require("../../shared/create-shadow.js");
var _createShadowJsDefault = parcelHelpers.interopDefault(_createShadowJs);
var _effectInitJs = require("../../shared/effect-init.js");
var _effectInitJsDefault = parcelHelpers.interopDefault(_effectInitJs);
var _effectTargetJs = require("../../shared/effect-target.js");
var _effectTargetJsDefault = parcelHelpers.interopDefault(_effectTargetJs);
var _effectVirtualTransitionEndJs = require("../../shared/effect-virtual-transition-end.js");
var _effectVirtualTransitionEndJsDefault = parcelHelpers.interopDefault(_effectVirtualTransitionEndJs);
function EffectCreative({ swiper , extendParams , on  }) {
    extendParams({
        creativeEffect: {
            transformEl: null,
            limitProgress: 1,
            shadowPerProgress: false,
            progressMultiplier: 1,
            perspective: true,
            prev: {
                translate: [
                    0,
                    0,
                    0
                ],
                rotate: [
                    0,
                    0,
                    0
                ],
                opacity: 1,
                scale: 1
            },
            next: {
                translate: [
                    0,
                    0,
                    0
                ],
                rotate: [
                    0,
                    0,
                    0
                ],
                opacity: 1,
                scale: 1
            }
        }
    });
    const getTranslateValue = (value)=>{
        if (typeof value === "string") return value;
        return `${value}px`;
    };
    const setTranslate = ()=>{
        const { slides , $wrapperEl , slidesSizesGrid  } = swiper;
        const params = swiper.params.creativeEffect;
        const { progressMultiplier: multiplier  } = params;
        const isCenteredSlides = swiper.params.centeredSlides;
        if (isCenteredSlides) {
            const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;
            $wrapperEl.transform(`translateX(calc(50% - ${margin}px))`);
        }
        for(let i = 0; i < slides.length; i += 1){
            const $slideEl = slides.eq(i);
            const slideProgress = $slideEl[0].progress;
            const progress = Math.min(Math.max($slideEl[0].progress, -params.limitProgress), params.limitProgress);
            let originalProgress = progress;
            if (!isCenteredSlides) originalProgress = Math.min(Math.max($slideEl[0].originalProgress, -params.limitProgress), params.limitProgress);
            const offset = $slideEl[0].swiperSlideOffset;
            const t = [
                swiper.params.cssMode ? -offset - swiper.translate : -offset,
                0,
                0
            ];
            const r = [
                0,
                0,
                0
            ];
            let custom = false;
            if (!swiper.isHorizontal()) {
                t[1] = t[0];
                t[0] = 0;
            }
            let data = {
                translate: [
                    0,
                    0,
                    0
                ],
                rotate: [
                    0,
                    0,
                    0
                ],
                scale: 1,
                opacity: 1
            };
            if (progress < 0) {
                data = params.next;
                custom = true;
            } else if (progress > 0) {
                data = params.prev;
                custom = true;
            } // set translate
            t.forEach((value, index)=>{
                t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;
            }); // set rotates
            r.forEach((value, index)=>{
                r[index] = data.rotate[index] * Math.abs(progress * multiplier);
            });
            $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;
            const translateString = t.join(", ");
            const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;
            const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;
            const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;
            const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`; // Set shadows
            if (custom && data.shadow || !custom) {
                let $shadowEl = $slideEl.children(".swiper-slide-shadow");
                if ($shadowEl.length === 0 && data.shadow) $shadowEl = (0, _createShadowJsDefault.default)(params, $slideEl);
                if ($shadowEl.length) {
                    const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;
                    $shadowEl[0].style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);
                }
            }
            const $targetEl = (0, _effectTargetJsDefault.default)(params, $slideEl);
            $targetEl.transform(transform).css({
                opacity: opacityString
            });
            if (data.origin) $targetEl.css("transform-origin", data.origin);
        }
    };
    const setTransition = (duration)=>{
        const { transformEl  } = swiper.params.creativeEffect;
        const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;
        $transitionElements.transition(duration).find(".swiper-slide-shadow").transition(duration);
        (0, _effectVirtualTransitionEndJsDefault.default)({
            swiper,
            duration,
            transformEl,
            allSlides: true
        });
    };
    (0, _effectInitJsDefault.default)({
        effect: "creative",
        swiper,
        on,
        setTranslate,
        setTransition,
        perspective: ()=>swiper.params.creativeEffect.perspective,
        overwriteParams: ()=>({
                watchSlidesProgress: true,
                virtualTranslate: !swiper.params.cssMode
            })
    });
}
exports.default = EffectCreative;

},{"../../shared/create-shadow.js":"4B12q","../../shared/effect-init.js":"2Lp1D","../../shared/effect-target.js":"drZTC","../../shared/effect-virtual-transition-end.js":"1OpVh","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"cs8o6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _createShadowJs = require("../../shared/create-shadow.js");
var _createShadowJsDefault = parcelHelpers.interopDefault(_createShadowJs);
var _effectInitJs = require("../../shared/effect-init.js");
var _effectInitJsDefault = parcelHelpers.interopDefault(_effectInitJs);
var _effectTargetJs = require("../../shared/effect-target.js");
var _effectTargetJsDefault = parcelHelpers.interopDefault(_effectTargetJs);
var _effectVirtualTransitionEndJs = require("../../shared/effect-virtual-transition-end.js");
var _effectVirtualTransitionEndJsDefault = parcelHelpers.interopDefault(_effectVirtualTransitionEndJs);
function EffectCards({ swiper , extendParams , on  }) {
    extendParams({
        cardsEffect: {
            slideShadows: true,
            transformEl: null,
            rotate: true,
            perSlideRotate: 2,
            perSlideOffset: 8
        }
    });
    const setTranslate = ()=>{
        const { slides , activeIndex  } = swiper;
        const params = swiper.params.cardsEffect;
        const { startTranslate , isTouched  } = swiper.touchEventsData;
        const currentTranslate = swiper.translate;
        for(let i = 0; i < slides.length; i += 1){
            const $slideEl = slides.eq(i);
            const slideProgress = $slideEl[0].progress;
            const progress = Math.min(Math.max(slideProgress, -4), 4);
            let offset = $slideEl[0].swiperSlideOffset;
            if (swiper.params.centeredSlides && !swiper.params.cssMode) swiper.$wrapperEl.transform(`translateX(${swiper.minTranslate()}px)`);
            if (swiper.params.centeredSlides && swiper.params.cssMode) offset -= slides[0].swiperSlideOffset;
            let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;
            let tY = 0;
            const tZ = -100 * Math.abs(progress);
            let scale = 1;
            let rotate = -params.perSlideRotate * progress;
            let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;
            const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;
            const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;
            const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;
            if (isSwipeToNext || isSwipeToPrev) {
                const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;
                rotate += -28 * progress * subProgress;
                scale += -0.5 * subProgress;
                tXAdd += 96 * subProgress;
                tY = `${-25 * subProgress * Math.abs(progress)}%`;
            }
            if (progress < 0) // next
            tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;
            else if (progress > 0) // prev
            tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;
            else tX = `${tX}px`;
            if (!swiper.isHorizontal()) {
                const prevY = tY;
                tY = tX;
                tX = prevY;
            }
            const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;
            const transform = `
        translate3d(${tX}, ${tY}, ${tZ}px)
        rotateZ(${params.rotate ? rotate : 0}deg)
        scale(${scaleString})
      `;
            if (params.slideShadows) {
                // Set shadows
                let $shadowEl = $slideEl.find(".swiper-slide-shadow");
                if ($shadowEl.length === 0) $shadowEl = (0, _createShadowJsDefault.default)(params, $slideEl);
                if ($shadowEl.length) $shadowEl[0].style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);
            }
            $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;
            const $targetEl = (0, _effectTargetJsDefault.default)(params, $slideEl);
            $targetEl.transform(transform);
        }
    };
    const setTransition = (duration)=>{
        const { transformEl  } = swiper.params.cardsEffect;
        const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;
        $transitionElements.transition(duration).find(".swiper-slide-shadow").transition(duration);
        (0, _effectVirtualTransitionEndJsDefault.default)({
            swiper,
            duration,
            transformEl
        });
    };
    (0, _effectInitJsDefault.default)({
        effect: "cards",
        swiper,
        on,
        setTranslate,
        setTransition,
        perspective: ()=>true,
        overwriteParams: ()=>({
                watchSlidesProgress: true,
                virtualTranslate: !swiper.params.cssMode
            })
    });
}
exports.default = EffectCards;

},{"../../shared/create-shadow.js":"4B12q","../../shared/effect-init.js":"2Lp1D","../../shared/effect-target.js":"drZTC","../../shared/effect-virtual-transition-end.js":"1OpVh","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"2oKU6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _gsap = require("gsap");
var _splitType = require("split-type");
var _splitTypeDefault = parcelHelpers.interopDefault(_splitType);
exports.default = class {
    constructor(element, isActive){
        this.el = element;
        this.elsleft = this.el.querySelectorAll(".left_el");
        this.elsright = this.el.querySelectorAll(".right_el");
        this.elsclick = this.el.querySelectorAll(".pgel");
        this.pos = -1;
        this.length = this.elsright.length;
        this.splits = [];
        this.tweens = [];
        let tw;
        for (let [key, el] of this.el.querySelectorAll(".tit1").entries()){
            this.splits.push(new (0, _splitTypeDefault.default)(el, {
                types: "lines,words"
            }));
            tw = (0, _gsap.gsap).timeline({
                paused: true
            });
            for (let [index, s] of this.splits[key].words.entries()){
                (0, _gsap.gsap).set(s, {
                    yPercent: 120
                });
                tw.to(s, {
                    yPercent: 0,
                    duration: .6,
                    delay: index * .1,
                    ease: (0, _gsap.Power2).easeInOut
                }, "anim");
            }
            this.tweens.push(tw);
        }
        this.active = 0;
        this.start();
        this.initEvents();
    }
    start() {
        this.change(0);
    }
    change(key) {
        if (this.pos > -1) {
            this.elsleft[this.pos].classList.remove("active");
            this.elsright[this.pos].classList.remove("active");
            this.elsclick[this.pos].classList.remove("act");
            this.tweens[this.pos].reverse();
        }
        this.pos = key;
        this.elsleft[this.pos]?.classList.add("active");
        this.elsright[this.pos]?.classList.add("active");
        this.elsclick[this.pos]?.classList.add("act");
        setTimeout(()=>{
            this.tweens[this.pos].tweenTo("end");
        }, 600);
    }
    stop() {
        if (this.active == 0) return false;
        this.active = 0;
        clearInterval(this.intervalSlide);
    }
    initEvents() {
        for (let [key, el] of this.elsclick.entries())el.addEventListener("click", ()=>this.change(key));
    }
    removeEvents() {}
};

},{"gsap":"gS77a","split-type":"3ncel","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"cIzjT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _events = require("events");
var _eventsDefault = parcelHelpers.interopDefault(_events);
var _autoBind = require("auto-bind");
var _autoBindDefault = parcelHelpers.interopDefault(_autoBind);
"use strict";
exports.default = class extends (0, _eventsDefault.default) {
    constructor(el){
        super();
        (0, _autoBindDefault.default)(this);
        this.DOM = {
            el: el,
            btns: el.querySelectorAll(".tabClick"),
            selectors: el.querySelectorAll(".m-tabposts_hold"),
            clickshold: el.querySelector(".m-tabposts_selector_blocks"),
            clicks: el.querySelectorAll(".blockClick")
        };
        this.pos = 0;
        this.initEvents();
    }
    async select(num, el) {
        if (num == 1 || num == 2) this.DOM.clickshold.classList.add("hid");
        else this.DOM.clickshold.classList.remove("hid");
        // //  console.log(num)
        this.DOM.btns[this.pos].classList.remove("act");
        this.DOM.btns[num].classList.add("act");
        this.DOM.selectors[this.pos].classList.add("load");
        await this.timeout(600);
        this.DOM.selectors[this.pos].classList.remove("act");
        this.pos = num;
        this.DOM.selectors[this.pos].classList.add("act");
        await this.timeout(12);
        this.DOM.selectors[this.pos].classList.remove("load");
        this.emit("resize");
    }
    timeout(ms) {
        return new Promise((resolve)=>setTimeout(resolve, ms));
    }
    async blockClicks(el) {
        for (let b of this.DOM.clicks)b.classList.remove("act");
        el.classList.add("act");
        this.DOM.selectors[this.pos].classList.add("load");
        await this.timeout(600);
        const type = el.dataset.type;
        if (type == "block") this.DOM.selectors[this.pos].classList.add("blocks");
        else this.DOM.selectors[this.pos].classList.remove("blocks");
        this.DOM.selectors[this.pos].classList.remove("load");
        this.emit("resize");
    }
    initEvents() {
        for (let [i, el] of this.DOM.clicks.entries())el.addEventListener("click", ()=>this.blockClicks(el));
        for (let [i1, el1] of this.DOM.btns.entries())el1.addEventListener("click", ()=>this.select(i1, el1));
    // this.register()
    }
    removeEvents() {}
};

},{"events":"32fHr","auto-bind":"iS0Jy","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"dwOfZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templatedadEta = require("bundle-text:./templatedad.eta");
var _templatedadEtaDefault = parcelHelpers.interopDefault(_templatedadEta);
var _templatechildEta = require("bundle-text:./templatechild.eta");
var _templatechildEtaDefault = parcelHelpers.interopDefault(_templatechildEta);
var _podcastlistEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/podcastlist.eta");
var _podcastlistEtaDefault = parcelHelpers.interopDefault(_podcastlistEta);
var _notloggedEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/notlogged.eta");
var _notloggedEtaDefault = parcelHelpers.interopDefault(_notloggedEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
var _noaccessEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/noaccess.eta");
var _noaccessEtaDefault = parcelHelpers.interopDefault(_noaccessEta);
//COMPS
var _dualintroJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/components\uD83E\uDDBE/Dualintro.js");
var _dualintroJsDefault = parcelHelpers.interopDefault(_dualintroJs);
var _eta = require("eta");
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        //${"http://165.227.64.123:8126/"}/wp-json/wp/v2/podcast/40?acf_format=standard
        // const response = await fetch(this.main.acf.base+'/wp-json/wp/v2/pages/'+content.dataset.id+'?acf_format=standard')
        const response = await fetch(this.main.acf.base + "/wp-json/wp/v2/podcast/" + content.dataset.id + "?acf_format=standard");
        const data = await response.json();
        // console.log('data', data)
        let html = "";
        let load = true;
        if (this?.main?.user && (data?.acf?.add_to_collective || data?.parent_data?.add_to_collective) && !this?.main?.user?.acf?.is_content_hub_user) {
            html = _eta.render((0, _noaccessEtaDefault.default), {
                global: this.main,
                data: data,
                footer: this.footer
            });
            load = false;
        } else if (data.parent == 0) html = _eta.render((0, _templatedadEtaDefault.default), {
            global: this.main,
            data: data,
            footer: this.footer
        });
        else {
            let Difference_In_Time = new Date(data.date).getTime() - new Date().getTime();
            this.Difference_In_Days = Difference_In_Time / 86400000;
            // hide content behind login if older than 56 days / 8 weeks
            // (number should be negative)
            const numDayLimit = -56;
            if (this.Difference_In_Days < numDayLimit && !this.main.user) html = _eta.render((0, _notloggedEtaDefault.default), {
                global: this.main,
                data: data,
                footer: this.footer
            });
            else html = _eta.render((0, _templatechildEtaDefault.default), {
                global: this.main,
                data: data,
                footer: this.footer
            });
        }
        // const logtest = await fetch(this.main.acf.base+'/wp-json/csskiller/v1/login?username=&password=')
        // let formdata = new FormData()
        // formdata.set('username','')
        // formdata.set('password',encodeURIComponent(''))
        // const logtest = await fetch(this.main.acf.base+'/wp-json/csskiller/v1/login',{
        //   method: 'post',
        //   body: formdata
        // })
        // const datalog = await logtest.json()
        // console.log(datalog)
        // console.log(data)
        // console.log(html)
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)")
        };
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
        await this.loadImages();
        await this.createAnimations();
        if (this.DOM.el.querySelector(".m-dualintro")) this.slide = new (0, _dualintroJsDefault.default)(this.DOM.el.querySelector(".m-dualintro"));
        if (data.parent == 0 && load) {
            this.DOM.holder = this.DOM.el.querySelector(".hPosts");
            this.DOM.pages = this.DOM.el.querySelector(".pPosts");
            await this.getPosts(true, "podcast", data.id, 8, 1);
        } else if (this.DOM.el.querySelector(".hidetext")) {
            this.DOM.hidetext = this.DOM.el.querySelector(".hidetext");
            this.DOM.clicktext = this.DOM.el.querySelector(".hidetext_click");
            this.DOM.holdtext = this.DOM.el.querySelector(".hidetext_hold");
            this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
            if (this.DOM.hidetext.clientHeight + 40 > this.DOM.holdtext.clientHeight) {
                this.DOM.clicktext.classList.add("act");
                (0, _gsap.gsap).to(this.DOM.hidetext, {
                    height: this.DOM.holdtext.clientHeight + "px",
                    duration: .6,
                    onComplete: ()=>{
                        this.DOM.hidetext.classList.add("act");
                        this.DOM.hidetext.style.height = "";
                        this.resizeLimit();
                    }
                });
            } else {
                this.textExpand = ()=>{
                    this.isVisible = 0;
                    // console.log(this.sticks)
                    this.DOM.clicktext.classList.add("act");
                    this.timeline = (0, _gsap.gsap).timeline({
                        paused: true
                    })// .to(this.sticks[0].stick.son,{duration:.6,y:'+='+(this.DOM.holdtext.clientHeight - this.DOM.hidetext.clientHeight)+'px'},'a')
                    // .to(this.sticks[0].stick,{duration:.6,current:'+='+(this.DOM.holdtext.clientHeight - this.DOM.hidetext.clientHeight),target:'+='+(this.DOM.holdtext.clientHeight - this.DOM.hidetext.clientHeight)},'a')
                    .to(this.DOM.hidetext, {
                        height: this.DOM.holdtext.clientHeight + "px",
                        duration: .6,
                        onUpdate: ()=>{
                        // console.log(this.sticks)
                        },
                        onComplete: ()=>{
                            this.isVisible = 1;
                            this.DOM.hidetext.classList.add("act");
                            this.DOM.hidetext.style.height = "";
                            this.resizeLimit();
                        }
                    }, "a");
                    this.timeline.play();
                };
                this.DOM.clicktext.addEventListener("click", this.textExpand);
            }
        }
    }
    async getJson(url, isNew) {
        const posts = await fetch(url);
        const datap = await posts.json();
        this.html = _eta.render((0, _podcastlistEtaDefault.default), {
            global: this.main,
            posts: datap.posts
        });
        this.DOM.holder.innerHTML = this.html;
        // this.ajaxImages()
        if (isNew == true) {
            this.actualpage = 1;
            this.max = datap.maxpages;
        }
        await this.ajaxImages();
    }
    async ajaxImages() {
        let newpage = document.createElement("template");
        newpage.innerHTML = this.html;
        let paths = Array.from(newpage.content.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        return Promise.resolve();
    }
    async blocksClick(type) {
        this.DOM.holder.classList.add("load");
        await this.timeout(600);
        if (type == "block") this.DOM.holder.classList.add("blocks");
        else this.DOM.holder.classList.remove("blocks");
        this.DOM.holder.classList.remove("load");
        this.resizeLimit();
    }
    async getPosts(isNew, type, id, postperpage, page) {
        this.DOM.holder.classList.add("load");
        Promise.all([
            this.timeout(600),
            this.getJson(this.main.acf.base + "/wp-json/wp/v2/getposts?type=" + type + "&parent=" + id + "&page=" + page + "&perpage=" + postperpage, isNew)
        ]).then(()=>{
            this.DOM.holder.classList.remove("load");
            if (isNew == true) {
                // console.log(this.max)
                this.DOM.pages.innerHTML = '<div class="simp inact prev"><span>Prev</span></div>';
                for(let i = 1; i <= this.max; i++)if (i == page) this.DOM.pages.innerHTML += '<div class="pgel mouseHover act"><div class="pgel_t">' + i + "</div></div>";
                else this.DOM.pages.innerHTML += '<div class="pgel mouseHover"><div class="pgel_t">' + i + "</div></div>";
                if (this.max > 2) this.DOM.pages.innerHTML += '<div class="simp next"><span>Next</span></div>';
                else this.DOM.pages.innerHTML += '<div class="simp inact next"><span>Next</span></div>';
                this.DOM.pagsel = this.DOM.pages.querySelectorAll(".pgel");
                this.checkPages(0);
                for (let [index, el] of this.DOM.pagsel.entries())el.onclick = async (event)=>{
                    if (!this.main.isTouch) this.scroll.target += this.DOM.el.querySelector(".m-tabposts").getBoundingClientRect().y;
                    else document.body.scroll({
                        top: this.DOM.el.querySelector(".m-tabposts"),
                        left: 0,
                        behavior: "smooth"
                    });
                    await this.timeout(600);
                    this.getPosts(false, type, id, postperpage, index + 1);
                    this.checkPages(index);
                };
                if (this.DOM.el.querySelector(".m-tabposts_pags .prev")) this.DOM.el.querySelector(".m-tabposts_pags .prev").onclick = async ()=>{
                    if (!this.main.isTouch) this.scroll.target += this.DOM.el.querySelector(".m-tabposts").getBoundingClientRect().y;
                    else document.body.scroll({
                        top: this.DOM.el.querySelector(".m-tabposts"),
                        left: 0,
                        behavior: "smooth"
                    });
                    await this.timeout(600);
                    this.getPosts(false, type, id, postperpage, this.actualpage - 1);
                    this.checkPages(this.actualpage - 1);
                };
                if (this.DOM.el.querySelector(".m-tabposts_pags .next")) // console.log(this.DOM.el.querySelector('.m-tabposts_pags .next'))
                this.DOM.el.querySelector(".m-tabposts_pags .next").onclick = async ()=>{
                    if (!this.main.isTouch) this.scroll.target += this.DOM.el.querySelector(".m-tabposts").getBoundingClientRect().y;
                    else document.body.scroll({
                        top: this.DOM.el.querySelector(".m-tabposts"),
                        left: 0,
                        behavior: "smooth"
                    });
                    await this.timeout(600);
                    this.getPosts(false, type, id, postperpage, this.actualpage + 1);
                    this.checkPages(this.actualpage + 1);
                };
                if (this.DOM.pagsel.length == 1) this.DOM.pages.classList.add("hide");
                if (this.DOM.el.querySelector(".sPosts")) for (let el1 of this.DOM.el.querySelectorAll(".sPosts .blockClick"))el1.onclick = (ev)=>{
                    // console.log(el)
                    this.DOM.el.querySelector(".blockClick.act").classList.remove("act");
                    el1.classList.add("act");
                    this.blocksClick(el1.dataset.type);
                };
            } else {
                this.DOM.pagsel[this.actualpage - 1].classList.remove("act");
                this.actualpage = page;
                this.DOM.pagsel[this.actualpage - 1].classList.add("act");
                if (this.actualpage == 1) this.DOM.el.querySelector(".m-tabposts_pags .prev").classList.add("inact");
                else this.DOM.el.querySelector(".m-tabposts_pags .prev").classList.remove("inact");
                // console.log(this.actualpage+' '+this.max)
                if (this.actualpage < this.max) this.DOM.el.querySelector(".m-tabposts_pags .next").classList.remove("inact");
                else this.DOM.el.querySelector(".m-tabposts_pags .next").classList.add("inact");
            }
            this.emit("linkseventlisteners");
            this.emit("mousereset");
            this.resizeLimit();
        });
    }
    checkPages(page) {
        if (this.DOM.el.querySelector(".deleter")) for (let el of this.DOM.el.querySelectorAll(".deleter"))// console.log(el)
        el.remove();
        if (this.DOM.pagsel.length > 7) {
            let control = 0;
            let length = this.DOM.pagsel.length - 1;
            if (page < 2) control = 0;
            else if (page > length - 2) control = 2;
            else control = 1;
            for (let [i, pag] of this.DOM.pagsel.entries()){
                if (control == 0) {
                    if (i == 2) {
                        let newElement = document.createElement("div");
                        newElement.innerHTML = "...";
                        newElement.classList.add("points", "deleter");
                        pag.parentNode.insertBefore(newElement, pag.nextSibling);
                    }
                    if (i < 3) pag.classList.remove("pgel-hide");
                    else if (i == length) pag.classList.remove("pgel-hide");
                    else pag.classList.add("pgel-hide");
                } else if (control == 1) {
                    if (i == page - 1) {
                        if (page != 2) {
                            let newElement1 = document.createElement("div");
                            newElement1.innerHTML = "...";
                            newElement1.classList.add("points", "deleter", "delete-before");
                            pag.parentNode.insertBefore(newElement1, pag);
                        }
                    }
                    if (i == page + 1) {
                        if (page != length - 2) {
                            let newElement2 = document.createElement("div");
                            newElement2.classList.add("points", "deleter", "delete-after");
                            newElement2.innerHTML = "...";
                            pag.parentNode.insertBefore(newElement2, pag.nextSibling);
                        }
                    }
                    if (i == 0) pag.classList.remove("pgel-hide");
                    else if (i == page - 1 || i == page || i == page + 1) pag.classList.remove("pgel-hide");
                    else if (i == length) pag.classList.remove("pgel-hide");
                    else pag.classList.add("pgel-hide");
                } else {
                    if (i == length - 2) {
                        let newElement3 = document.createElement("div");
                        newElement3.innerHTML = "...";
                        newElement3.classList.add("points", "deleter");
                        pag.parentNode.insertBefore(newElement3, pag);
                    }
                    if (i > length - 3) pag.classList.remove("pgel-hide");
                    else if (i == 0) pag.classList.remove("pgel-hide");
                    else pag.classList.add("pgel-hide");
                }
            }
        }
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            // console.log(this.anims[pos])
                            this.anims[pos].stick.active = 0;
                            this.movestick = null;
                        } else if (id == "v") clearInterval(this.clockInt);
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "e") {
                            this.anims[pos].classel.start();
                            this.slidetext = this.anims[pos];
                        } else if (id == "v") this.clockStart(this.anims[pos].el.parentNode.querySelector(".time"));
                        else if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.movestick = this.anims[pos];
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) super.smoothScroll();
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        await this.timeout(1);
        // this.DOM.el.classList.add('home-active')
        // gsap.to('.home',{opacity:1,ease:Power2.easeInOut,duration:.6})
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        return super.hide();
    }
};

},{"../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./templatedad.eta":"bjMAR","bundle-text:./templatechild.eta":"lcAmX","bundle-text:/src/views👁️👁️👁️/ETA/podcastlist.eta":"bIHx9","bundle-text:/src/views👁️👁️👁️/404/notlogged.eta":"efNbr","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","bundle-text:/src/views👁️👁️👁️/404/noaccess.eta":"cKAV1","/src/js🧠🧠🧠/components🦾/Dualintro.js":"7DjOj","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"bjMAR":[function(require,module,exports) {
module.exports = "<main class=\"podcast\">\n  <section class=\"m-dualintro\">\n    <div class=\"left\" style=\"background-color:<%~ it.data.acf.color %>\">\n    <div class=\"left_hover mouseScroll\"></div>\n      <div class=\"bc\">\n        <% if(it.data.acf?.add_to_collective || it.data?.parent_data?.add_to_collective){ %>\n          <a class=\"mouseHover\" href=\"<%~ it.global.acf?.ch_home ?? '/content-hub' %>\">LC Hub</a>\n        <%  } else {%>\n          <a class=\"mouseHover\" href=\"<%~ it.global.acf.home %>\">LC</a>\n        <%  }%>\n        <span>/</span><a href=\"<%~ it.global.acf.pods %>\">Pods</a>\n        <span>/</span><span><%~ it.data.title.rendered %></span>\n      </div>\n      <h2 class=\"tit1\"><%~ it.data.title.rendered %></h2>\n      <h3 class=\"tit4\"><%~ it.data.acf.descriptions %></h3>\n    </div>\n    <div class=\"right mouseScroll\">\n      <div class=\"right_el\"><img src=\"<%~ it.data.acf.imageintro %>\"></div>\n    </div>\n  </section>\n  <section class=\"m-dualsep\">\n    <div class=\"left\">\n      <h2 class=\"tit2\"><%~ it.data.acf.title_description %></h2>\n    </div>\n    <div class=\"right\">\n      <div class=\"txt-bureau\">\n        <%~ it.data.acf.descriptionl %>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-tabposts\" style=\"--main:#E5855E\">\n    <div class=\"m-tabposts_selector c-vw\">\n      <div class=\"m-tabposts_selector_blocks sPosts\">\n        <div class=\"blockClick  mouseHover\" data-type=\"list\">\n          <%~ it.global.icons.list %>\n        </div>\n        <div class=\"blockClick act mouseHover\" data-type=\"block\">\n          <%~ it.global.icons.block %>\n        </div>\n      </div>\n    </div>\n    <div class=\"m-tabposts_hold blocks hPosts\">\n    \n    </div>\n    <div class=\"m-tabposts_pags pg pPosts\">\n      \n    </div>\n  </section>\n  <section class=\"m-cta signupmod\" style=\"--main:#DF80AC\">\n    <div class=\"c-vw\">\n      <div class=\"hold\">\n         <%\n          var randomNum = Math.floor((Math.random() * it.global.acf.signup_text.length) + 1);\n          var title = it.global.acf.signup_text[randomNum-1].title;\n          var text = it.global.acf.signup_text[randomNum-1].text;\n          \n        %>\n        <h2 class=\"tit1\"><%~ title %></h2>\n        <h3 class=\"tit4\"><%~ text %> </h3>\n        </h3>\n        <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\">\n          <div class=\"btn_t\">TAP IN</div>\n        </a>\n      </div>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"lcAmX":[function(require,module,exports) {
module.exports = "<main class=\"podcastsimple\">\n  <section class=\"m-bc\">\n    <div class=\"c-vw\">\n      <div class=\"bc\">\n        <% if(it.data.acf?.add_to_collective || it.data?.parent_data?.add_to_collective){ %>\n          <a class=\"mouseHover\" href=\"<%~ it.global.acf?.ch_home ?? '/content-hub' %>\">LC Hub</a>\n        <%  } else {%>\n          <a class=\"mouseHover\" href=\"<%~ it.global.acf.home %>\">LC</a>\n        <%  }%>\n        <span>/</span><a class=\"mouseHover\" href=\"<%~ it.global.acf.pods %>\">Pods</a>\n        <span>/</span><a class=\"mouseHover\" href=\"<%~ it.data.parent_data.permalink %>\"><%~ it.data.parent_data.name %></a>\n        <span>/</span><span><%~ it.data.title.rendered %></span>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-simpleintro\">\n    <div class=\"c-vw\">\n      <h2 class=\"tit1\"><%~ it.data.title.rendered %></h2>\n      <div class=\"m-simpleintro_info\">\n        <div class=\"autor\">\n          <p><%~ it.data.acf.featuring_a %></p>\n        </div>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-podcast\">\n    <div class=\"image\"><img src=\"<%~ it.data.acf.image_podcast %>\"></div>\n    <div class=\"info\">\n      <div class=\"info_top\">\n        <div class=\"btnpod mouseHover\" data-player=\"<%~ it.data.acf.url_podcast %>\"\n          data-title=\"<%~ it.data.title.rendered %>\"\n          data-subtitle=\"<%~ it.data.parent_data.name %>\"\n          data-image=\"<%~ it.data.acf.image_podcast %>\">\n          <div class=\"btnpod_play\"></div>\n          <div class=\"btnpod_pause\"></div>\n          </div>\n          <div class=\"info_top_title\">\n            <p class=\"titleparent\"><%~ it.data.parent_data.name %></p>\n            <h3 class=\"tit4\"><%~ it.data.title.rendered %></h3>\n          </div>\n          <div class=\"info_top_time podTime\"><%~ it.data.acf.duration_a %></div>\n        </div>\n        <div class=\"info_lines\"><img src=\"<%~ it.global.acf.template %>/public/podcastline.svg\"></div>\n        <div class=\"info_bottom\">\n        <div class=\"info_bottom_date\"><%~ it.data.ownpost_data.date %></div>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-dualsep\">\n    <div class=\"left\">\n      <h2 class=\"tit2\"><%~ it.data.acf.title_description %></h2>\n    </div>\n    <div class=\"right\">\n      <div class=\"txt-bureau\">\n        <p><%~ it.data.acf.descriptionl %></p>\n      </div>\n    </div>\n  </section>\n  <section class=\"podcastsingle_main\">\n    <div class=\"grid\">\n      <div class=\"hidetext\">\n        <div class=\"hidetext_click\">\n          <div class=\"simp mouseHover\"><span>Read more</span></div>\n        </div>\n        <div class=\"hidetext_hold wp\">\n        <%~ it.data.acf.transcription %>\n        </div>\n      </div>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-social\">\n    <div class=\"left\">\n      <h2 class=\"tit4\">Share</h2>\n    </div>\n    <div class=\"right\">\n      <div class=\"social\">\n        <a class=\"mouseHover Stw\" href=\"https://twitter.com/intent/tweet?url=<%~ it.data.link %>\"><%~ it.global.icons.tw %></a>\n        <a class=\"mouseHover Sfb\" href=\"https://www.facebook.com/sharer/sharer.php?u=<%~ it.data.link %>\"><%~ it.global.icons.fb %></a>\n        <a class=\"mouseHover Sin\" href=\"https://www.linkedin.com/shareArticle?url=<%~ it.data.link %>\"><%~ it.global.icons.in %></a>\n        <a class=\"mouseHover Srd\" href=\"https://www.reddit.com/submit?url=<%~ it.data.link %>\"><%~ it.global.icons.reddit %></a>\n        <a class=\"mouseHover Stb\" href=\"https://www.tumblr.com/share/link?url=<%~ it.data.link %>\"><%~ it.global.icons.tumbler %></a>\n      </div>\n    </div>\n  </section>\n  <%\n    if(it.data.parent_data.creators){ \n    it.data.parent_data.creators.forEach(function(p,key){ %>\n  <section class=\"m-creator\">\n    <div class=\"m-creator_image\">\n      <div class=\"m-creator_image_hold\"><img src=\"<%~ p.image %>\"></div>\n    </div>\n    <div class=\"m-creator_info\">\n      <h3 class=\"tit2\"><%~ p.title %></h3>\n      <% if(p.description){ %>\n      <div class=\"desc\"><%~ p.description %></div>\n      <% }\n      if(p.website){ %>\n      <a href=\"<%~ p.website %>\" class=\"simp mouseHover\"><span>website</span></a>\n      <% } %>\n      <div class=\"m-creator_info_bottom\">\n        <% if(p.contactsocial_links==true){ %>\n        <div class=\"social\">\n          <% if(p.social.instagram){ %>\n            <a class=\"mouseHover Sig\" href=\"<%~ p.social.instagram %>\"><%~ it.global.icons.ig %></a>\n          <% }\n          if(p.social.linkedin){ %>\n            <a class=\"mouseHover Sin\" href=\"<%~ p.social.linkedin %>\"><%~ it.global.icons.in %></a>\n          <%\n          }\n          if(p.social.facebook){ %>\n            <a class=\"mouseHover Sfb\" href=\"<%~ p.social.facebook %>\"><%~ it.global.icons.fb %></a>\n          <%\n          }\n          if(p.social.twitter){ %>\n            <a class=\"mouseHover Stw\" href=\"<%~ p.social.twitter %>\"><%~ it.global.icons.tw %></a>\n          <% }%>\n        </div>\n        <% } \n        else{\n        %>\n        <a class=\"btns mouseHover\" href=\"<%~ p.email_contact %>\"><div class=\"btns_t\">contact</div></a>\n        <% } %>\n      </div>\n    </div>\n  </section>\n  <% })\n  }\n  %>\n  <% \n    \n  if(it.data.acf.creators){ \n  it.data.acf.creators.forEach(function(p,key){\n  if(p.title!=''){\n   %>\n  <section class=\"m-creator\">\n    <div class=\"m-creator_image\">\n      <div class=\"m-creator_image_hold\"><img src=\"<%~ p.image %>\"></div>\n    </div>\n    <div class=\"m-creator_info\">\n      <h3 class=\"tit2\"><%~ p.title %></h3>\n      <% if(p.description){ %>\n      <div class=\"desc\"><%~ p.description %></div>\n      <% }\n      if(p.website){ %>\n      <a href=\"<%~ p.website %>\" class=\"simp mouseHover\"><span>website</span></a>\n      <% } %>\n      <div class=\"m-creator_info_bottom\">\n        <% if(p.contactsocial_links==true){ %>\n        <div class=\"social\">\n          <% if(p.social.instagram){ %>\n            <a class=\"mouseHover Sig\" href=\"<%~ p.social.instagram %>\"><%~ it.global.icons.ig %></a>\n          <% }\n          if(p.social.linkedin){ %>\n            <a class=\"mouseHover Sin\" href=\"<%~ p.social.linkedin %>\"><%~ it.global.icons.in %></a>\n          <%\n          }\n          if(p.social.facebook){ %>\n            <a class=\"mouseHover Sfb\" href=\"<%~ p.social.facebook %>\"><%~ it.global.icons.fb %></a>\n          <%\n          }\n          if(p.social.twitter){ %>\n            <a class=\"mouseHover Stw\" href=\"<%~ p.social.twitter %>\"><%~ it.global.icons.tw %></a>\n          <% }%>\n        </div>\n        <% } \n        else{\n        %>\n        <a class=\"btns mouseHover\" href=\"<%~ p.email_contact %>\"><div class=\"btns_t\">contact</div></a>\n        <% } %>\n      </div>\n    </div>\n  </section>\n  <%\n  } \n    })\n  }\n  %>\n    \n  <section class=\"m-nextprev\">\n    <% if(it.data.parent_data.prev!=null){ %>\n    <a class=\"left mouseHover\" href=\"<%~ it.data.parent_data.prev.permalink %>\" data-type=\"podcastchild\">\n      <div class=\"btnarrow \">\n        <div class=\"btnarrow_n\"></div>\n        <div class=\"btnarrow_t\">Previous</div>\n      </div>\n    </a>\n    <% }\n    else{\n\n    }\n    if(it.data.parent_data.next!=null){\n    %>\n    <a class=\"right mouseHover\" href=\"<%~ it.data.parent_data.next.permalink %>\" data-type=\"podcastchild\">\n      <div class=\"btnarrow \">\n        <div class=\"btnarrow_t\">Next</div>\n        <div class=\"btnarrow_n\"></div>\n      </div>\n    </a>\n    <%\n      }\n    %>\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"bIHx9":[function(require,module,exports) {
module.exports = "\n<% it.posts.forEach(function(p,key){ %>\n  <div class=\"podlist\">\n    <div class=\"podlist_image\">\n      <a class=\"podlist_image_hold mouseHover\"  href=\"<%~ p.link %>\" data-type=\"podcastchild\"><img src=\"<%~ p.image %>\"></a>\n    </div>\n    <div class=\"podlist_info\">\n      <h3 class=\"tit4\"><%~ p.title %></h3>\n      <% if(p.featuring){ %>\n      <p class=\"desc\"><%~ p.featuring %></p>\n      <% } %>\n      <a class=\"btnplay mouseHover\" data-type=\"podcastchild\"  href=\"<%~ p.link %>\">\n        <div class=\"btnplay_tri\"></div>\n      </a>\n      <div class=\"autor\">\n        <p><a class=\"mouseHover\" href=\"<%~ p.parent.permalink %>\" data-type=\"podcastdad\"><%~ p.parent.name %></a></p>\n      </div>\n      <div class=\"podlist_info_bottom\">\n        <div class=\"datapod\">\n          <div class=\"datapod_date\"><%~ p.date %></div>\n          <div class=\"datapod_time\"><%~ p.duration %></div>\n        </div>\n        <div class=\"shareclick mouseHover\">\n          <%~ it.global.icons.share %>\n          <div class=\"shareclick_close\"></div>\n          <div class=\"shareclick_icons\">\n            <a class=\"mouseHover Stw\" href=\"https://twitter.com/intent/tweet?url=<%~ p.permalink %>\"><%~ it.global.icons.tw %></a>\n            <a class=\"mouseHover Sfb\" href=\"https://www.facebook.com/sharer/sharer.php?u=<%~ p.permalink %>\"><%~ it.global.icons.fb %></a>\n            <a class=\"mouseHover Sin\" href=\"https://www.linkedin.com/shareArticle?url=<%~ p.permalink %>\"><%~ it.global.icons.in %></a>\n            <a class=\"mouseHover Srd\" href=\"https://www.reddit.com/submit?url=<%~ p.permalink %>\"><%~ it.global.icons.reddit %></a>\n            <a class=\"mouseHover Stb\" href=\"https://www.tumblr.com/share/link?url=<%~ p.permalink %>\"><%~ it.global.icons.tumbler %></a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n<% }) \nif(it.posts.length %2 != 0){\n%>\n  <div class=\"podlist podlist-fake\"></div>\n\n<%\n}\n%>";

},{}],"efNbr":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! SIGN UP TO ACCESS THIS CONTENT</h2>\n<h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3>\n<a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"cKAV1":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! YOU DON'T HAVE ACCESS TO THIS CONTENT</h2>\n<% /* <h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3> */ %>\n<% /* <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a> */ %>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"7DjOj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _gsap = require("gsap");
var _splitType = require("split-type");
var _splitTypeDefault = parcelHelpers.interopDefault(_splitType);
exports.default = class {
    constructor(element){
        this.el = element;
        this.left = this.el.querySelector(".left");
        this.right = this.el.querySelector(".right .right_el");
        this.pos = -1;
        this.splits = [];
        this.tweens = [];
        if (this.el.querySelectorAll(".tit1")) {
            let tw;
            for (let [key, el] of this.el.querySelectorAll(".tit1").entries()){
                this.splits.push(new (0, _splitTypeDefault.default)(el, {
                    types: "lines,words"
                }));
                tw = (0, _gsap.gsap).timeline({
                    paused: true
                });
                for (let [index, s] of this.splits[key].words.entries()){
                    (0, _gsap.gsap).set(s, {
                        yPercent: 120
                    });
                    tw.to(s, {
                        yPercent: 0,
                        duration: .6,
                        delay: index * .1,
                        ease: (0, _gsap.Power2).easeInOut
                    }, "anim");
                }
                this.tweens.push(tw);
            }
        }
        this.active = 0;
        this.start();
        this.initEvents();
    }
    start() {
        if (this.pos == -1) {
            this.change();
            setTimeout(()=>{
                this.el.classList.add("delayed");
            }, 3000);
        }
        this.active = 1;
    }
    change() {
        this.left?.classList.add("active");
        this.right?.classList.add("active");
        if (this.tweens.length > 0) setTimeout(()=>{
            this.tweens[0].tweenTo("end");
        }, 600);
    }
    stop() {
        if (this.active == 0) return false;
        this.active = 0;
    }
    initEvents() {}
    removeEvents() {}
};

},{"gsap":"gS77a","split-type":"3ncel","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"10SkD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templatedadEta = require("bundle-text:./templatedad.eta");
var _templatedadEtaDefault = parcelHelpers.interopDefault(_templatedadEta);
var _templatechildEta = require("bundle-text:./templatechild.eta");
var _templatechildEtaDefault = parcelHelpers.interopDefault(_templatechildEta);
var _icons = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/icons\uD83D\uDD30");
var _iconsDefault = parcelHelpers.interopDefault(_icons);
var _learnlistEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/learnlist.eta");
var _learnlistEtaDefault = parcelHelpers.interopDefault(_learnlistEta);
var _notloggedEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/notlogged.eta");
var _notloggedEtaDefault = parcelHelpers.interopDefault(_notloggedEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
//COMPS
var _dualintroJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/components\uD83E\uDDBE/Dualintro.js");
var _dualintroJsDefault = parcelHelpers.interopDefault(_dualintroJs);
var _eta = require("eta");
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        //${process.env.PUBLIC_URL}/wp-json/wp/v2/learn/40?acf_format=standard
        // const response = await fetch(this.main.acf.base+'/wp-json/wp/v2/pages/'+content.dataset.id+'?acf_format=standard')
        const response = await fetch(this.main.acf.base + "/wp-json/wp/v2/learn/" + content.dataset.id + "?acf_format=standard");
        const data = await response.json();
        // //  console.log(data)
        let html = "";
        if (data.parent == 0) html = _eta.render((0, _templatedadEtaDefault.default), {
            global: this.main,
            data: data,
            footer: this.footer
        });
        else if (!this.main.user) html = _eta.render((0, _notloggedEtaDefault.default), {
            global: this.main,
            data: data,
            footer: this.footer
        });
        else html = _eta.render((0, _templatechildEtaDefault.default), {
            global: this.main,
            data: data,
            footer: this.footer,
            icons: (0, _iconsDefault.default)
        });
        // const logtest = await fetch(this.main.acf.base+'/wp-json/csskiller/v1/login?username=&password=')
        // let formdata = new FormData()
        // formdata.set('username','')
        // formdata.set('password',encodeURIComponent(''))
        // const logtest = await fetch(this.main.acf.base+'/wp-json/csskiller/v1/login',{
        //   method: 'post',
        //   body: formdata
        // })
        // const datalog = await logtest.json()
        // //  console.log(datalog)
        // //  console.log(data)
        // //  console.log(html)
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)")
        };
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
        await this.loadImages();
        await this.createAnimations();
        if (this.DOM.el.querySelector(".m-dualintro")) this.slide = new (0, _dualintroJsDefault.default)(this.DOM.el.querySelector(".m-dualintro"));
        if (data.parent == 0) {
            this.DOM.holder = this.DOM.el.querySelector(".hPosts");
            this.DOM.pages = this.DOM.el.querySelector(".pPosts");
            await this.getPosts(true, "learn", data.id, 8, 1);
        } else if (this.DOM.el.querySelector(".hidetext")) {
            this.DOM.hidetext = this.DOM.el.querySelector(".hidetext");
            this.DOM.clicktext = this.DOM.el.querySelector(".hidetext_click");
            this.DOM.holdtext = this.DOM.el.querySelector(".hidetext_hold");
            this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
            if (this.DOM.hidetext.clientHeight + 40 > this.DOM.holdtext.clientHeight) {
                this.DOM.clicktext.classList.add("act");
                (0, _gsap.gsap).to(this.DOM.hidetext, {
                    height: this.DOM.holdtext.clientHeight + "px",
                    duration: .6,
                    onComplete: ()=>{
                        this.DOM.hidetext.classList.add("act");
                        this.DOM.hidetext.style.height = "";
                        this.resizeLimit();
                    }
                });
            } else {
                this.textExpand = ()=>{
                    this.isVisible = 0;
                    // //  console.log(this.sticks)
                    this.DOM.clicktext.classList.add("act");
                    this.timeline = (0, _gsap.gsap).timeline({
                        paused: true
                    })// .to(this.sticks[0].stick.son,{duration:.6,y:'+='+(this.DOM.holdtext.clientHeight - this.DOM.hidetext.clientHeight)+'px'},'a')
                    // .to(this.sticks[0].stick,{duration:.6,current:'+='+(this.DOM.holdtext.clientHeight - this.DOM.hidetext.clientHeight),target:'+='+(this.DOM.holdtext.clientHeight - this.DOM.hidetext.clientHeight)},'a')
                    .to(this.DOM.hidetext, {
                        height: this.DOM.holdtext.clientHeight + "px",
                        duration: .6,
                        onUpdate: ()=>{
                        // //  console.log(this.sticks)
                        },
                        onComplete: ()=>{
                            this.isVisible = 1;
                            this.DOM.hidetext.classList.add("act");
                            this.DOM.hidetext.style.height = "";
                            this.resizeLimit();
                        }
                    }, "a");
                    this.timeline.play();
                };
                this.DOM.clicktext.addEventListener("click", this.textExpand);
            }
        }
    }
    async getJson(url, isNew) {
        const posts = await fetch(url);
        const datap = await posts.json();
        this.html = _eta.render((0, _learnlistEtaDefault.default), {
            global: this.main,
            posts: datap.posts
        });
        this.DOM.holder.innerHTML = this.html;
        // this.ajaxImages()
        if (isNew == true) {
            this.actualpage = 1;
            this.max = datap.maxpages;
        }
        await this.ajaxImages();
    }
    async ajaxImages() {
        let newpage = document.createElement("template");
        newpage.innerHTML = this.html;
        let paths = Array.from(newpage.content.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        return Promise.resolve();
    }
    async blocksClick(type) {
        this.DOM.holder.classList.add("load");
        await this.timeout(600);
        if (type == "block") this.DOM.holder.classList.add("blocks");
        else this.DOM.holder.classList.remove("blocks");
        this.DOM.holder.classList.remove("load");
        this.resizeLimit();
    }
    async getPosts(isNew, type, id, postperpage, page) {
        this.DOM.holder.classList.add("load");
        Promise.all([
            this.timeout(600),
            this.getJson(this.main.acf.base + "/wp-json/wp/v2/getposts?type=" + type + "&parent=" + id + "&page=" + page + "&perpage=" + postperpage, isNew)
        ]).then(()=>{
            this.DOM.holder.classList.remove("load");
            if (isNew == true) {
                // //  console.log(this.max)
                this.DOM.pages.innerHTML = '<div class="simp inact prev"><span>Prev</span></div>';
                for(let i = 1; i <= this.max; i++)if (i == page) this.DOM.pages.innerHTML += '<div class="pgel mouseHover act"><div class="pgel_t">' + i + "</div></div>";
                else this.DOM.pages.innerHTML += '<div class="pgel mouseHover"><div class="pgel_t">' + i + "</div></div>";
                if (this.max > 2) this.DOM.pages.innerHTML += '<div class="simp next"><span>Next</span></div>';
                else this.DOM.pages.innerHTML += '<div class="simp inact next"><span>Next</span></div>';
                this.DOM.pagsel = this.DOM.pages.querySelectorAll(".pgel");
                this.checkPages(0);
                for (let [index, el] of this.DOM.pagsel.entries())el.onclick = async (event)=>{
                    if (!this.main.isTouch) this.scroll.target += this.DOM.el.querySelector(".m-tabposts").getBoundingClientRect().y;
                    else document.body.scroll({
                        top: this.DOM.el.querySelector(".m-tabposts"),
                        left: 0,
                        behavior: "smooth"
                    });
                    await this.timeout(600);
                    this.getPosts(false, type, id, postperpage, index + 1);
                    this.checkPages(index);
                };
                if (this.DOM.el.querySelector(".m-tabposts_pags .prev")) this.DOM.el.querySelector(".m-tabposts_pags .prev").onclick = async ()=>{
                    if (!this.main.isTouch) this.scroll.target += this.DOM.el.querySelector(".m-tabposts").getBoundingClientRect().y;
                    else document.body.scroll({
                        top: this.DOM.el.querySelector(".m-tabposts"),
                        left: 0,
                        behavior: "smooth"
                    });
                    await this.timeout(600);
                    this.getPosts(false, type, id, postperpage, this.actualpage - 1);
                    this.checkPages(this.actualpage - 1);
                };
                if (this.DOM.el.querySelector(".m-tabposts_pags .next")) // //  console.log(this.DOM.el.querySelector('.m-tabposts_pags .next'))
                this.DOM.el.querySelector(".m-tabposts_pags .next").onclick = async ()=>{
                    if (!this.main.isTouch) this.scroll.target += this.DOM.el.querySelector(".m-tabposts").getBoundingClientRect().y;
                    else document.body.scroll({
                        top: this.DOM.el.querySelector(".m-tabposts"),
                        left: 0,
                        behavior: "smooth"
                    });
                    await this.timeout(600);
                    this.getPosts(false, type, id, postperpage, this.actualpage + 1);
                    this.checkPages(this.actualpage + 1);
                };
                if (this.DOM.pagsel.length == 1) this.DOM.pages.classList.add("hide");
                if (this.DOM.el.querySelector(".sPosts")) for (let el1 of this.DOM.el.querySelectorAll(".sPosts .blockClick"))el1.onclick = (ev)=>{
                    // //  console.log(el)
                    this.DOM.el.querySelector(".blockClick.act").classList.remove("act");
                    el1.classList.add("act");
                    this.blocksClick(el1.dataset.type);
                };
            } else {
                this.DOM.pagsel[this.actualpage - 1].classList.remove("act");
                this.actualpage = page;
                this.DOM.pagsel[this.actualpage - 1].classList.add("act");
                if (this.actualpage == 1) this.DOM.el.querySelector(".m-tabposts_pags .prev").classList.add("inact");
                else this.DOM.el.querySelector(".m-tabposts_pags .prev").classList.remove("inact");
                // //  console.log(this.actualpage+' '+this.max)
                if (this.actualpage < this.max) this.DOM.el.querySelector(".m-tabposts_pags .next").classList.remove("inact");
                else this.DOM.el.querySelector(".m-tabposts_pags .next").classList.add("inact");
            }
            this.emit("linkseventlisteners");
            this.emit("mousereset");
            this.resizeLimit();
        });
    }
    checkPages(page) {
        if (this.DOM.el.querySelector(".deleter")) for (let el of this.DOM.el.querySelectorAll(".deleter"))// //  console.log(el)
        el.remove();
        if (this.DOM.pagsel.length > 7) {
            let control = 0;
            let length = this.DOM.pagsel.length - 1;
            if (page < 2) control = 0;
            else if (page > length - 2) control = 2;
            else control = 1;
            for (let [i, pag] of this.DOM.pagsel.entries()){
                if (control == 0) {
                    if (i == 2) {
                        let newElement = document.createElement("div");
                        newElement.innerHTML = "...";
                        newElement.classList.add("points", "deleter");
                        pag.parentNode.insertBefore(newElement, pag.nextSibling);
                    }
                    if (i < 3) pag.classList.remove("pgel-hide");
                    else if (i == length) pag.classList.remove("pgel-hide");
                    else pag.classList.add("pgel-hide");
                } else if (control == 1) {
                    if (i == page - 1) {
                        if (page != 2) {
                            let newElement1 = document.createElement("div");
                            newElement1.innerHTML = "...";
                            newElement1.classList.add("points", "deleter", "delete-before");
                            pag.parentNode.insertBefore(newElement1, pag);
                        }
                    }
                    if (i == page + 1) {
                        if (page != length - 2) {
                            let newElement2 = document.createElement("div");
                            newElement2.classList.add("points", "deleter", "delete-after");
                            newElement2.innerHTML = "...";
                            pag.parentNode.insertBefore(newElement2, pag.nextSibling);
                        }
                    }
                    if (i == 0) pag.classList.remove("pgel-hide");
                    else if (i == page - 1 || i == page || i == page + 1) pag.classList.remove("pgel-hide");
                    else if (i == length) pag.classList.remove("pgel-hide");
                    else pag.classList.add("pgel-hide");
                } else {
                    if (i == length - 2) {
                        let newElement3 = document.createElement("div");
                        newElement3.innerHTML = "...";
                        newElement3.classList.add("points", "deleter");
                        pag.parentNode.insertBefore(newElement3, pag);
                    }
                    if (i > length - 3) pag.classList.remove("pgel-hide");
                    else if (i == 0) pag.classList.remove("pgel-hide");
                    else pag.classList.add("pgel-hide");
                }
            }
        }
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            // //  console.log(this.anims[pos])
                            this.anims[pos].stick.active = 0;
                            this.movestick = null;
                        } else if (id == "v") clearInterval(this.clockInt);
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "e") {
                            this.anims[pos].classel.start();
                            this.slidetext = this.anims[pos];
                        } else if (id == "v") this.clockStart(this.anims[pos].el.parentNode.querySelector(".time"));
                        else if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.movestick = this.anims[pos];
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) super.smoothScroll();
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        await this.timeout(1);
        // this.DOM.el.classList.add('home-active')
        // gsap.to('.home',{opacity:1,ease:Power2.easeInOut,duration:.6})
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        return super.hide();
    }
};

},{"../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./templatedad.eta":"a4jJ3","bundle-text:./templatechild.eta":"gFH9U","../../js🧠🧠🧠/basic/icons🔰":"kmKjG","bundle-text:/src/views👁️👁️👁️/ETA/learnlist.eta":"4KziV","bundle-text:/src/views👁️👁️👁️/404/notlogged.eta":"jRRh9","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","/src/js🧠🧠🧠/components🦾/Dualintro.js":"7DjOj","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"a4jJ3":[function(require,module,exports) {
module.exports = "<main class=\"podcast\">\n  <section class=\"m-dualintro\">\n    <div class=\"left\" style=\"background-color:<%~ it.data.acf.color %>\">\n    <div class=\"left_hover mouseScroll\"></div>\n      <div class=\"bc\">\n        <a href=\"<%~ it.global.acf.home %>\">LC</a>\n        <span>/</span><a href=\"<%~ it.global.acf.pods %>\">Pods</a>\n        <span>/</span><span><%~ it.data.title.rendered %></span>\n      </div>\n      <h2 class=\"tit1\"><%~ it.data.title.rendered %></h2>\n      <h3 class=\"tit4\"><%~ it.data.acf.descriptions %></h3>\n    </div>\n    <div class=\"right mouseScroll\">\n      <div class=\"right_el\"><img src=\"<%~ it.data.acf.imageintro %>\"></div>\n    </div>\n  </section>\n  <section class=\"m-dualsep\">\n    <div class=\"left\">\n      <h2 class=\"tit2\"><%~ it.data.acf.title_description %></h2>\n    </div>\n    <div class=\"right\">\n      <div class=\"txt-bureau\">\n        <%~ it.data.acf.descriptionl %>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-tabposts\" style=\"--main:#E5855E\">\n    <div class=\"m-tabposts_selector c-vw\">\n      <div class=\"m-tabposts_selector_blocks sPosts\">\n        <div class=\"blockClick  mouseHover\" data-type=\"list\">\n          <%~ it.global.icons.list %>\n        </div>\n        <div class=\"blockClick act mouseHover\" data-type=\"block\">\n          <%~ it.global.icons.block %>\n        </div>\n      </div>\n    </div>\n    <div class=\"m-tabposts_hold blocks hPosts\">\n    \n    </div>\n    <div class=\"m-tabposts_pags pg pPosts\">\n      \n    </div>\n  </section>\n  <section class=\"m-cta signupmod\" style=\"--main:#DF80AC\">\n    <div class=\"c-vw\">\n      <div class=\"hold\">\n         <%\n          var randomNum = Math.floor((Math.random() * it.global.acf.signup_text.length) + 1);\n          var title = it.global.acf.signup_text[randomNum-1].title;\n          var text = it.global.acf.signup_text[randomNum-1].text;\n          \n        %>\n        <h2 class=\"tit1\"><%~ title %></h2>\n        <h3 class=\"tit4\"><%~ text %> </h3>\n        </h3>\n        <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\">\n          <div class=\"btn_t\">TAP IN</div>\n        </a>\n      </div>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"gFH9U":[function(require,module,exports) {
module.exports = "<main class=\"podcastsimple\">\n  <section class=\"m-bc\">\n    <div class=\"c-vw\">\n      <div class=\"bc\">\n        <a class=\"mouseHover\" href=\"<%~ it.global.acf.home %>\">LC</a>\n        <span>/</span><a class=\"mouseHover\" href=\"<%~ it.global.acf.learn %>\">Learn</a>\n        <span>/</span><a class=\"mouseHover\" href=\"<%~ it.data.parent_data.permalink %>\"><%~ it.data.parent_data.name %></a>\n        <span>/</span><span><%~ it.data.title.rendered %></span>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-simpleintro\">\n    <div class=\"c-vw\">\n      <h2 class=\"tit1\"><%~ it.data.title.rendered %></h2>\n      <div class=\"m-simpleintro_info\">\n        <div class=\"autor\">\n          <p><%~ it.data.acf.featuring_a %></p>\n        </div>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-podcast\">\n    <div class=\"image\"><img src=\"<%~ it.data.acf.image_learn %>\"></div>\n    <div class=\"info\">\n      <div class=\"info_top\">\n        <div class=\"btnpod mouseHover\" data-player=\"<%~ it.data.acf.url_learn %>\"\n          data-title=\"<%~ it.data.title.rendered %>\"\n          data-subtitle=\"<%~ it.data.parent_data.name %>\"\n          data-image=\"<%~ it.data.acf.image_learn %>\">\n          <div class=\"btnpod_play\"></div>\n          <div class=\"btnpod_pause\"></div>\n          </div>\n          <div class=\"info_top_title\">\n            <p class=\"titleparent\"><%~ it.data.parent_data.name %></p>\n            <h3 class=\"tit4\"><%~ it.data.title.rendered %></h3>\n          </div>\n          <div class=\"info_top_time podTime\"><%~ it.data.acf.duration_a %></div>\n        </div>\n        <div class=\"info_lines\"><img src=\"<%~ it.global.acf.template %>/public/podcastline.svg\"></div>\n        <div class=\"info_bottom\">\n        <div class=\"info_bottom_date\"><%~ it.data.ownpost_data.date %></div>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-singsep\">\n    <div class=\"left\">\n      <h2 class=\"tit2\"><%~ it.data.acf.title_description %></h2>\n    </div>\n    <div class=\"right\">\n      <div class=\"txt-bureau\">\n        <p><%~ it.data.acf.descriptionl %></p>\n      </div>\n    </div>\n  </section>\n  <section class=\"learnsingle_main\">\n    <h2 class=\"tit2\">EPISODE TRANSCRIPT</h2>\n\n    <div class=\"grid\">\n      <div class=\"hidetext\">\n        <div class=\"hidetext_click\">\n          <div class=\"simp mouseHover\">\n            <span>EXPAND TO READ ENTIRE TRANSCRIPT</span>\n            <span><%~ it.icons.downarrow %></span>\n          </div>\n        </div>\n        <div class=\"hidetext_hold wp\">\n        <%~ it.data.acf.transcription %>\n        </div>\n      </div>\n      </div>\n    </div>\n  </section>\n\n  <section class=\"m-dualsep\">\n    <div class=\"left\">\n      <h2 class=\"tit2\">EPISODE TOPICS</h2>\n    </div>\n    <div class=\"right\">\n      <div class=\"txt-bureau\">\n        <p class=\"hide-underline\"><%~ it.data.acf.topics.map(x => `<a class=\"mouseHover\" href=\"${x.permalink}\">${x.post_title}</a>`).join(' | ') %></p>\n      </div>\n    </div>\n  </section>\n\n  <section class=\"m-dualsep\">\n    <div class=\"left\">\n      <h2 class=\"tit2\">EPISODE KEYWORDS</h2>\n    </div>\n    <div class=\"right\">\n      <div class=\"txt-bureau\">\n        <p><%~ it.data.acf.keywords.map(x => x.keyword).join(' | ') %></p>\n      </div>\n    </div>\n  </section>\n\n  <section class=\"m-dualsep\">\n    <div class=\"left\">\n      <h2 class=\"tit2\">EPISODE TAGS</h2>\n    </div>\n    <div class=\"right\">\n      <div class=\"txt-bureau\">\n        <p class=\"hide-underline\"><%~ it.data.acf.tags.map(x => `<a class=\"mouseHover\" href=\"${x.permalink}\">${x.post_title}</a>`).join(', ') %></p>\n      </div>\n    </div>\n  </section>\n\n  <section class=\"m-social\">\n    <div class=\"left\">\n      <h2 class=\"tit4\">Share</h2>\n    </div>\n    <div class=\"right\">\n      <div class=\"social\">\n        <a class=\"mouseHover Stw\" href=\"https://twitter.com/intent/tweet?url=<%~ it.data.link %>\"><%~ it.global.icons.tw %></a>\n        <a class=\"mouseHover Sfb\" href=\"https://www.facebook.com/sharer/sharer.php?u=<%~ it.data.link %>\"><%~ it.global.icons.fb %></a>\n        <a class=\"mouseHover Sin\" href=\"https://www.linkedin.com/shareArticle?url=<%~ it.data.link %>\"><%~ it.global.icons.in %></a>\n        <a class=\"mouseHover Srd\" href=\"https://www.reddit.com/submit?url=<%~ it.data.link %>\"><%~ it.global.icons.reddit %></a>\n        <a class=\"mouseHover Stb\" href=\"https://www.tumblr.com/share/link?url=<%~ it.data.link %>\"><%~ it.global.icons.tumbler %></a>\n      </div>\n    </div>\n  </section>\n  <%\n    if(it.data.parent_data.creators){ \n    it.data.parent_data.creators.forEach(function(p,key){ %>\n  <section class=\"m-creator\">\n    <div class=\"m-creator_image\">\n      <div class=\"m-creator_image_hold\"><img src=\"<%~ p.image %>\"></div>\n    </div>\n    <div class=\"m-creator_info\">\n      <h3 class=\"tit2\"><%~ p.title %></h3>\n      <% if(p.description){ %>\n      <div class=\"desc\"><%~ p.description %></div>\n      <% }\n      if(p.website){ %>\n      <a href=\"<%~ p.website %>\" class=\"simp mouseHover\"><span>website</span></a>\n      <% } %>\n      <div class=\"m-creator_info_bottom\">\n        <% if(p.contactsocial_links==true){ %>\n        <div class=\"social\">\n          <% if(p.social.instagram){ %>\n            <a class=\"mouseHover Sig\" href=\"<%~ p.social.instagram %>\"><%~ it.global.icons.ig %></a>\n          <% }\n          if(p.social.linkedin){ %>\n            <a class=\"mouseHover Sin\" href=\"<%~ p.social.linkedin %>\"><%~ it.global.icons.in %></a>\n          <%\n          }\n          if(p.social.facebook){ %>\n            <a class=\"mouseHover Sfb\" href=\"<%~ p.social.facebook %>\"><%~ it.global.icons.fb %></a>\n          <%\n          }\n          if(p.social.twitter){ %>\n            <a class=\"mouseHover Stw\" href=\"<%~ p.social.twitter %>\"><%~ it.global.icons.tw %></a>\n          <% }%>\n        </div>\n        <% } \n        else{\n        %>\n        <a class=\"btns mouseHover\" href=\"<%~ p.email_contact %>\"><div class=\"btns_t\">contact</div></a>\n        <% } %>\n      </div>\n    </div>\n  </section>\n  <% })\n  }\n  %>\n  <% \n    \n  if(it.data.acf.creators){ \n  it.data.acf.creators.forEach(function(p,key){\n  if(p.title!=''){\n   %>\n  <section class=\"m-creator\">\n    <div class=\"m-creator_image\">\n      <div class=\"m-creator_image_hold\"><img src=\"<%~ p.image %>\"></div>\n    </div>\n    <div class=\"m-creator_info\">\n      <h3 class=\"tit2\"><%~ p.title %></h3>\n      <% if(p.description){ %>\n      <div class=\"desc\"><%~ p.description %></div>\n      <% }\n      if(p.website){ %>\n      <a href=\"<%~ p.website %>\" class=\"simp mouseHover\"><span>website</span></a>\n      <% } %>\n      <div class=\"m-creator_info_bottom\">\n        <% if(p.contactsocial_links==true){ %>\n        <div class=\"social\">\n          <% if(p.social.instagram){ %>\n            <a class=\"mouseHover Sig\" href=\"<%~ p.social.instagram %>\"><%~ it.global.icons.ig %></a>\n          <% }\n          if(p.social.linkedin){ %>\n            <a class=\"mouseHover Sin\" href=\"<%~ p.social.linkedin %>\"><%~ it.global.icons.in %></a>\n          <%\n          }\n          if(p.social.facebook){ %>\n            <a class=\"mouseHover Sfb\" href=\"<%~ p.social.facebook %>\"><%~ it.global.icons.fb %></a>\n          <%\n          }\n          if(p.social.twitter){ %>\n            <a class=\"mouseHover Stw\" href=\"<%~ p.social.twitter %>\"><%~ it.global.icons.tw %></a>\n          <% }%>\n        </div>\n        <% } \n        else{\n        %>\n        <a class=\"btns mouseHover\" href=\"<%~ p.email_contact %>\"><div class=\"btns_t\">contact</div></a>\n        <% } %>\n      </div>\n    </div>\n  </section>\n  <%\n  } \n    })\n  }\n  %>\n    \n  <section class=\"m-nextprev\">\n    <% if(it.data.parent_data.prev!=null){ %>\n    <a class=\"left mouseHover\" href=\"<%~ it.data.parent_data.prev.permalink %>\" data-type=\"podcastchild\">\n      <div class=\"btnarrow \">\n        <div class=\"btnarrow_n\"></div>\n        <div class=\"btnarrow_t\">Previous</div>\n      </div>\n    </a>\n    <% }\n    else{\n\n    }\n    if(it.data.parent_data.next!=null){\n    %>\n    <a class=\"right mouseHover\" href=\"<%~ it.data.parent_data.next.permalink %>\" data-type=\"podcastchild\">\n      <div class=\"btnarrow \">\n        <div class=\"btnarrow_t\">Next</div>\n        <div class=\"btnarrow_n\"></div>\n      </div>\n    </a>\n    <%\n      }\n    %>\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"4KziV":[function(require,module,exports) {
module.exports = "\n<% it.posts.forEach(function(p,key){ %>\n  <div class=\"podlist\">\n    <div class=\"podlist_image\">\n      <a class=\"podlist_image_hold mouseHover\"  href=\"<%~ p.link %>\" data-type=\"learnchild\"><img src=\"<%~ p.image %>\"></a>\n    </div>\n    <div class=\"podlist_info\">\n      <h3 class=\"tit4\"><%~ p.title %></h3>\n      <% if(p.featuring){ %>\n      <p class=\"desc\"><%~ p.featuring %></p>\n      <% } %>\n      <a class=\"btnplay mouseHover\" data-type=\"learnchild\"  href=\"<%~ p.link %>\">\n        <div class=\"btnplay_tri\"></div>\n      </a>\n      <div class=\"autor\">\n        <p><a class=\"mouseHover\" href=\"<%~ p.parent.permalink %>\" data-type=\"learndad\"><%~ p.parent.name %></a></p>\n      </div>\n      <div class=\"podlist_info_bottom\">\n        <div class=\"datapod\">\n          <div class=\"datapod_date\"><%~ p.date %></div>\n          <div class=\"datapod_time\"><%~ p.duration %></div>\n        </div>\n        <div class=\"shareclick mouseHover\">\n          <%~ it.global.icons.share %>\n          <div class=\"shareclick_close\"></div>\n          <div class=\"shareclick_icons\">\n            <a class=\"mouseHover Stw\" href=\"https://twitter.com/intent/tweet?url=<%~ p.permalink %>\"><%~ it.global.icons.tw %></a>\n            <a class=\"mouseHover Sfb\" href=\"https://www.facebook.com/sharer/sharer.php?u=<%~ p.permalink %>\"><%~ it.global.icons.fb %></a>\n            <a class=\"mouseHover Sin\" href=\"https://www.linkedin.com/shareArticle?url=<%~ p.permalink %>\"><%~ it.global.icons.in %></a>\n            <a class=\"mouseHover Srd\" href=\"https://www.reddit.com/submit?url=<%~ p.permalink %>\"><%~ it.global.icons.reddit %></a>\n            <a class=\"mouseHover Stb\" href=\"https://www.tumblr.com/share/link?url=<%~ p.permalink %>\"><%~ it.global.icons.tumbler %></a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n<% }) \nif(it.posts.length %2 != 0){\n%>\n  <div class=\"podlist podlist-fake\"></div>\n\n<%\n}\n%>";

},{}],"jRRh9":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! SIGN UP TO ACCESS THIS CONTENT</h2>\n<h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3>\n<a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"2g5Po":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _templatedadEta = require("bundle-text:./templatedad.eta");
var _templatedadEtaDefault = parcelHelpers.interopDefault(_templatedadEta);
var _templatechildEta = require("bundle-text:./templatechild.eta");
var _templatechildEtaDefault = parcelHelpers.interopDefault(_templatechildEta);
var _podcastlistEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/podcastlist.eta");
var _podcastlistEtaDefault = parcelHelpers.interopDefault(_podcastlistEta);
var _notloggedEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/notlogged.eta");
var _notloggedEtaDefault = parcelHelpers.interopDefault(_notloggedEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
var _noaccessEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/noaccess.eta");
var _noaccessEtaDefault = parcelHelpers.interopDefault(_noaccessEta);
//COMPS
var _dualintroJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/components\uD83E\uDDBE/Dualintro.js");
var _dualintroJsDefault = parcelHelpers.interopDefault(_dualintroJs);
var _eta = require("eta");
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        //${"http://165.227.64.123:8126/"}/wp-json/wp/v2/podcast/40?acf_format=standard
        // const response = await fetch(this.main.acf.base+'/wp-json/wp/v2/pages/'+content.dataset.id+'?acf_format=standard')
        // console.log(this.main.acf.base+'/wp-json/wp/v2/network/'+content.dataset.id+'?acf_format=standard')
        const response = await fetch(this.main.acf.base + "/wp-json/wp/v2/network/" + content.dataset.id + "?acf_format=standard");
        const data = await response.json();
        // console.log(data)
        // console.log(this.main)
        let html = "";
        let load = true;
        if (this?.main?.user && (data?.acf?.add_to_collective || data?.parent_data?.add_to_collective) && !this?.main?.user?.acf?.is_content_hub_user) {
            html = _eta.render((0, _noaccessEtaDefault.default), {
                global: this.main,
                data: data,
                footer: this.footer
            });
            load = false;
        } else if (data.parent == 0) html = _eta.render((0, _templatedadEtaDefault.default), {
            global: this.main,
            data: data,
            footer: this.footer
        });
        else // let Difference_In_Time = new Date(data.date).getTime() - new Date().getTime()
        // this.Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24)
        // // hide content behind login if older than 56 days / 8 weeks
        // // (number should be negative)
        // const numDayLimit = -56;
        // if (this.Difference_In_Days < numDayLimit && !this.main.user) {
        //   html = Eta.render(notlogged, { global: this.main, data: data, footer: this.footer })
        // }
        // else {
        html = _eta.render((0, _templatechildEtaDefault.default), {
            global: this.main,
            data: data,
            footer: this.footer
        });
        // console.log(data)
        // console.log(html)
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)")
        };
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
        await this.loadImages();
        await this.createAnimations();
        if (this.DOM.el.querySelector(".m-dualintro")) this.slide = new (0, _dualintroJsDefault.default)(this.DOM.el.querySelector(".m-dualintro"));
        if (data.parent == 0 && load) {
            this.DOM.holder = this.DOM.el.querySelector(".hPosts");
            this.DOM.pages = this.DOM.el.querySelector(".pPosts");
            await this.getPosts(true, "network", data.id, -1, 1);
        } else {
            if (this.Difference_In_Days < -14 && !this.main.user) ;
            else if (this.DOM.el.querySelector(".hidetext")) {
                this.DOM.hidetext = this.DOM.el.querySelector(".hidetext");
                this.DOM.clicktext = this.DOM.el.querySelector(".hidetext_click");
                this.DOM.holdtext = this.DOM.el.querySelector(".hidetext_hold");
                this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
                if (this.DOM.hidetext.clientHeight + 40 > this.DOM.holdtext.clientHeight) {
                    this.DOM.clicktext.classList.add("act");
                    (0, _gsap.gsap).to(this.DOM.hidetext, {
                        height: this.DOM.holdtext.clientHeight + "px",
                        duration: .6,
                        onComplete: ()=>{
                            this.DOM.hidetext.classList.add("act");
                            this.DOM.hidetext.style.height = "";
                            this.resizeLimit();
                        }
                    });
                } else {
                    this.textExpand = ()=>{
                        this.isVisible = 0;
                        // console.log(this.sticks)
                        this.DOM.clicktext.classList.add("act");
                        this.timeline = (0, _gsap.gsap).timeline({
                            paused: true
                        })// .to(this.sticks[0].stick.son,{duration:.6,y:'+='+(this.DOM.holdtext.clientHeight - this.DOM.hidetext.clientHeight)+'px'},'a')
                        // .to(this.sticks[0].stick,{duration:.6,current:'+='+(this.DOM.holdtext.clientHeight - this.DOM.hidetext.clientHeight),target:'+='+(this.DOM.holdtext.clientHeight - this.DOM.hidetext.clientHeight)},'a')
                        .to(this.DOM.hidetext, {
                            height: this.DOM.holdtext.clientHeight + "px",
                            duration: .6,
                            onUpdate: ()=>{
                            // console.log(this.sticks)
                            },
                            onComplete: ()=>{
                                this.isVisible = 1;
                                this.DOM.hidetext.classList.add("act");
                                this.DOM.hidetext.style.height = "";
                                this.resizeLimit();
                            }
                        }, "a");
                        this.timeline.play();
                    };
                    this.DOM.clicktext.addEventListener("click", this.textExpand);
                }
            }
        }
    }
    async getJson(url, isNew) {
        const posts = await fetch(url);
        const datap = await posts.json();
        this.html = _eta.render((0, _podcastlistEtaDefault.default), {
            global: this.main,
            posts: datap.posts
        });
        // this.ajaxImages()
        this.DOM.holder.innerHTML = this.html;
        if (isNew == true) {
            this.actualpage = 1;
            this.max = datap.maxpages;
        }
        await this.ajaxImages();
    }
    async ajaxImages() {
        let newpage = document.createElement("template");
        newpage.innerHTML = this.html;
        let paths = Array.from(newpage.content.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        return Promise.resolve();
    }
    async blocksClick(type) {
        this.DOM.holder.classList.add("load");
        await this.timeout(600);
        if (type == "block") this.DOM.holder.classList.add("blocks");
        else this.DOM.holder.classList.remove("blocks");
        this.DOM.holder.classList.remove("load");
        this.resizeLimit();
    }
    async getPosts(isNew, type, id, postperpage, page) {
        this.DOM.holder.classList.add("load");
        Promise.all([
            this.timeout(600),
            this.getJson(this.main.acf.base + "/wp-json/wp/v2/getposts?type=" + type + "&parent=" + id + "&page=" + page + "&perpage=" + postperpage, isNew)
        ]).then(()=>{
            this.DOM.holder.classList.remove("load");
            if (isNew == true) ;
            else {
                this.DOM.pagsel[this.actualpage - 1].classList.remove("act");
                this.actualpage = page;
                this.DOM.pagsel[this.actualpage - 1].classList.add("act");
            }
            this.emit("linkseventlisteners");
            this.emit("mousereset");
            this.resizeLimit();
        });
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            // console.log(this.anims[pos])
                            this.anims[pos].stick.active = 0;
                            this.movestick = null;
                        } else if (id == "v") clearInterval(this.clockInt);
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "e") {
                            this.anims[pos].classel.start();
                            this.slidetext = this.anims[pos];
                        } else if (id == "v") this.clockStart(this.anims[pos].el.parentNode.querySelector(".time"));
                        else if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.movestick = this.anims[pos];
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) super.smoothScroll();
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        await this.timeout(1);
        // this.DOM.el.classList.add('home-active')
        // gsap.to('.home',{opacity:1,ease:Power2.easeInOut,duration:.6})
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        return super.hide();
    }
};

},{"../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./template.eta":"8gmiF","bundle-text:./templatedad.eta":"b8CLT","bundle-text:./templatechild.eta":"1ulfO","bundle-text:/src/views👁️👁️👁️/ETA/podcastlist.eta":"40gNp","bundle-text:/src/views👁️👁️👁️/404/notlogged.eta":"8Hz6O","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","bundle-text:/src/views👁️👁️👁️/404/noaccess.eta":"lHKcR","/src/js🧠🧠🧠/components🦾/Dualintro.js":"7DjOj","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"8gmiF":[function(require,module,exports) {
module.exports = "\n<main class=\"home\">\n  <section class=\"home_intro stck_base\" id=\"stck0\">\n    <div class=\"iO iO-stck stck_control\" data-stck=\"0\"></div>\n    <div class=\"iO iO-logohide\"></div>\n    <div class=\"iO iO-quickshow\"></div>\n    <div class=\"home_intro_hold stck_main\">\n      <div class=\"timehold\">\n        <div class=\"iO iO-time\"></div>\n        <div class=\"timeoflow\">\n          <div class=\"time\" data-offset=\"1\">\n            <div class=\"change\">01 <div class=\"sep\">:</div> 00 <div class=\"sep\">:</div> 12</div>\n            <div class=\"end\">ESPAÑA</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"introOut\"><span>Saltar intro</span></div>\n      <div class=\"box\">\n            <div class=\"logo\">\n              <div class=\"logo_left\">\n                <div class=\"logo_el logo_left_1\"><span>S</span></div>\n                <div class=\"logo_el logo_left_2 logo_el-hide\"><span>E</span></div>\n                <div class=\"logo_el logo_left_3\"><span>R</span></div>\n                <div class=\"logo_el logo_left_4 logo_el-hide\"><span>É</span></div>\n              </div>\n              <div class=\"logo_video\">\n                <div class=\"logo_video_mask mdlClick\" data-video=\"<%~ it.data.video_reel %>\">\n                  <video class=\"inline\"  src=\"<%~ it.data.video_anim %>\"  playsinline autoplay muted loop  poster=\"<%~ it.data.poster_animation %>\"></video>\n                  <video class=\"reel\" src=\"<%~ it.data.video_reel %>\" preload=\"none\"  playsinline muted  poster=\"<%~ it.data.poster_animation %>\"></video>\n                </div>\n              </div>\n              <div class=\"logo_right\">\n                <div class=\"logo_el logo_right_1\"><span>B</span></div>\n                <div class=\"logo_el logo_right_2\"><span>R</span></div>\n                <div class=\"logo_el logo_right_3 logo_el-hide\"><span>E</span></div>\n                <div class=\"logo_el logo_right_4\"><span>V</span></div>\n                <div class=\"logo_el logo_right_5 logo_el-hide\"><span>E</span></div>\n              </div>\n            </div>\n            <div class=\"claim\">\n              <p><span class=\"space\"></span><%~ it.data.frase_inicial %></p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n\n  <section class=\"home_claim\">\n    <div class=\"c-vw\">\n      <div class=\"col\">\n        <div class=\"title1 title1-cols\">\n\n          <% it.data.claims[0].title.forEach(function(w,key){ %>\n              <div class=\"line\"><span class=\"line_fake\"><%~  w.line %></span><span class=\"spell iO iO-spell\"><%~  w.line %></span></div>\n\n          <% }) %>\n        </div>\n      </div>\n\n      <div class=\"col col-right\">\n        <div class=\"title1\">\n          <% it.data.claims[1].title.forEach(function(w,key){ %>\n              <div class=\"line\"><span class=\"line_fake\"><%~  w.line %></span><span class=\"spell iO iO-spell\"><%~  w.line %></span></div>\n\n          <% }) %>\n        </div>\n      </div>\n\n      <div class=\"col\">\n        <div class=\"title1\">\n          <% it.data.claims[2].title.forEach(function(w,key){ %>\n              <div class=\"line\"><span class=\"line_fake\"><%~  w.line %></span><span class=\"spell iO iO-spell\"><%~  w.line %></span></div>\n\n          <% }) %>\n        </div>\n      </div>\n    </div>\n  </section>\n  <section class=\"home_text stck_base\" id=\"stck1\">\n    <div class=\"iO iO-stck iO-stck-text stck_control\" data-stck=\"1\"></div>\n    <div class=\"home_text_hold stck_main\">\n      \n      <%~ it.data.texto %>\n      <div class=\"positions\">\n        <%~ it.data.frasefinal %>\n      </div>\n    </div>\n  </section>\n  <section class=\"home_projects darksect\">\n    <div class=\"iO iO-hide\"></div>\n    <div class=\"iO iO-dark\"></div>\n    <div class=\"iO iO-foot\"></div>\n    <div class=\"home_projects_first gridmaster\">\n      <div class=\"G-intro\">\n        <div class=\"G-intro_year\">\n          <div class=\"nums nums-2 nums-anim iO iO-counter\" data-from=\"<%~  it.data.year %>\">\n            <div class=\"nums_arrow\"><%~ it.global.icons.arrowlink %></div>\n              <div class=\"nums_main\"><%~ it.global.acf.actualyear %></div>\n            </div>\n          </div>\n          <div class=\"G-intro_title\">\n            <h2 class=\"title2 title2-cols\">\n              <% it.data.titulo_1_title.forEach(function(w,key){ %>\n              <div class=\"line\"><span class=\"line_fake\"><%~  w.line %></span><span class=\"spell iO iO-spell\"><%~  w.line %></span>\n                <% if(key == it.data.titulo_1_title.length-1){ %>\n                  <div class=\"nums nums-sup nums-anim iO iO-counter\">\n                  <div class=\"nums_main\"><%~ it.data.numtitle %></div>\n                </div>\n                <% } %>\n                \n              </div>\n\n            <% }) %>\n            </h2>\n          </div>\n    \n          <div class=\"G-intro_dual\">\n\n            <a class=\"Eproject Eproject-<%~ it.data.destacado.ratio_a %>\" href=\"<%~ it.data.destacado.permalink %>\" data-type=\"proyecto\">\n              <div class=\"iO iO-par\"></div>\n              <div class=\"Eproject_box\">\n                <div class=\"iO_son Eproject_par\">\n                  <img src=\"<%~ it.data.destacado.imagen_a %>\">\n                  <% it.data.destacado.imagen_a %>\n                  <% if(it.data.destacado.video_a!=''){ %>\n                    <video src=\"<%~ it.data.destacado.video_a %>\" preload=\"none\" playsinline=\"\" muted=\"\" loop=\"\" poster=\"<%~ it.data.destacado.imagen_a %>\"></video>\n                  <% } %>\n                </div>\n              </div>\n              <div class=\"Eproject_info\">\n                <h3 class=\"titlesmall name\"><% it.data.destacado.post_title %></h3>\n                <div class=\"tags\">\n                  <div class=\"tags_el\"><% it.data.destacado.tags_a %></div>\n                </div>\n              </div>\n            </a>\n\n            <div class=\"G-intro_dual_text\">\n              <h2 class=\"title2 title2-cols\">\n              <% it.data.titulo_2_title.forEach(function(w,key){ %>\n              <div class=\"line\"><span class=\"line_fake\"><%~  w.line %></span><span class=\"spell iO iO-spell\"><%~  w.line %></span></div>\n                \n\n            <% }) %>\n              </h2>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n\n        <% cont = 0 %>\n      <div class=\"home_projects_last gridmaster\">\n        <% it.data.proyectos.forEach(function(post,key){ %>\n        <% if(cont == 0){ %>\n          \n          <% type = 'G-tri' %>\n          <div class=\"<%~ type %>\">\n        <% }\n        if(cont == 3 || cont == 6 || cont == 9 || cont == 12){\n        %>\n          </div>\n          <% type = 'G-tri' %>\n          <div class=\"<%~ type %>\">\n        <%\n        }\n        %>\n        \n            <div class=\"<%~ type %>_col\">\n              <a class=\"Eproject Eproject-<%~ post.ratio_a %>\" href=\"<%~ post.permalink %>\" data-type=\"proyecto\">\n\n                <div class=\"iO iO-par\"></div>\n                <div class=\"Eproject_box\">\n                  <div class=\"iO_son Eproject_par\">\n                    <img src=\"<%~ post.imagen_a %>\">\n                    <% if(post.video_a!=''){ %>\n                      <video src=\"<%~ post.video_a %>\" preload=\"none\" playsinline=\"\" muted=\"\" loop=\"\" poster=\"<%~ post.imagen_a %>\"></video>\n                    <% } %>\n                  </div>\n                </div>\n                <div class=\"Eproject_info\">\n                  <h3 class=\"titlesmall name\"><%~ post.post_title %></h3>\n                  <div class=\"tags\">\n                    <div class=\"tags_el\"><%~ post.tags_a %></div>\n                  </div>\n                </div>\n              </a>\n            </div>\n        <%  \n        cont++\n        }) %>\n        </div><!-- cierre last G -->\n        <div class=\"G-textright\">\n          <div class=\"holder in\">\n            <p><%~ it.data.texto_premios %></p>\n              <a class=\"linkarrow\" href=\"<%~ it.data.url_boton %>\" data-type=\"premios\">\n                <div class=\"linkarrow_t\"><%~ it.data.texto_boton %></div>\n                <div class=\"linkarrow_h\"><%~ it.data.texto_boton %></div>\n                <div class=\"linkarrow_i\"><%~ it.global.icons.arrowlink %></div>\n              </a>\n          </div>\n        </div>\n        <div class=\"G-title\">\n          <div class=\"nums nums-small nums-anim iO iO-counter\">\n            <div class=\"nums_main\"><%~ it.data.year_2 %></div>\n          </div>\n          <h3 class=\"titlesmall\"><%~ it.data.titulo_3 %></h3>\n        </div>\n        <div class=\"Stexthold\">\n          <div class=\"iO iO-stext\"></div>\n          <div class=\"Stext Stext-big\">\n            <div class=\"Stext_real\">\n              <div class=\"el\">\n                \n              <% it.data.texto_carousel.forEach(function(text,key){ %>\n                <%~ it.global.icons.asterisk %>\n                <span><%~ text.texto %></span>\n              <% }) %>\n              </div>\n            </div>\n            <div class=\"Stext_fake\"></div>\n          </div>\n        </div>\n        <div class=\"G-dual2\">\n          <div class=\"G-dual2_col\">\n            <a class=\"Eproject Eproject-<%~ it.data.destacado_2.ratio_a %>\" href=\"<%~ it.data.destacado_2.permalink %>\" data-type=\"proyecto\">\n              <div class=\"iO iO-par\"></div>\n              <div class=\"Eproject_box\">\n                <div class=\"iO_son Eproject_par\">\n                  <img src=\"<%~ it.data.destacado_2.imagen_a %>\">\n                  <% if(it.data.destacado_2.video_a!=''){ %>\n                    <video src=\"<%~ it.data.destacado_2.video_a %>\" preload=\"none\" playsinline=\"\" muted=\"\" loop=\"\" poster=\"<%~ it.data.destacado_2.imagen_a %>\"></video>\n                  <% } %>\n                </div>\n              </div>\n              <div class=\"Eproject_info\">\n                <h3 class=\"titlesmall name\"><%~ it.data.destacado_2.post_title %></h3>\n                <div class=\"tags\">\n                  <div class=\"tags_el\"><%~ it.data.destacado_2.tags_a %></div>\n                </div>\n              </div>\n            </a>\n          </div>\n          <div class=\"G-dual2_col\">\n            <div class=\"Eproject Eproject-st Eproject-no\">\n              <div class=\"iO iO-par\"></div>\n              <div class=\"Eproject_box\">\n                <div class=\"iO_son Eproject_par\"><img src=\"<%~ it.data.imagen_alternativa %>\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div><!-- cierre master -->\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"b8CLT":[function(require,module,exports) {
module.exports = "<main class=\"podcast\">\n  <section class=\"m-dualintro m-dualintro-network\">\n    <div class=\"left\" style=\"background-color:<%~ it.data.acf.color_a %>\">\n      <div class=\"left_hover mouseScroll\"></div>\n      <div class=\"bc\">\n        <% if(it.data.acf?.add_to_collective || it.data?.parent_data?.add_to_collective){ %>\n          <a class=\"mouseHover\" href=\"<%~ it.global.acf?.ch_home ?? '/content-hub' %>\">LC Hub</a>\n        <%  } else {%>\n          <a class=\"mouseHover\" href=\"<%~ it.global.acf.home %>\">LC</a>\n        <%  }%>\n        <span>/</span><a class=\"mouseHover\" href=\"<%~ it.global.acf.network %>\">Network</a>\n        <span>/</span><span><%~ it.data.title.rendered %></span>\n      </div>\n      <div class=\"left_logo\"><img src=\"<%~ it.data.acf.logo_a %>\"/></div>\n    </div>\n    <div class=\"right mouseScroll\">\n      <div class=\"right_el\"><img src=\"<%~ it.data.acf.imageintro %>\"></div>\n    </div>\n  </section>\n  <section class=\"m-dualsep\">\n    <div class=\"left\">\n      <h2 class=\"tit2\"><%~ it.data.acf.title_description %></h2>\n    </div>\n    <div class=\"right\">\n      <div class=\"txt-bureau\">\n        <%~ it.data.acf.descriptionl %>\n        <% if(it.data.acf.link){ %>\n        <a class=\"simp mouseHover\" href=\"<%~ it.data.acf.link %>\"><span>Visit site</span></a>\n        <% } %>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-social\">\n    <div class=\"left\">\n      <h2 class=\"tit4\"><%~ it.data.acf.title_social %></h2>\n    </div>\n    <div class=\"right\">\n      <div class=\"social\">\n          <% if(it.data.acf.instagram){ %>\n            <a class=\"mouseHover Sig\" href=\"<%~it.data.acf.instagram %>\"><%~ it.global.icons.ig %></a>\n          <% }\n          if(it.data.acf.linkedin){ %>\n            <a class=\"mouseHover Sin\" href=\"<%~it.data.acf.linkedin %>\"><%~ it.global.icons.in %></a>\n          <%\n          }\n          if(it.data.acf.facebook){ %>\n            <a class=\"mouseHover Sfb\" href=\"<%~it.data.acf.facebook %>\"><%~ it.global.icons.fb %></a>\n          <%\n          }\n          if(it.data.acf.twitter){ %>\n            <a class=\"mouseHover Stw\" href=\"<%~it.data.acf.twitter %>\"><%~ it.global.icons.tw %></a>\n          <% }%>\n        </div>\n    </div>\n  </section>\n  <section class=\"m-simpletitle\">\n    <div class=\"c-vw\">\n      <h2 class=\"tit2\">LISTEN TO THEIR EPISODE</h2>\n    </div>\n  </section>\n  <section class=\"m-tabposts\" style=\"--main:#E5855E\">\n    <div class=\"m-tabposts_hold hPosts\">\n    \n    </div>\n    \n  </section>\n  <section class=\"m-cta signupmod\" style=\"--main:#DF80AC\">\n    <div class=\"c-vw\">\n      <div class=\"hold\">\n         <%\n          var randomNum = Math.floor((Math.random() * it.global.acf.signup_text.length) + 1);\n          var title = it.global.acf.signup_text[randomNum-1].title;\n          var text = it.global.acf.signup_text[randomNum-1].text;\n          \n        %>\n        <h2 class=\"tit1\"><%~ title %></h2>\n        <h3 class=\"tit4\"><%~ text %> </h3>\n        </h3>\n        <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\">\n          <div class=\"btn_t\">TAP IN</div>\n        </a>\n      </div>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"1ulfO":[function(require,module,exports) {
module.exports = "<main class=\"podcastsimple\">\n  <section class=\"m-bc\">\n    <div class=\"c-vw\">\n      <div class=\"bc\">\n        <% if(it.data.acf?.add_to_collective || it.data?.parent_data?.add_to_collective){ %>\n          <a class=\"mouseHover\" href=\"<%~ it.global.acf?.ch_home ?? '/content-hub' %>\">LC Hub</a>\n        <%  } else {%>\n          <a class=\"mouseHover\" href=\"<%~ it.global.acf.home %>\">LC</a>\n        <%  }%>\n        <span>/</span><a class=\"mouseHover\" href=\"<%~ it.global.acf.network %>\">Network</a>\n        <span>/</span><a href=\"<%~ it.data.parent_data.permalink %>\"><%~ it.data.parent_data.name %></a>\n        <span>/</span><span><%~ it.data.title.rendered %></span>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-simpleintro m-simpleintro-network\" style=\"background-color:<%~ it.data.parent_data.color %>\">\n    <div class=\"c-vw\">\n      <div class=\"logo\"><img src=\"<%~ it.data.parent_data.logo %>\"/></div>\n      <h2 class=\"tit2\"><%~ it.data.title.rendered %></h2>\n      <div class=\"m-simpleintro_info\">\n        <% if(it.data.acf.featuring_a){ %>\n        <div class=\"autor\">\n          <p><%~ it.data.acf.featuring_a %></p>\n        </div>\n        <% } %>\n      </div>\n    </div>\n  </section>\n  <% if(it.data.acf.url_video){ %>\n  <section class=\"m-podcast\">\n    <div class=\"info\">\n      <iframe class=\"video\" src=\"<%~ it.data.acf.url_video %>\"></iframe>\n    </div>\n  </section>\n  <% } %>\n  <section class=\"m-podcast\">\n    <div class=\"image\"><img src=\"<%~ it.data.acf.image_podcast %>\"></div>\n    <div class=\"info\">\n      <div class=\"info_top\">\n        <div class=\"btnpod mouseHover\" data-player=\"<%~ it.data.acf.url_podcast %>\"\n          data-title=\"<%~ it.data.title.rendered %>\"\n          data-subtitle=\"<%~ it.data.parent_data.name %>\"\n          data-image=\"<%~ it.data.acf.image_podcast %>\">\n          <div class=\"btnpod_play\"></div>\n          <div class=\"btnpod_pause\"></div>\n          </div>\n          <div class=\"info_top_title\">\n            <p class=\"titleparent\"><%~ it.data.parent_data.name %></p>\n            <h3 class=\"tit4\"><%~ it.data.title.rendered %></h3>\n          </div>\n          <div class=\"info_top_time podTime\"><%~ it.data.acf.duration_a %></div>\n        </div>\n        <div class=\"info_lines\"><img src=\"<%~ it.global.acf.template %>/public/podcastline.svg\"></div>\n        <div class=\"info_bottom\">\n        <div class=\"info_bottom_date\"><%~ it.data.ownpost_data.date %></div>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-dualsep\">\n    <div class=\"left\">\n      <h2 class=\"tit2\"><%~ it.data.acf.title_description %></h2>\n    </div>\n    <div class=\"right\">\n      <div class=\"txt-bureau\">\n        <p><%~ it.data.acf.descriptionl %></p>\n      </div>\n    </div>\n  </section>\n  <section class=\"podcastsingle_main\">\n    <div class=\"grid\">\n      <div class=\"hidetext\">\n        <div class=\"hidetext_click\">\n          <div class=\"simp mouseHover\"><span>Read more</span></div>\n        </div>\n        <div class=\"hidetext_hold wp\">\n        <%~ it.data.acf.transcription %>\n        </div>\n      </div>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-social\">\n    <div class=\"left\">\n      <h2 class=\"tit4\">Share</h2>\n    </div>\n    <div class=\"right\">\n      <div class=\"social\">\n        <a class=\"mouseHover Stw\" href=\"https://twitter.com/intent/tweet?url=<%~ it.data.link %>\"><%~ it.global.icons.tw %></a>\n        <a class=\"mouseHover Sfb\" href=\"https://www.facebook.com/sharer/sharer.php?u=<%~ it.data.link %>\"><%~ it.global.icons.fb %></a>\n        <a class=\"mouseHover Sin\" href=\"https://www.linkedin.com/shareArticle?url=<%~ it.data.link %>\"><%~ it.global.icons.in %></a>\n        <a class=\"mouseHover Srd\" href=\"https://www.reddit.com/submit?url=<%~ it.data.link %>\"><%~ it.global.icons.reddit %></a>\n        <a class=\"mouseHover Stb\" href=\"https://www.tumblr.com/share/link?url=<%~ it.data.link %>\"><%~ it.global.icons.tumbler %></a>\n      </div>\n    </div>\n  </section>\n  <%\n    if(it.data.parent_data.creators){ \n    it.data.parent_data.creators.forEach(function(p,key){ %>\n  <section class=\"m-creator\">\n    <div class=\"m-creator_image\">\n      <div class=\"m-creator_image_hold\"><img src=\"<%~ p.image %>\"></div>\n    </div>\n    <div class=\"m-creator_info\">\n      <h3 class=\"tit2\"><%~ p.title %></h3>\n      <% if(p.description){ %>\n      <div class=\"desc\"><%~ p.description %></div>\n      <% }\n      if(p.website){ %>\n      <a href=\"<%~ p.website %>\" class=\"simp mouseHover\"><span>website</span></a>\n      <% } %>\n      <div class=\"m-creator_info_bottom\">\n        <% if(p.contactsocial_links==true){ %>\n        <div class=\"social\">\n          <% if(p.social.instagram){ %>\n            <a class=\"mouseHover\" href=\"<%~ p.social.instagram %>\"><%~ it.global.icons.ig %></a>\n          <% }\n          if(p.social.linkedin){ %>\n            <a class=\"mouseHover\" href=\"<%~ p.social.linkedin %>\"><%~ it.global.icons.in %></a>\n          <%\n          }\n          if(p.social.facebook){ %>\n            <a class=\"mouseHover\" href=\"<%~ p.social.facebook %>\"><%~ it.global.icons.fb %></a>\n          <%\n          }\n          if(p.social.twitter){ %>\n            <a class=\"mouseHover\" href=\"<%~ p.social.twitter %>\"><%~ it.global.icons.tw %></a>\n          <% }%>\n        </div>\n        <% } \n        else{\n        %>\n        <a class=\"btns mouseHover\" href=\"<%~ p.email_contact %>\"><div class=\"btns_t\">contact</div></a>\n        <% } %>\n      </div>\n    </div>\n  </section>\n  <% })\n  }\n  %>\n  <% \n    \n  if(it.data.acf.creators){ \n  it.data.acf.creators.forEach(function(p,key){ \n  if(p.title!=''){ \n  %>\n  <section class=\"m-creator\">\n    <div class=\"m-creator_image\">\n      <div class=\"m-creator_image_hold\"><img src=\"<%~ p.image %>\"></div>\n    </div>\n    <div class=\"m-creator_info\">\n      <h3 class=\"tit2\"><%~ p.title %></h3>\n      <% if(p.description){ %>\n      <div class=\"desc\"><%~ p.description %></div>\n      <% }\n      if(p.website){ %>\n      <a href=\"<%~ p.website %>\" class=\"simp mouseHover\"><span>website</span></a>\n      <% } %>\n      <div class=\"m-creator_info_bottom\">\n        <% if(p.contactsocial_links==true){ %>\n        <div class=\"social\">\n          <% if(p.social.instagram){ %>\n            <a class=\"mouseHover\" href=\"<%~ p.social.instagram %>\"><%~ it.global.icons.ig %></a>\n          <% }\n          if(p.social.linkedin){ %>\n            <a class=\"mouseHover\" href=\"<%~ p.social.linkedin %>\"><%~ it.global.icons.in %></a>\n          <%\n          }\n          if(p.social.facebook){ %>\n            <a class=\"mouseHover\" href=\"<%~ p.social.facebook %>\"><%~ it.global.icons.fb %></a>\n          <%\n          }\n          if(p.social.twitter){ %>\n            <a class=\"mouseHover\" href=\"<%~ p.social.twitter %>\"><%~ it.global.icons.tw %></a>\n          <% }%>\n        </div>\n        <% } \n        else{\n        %>\n        <a class=\"btns mouseHover\" href=\"<%~ p.email_contact %>\"><div class=\"btns_t\">contact</div></a>\n        <% } %>\n      </div>\n    </div>\n  </section>\n  <% \n    }\n    }) \n  }\n  %>\n    \n  <section class=\"m-nextprev\">\n    <% if(it.data.parent_data.prev!=null){ %>\n    <a class=\"left mouseHover\" href=\"<%~ it.data.parent_data.prev.permalink %>\" data-type=\"podcastchild\">\n      <div class=\"btnarrow\">\n        <div class=\"btnarrow_n\"></div>\n        <div class=\"btnarrow_t\">Previous</div>\n      </div>\n    </a>\n    <% }\n    else{\n\n    }\n    if(it.data.parent_data.next!=null){\n    %>\n    <a class=\"right mouseHover\" href=\"<%~ it.data.parent_data.next.permalink %>\" data-type=\"podcastchild\">\n      <div class=\"btnarrow\">\n        <div class=\"btnarrow_t\">Next</div>\n        <div class=\"btnarrow_n\"></div>\n      </div>\n    </a>\n    <%\n      }\n    %>\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"40gNp":[function(require,module,exports) {
module.exports = "\n<% it.posts.forEach(function(p,key){ %>\n  <div class=\"podlist\">\n    <div class=\"podlist_image\">\n      <a class=\"podlist_image_hold mouseHover\"  href=\"<%~ p.link %>\" data-type=\"podcastchild\"><img src=\"<%~ p.image %>\"></a>\n    </div>\n    <div class=\"podlist_info\">\n      <h3 class=\"tit4\"><%~ p.title %></h3>\n      <% if(p.featuring){ %>\n      <p class=\"desc\"><%~ p.featuring %></p>\n      <% } %>\n      <a class=\"btnplay mouseHover\" data-type=\"podcastchild\"  href=\"<%~ p.link %>\">\n        <div class=\"btnplay_tri\"></div>\n      </a>\n      <div class=\"autor\">\n        <p><a class=\"mouseHover\" href=\"<%~ p.parent.permalink %>\" data-type=\"podcastdad\"><%~ p.parent.name %></a></p>\n      </div>\n      <div class=\"podlist_info_bottom\">\n        <div class=\"datapod\">\n          <div class=\"datapod_date\"><%~ p.date %></div>\n          <div class=\"datapod_time\"><%~ p.duration %></div>\n        </div>\n        <div class=\"shareclick mouseHover\">\n          <%~ it.global.icons.share %>\n          <div class=\"shareclick_close\"></div>\n          <div class=\"shareclick_icons\">\n            <a class=\"mouseHover Stw\" href=\"https://twitter.com/intent/tweet?url=<%~ p.permalink %>\"><%~ it.global.icons.tw %></a>\n            <a class=\"mouseHover Sfb\" href=\"https://www.facebook.com/sharer/sharer.php?u=<%~ p.permalink %>\"><%~ it.global.icons.fb %></a>\n            <a class=\"mouseHover Sin\" href=\"https://www.linkedin.com/shareArticle?url=<%~ p.permalink %>\"><%~ it.global.icons.in %></a>\n            <a class=\"mouseHover Srd\" href=\"https://www.reddit.com/submit?url=<%~ p.permalink %>\"><%~ it.global.icons.reddit %></a>\n            <a class=\"mouseHover Stb\" href=\"https://www.tumblr.com/share/link?url=<%~ p.permalink %>\"><%~ it.global.icons.tumbler %></a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n<% }) \nif(it.posts.length %2 != 0){\n%>\n  <div class=\"podlist podlist-fake\"></div>\n\n<%\n}\n%>";

},{}],"8Hz6O":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! SIGN UP TO ACCESS THIS CONTENT</h2>\n<h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3>\n<a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"lHKcR":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! YOU DON'T HAVE ACCESS TO THIS CONTENT</h2>\n<% /* <h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3> */ %>\n<% /* <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a> */ %>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"4WMaS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
var _artEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/art.eta");
var _artEtaDefault = parcelHelpers.interopDefault(_artEta);
var _noaccessEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/noaccess.eta");
var _noaccessEtaDefault = parcelHelpers.interopDefault(_noaccessEta);
var _notloggedEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/notlogged.eta");
var _notloggedEtaDefault = parcelHelpers.interopDefault(_notloggedEta);
//COMPS
// import Timer from '/src/js🧠🧠🧠/components🦾/Timer.js'
var _eta = require("eta");
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        const response = await fetch(this.main.acf.base + "/wp-json/wp/v2/posts/" + content.dataset.id + "?acf_format=standard");
        const data = await response.json();
        // //  console.log('data', data)
        let Difference_In_Time = new Date(data.date).getTime() - new Date().getTime();
        let Difference_In_Days = Difference_In_Time / 86400000;
        let html = "";
        // hide content behind login if older than 56 days / 8 weeks
        // (number should be negative)
        const numDayLimit = -56;
        let load = true;
        if (this?.main?.user && (data?.acf?.add_to_collective || data?.parent_data?.add_to_collective) && !this?.main?.user?.acf?.is_content_hub_user) {
            html = _eta.render((0, _noaccessEtaDefault.default), {
                global: this.main,
                data: data,
                footer: this.footer
            });
            load = false;
        } else if (Difference_In_Days < numDayLimit && !this.main.user) html = _eta.render((0, _notloggedEtaDefault.default), {
            global: this.main,
            data: data,
            footer: this.footer
        });
        else {
            const responsetags = await fetch(this.main.acf.base + "/wp-json/wp/v2/gettags/?post=" + content.dataset.id);
            const datatags = await responsetags.json();
            // //  console.log(datatags)
            html = _eta.render((0, _templateEtaDefault.default), {
                global: this.main,
                tags: datatags,
                data: data,
                footer: this.footer
            });
        // //  console.log(html)
        }
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)")
        };
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
        this.DOM.el.querySelectorAll(".tag-add-btn").forEach((el)=>{
            el.addEventListener("click", ()=>this.setInterest(el));
        });
        await this.loadImages();
        await this.createAnimations();
        if (Difference_In_Days < -14 && !this.main.user) ;
        else await this.getRandom("post", content.dataset.id, 2);
    //  this.slidrag = new Slidrag(this.DOM.el.querySelector('.swiper'))
    //  this.slidclick = new SlidClick(this.DOM.el.querySelector('.m-slidnum'))
    }
    async setInterest(el) {
        if (el.dataset.tag_set === "true") this.removeInterest(el);
        else this.addInterest(el);
    }
    async addInterest(el) {
        const userid = this.main.user.user.ID;
        const tag = el.dataset.tag;
        const url = this.main.acf.base + "/wp-json/csskiller/v1/add-interest/";
        await fetch(url, {
            method: "POST",
            body: new URLSearchParams({
                userid,
                tag
            })
        });
        el.dataset.tag_set = true;
        el.innerHTML = "X";
    }
    async removeInterest(el) {
        const userid = this.main.user.user.ID;
        const tag = el.dataset.tag;
        const url = this.main.acf.base + "/wp-json/csskiller/v1/add-interest/";
        await fetch(url, {
            method: "POST",
            body: new URLSearchParams({
                userid,
                tag,
                remove: true
            })
        });
        el.dataset.tag_set = false;
        el.innerHTML = "+";
    }
    async loadImages() {
        const paths = this.DOM.el.querySelectorAll("img");
        const promises = [];
        for (let path of paths)if (path.dataset.src) await this.loadImage(path);
    }
    async loadImage(elem) {
        return new Promise((resolve, reject)=>{
            let url = elem.dataset.src;
            elem.src = url;
            // //  console.log('eeee')
            elem.onload = ()=>{
                if (elem.naturalWidth < elem.naturalHeight) {
                    elem.parentNode.classList.add("portrait");
                    let el = document.createElement("div");
                    el.classList.add("bigger");
                    el.style.display = "none";
                    elem.parentNode.appendChild(el);
                }
                resolve(elem);
            };
            elem.onerror = reject;
        });
    }
    async getJson(url) {
        const posts = await fetch(url);
        const datap = await posts.json();
        this.html = _eta.render((0, _artEtaDefault.default), {
            global: this.main,
            posts: datap.posts
        });
        await this.ajaxImages();
    }
    async ajaxImages() {
        let newpage = document.createElement("template");
        newpage.innerHTML = this.html;
        let paths = Array.from(newpage.content.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        return Promise.resolve();
    }
    async getRandom(type, notin, postperpage) {
        this.DOM.holder = this.DOM.el.querySelector(".hPosts");
        Promise.all([
            this.timeout(600),
            this.getJson(this.main.acf.base + "/wp-json/wp/v2/getrandom?type=" + type + "&notin=" + notin + "&perpage=" + postperpage)
        ]).then(()=>{
            this.DOM.holder.innerHTML = this.html;
            this.emit("linkseventlisteners");
            this.emit("mousereset");
            this.resizeLimit();
        });
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            // //  console.log(this.anims[pos])
                            this.anims[pos].stick.active = 0;
                            this.movestick = null;
                        } else if (id == "v") clearInterval(this.clockInt);
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "e") {
                            this.anims[pos].classel.start();
                            this.slidetext = this.anims[pos];
                        } else if (id == "v") this.clockStart(this.anims[pos].el.parentNode.querySelector(".time"));
                        else if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.movestick = this.anims[pos];
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) super.smoothScroll();
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        await this.timeout(1);
        this.DOM.el.classList.add("home-active");
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        return super.hide();
    }
};

},{"../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./template.eta":"hgD1N","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","bundle-text:/src/views👁️👁️👁️/ETA/art.eta":"fEc25","bundle-text:/src/views👁️👁️👁️/404/noaccess.eta":"fWd4x","bundle-text:/src/views👁️👁️👁️/404/notlogged.eta":"7O6T1","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"hgD1N":[function(require,module,exports) {
module.exports = "<main class=\"articlesingle\">\n  <section class=\"m-bc\">\n    <div class=\"c-vw\">\n      <div class=\"bc\">\n        <% if(it.data.acf?.add_to_collective || it.data?.parent_data?.add_to_collective){ %>\n          <a class=\"mouseHover\" href=\"<%~ it.global.acf?.ch_home ?? '/content-hub' %>\">LC Hub</a>\n        <%  } else {%>\n          <a class=\"mouseHover\" href=\"<%~ it.global.acf.home %>\">LC</a>\n        <%  }%>\n        <span>/</span><a class=\"mouseHover\" href=\"<%~ it.global.acf.articles %>\">Articles</a>\n        <span>/</span><span><%~ it.data.title.rendered %></span>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-simpleintro\">\n    <div class=\"c-vw\">\n      <h2 class=\"tit1\"><%~ it.data.title.rendered %></h2>\n      <div class=\"m-simpleintro_info\">\n        <div class=\"date\"><%~ it.data.ownpost_data.date %></div>\n        <div class=\"autor\">\n        <% if(it.data.acf.authors_a){ %>\n        <p>by \n    <% it.data.acf.authors_a.forEach(function(p,key){ %>\n        <% if(key!=0){ %>\n        ,\n        <% \n        }\n        if(p.link){ %>\n        <a href=\"<%~ p.link %>\"><%~ p.name %></a>\n          <% }\n          else { %>\n            <%~ p.name %>\n          <% } %>\n        <% }) %>\n        </p>\n        <% } %>\n       \n        </div>\n      </div>\n    </div>\n  </section>\n    <% if(it.data.acf.tags){ %>\n   <section class=\"m-tags\">\n    \n    <% it.tags.forEach(function(p,key){ %>\n    <% const tag = p.title.toLowerCase().replace(' ', '-');%>\n    <% const tag_set = Object.values(it.global.user?.tags ?? {}).includes(tag) ? true : false ;%>\n    <div class=\"tag tag-add mouseHover\">\n      <% if(it.global.user){%>\n        <span class=\"tag-add-btn\" data-tag=\"<%~ tag %>\" data-tag_set=\"<%~ tag_set%>\"><%~ tag_set ? 'x' : '+'%></span>\n      <%}%>\n      <a class=\"mouseHover\" href=\"<%~ it.global.acf.base %>/<%~ tag%>\"><%~ p.title %></a>\n    </div>\n    \n    <% }) %>\n  </section>\n  <% } %>\n  <section class=\"articlesingle_main\">\n      <div class=\"grid wp\">\n        <%~ it.data.content.rendered %>\n      </div>\n    </section>\n    <section class=\"m-share\">\n      <div class=\"m-share_hold grid\">\n        <p>share</p>\n        <div class=\"social\">\n          <a class=\"mouseHover Stw\" href=\"https://twitter.com/intent/tweet?url=<%~ it.data.link %>\"><%~ it.global.icons.tw %></a>\n            <a class=\"mouseHover Sfb\" href=\"https://www.facebook.com/sharer/sharer.php?u=<%~ it.data.link %>\"><%~ it.global.icons.fb %></a>\n            <a class=\"mouseHover Sin\" href=\"https://www.linkedin.com/shareArticle?url=<%~ it.data.link %>\"><%~ it.global.icons.in %></a>\n            <a class=\"mouseHover Srd\" href=\"https://www.reddit.com/submit?url=<%~ it.data.link %>\"><%~ it.global.icons.reddit %></a>\n            <a class=\"mouseHover Stb\" href=\"https://www.tumblr.com/share/link?url=<%~ it.data.link %>\"><%~ it.global.icons.tumbler %></a>\n        </div>\n      </div>\n    </section>\n    <section class=\"articlesingle_more hPosts\">\n    </section>\n    <section class=\"m-cta signupmod\" style=\"--main:#DF80AC\">\n    <div class=\"c-vw\">\n      <div class=\"hold\">\n         <%\n          var randomNum = Math.floor((Math.random() * it.global.acf.signup_text.length) + 1);\n          var title = it.global.acf.signup_text[randomNum-1].title;\n          var text = it.global.acf.signup_text[randomNum-1].text;\n          \n        %>\n        <h2 class=\"tit1\"><%~ title %></h2>\n        <h3 class=\"tit4\"><%~ text %> </h3>\n        </h3>\n        <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\">\n          <div class=\"btn_t\">TAP IN</div>\n        </a>\n      </div>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>\n      ";

},{}],"fEc25":[function(require,module,exports) {
module.exports = "\n<% it.posts.forEach(function(p,key){ %>\n  <a class=\"art mouseHover\" href=\"<%~ p.link %>\" data-type=\"article\">\n    <div class=\"art_hold\">\n      <div class=\"art_image\">\n        <div class=\"btnmore btnmore-hovered\">\n          <div class=\"btnmore_t\">read more</div>\n        </div><img src=\"<%~ p.image %>\">\n      </div>\n      <div class=\"art_info\">\n        <h3 class=\"tit3\"><%~ p.title %></h3>\n        <% if(p.description!=null){ %>\n        <p class=\"desc\"><%~ p.description %></p>\n        <% } %>\n        <div class=\"date tit4\"><%~ p.date %></div>\n      </div>\n    </div>\n  </a>\n<% }) %>";

},{}],"fWd4x":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! YOU DON'T HAVE ACCESS TO THIS CONTENT</h2>\n<% /* <h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3> */ %>\n<% /* <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a> */ %>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"7O6T1":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! SIGN UP TO ACCESS THIS CONTENT</h2>\n<h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3>\n<a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"i1fEn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _tagEta = require("bundle-text:./tag.eta");
var _tagEtaDefault = parcelHelpers.interopDefault(_tagEta);
var _networkEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/network.eta");
var _networkEtaDefault = parcelHelpers.interopDefault(_networkEta);
var _podcastEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/podcast.eta");
var _podcastEtaDefault = parcelHelpers.interopDefault(_podcastEta);
var _tagEta1 = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/tag.eta");
var _tagEtaDefault1 = parcelHelpers.interopDefault(_tagEta1);
var _showEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/show.eta");
var _showEtaDefault = parcelHelpers.interopDefault(_showEta);
var _eta = require("eta");
var _dialog = require("../Login\uD83E\uDD78/LinkedinLogin/Dialog");
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        let html = "";
        this.template = content.dataset.template;
        this.main.title = content.dataset.title;
        this.tag_id = content.dataset.id;
        html = _eta.render((0, _tagEtaDefault.default), {
            global: this.main,
            footer: this.footer
        });
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)")
        };
        this.DOM.holder = this.DOM.el.querySelector(".hPosts");
        this.DOM.pages = this.DOM.el.querySelector(".pPosts");
        await this.getPosts(true, 0, 8, 1);
        // console.log(data)
        // console.log(html)
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
        this.DOM.addTagBtn = this.DOM.el.querySelector(".tag-add-btn");
        this.DOM?.addTagBtn?.addEventListener("click", ()=>this.setInterest(this.DOM.addTagBtn));
        await this.loadImages();
        await this.createAnimations();
    }
    async setInterest(el) {
        el.innerHTML = (0, _dialog.getLoadingWheel)();
        if (el.dataset.tag_set === "true") this.removeInterest(el);
        else this.addInterest(el);
    }
    async addInterest(el) {
        const userid = this.main.user.user.ID;
        const tag = el.dataset.tag;
        const url = this.main.acf.base + "/wp-json/csskiller/v1/add-interest/";
        await fetch(url, {
            method: "POST",
            body: new URLSearchParams({
                userid,
                tag
            })
        });
        el.dataset.tag_set = true;
        el.innerHTML = "Remove from interests";
    }
    async removeInterest(el) {
        const userid = this.main.user.user.ID;
        const tag = el.dataset.tag;
        const url = this.main.acf.base + "/wp-json/csskiller/v1/add-interest/";
        await fetch(url, {
            method: "POST",
            body: new URLSearchParams({
                userid,
                tag,
                remove: true
            })
        });
        el.dataset.tag_set = false;
        el.innerHTML = "Add to interests";
    }
    async ajaxImages() {
        let newpage = document.createElement("template");
        newpage.innerHTML = this.html;
        let paths = Array.from(newpage.content.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        return Promise.resolve();
    }
    async blocksClick(type) {
        this.DOM.holder.classList.add("load");
        await this.timeout(600);
        if (type == "block") this.DOM.holder.classList.add("blocks");
        else this.DOM.holder.classList.remove("blocks");
        this.DOM.holder.classList.remove("load");
        this.resizeLimit();
    }
    async getJson(url, isNew) {
        // console.log(url)
        const posts = await fetch(url);
        const datap = await posts.json();
        this.html = _eta.render((0, _tagEtaDefault1.default), {
            global: this.main,
            posts: datap.posts
        });
        this.DOM.holder.innerHTML = this.html;
        // this.ajaxImages()
        if (isNew == true) {
            this.actualpage = 1;
            this.max = datap.maxpages <= 8 ? datap.maxpages : 8;
        }
        await this.ajaxImages();
    }
    async getPosts(isNew, id, postperpage, page) {
        this.DOM.holder.classList.add("load");
        Promise.all([
            this.timeout(600),
            this.getJson(`${this.main.acf.base}/wp-json/wp/v2/getposts?type=${this.template}&tag_id=${this.tag_id}&parent=${id}&page=${page}&perpage=${postperpage}`, isNew)
        ]).then(()=>{
            this.DOM.holder.classList.remove("load");
            if (isNew == true && this.DOM.pages) {
                // console.log(this.max)
                for(let i = 1; i <= this.max; i++)if (i == page) this.DOM.pages.innerHTML += '<div class="pgel mouseHover act"><div class="pgel_t">' + i + "</div></div>";
                else this.DOM.pages.innerHTML += '<div class="pgel mouseHover"><div class="pgel_t">' + i + "</div></div>";
                this.DOM.pagsel = this.DOM.pages.querySelectorAll(".pgel");
                if (this.DOM.pagsel.length == 1) this.DOM.pages.classList.add("hide");
                for (let [index, el] of this.DOM.pagsel.entries())el.onclick = (event)=>{
                    this.getPosts(false, id, postperpage, index + 1);
                };
                if (this.DOM.el.querySelector(".sPosts")) for (let el1 of this.DOM.el.querySelectorAll(".sPosts .blockClick"))el1.onclick = (ev)=>{
                    this.DOM.el.querySelector(".blockClick.act").classList.remove("act");
                    el1.classList.add("act");
                    this.blocksClick(el1.dataset.type);
                };
            } else if (this.DOM.pages) {
                this.DOM.pagsel[this.actualpage - 1].classList.remove("act");
                this.actualpage = page;
                this.DOM.pagsel[this.actualpage - 1].classList.add("act");
            }
            this.emit("linkseventlisteners");
            this.emit("mousereset");
            this.resizeLimit();
        });
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            // console.log(this.anims[pos])
                            this.anims[pos].stick.active = 0;
                            this.movestick = null;
                        } else if (id == "v") clearInterval(this.clockInt);
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "e") {
                            this.anims[pos].classel.start();
                            this.slidetext = this.anims[pos];
                        } else if (id == "v") this.clockStart(this.anims[pos].el.parentNode.querySelector(".time"));
                        else if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.movestick = this.anims[pos];
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) super.smoothScroll();
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        this.timeout(1);
        // gsap.to('.home',{opacity:1,ease:Power2.easeInOut,duration:.6})
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        return super.hide();
    }
};

},{"../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./tag.eta":"Qoi56","bundle-text:/src/views👁️👁️👁️/ETA/network.eta":"b9LmI","bundle-text:/src/views👁️👁️👁️/ETA/podcast.eta":"7TzmC","bundle-text:/src/views👁️👁️👁️/ETA/tag.eta":"4BRx5","bundle-text:/src/views👁️👁️👁️/ETA/show.eta":"lI2vA","eta":"blnnU","../Login🥸/LinkedinLogin/Dialog":"8Lgst","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"Qoi56":[function(require,module,exports) {
module.exports = "<main class=\"artarchive\">\n  <section class=\"m-simpleintro\">\n    <div class=\"c-vw\">\n      <h2 class=\"tit1\"><%~ it.global.title %></h2>\n      <% const tag = it.global.title.toLowerCase().replace(' ', '-');%>\n      <% const tag_set = Object.values(it.global.user?.tags ?? {}).includes(tag) ? true : false ;%>\n      <% const label = tag_set ? \"Remove from interests\" : \"Add to interests\" ;%>\n      \n      <% if(it.global.user){%>\n        <div class=\"tag tag-add mouseHover\">\n          <span class=\"tag-add-btn\" data-tag=\"<%~ tag %>\" data-tag_set=\"<%~ tag_set%>\"><%~ label%></span>\n        </div>\n      <%}%>\n    </div>\n  </section>\n  <section class=\"m-arts\">\n    <div class=\"m-arts_hold holdarts hPosts c-vw\">\n    </div>\n    <div class=\"m-arts_pags c-vw pg pPosts\">\n    </div>\n  </section>\n  \n  <section class=\"m-cta signupmod\" style=\"--main:#DF80AC\">\n    <div class=\"c-vw\">\n      <div class=\"hold\">\n         <%\n          var randomNum = Math.floor((Math.random() * it.global.acf.signup_text.length) + 1);\n          var title = it.global.acf.signup_text[randomNum-1].title;\n          var text = it.global.acf.signup_text[randomNum-1].text;\n          \n        %>\n        <h2 class=\"tit1\"><%~ title %></h2>\n        <h3 class=\"tit4\"><%~ text %> </h3>\n        </h3>\n        <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\">\n          <div class=\"btn_t\">TAP IN</div>\n        </a>\n      </div>\n    </div>\n  </section>\n\n  \n  <section class=\"m-dual\">\n    <div class=\"left\">\n      \n      <%\n        var randomNum = Math.floor((Math.random() * it.global.acf.support_text.length) + 1);\n        var title = it.global.acf.support_text[randomNum-1].title;\n        var text = it.global.acf.support_text[randomNum-1].text;\n        \n      %>\n      <h2 class=\"tit1\"><%~ title %></h2>\n      <h3 class=\"tit4\"><%~ text %> </h3>\n      <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.support %>\" style=\"--main:#DF80AC\">\n        <div class=\"btn_t\">SUPPORT</div>\n      </a>\n    </div>\n    <div class=\"right\">\n      <div class=\"right_el\"><img src=\"<%~ it.global.acf.image_archive_article %>\"></div>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"b9LmI":[function(require,module,exports) {
module.exports = "\n<%\n  cont = 0\n   it.posts.forEach(function(p,key){\n  %>\n  <a class=\"network mouseHover\" href=\"<%~ p.link %>\" style=\"--main:<%~ p.color %>\">\n    <div class=\"network_hold\">\n      <div class=\"network_logo\"><img src=\"<%~ p.logo %>\"></div>\n    </div>\n    \n  </a>\n<% \n  if(cont==3){\n  cont=0\n  }\n  })\nif(cont != 0 ){\n  for(i=0;i<3-cont;i++){\n  %>\n    <div class=\"fake\"></div>\n\n  <%\n  }\n\n}\n%>";

},{}],"7TzmC":[function(require,module,exports) {
module.exports = "\n<% \n  cont = 0\n  it.posts.forEach(function(p,key){ %>\n  <a class=\"pod mouseHover\" href=\"<%~ p.link %>\" data-type=\"podcastdad\">\n    <div class=\"pod_image\">\n      <%~ it.global.icons.elipse %>\n      <div class=\"pod_image_hold\"><img src=\"<%~ p.image %>\"></div>\n    </div>\n    <div class=\"pod_info\">\n      <h3 class=\"tit4\"><%~ p.title %></h3>\n      <p><%~ p.sons %></p>\n    </div>\n  </a>\n<% \n  cont++\n  if(cont==3){\n  cont=0\n  }\n  })\nif(cont != 0 ){\n  for(i=0;i<3-cont;i++){\n  %>\n    <div class=\"fake\"></div>\n\n  <%\n  }\n\n}\n%>";

},{}],"4BRx5":[function(require,module,exports) {
module.exports = "\n<% it.posts.forEach(function(p,key){ %>\n  <a class=\"art mouseHover\" href=\"<%~ p.link %>\" data-type=\"article\">\n    <div class=\"art_hold\">\n      <div class=\"art_image\">\n        <div class=\"btnmore btnmore-hovered\">\n          <div class=\"btnmore_t\">read more</div>\n        </div><img src=\"<%~ p.image %>\">\n      </div>\n      <div class=\"art_info\">\n        <h3 class=\"tit3\"><%~ p.title %></h3>\n        <% if(p.description!=null){ %>\n        <p class=\"desc\"><%~ p.description %></p>\n        <% } %>\n        <div class=\"date tit4\"><%~ p.date %></div>\n      </div>\n    </div>\n  </a>\n<% }) %>";

},{}],"lI2vA":[function(require,module,exports) {
module.exports = "\n<% it.posts.forEach(function(p,key){ %>\n\n\n  <a class=\"showa mouseHover\" href=\"<%~ p.link %>\" data-type=\"showdad\">\n    <div class=\"showa_hold\">\n      <div class=\"showa_image\">\n        <img src=\"<%~ p.image %>\">\n        <div class=\"btn\">\n          <div class=\"btn_t\">Watch Show</div>\n        </div>\n      </div>\n    </div>\n  </a>\n<% })\n%>";

},{}],"8Lgst":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "showModal", ()=>showModal);
parcelHelpers.export(exports, "showMessage", ()=>showMessage);
parcelHelpers.export(exports, "getLoadingWheel", ()=>getLoadingWheel);
const className = ".li_dialog";
let btn = document.querySelector(`${className}__btn`);
const showModal = (titleTxt = "", messageTxt = "")=>{
    const modal = document.querySelector(className);
    const bg = modal.querySelector(`${className}__bg`);
    const body = modal.querySelector(`${className}__body`);
    const title = body.querySelector(`${className}__title`);
    const message = body.querySelector(`${className}__content p`);
    if (!btn) {
        btn = modal.querySelector(`${className}__btn`);
        btn.addEventListener("click", ()=>showModal());
    }
    if (titleTxt && messageTxt) {
        modal.style.display = "unset";
        title.innerHTML = titleTxt.toUpperCase();
        message.innerHTML = messageTxt.toUpperCase();
        setTimeout(()=>bg.style.opacity = 1.0, 50);
        setTimeout(()=>body.style.opacity = 1.0, 50);
    // setTimeout(showModal, 5000);
    } else {
        bg.style.opacity = 0;
        body.style.opacity = 0;
        setTimeout(()=>modal.style.display = "none", 350);
    }
};
const showMessage = (message, className = "logintab")=>{
    const errorNode = document.querySelector(`.${className} .error-3`);
    errorNode.innerHTML = message;
    errorNode.classList.add("act");
    setTimeout(()=>{
        errorNode.classList.remove("act");
    }, 3300);
};
const getLoadingWheel = ()=>{
    return '<div class="loading-wheel"><div></div><div></div><div></div><div></div></div>';
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"dKpTi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _audioLib = require("./audioLib");
var _audioLibDefault = parcelHelpers.interopDefault(_audioLib);
var _icons = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/icons\uD83D\uDD30");
var _iconsDefault = parcelHelpers.interopDefault(_icons);
var _notloggedEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/notlogged.eta");
var _notloggedEtaDefault = parcelHelpers.interopDefault(_notloggedEta);
var _discover = require("./Discover");
var _discoverDefault = parcelHelpers.interopDefault(_discover);
var _browse = require("./Browse");
var _browseDefault = parcelHelpers.interopDefault(_browse);
var _playlists = require("./Playlists");
var _playlistsDefault = parcelHelpers.interopDefault(_playlists);
var _playlistSingle = require("./Playlist Single");
var _playlistSingleDefault = parcelHelpers.interopDefault(_playlistSingle);
var _moduleSingle = require("./Module Single");
var _moduleSingleDefault = parcelHelpers.interopDefault(_moduleSingle);
var _likedPodcasts = require("./Liked_Podcasts");
var _likedPodcastsDefault = parcelHelpers.interopDefault(_likedPodcasts);
var _search = require("./Search");
var _searchDefault = parcelHelpers.interopDefault(_search);
var _newPlaylistEta = require("bundle-text:./Templates/Playlist/new-playlist.eta");
var _newPlaylistEtaDefault = parcelHelpers.interopDefault(_newPlaylistEta);
var _deleteConfirmationEta = require("bundle-text:./Templates/Playlist/delete-confirmation.eta");
var _deleteConfirmationEtaDefault = parcelHelpers.interopDefault(_deleteConfirmationEta);
var _noaccessEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/noaccess.eta");
var _noaccessEtaDefault = parcelHelpers.interopDefault(_noaccessEta);
var _eta = require("eta");
var _dialog = require("../Login\uD83E\uDD78/LinkedinLogin/Dialog");
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    async generate(content) {
        let html = "";
        this.template = content.dataset.template;
        this.playerPage = content.dataset.child || "discover";
        this.main.title = content.dataset.title;
        this.postid = content.dataset.postid;
        window.history.replaceState({
            ...window.history.state,
            postid: this.postid
        }, document.title, window.location.href);
        this.lsAvail = true;
        try {
            localStorage.getItem("sign_LC");
        } catch (_) {
            this.lsAvail = false;
        }
        this.state = {
            loop: this.lsAvail ? localStorage?.getItem("loop") === "true" : false,
            shuffle: this.lsAvail ? localStorage?.getItem("shuffle") === "true" : false,
            index: parseInt(this.lsAvail ? localStorage?.getItem("index") : 0),
            itemScrolling: "",
            playing: false,
            filters: {
                cats: [],
                tags: [],
                topics: []
            }
        };
        // get filters
        const filtersResp = await fetch("/wp-json/sdv/player/v1/get-filters");
        const filters = await filtersResp.json();
        this.main.banner_image = this.main.acf?.player_banner_image;
        // get branding
        let params = new URLSearchParams();
        let email = "";
        const page_params = new URLSearchParams(window.location.search);
        const isEmbed = page_params.get("isEmbed") != null;
        this.embed = isEmbed;
        if (this?.main?.user && !isEmbed) {
            email = this?.main?.user?.user?.data?.user_email;
            if (!this?.main?.user?.acf?.is_player_user) {
                html = _eta.render((0, _noaccessEtaDefault.default), {
                    global: this.main,
                    footer: this.footer
                });
                document.querySelector("#content").innerHTML += html;
                this.DOM = {
                    el: document.querySelector("main:not(.old)")
                };
                return;
            }
        }
        if (email) params.set("email", email);
        if (isEmbed) params.set("spId", page_params.get("spId"));
        const sponsorResp = await fetch(`/wp-json/sdv/player/v1/get-sponsor?${params}`);
        const sponsor = await sponsorResp.json();
        this.main.sponsor = sponsor;
        document.documentElement.classList.add("no-nav");
        if (isEmbed) {
            document.documentElement.classList.add("embed");
            document.documentElement.classList.remove("smooth");
            document.documentElement.classList.add("touch");
        } else if (!this.main.user) {
            // if(!(this.main.user || isEmbed)){
            html = _eta.render((0, _notloggedEtaDefault.default), {
                global: this.main,
                footer: this.footer
            });
            document.querySelector("#content").innerHTML += html;
            this.DOM = {
                el: document.querySelector("main:not(.old)")
            };
            return;
        }
        await this.getUserPlaylists();
        this.main.user = this.main.user || {};
        html = _eta.render((0, _templateEtaDefault.default), {
            global: this.main,
            footer: this.footer,
            filters,
            user_playlists: this.user_playlists
        });
        document.querySelector("#content").innerHTML += html;
        const seekbar = document.querySelector(".media-player__seek-bar");
        const volSlider = document.getElementById("volume-slider");
        this.loading = (0, _dialog.getLoadingWheel)();
        this.DOM = {
            el: document.querySelector("main:not(.old)"),
            player: document.getElementById("audio-player"),
            mediaPlayer: document.querySelector(".media-player"),
            // mobile banner player info
            mobile_image: document.querySelector(".media-player__image img"),
            banner_title: document.querySelector(".media-player__banner h3"),
            banner_byline: document.querySelector(".media-player__banner span"),
            banner_close: document.querySelector("#close-mp-btn"),
            // player info
            title: document.querySelector(".media-player__title h3"),
            byline: document.querySelector(".media-player__title span"),
            currTime: document.getElementById("curr-time"),
            endTime: document.getElementById("end-time"),
            // seekbar
            seekbar,
            seekProgress: seekbar.querySelector("#progress"),
            seekHandle: seekbar.querySelector("#handle"),
            // left buttons
            prevBtn: document.getElementById("prev-btn"),
            playBtn: document.getElementById("play-btn"),
            nextBtn: document.getElementById("next-btn"),
            loopBtn: document.getElementById("loop-btn"),
            shuffleBtn: document.getElementById("shuffle-btn"),
            volBtn: document.getElementById("volume-btn"),
            // volume controls
            volCtrl: document.getElementById("volume-control"),
            volSlider,
            volProgress: volSlider.querySelector("#volume-progress"),
            volHandle: volSlider.querySelector("#volume-handle"),
            // right buttons
            likeBtn: document.getElementById("like-btn"),
            shareBtn: document.getElementById("share-btn"),
            menuBtn: document.getElementById("menu-btn"),
            menuList: document.getElementById("menu-list"),
            snackbar: document.getElementById("snackbar"),
            content: document.querySelector(".player-page__content"),
            //search
            searchBars: document.querySelectorAll("#player-search-bar")
        };
        // // current playing playlist
        // this.playlist = [
        //   {
        //     title: "1",
        //     byline: "by test1",
        //     image: "",
        //     src: "https://download.samplelib.com/mp3/sample-15s.mp3",
        //     liked: true,
        //   },
        //   {
        //     title: "2",
        //     byline: "by test2",
        //     image: "",
        //     src: "https://download.samplelib.com/mp3/sample-15s.mp3",
        //     liked: false,
        //   },
        //   {
        //     title: "3",
        //     byline: "by test3",
        //     image: "",
        //     src: "https://download.samplelib.com/mp3/sample-15s.mp3",
        //     liked: false,
        //   },
        //   {
        //     title: "4",
        //     byline: "by test4",
        //     image: "",
        //     src: "https://download.samplelib.com/mp3/sample-15s.mp3",
        //     liked: true,
        //   },
        // ]
        this.updateButtons();
        if (this.state.shuffle) this.shuffledPlaylist = this.shufflePlaylist();
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
        await this.loadImages();
        await this.createAnimations();
        (0, _discoverDefault.default).init(this);
        (0, _browseDefault.default).init(this);
        (0, _playlistsDefault.default).init(this);
        (0, _likedPodcastsDefault.default).init(this);
        (0, _playlistSingleDefault.default).init(this);
        (0, _moduleSingleDefault.default).init(this);
        (0, _searchDefault.default).init(this);
        this.addEvents();
        (0, _audioLibDefault.default).init(this.DOM);
        if (!localStorage.getItem("playlist")) this.DOM.mediaPlayer?.classList.add("hidden");
        this.nextPlaylist = JSON.parse(localStorage.getItem("playlist")) ?? this.nextPlaylist;
    }
    addFiltersToParams(params) {
        const filters = this.state.filters;
        if (filters.cats.length > 0) params.set("cats", filters.cats.join(","));
        if (filters.tags.length > 0) params.set("tags", filters.tags.join("|"));
        if (filters.topics.length > 0) params.set("topics", filters.topics.join("|"));
        return params;
    }
    setBranding(icon, logo, banner, color) {
        // set icon
        const iconImg = document.querySelector(".player-header__profile-img img");
        if (iconImg && icon) iconImg.src = icon;
        // set logo
        const logoImg = document.querySelector(".player-header__logo img");
        if (logoImg && logo) logoImg.src = logo;
        // set banner
        const bannerImg = document.querySelector(".player-page__content-banner img");
        if (bannerImg && banner) {
            this.main.banner_image = banner;
            bannerImg.src = banner;
        }
        const bannerImgMobile = document.querySelector(".media-player__banner img");
        if (bannerImgMobile && icon) bannerImgMobile.src = icon;
        // set color
        if (color) document.getElementById("content")?.style?.setProperty("--brand-color", color);
    }
    // changeSponsor(sponsorObj = null) {
    //   const setBranding = this.setBranding;
    //   console.log(this.main.acf);
    //   if (sponsorObj === null) {
    //     // use global
    //     setBranding(this.main.acf?.player_brand_icon, this.main.acf?.player_brand_logo, this.main.acf?.player_banner_image, this.main.acf?.player_brand_color);
    //   } else if (sponsorObj?.sponsor) {
    //     // use playlist/module sponsor
    //     setBranding(sponsorObj.sponsor.icon, sponsorObj.sponsor.logo, sponsorObj.sponsor.banner, sponsorObj.sponsor.color);
    //   } else {
    //     // dont change
    //   }
    // }
    search(e) {
        const params = new URLSearchParams(window.location.search);
        const moduleFilterBtns = document.querySelectorAll(".player-page__filter-item--active");
        moduleFilterBtns.forEach((btn)=>{
            const actClass = "player-page__filter-item--active";
            btn.classList.remove(actClass);
        });
        params.delete("tax");
        this.state.filters = {
            cats: [],
            tags: [],
            topics: []
        };
        const searchTerm = e.target.value;
        if (!searchTerm) {
            this.lastload = (0, _discoverDefault.default).load;
            this.lastload();
            params.delete("term");
            return;
        }
        this.search_term = searchTerm.trim();
        this.search_term_tax = false;
        params.set("term", this.search_term);
        this.DOM.searchBars?.forEach((x)=>x.blur());
        window.history.pushState({
            "player_href": "search"
        }, document.title, `${this.main.acf.search_podcasts_page_link}?${params}`);
        this.lastload = (0, _searchDefault.default).load;
        this.lastload();
    }
    addLinkEvents() {
        const goBack = ()=>{
            if (window.history.state?.player_href && document.querySelector(".media-player")) {
                const link = window.history.state?.player_href;
                this.postid = window.history.state?.postid || this.postid;
                switch(link){
                    case "discover":
                        this.lastload = (0, _discoverDefault.default).load;
                        this.lastload();
                        break;
                    case "browse":
                        this.lastload = (0, _browseDefault.default).load;
                        this.lastload();
                        break;
                    case "playlists":
                        this.lastload = (0, _playlistsDefault.default).load;
                        this.lastload();
                        break;
                    case "playlist":
                        this.lastload = (0, _playlistSingleDefault.default).load;
                        this.lastload();
                        break;
                    case "module":
                        this.lastload = (0, _moduleSingleDefault.default).load;
                        this.lastload();
                        break;
                    case "liked-podcasts":
                        this.lastload = (0, _likedPodcastsDefault.default).load;
                        this.lastload();
                        break;
                    case "search":
                        this.lastload = (0, _searchDefault.default).load;
                        this.lastload();
                        break;
                    default:
                        break;
                }
            } else window.removeEventListener("popstate", goBack);
        };
        window.addEventListener("popstate", goBack);
        const changeLink = (elem)=>{
            if (elem.classList.contains("player-page-tab--active")) return;
            const link = elem.dataset.href;
            if (!link) return;
            let url;
            switch(link){
                case "discover":
                    this.lastload = (0, _discoverDefault.default).load;
                    this.lastload();
                    url = this.main.acf.discover_page_link;
                    break;
                case "browse":
                    this.lastload = (0, _browseDefault.default).load;
                    this.lastload();
                    url = this.main.acf.browse_page_link;
                    break;
                case "playlists":
                    this.lastload = (0, _playlistsDefault.default).load;
                    this.lastload();
                    url = this.main.acf.playlists_page_link;
                    break;
                case "liked-podcasts":
                    this.lastload = (0, _likedPodcastsDefault.default).load;
                    this.lastload();
                    url = this.main.acf.liked_podcasts_page_link;
                    break;
                case "create-playlist":
                    this.createPlaylist();
                    break;
                default:
                    break;
            }
            if (url) window.history.pushState({
                "player_href": link
            }, document.title, url);
        };
        document.querySelectorAll(".player-page__nav-link").forEach((x)=>x.addEventListener("click", ()=>changeLink(x)));
    }
    createPlaylist() {
        const playlists = document.querySelector(".player-page__nav-playlists");
        const html = _eta.render((0, _newPlaylistEtaDefault.default), {
            global: this.main,
            icons: (0, _iconsDefault.default)
        });
        const newPlElem = document.createElement("div");
        playlists.prepend(newPlElem);
        newPlElem.outerHTML = html;
        const newPlaylist = document.querySelector(".player-page__nav-new-playlist");
        const input = newPlaylist.querySelector("input");
        const text = newPlaylist.querySelector(".player-page-btn--text");
        const shareicon = newPlaylist.querySelector(".player-page-btn--icon");
        const close = newPlaylist.querySelector("#close-icon");
        input.focus();
        const create2 = (e)=>{
            if (e.code == "Enter") create();
        };
        const create = async ()=>{
            close.removeEventListener("mousedown", create);
            input.removeEventListener("blur", create);
            input.removeEventListener("keydown", create2);
            if (!newPlaylist) return;
            newPlaylist.classList.remove("player-page__nav-new-playlist");
            newPlaylist.classList.remove("pl-adding");
            let name = input.value;
            shareicon.style.display = null;
            const params = new URLSearchParams();
            params.set("userid", this.main.user?.user?.ID);
            params.set("name", name);
            const url = `/wp-json/sdv/player/v1/create-user-playlist?${params}`;
            const resp = await fetch(url, {
                method: "POST"
            });
            const [num, upid] = await resp.json();
            if (num === "unauthorized") newPlaylist.remove();
            else if (!name) name = `Custom Playlist #${num + 1}`;
            text.innerHTML = name;
            newPlaylist.id = `playlist_${num}`;
            newPlaylist.dataset.href = `/playlist/?upid=${upid}`;
            shareicon.addEventListener("click", (e)=>this.shareUserPlaylist(e, shareicon));
            newPlaylist.addEventListener("click", ()=>this.clickUserPlaylist(newPlaylist));
            //add to playlist menu
            this.DOM.menuList.innerHTML = `<li id="playlist_${num}-add">${name}</li>` + this.DOM.menuList.innerHTML;
            close.removeEventListener("mousedown", create);
            this.refreshPlaylistPage();
        };
        close.addEventListener("mousedown", create);
        input.addEventListener("blur", create);
        input.addEventListener("keydown", create2);
    }
    async addToPlaylist(e, id) {
        if (e.target?.id?.startsWith("playlist_")) {
            const params = new URLSearchParams();
            id = id || this.currentPodcast().id;
            params.set("userid", this.main.user?.user?.ID);
            params.set("playlist_key", e.target.id.split("-")[0]);
            params.set("podcast_id", id);
            const url = `/wp-json/sdv/player/v1/add-to-user-playlist?${params}`;
            const resp = await fetch(url, {
                method: "POST"
            });
            if (await resp.json() === true) {
                this.showSnackbar("Added to playlist");
                this.refreshPlaylistPage();
            }
        }
    }
    async removeFromPlaylist(upid, id) {
        if (!upid || !id) return;
        const params = new URLSearchParams();
        const elm = document.querySelector(`[data-href="/playlist/?upid=${upid}"]`);
        params.set("userid", this.main.user?.user?.ID);
        params.set("playlist_key", elm?.id.split("-")[0]);
        params.set("podcast_id", id);
        const url = `/wp-json/sdv/player/v1/remove-from-user-playlist?${params}`;
        const resp = await fetch(url, {
            method: "POST"
        });
        if (await resp.json() === true) {
            this.showSnackbar("Removed from playlist");
            this.refreshPlaylistPage();
        }
    }
    refreshPlaylistPage() {
        if (document.querySelector(".player-page-tab--active")?.dataset.href === "playlists") {
            this.lastload = (0, _playlistsDefault.default).load;
            this.lastload();
        } else if (window.location.href.includes("playlist")) this.lastload();
    }
    isSinglePlaylist() {
        return this.DOM?.mediaPlayer?.classList.contains("single-playlist");
    }
    mpNav() {
        const menuBtn = document.querySelector(".nav_burger-mp-mobile");
        const searchBtn = document.querySelector(".nav_search-mp-mobile");
        const menuElem = document.querySelector(".player-page__nav-mobile");
        const searchElem = document.querySelector(".player-header__search-mobile");
        const showSearch = ()=>{
            menuElem?.classList.remove("active");
            searchElem?.classList.toggle("active");
        };
        const showMenu = ()=>{
            searchElem?.classList.remove("active");
            menuElem?.classList.toggle("active");
        };
        menuBtn?.removeEventListener("click", showMenu);
        searchBtn?.removeEventListener("click", showSearch);
        menuBtn?.addEventListener("click", showMenu);
        searchBtn?.addEventListener("click", showSearch);
    }
    addEvents() {
        this.addLinkEvents();
        this.DOM.playBtn.addEventListener("click", (e)=>{
            e?.stopPropagation();
            (0, _audioLibDefault.default).play();
        });
        this.DOM.loopBtn.addEventListener("click", this.loop);
        this.DOM.shuffleBtn.addEventListener("click", this.shuffle);
        this.DOM.seekbar.addEventListener("click", (0, _audioLibDefault.default).seekOnBar);
        this.DOM.prevBtn.addEventListener("click", this.prev);
        this.DOM.nextBtn.addEventListener("click", this.next);
        this.DOM.player.addEventListener("ended", this.replay);
        this.DOM.volBtn.addEventListener("click", this.toggleVolControls);
        this.DOM.volSlider.addEventListener("click", (0, _audioLibDefault.default).volumeOnBar);
        this.DOM.volCtrl.addEventListener("click", (e)=>e.stopPropagation());
        this.DOM.volHandle.addEventListener("mousemove", this.volumeHandle);
        this.DOM.likeBtn.addEventListener("click", (e)=>this.like());
        this.DOM.shareBtn.addEventListener("click", ()=>this.share(false, true));
        this.DOM.menuBtn.addEventListener("click", this.togglePlaylistMenu);
        this.DOM.menuList.addEventListener("click", this.addToPlaylist);
        this.regUserPlaylistClick();
        this.mpNav();
        this.DOM.seekHandle.addEventListener("mousemove", this.seekHandle);
        this.DOM.seekHandle.addEventListener("mousedown", ()=>{
            this.updateState({
                playing: !this.DOM.player.paused
            });
            if (this.state.playing) (0, _audioLibDefault.default).play();
        });
        document.addEventListener("mousemove", this.docSliderHandler);
        document.addEventListener("mouseup", ()=>{
            if (this.state.playing) {
                (0, _audioLibDefault.default).play();
                this.updateState({
                    playing: false
                });
            }
        });
        // search
        this.DOM.searchBars?.forEach((x)=>x.addEventListener("keydown", (e)=>{
                if (e.code == "Enter") this.search(e);
            }));
        //share user playlist
        document.querySelectorAll(".share-user-pl-btn").forEach((btn)=>btn.addEventListener("click", (e)=>this.shareUserPlaylist(e, btn)));
        //tags/cats/topics
        document.querySelectorAll(".player-page__filters:not(.player-page__filters--modules) .player-page__filter-item").forEach(this.setupFilters);
        this.expandPlayer = ()=>{
            if (this.DOM.mediaPlayer.classList.contains("media-player--active")) return;
            this.DOM.mediaPlayer.style.transform = "translateY(100%)";
            setTimeout(()=>{
                this.DOM.mediaPlayer.style.transform = "translateY(0%)";
                this.DOM.mediaPlayer?.classList.add("media-player--active");
            }, 250);
        };
        this.collapsePlayer = ()=>{
            this.DOM.mediaPlayer.style.transform = "translateY(100%)";
            setTimeout(()=>{
                this.DOM.mediaPlayer.style.transform = "translateY(0%)";
                this.DOM.mediaPlayer?.classList.remove("media-player--active");
            }, 250);
        };
        const isMobile = document.documentElement.classList.contains("touch");
        const isEmbedPlaylist = document.querySelector("html.embed #content[data-child=playlist]");
        if (isMobile && !isEmbedPlaylist) {
            this.DOM.mediaPlayer.addEventListener("click", this.expandPlayer);
            this.DOM.banner_close.addEventListener("click", (e)=>{
                e?.stopPropagation();
                this.collapsePlayer();
            });
            document.addEventListener("popstate", this.collapsePlayer);
        }
    }
    shareUserPlaylist(e, btn) {
        // this is now the menu
        const menu = btn.parentElement.querySelector(".mp-dropmenu");
        const editPlaylist = (playlist)=>{
            playlist.classList.add("pl-adding");
            const close = playlist.querySelector("#close-icon");
            const input = playlist.querySelector("input");
            const text = playlist.querySelector(".player-page-btn--text");
            const save2 = (e)=>{
                if (e.code == "Enter") save();
            };
            const save = async ()=>{
                close?.removeEventListener("mousedown", save);
                input?.removeEventListener("blur", save);
                input?.removeEventListener("keydown", save2);
                if (!playlist) return;
                const pl_id = playlist.id;
                playlist.classList.remove("pl-adding");
                let name = input.value;
                if (!name || text.innerHTML === name) return;
                const params = new URLSearchParams();
                params.set("userid", this.main.user?.user?.ID);
                params.set("playlist_key", pl_id);
                params.set("name", name);
                text.innerHTML = "Saving...";
                const url = `/wp-json/sdv/player/v1/edit-user-playlist?${params}`;
                const resp = await fetch(url, {
                    method: "POST"
                });
                const res = await resp.json();
                if (res === "unauthorized") return;
                const addToPl = document.getElementById("menu-list").querySelector(`#${pl_id}-add`);
                if (addToPl) addToPl.innerHTML = name;
                text.innerHTML = name;
                this.refreshPlaylistPage();
            };
            close.addEventListener("mousedown", save);
            input.addEventListener("blur", save);
            input.addEventListener("keydown", save2);
            setTimeout(()=>input.focus(), 500);
        };
        const deletePlaylist = (playlist)=>{
            // show popup
            const html = _eta.render((0, _deleteConfirmationEtaDefault.default), {
                name: playlist.querySelector(".player-page-btn--text")?.innerHTML
            });
            let dialog = document.createElement("div");
            document.body.append(dialog);
            dialog.outerHTML = html;
            const dialog_bg = document.getElementById("delete-conf-dialog-background");
            dialog = document.getElementById("delete-conf-dialog");
            const closeDialog = ()=>{
                dialog.remove();
                dialog_bg.remove();
            };
            const confirmDelete = async ()=>{
                if (!playlist) return;
                const pl_id = playlist.id;
                // remove playlist
                if (window.location.pathname + window.location.search === playlist.dataset.href) document.getElementById("playlists-link").click();
                document.getElementById("menu-list").querySelector(`#${pl_id}-add`)?.remove();
                playlist.remove();
                // delete request
                const params = new URLSearchParams();
                params.set("userid", this.main.user?.user?.ID);
                params.set("playlist_key", pl_id);
                const url = `/wp-json/sdv/player/v1/delete-user-playlist?${params}`;
                closeDialog();
                const resp = await fetch(url, {
                    method: "POST"
                });
                const res = await resp.json();
                if (res === "unauthorized") return;
                this.refreshPlaylistPage();
            };
            const cancel_btn = dialog.querySelector("#cancel-conf-btn");
            cancel_btn.addEventListener("click", closeDialog);
            dialog_bg.addEventListener("click", closeDialog);
            const del_btn = dialog.querySelector("#delete-conf-btn");
            del_btn.addEventListener("click", confirmDelete);
        };
        if (!menu.dataset.events) {
            menu.dataset.events = true;
            const editBtn = menu.querySelector("#edit-playlist-name");
            editBtn.addEventListener("click", ()=>editPlaylist(btn.parentElement));
            const deleteBtn = menu.querySelector("#delete-this-playlist");
            deleteBtn.addEventListener("click", ()=>deletePlaylist(btn.parentElement));
            const shareBtn = menu.querySelector("#share-this-playlist");
            shareBtn.addEventListener("click", ()=>this.share(window.location.origin + btn.parentElement.dataset.href, true));
        }
        const hideMenu = ()=>{
            menu.style.display = "none";
            document.removeEventListener("click", hideMenu);
        };
        if (menu.style.display === "unset") {
            menu.style.display = "none";
            menu.classList.remove("stickout");
            //  console.log('hide');
            document.removeEventListener("click", hideMenu);
        } else {
            document.querySelectorAll(".mp-menu, .mp-dropmenu, .mp-removemenu")?.forEach((el)=>el.style.display = "none");
            menu.style.display = "unset";
            menu.classList.add("stickout");
            //  console.log('show');
            document.addEventListener("click", hideMenu);
            e?.stopPropagation();
        }
    // this.share(window.location.origin + btn.parentElement.dataset.href, true);
    }
    currentPodcast() {
        const index = this.state.index;
        const playlist = this.state.shuffle ? this.shuffledPlaylist : this.playlist;
        return playlist[index];
    }
    togglePlaylistMenu(e, forceHide = false) {
        const menuList = this.DOM.menuList;
        const menuBtn = this.DOM.menuBtn;
        if (forceHide || menuList.style.display === "block") {
            menuList.style.display = "none";
            menuBtn.classList.add("mp-btn");
            document.removeEventListener("click", this.togglePlaylistMenu);
        } else {
            document.querySelectorAll(".mp-menu, .mp-dropmenu, .mp-removemenu")?.forEach((el)=>el.style.display = "none");
            menuList.style.display = "block";
            menuBtn.classList.remove("mp-btn");
            document.addEventListener("click", ()=>this.togglePlaylistMenu(e, true));
            e?.stopPropagation();
        }
    }
    async getUserPlaylists() {
        const params = new URLSearchParams();
        params.set("userid", this.main.user?.user?.ID);
        //  console.log(this.main.user?.user);
        const url = `/wp-json/sdv/player/v1/get-user-playlists?${params}`;
        const resp = await fetch(url);
        this.user_playlists = await resp.json();
    }
    async playPlaylist(id, ismodule = false) {
        if (!id && !ismodule) return;
        //  console.log('id, ismodule');
        //  console.log(id, ismodule);
        const params = new URLSearchParams();
        params.set("userid", this.main.user?.user?.ID);
        params.set("id", id);
        const url = `/wp-json/sdv/player/v1/get-playlist?${params}`;
        let playlist = this.nextPlaylist;
        this.nextPlaylist = [];
        if (!ismodule) {
            const resp = await fetch(url);
            const respJson = await resp.json();
            playlist = respJson?.modules;
        }
        this.playlist = [];
        if (playlist) for (const module of playlist){
            const podcast = {
                title: module.title || module.post_title,
                byline: module.byline,
                image: module.image || module.img,
                src: module.src,
                id: module.id || module.ID,
                liked: module.liked,
                link: module.link,
                img: module.img
            };
            this.playlist.push(podcast);
        }
        this.updateState({
            index: 0
        });
        if (this.state.shuffle) this.shuffledPlaylist = this.shufflePlaylist();
        this.load(this.playlist[0]);
    }
    regModuleClick() {
        document.querySelectorAll(".p-m").forEach((module)=>{
            module.addEventListener("click", (e)=>{
                //  console.log('opening module page');
                this.postid = module.dataset.id;
                window.history.pushState({
                    "player_href": "module",
                    postid: this.postid
                }, document.title, module.dataset.href);
                this.lastload = (0, _moduleSingleDefault.default).load;
                this.lastload();
            });
        });
    }
    regUserPlaylistClick() {
        document.querySelectorAll(".player-page__nav-playlists span.mouseHover").forEach((pl)=>{
            pl.querySelector("input").addEventListener("click", (e)=>e.stopPropagation());
            this.clickUserPlaylist(pl);
        });
    }
    clickUserPlaylist(playlist) {
        let clickCount = 0;
        const showPlaylist = (playlist)=>{
            //  console.log('opening playlist page');
            window.history.pushState({
                "player_href": "playlist"
            }, document.title, playlist.dataset.href);
            this.lastload = (0, _playlistSingleDefault.default).load;
            this.lastload();
        };
        playlist.addEventListener("mousedown", (e)=>{
            if ([
                "svg",
                "path",
                "ul",
                "li"
            ].includes(e.target.tagName.toLowerCase()) || e.target.id === "share-icon") //  console.log(e.target);
            return;
            showPlaylist(playlist);
        // clickCount++;
        // if (("which" in e && e.which == 3) || ("button" in e && e.button == 2)) {
        //  console.log('right click');
        //   editPlaylist(playlist); // right-click
        //   clickCount = 0;
        // }
        // else if (clickCount === 1) {
        //   setTimeout(() => {
        //     if (clickCount === 1) showPlaylist(playlist); // single-click
        //     else if (clickCount === 2) editPlaylist(playlist); // double-click
        //     clickCount = 0;
        //   }, 300);
        // }
        });
    }
    regPlaylistClick() {
        document.querySelectorAll(".player-playlist").forEach((playlist)=>{
            playlist.addEventListener("click", (e)=>{
                //  console.log('opening playlist page');
                this.postid = playlist.dataset.id;
                window.history.pushState({
                    "player_href": "playlist",
                    postid: this.postid
                }, document.title, playlist.dataset.href);
                this.lastload = (0, _playlistSingleDefault.default).load;
                this.lastload();
            });
        });
    }
    regModuleFilters(module) {
        const genFilterElem = (filters, filter, type, i)=>{
            const filterElem = document.createElement("span");
            filterElem.id = `${type}-${i}`;
            filterElem.dataset.id = filter.id;
            filterElem.dataset.type = type;
            filterElem.classList.add("player-page__filter-item");
            filterElem.classList.add("mouseHover");
            filterElem.innerHTML = filter.name;
            filters.appendChild(filterElem);
        };
        // add cats
        const cats = document.querySelector(".player-page__filter-items--cats");
        cats.innerHTML = "";
        if (module?.cats) module?.cats?.map((x)=>new Object({
                id: x.term_id,
                name: x.name
            }))?.forEach((cat, i)=>genFilterElem(cats, cat, "cat", i));
        // add tags
        const tags = document.querySelector(".player-page__filter-items--tags");
        tags.innerHTML = "";
        if (module?.tags) module?.tags?.map((x)=>new Object({
                id: x.ID,
                name: x.post_title
            }))?.forEach((tag, i)=>genFilterElem(tags, tag, "tag", i));
        // add topics
        const topics = document.querySelector(".player-page__filter-items--topics");
        topics.innerHTML = "";
        if (module?.topics) module?.topics?.map((x)=>new Object({
                id: x.ID,
                name: x.post_title
            }))?.forEach((topic, i)=>genFilterElem(topics, topic, "topic", i));
        const moduleFilterBtns = document.querySelectorAll(".player-page__filters--modules .player-page__filter-item");
        moduleFilterBtns.forEach((btn)=>{
            btn.addEventListener("click", (e)=>{
                this.search_term = btn.innerText;
                this.search_term_tax = btn.dataset.type;
                const params = new URLSearchParams(window.location.search);
                params.set("term", this.search_term);
                params.set("tax", this.search_term_tax);
                this.DOM.searchBars?.forEach((x)=>{
                    x.value = "";
                    x.blur();
                });
                // clear selected cats
                const actClass = "player-page__filter-item--active";
                document.querySelectorAll(`.${actClass}`).forEach((filter)=>filter.classList.remove(actClass));
                this.state.filters = {
                    cats: [],
                    tags: [],
                    topics: []
                };
                window.history.pushState({
                    "player_href": "search"
                }, document.title, `${this.main.acf.search_podcasts_page_link}?${params}`);
                this.lastload = (0, _searchDefault.default).load;
                this.lastload();
            });
        });
    }
    regModuleButtons() {
        const playBtns = document.querySelectorAll(".module-play-btn");
        const likeBtns = document.querySelectorAll(".module-like-btn");
        const menuBtns = document.querySelectorAll(".module-menu-btn");
        const menuRemoveBtns = document.querySelectorAll(".module-remove-menu-btn");
        const menuDetailBtns = document.querySelectorAll(".module-detail-menu-btn");
        const readTranscriptBtn = document.querySelector(".module-read-transcript");
        readTranscriptBtn?.addEventListener("click", (e)=>{
            const transcript = document.querySelector(".player-module-page__transcript");
            transcript.classList.add("expanded-transcript");
        });
        playBtns.forEach((btn)=>{
            btn.addEventListener("click", async (e)=>{
                e?.stopPropagation();
                const parent = btn.parentElement;
                if (btn.dataset.fetch) {
                    const params = new URLSearchParams();
                    params.set("userid", this.main.user?.user?.ID);
                    params.set("id", parent.dataset.id || 0);
                    const url = `/wp-json/sdv/player/v1/get-module?${params}`;
                    const postsResp = await fetch(url);
                    const module = await postsResp.json();
                    this.nextPlaylist = [
                        module
                    ];
                }
                this.playPlaylist(parent.dataset.id, true);
            });
        });
        likeBtns.forEach((btn)=>{
            btn.addEventListener("click", async (e)=>{
                e?.stopPropagation();
                const parent = btn.parentElement;
                const liked = parent.dataset.liked === "true";
                this.updateLikeButton({
                    liked: !liked
                }, btn);
                if (this.currentPodcast().id == parent.dataset.id) {
                    this.currentPodcast().liked = !liked;
                    this.updateLikeButton(this.currentPodcast());
                }
                parent.dataset.liked = await this.like(parent.dataset.id, liked);
            });
        });
        menuBtns.forEach((btn)=>{
            btn.addEventListener("click", (e)=>{
                e?.stopPropagation();
                const parent = btn.parentElement;
                const currMenu = parent.querySelector(".mp-menu");
                const hideMenu = ()=>{
                    const currMenu = parent.querySelector(".mp-menu")?.remove();
                    if (currMenu) currMenu.remove();
                    document.removeEventListener("click", hideMenu);
                };
                if (currMenu) {
                    currMenu.remove();
                    document.removeEventListener("click", hideMenu);
                    return;
                }
                document.querySelectorAll(".mp-menu, .mp-dropmenu, .mp-removemenu")?.forEach((el)=>el.style.display = "none");
                document.addEventListener("click", hideMenu);
                // duplicate menu list
                const newList = document.getElementById("menu-list").cloneNode(true);
                newList.id = "";
                newList.style.display = "block";
                // attach to menu btn
                btn.appendChild(newList);
                // attach events
                newList.addEventListener("click", (e)=>this.addToPlaylist(e, parent.dataset.id));
            });
        });
        menuRemoveBtns.forEach((btn)=>{
            btn.addEventListener("click", (e)=>{
                e?.stopPropagation();
                const module = btn.parentElement;
                const menu = module.querySelector(".mp-removemenu");
                const hideMenu = ()=>{
                    menu.style.display = "none";
                    document.removeEventListener("click", hideMenu);
                };
                if (!menu.dataset.events) {
                    menu.dataset.events = true;
                    const cancel_btn = menu.querySelector("#cancel-from-playlist");
                    cancel_btn.addEventListener("click", (e)=>{
                        hideMenu();
                        e?.stopPropagation();
                    });
                    const remove_btn = menu.querySelector("#remove-from-playlist");
                    remove_btn.addEventListener("click", (e)=>{
                        hideMenu();
                        const params = new URLSearchParams(window.location.search);
                        const upid = params.get("upid");
                        this.removeFromPlaylist(upid, module.dataset.id);
                        e?.stopPropagation();
                    });
                }
                if (menu.style.display === "unset") {
                    menu.style.display = "none";
                    menu.classList.remove("stickout");
                    document.removeEventListener("click", hideMenu);
                } else {
                    document.querySelectorAll(".mp-menu, .mp-dropmenu, .mp-removemenu")?.forEach((el)=>el.style.display = "none");
                    menu.style.display = "unset";
                    menu.classList.add("stickout");
                    document.addEventListener("click", hideMenu);
                }
            });
        });
        menuDetailBtns.forEach((btn)=>{
            btn.addEventListener("click", (e)=>{
                e?.stopPropagation();
                const module = btn.parentElement;
                const detail = module.querySelector(".mp-detailmenu");
                const hideMenu = ()=>{
                    module.style.height = "unset";
                    detail.style.display = "none";
                    module.classList.remove("show-detail");
                };
                if (detail.style.display === "block") {
                    hideMenu();
                    document.removeEventListener("click", hideMenu);
                } else {
                    module.style.height = "auto";
                    detail.style.display = "block";
                    module.classList.add("show-detail");
                    document.removeEventListener("click", hideMenu);
                }
            });
        });
    }
    setupFilters(x) {
        x.addEventListener("click", async ()=>{
            // const params = new URLSearchParams(window.location.search);
            // params.set('term', '');
            // this.search_term = '';
            // this.DOM.searchBars?.forEach((x)=>{x.value = '';});
            const classname = "player-page__filter-item--active";
            let key;
            if (x.id.includes("cat")) key = "cats";
            if (x.id.includes("tag")) key = "tags";
            if (x.id.includes("topic")) key = "topics";
            const filterArr = this.state.filters[key];
            if (x.classList.contains(classname)) {
                x.classList.remove(classname);
                let index = filterArr.indexOf(x.dataset.id);
                if (index !== -1) filterArr.splice(index, 1);
            } else {
                x.classList.add(classname);
                filterArr.push(x.dataset.id);
            }
            // clearTimeout(this.filterChanged);
            this.lastload();
        // this.filterChanged = setTimeout(() => snackbar.classList.remove("snackbar--visible"), 2500);
        });
    }
    docSliderHandler(e) {
        if (e.buttons == 1) switch(this.state.itemScrolling){
            case "volume":
                this.volumeHandle(e);
                break;
            case "seek":
                this.seekHandle(e);
                break;
            default:
                break;
        }
        else this.updateState({
            itemScrolling: ""
        });
    }
    volumeHandle(e) {
        e.preventDefault();
        if (e.buttons == 1) {
            const y = this.DOM.volSlider.getBoundingClientRect().bottom - e.pageY;
            const height = this.DOM.volSlider.clientHeight;
            let percent = y / height;
            percent = percent <= 1 ? percent : 1;
            percent = percent >= 0 ? percent : 0;
            (0, _audioLibDefault.default).volumeOnHandle(percent);
            this.updateState({
                itemScrolling: "volume"
            });
        }
    }
    seekHandle(e) {
        e.preventDefault();
        if (e.buttons == 1) {
            const x = e.pageX - this.DOM.seekbar.offsetLeft;
            const width = this.DOM.seekbar.clientWidth;
            let percent = x / width;
            percent = percent <= 1 ? percent : 1;
            percent = percent >= 0 ? percent : 0;
            (0, _audioLibDefault.default).seekOnHandle(percent);
            this.updateState({
                itemScrolling: "seek"
            });
        }
    }
    // volume
    toggleVolControls(e, forceHide = false) {
        const volCtrl = this.DOM.volCtrl;
        const volBtn = this.DOM.volBtn;
        if (forceHide || volCtrl.style.display === "block") {
            volCtrl.style.display = "none";
            volBtn.classList.add("mp-btn");
            document.removeEventListener("click", this.toggleVolControls);
        } else {
            volCtrl.style.display = "block";
            volBtn.classList.remove("mp-btn");
            document.addEventListener("click", this.toggleVolControls);
            e?.stopPropagation();
        }
    }
    async like(id, liked = false) {
        const index = this.state.index;
        let podcast;
        const params = new URLSearchParams();
        params.set("userid", this.main.user?.user?.ID);
        if (!id) {
            podcast = this.playlist[index];
            id = podcast.id;
            liked = podcast.liked;
            podcast.liked = !podcast.liked;
            this.updateLikeButton(podcast);
        }
        params.set("podcast_id", id);
        params.set("remove", liked);
        const url = `/wp-json/sdv/player/v1/like-podcast?${params}`;
        await fetch(url, {
            method: "POST"
        });
        return !liked;
    }
    share(link, embed) {
        // if(!link && this.isSinglePlaylist()) return;
        link = link || this.currentPodcast().link;
        let copy = link;
        if (embed) {
            const params = new URLSearchParams();
            params.set("isEmbed", true);
            params.set("spId", this.main?.sponsor?.id ?? 0);
            params.set("cache", Math.random());
            link += link.at(-1) == "/" ? "?" : "&";
            link += `${params}`;
            copy = `<iframe src="${link}" height="812" width="375"></iframe>`;
        }
        // copy to clipboard
        if (navigator?.clipboard) navigator?.clipboard?.writeText(copy);
        // else console.log('copied: ' + link);
        const type = embed ? "Iframe" : "link";
        const shareMsg = this.main.acf?.share_message ?? `${type} copied to clipboard`;
        this.showSnackbar(shareMsg);
    }
    updateButtons() {
        const loop = this.state.loop;
        const loopBtn = this.DOM.loopBtn;
        if (loop) loopBtn.classList.add("mp-btn--active");
        else loopBtn.classList.remove("mp-btn--active");
        const shuffle = this.state.shuffle;
        const shuffleBtn = this.DOM.shuffleBtn;
        if (shuffle) shuffleBtn.classList.add("mp-btn--active");
        else shuffleBtn.classList.remove("mp-btn--active");
    }
    updateLikeButton({ liked  }, btn) {
        const likeBtn = btn || this.DOM.likeBtn;
        if (liked) {
            likeBtn.innerHTML = (0, _iconsDefault.default).heart_filled;
            likeBtn.classList.add("heart--filled");
        } else {
            likeBtn.innerHTML = (0, _iconsDefault.default).heart;
            likeBtn.classList.remove("heart--filled");
        }
    }
    // snackbar
    showSnackbar(message) {
        const snackbar = this.DOM.snackbar;
        clearTimeout(this.snackbarShowing);
        snackbar.style.display = "unset";
        setTimeout(()=>{
            if (message) snackbar.innerHTML = message;
            snackbar.classList.add("snackbar--visible");
            this.snackbarShowing = setTimeout(()=>snackbar.classList.remove("snackbar--visible"), 3000);
            setTimeout(()=>snackbar.style.display = "none", 3500);
        }, 100);
    }
    // audio
    replay() {
        if (this.state.loop) (0, _audioLibDefault.default).play();
        else this.next();
    }
    load(podcast) {
        this.DOM.mediaPlayer.style.height = null;
        setTimeout(()=>this.DOM.mediaPlayer.style.overflow = "unset", 500);
        (0, _audioLibDefault.default).load(podcast, this.playlist, this.state.index);
        this.DOM.mobile_image.src = podcast.img;
        this.DOM.banner_title.innerHTML = podcast.title;
        this.DOM.banner_byline.innerHTML = podcast.byline;
        this.DOM.title.innerHTML = podcast.title;
        this.DOM.byline.innerHTML = podcast.byline;
        this.updateLikeButton(podcast);
        if (this.embed) (0, _audioLibDefault.default).play();
    }
    prev(e) {
        e?.stopPropagation();
        const index = this.state.index;
        const playlist = this.state.shuffle ? this.shuffledPlaylist : this.playlist;
        const prevIndex = (index + playlist.length - 1) % playlist.length;
        const podcast = playlist[prevIndex];
        this.load(podcast);
        this.updateState({
            index: prevIndex
        });
    }
    next(e) {
        e?.stopPropagation();
        if (this.isSinglePlaylist()) return;
        const index = this.state.index;
        const playlist = this.state.shuffle ? this.shuffledPlaylist : this.playlist;
        const nextIndex = (index + 1) % playlist.length;
        const podcast = playlist[nextIndex];
        this.load(podcast);
        this.updateState({
            index: nextIndex
        });
    }
    loop() {
        if (this.isSinglePlaylist()) return;
        const loop = !this.state.loop;
        const btn = this.DOM.loopBtn;
        if (loop) btn.classList.add("mp-btn--active");
        else btn.classList.remove("mp-btn--active");
        this.updateState({
            loop
        });
    }
    shuffle() {
        if (this.isSinglePlaylist()) return;
        const shuffle = !this.state.shuffle;
        let index = 0;
        const btn = this.DOM.shuffleBtn;
        if (shuffle) {
            btn.classList.add("mp-btn--active");
            this.shuffledPlaylist = this.shufflePlaylist();
        } else {
            const podcast = this.shuffledPlaylist[index];
            btn.classList.remove("mp-btn--active");
            index = this.playlist.findIndex((x)=>x.src === podcast.src);
        }
        this.updateState({
            shuffle,
            index
        });
    }
    shufflePlaylist() {
        const array = this.playlist?.slice();
        for(let i = array.length - 1; i > 0; i--){
            let j = Math.floor(Math.random() * (i + 1));
            [array[i], array[j]] = [
                array[j],
                array[i]
            ];
        }
        let index = array.findIndex((x)=>x.src === this.playlist[this.state.index].src);
        let elem = array.splice(index, 1)[0];
        array.unshift(elem);
        return array;
    }
    // utils
    updateState(state) {
        for (const [key, value] of Object.entries(state))this.state[key] = value;
        localStorage.setItem("loop", this.state.loop);
        localStorage.setItem("shuffle", this.state.shuffle);
    }
    formatDate(dateStr) {
        const date = new Date(dateStr);
        const year = date.getFullYear();
        const month = date.toLocaleString("default", {
            month: "short"
        });
        const day = date.getDate();
        return `${month} ${day}, ${year}`;
    }
    formatDuration(duration, mmhh = false) {
        if (mmhh) {
            const minutes = Math.floor(duration / 60);
            const seconds = Math.floor(duration % 60);
            return `${minutes}:${seconds.toString().padStart(2, "0")}`;
        }
        if (duration < 60) return duration + " Secs";
        else if (duration < 3600) return Math.floor(duration / 60) + " Mins";
        else return Math.floor(duration / 3600) + " Hrs";
    }
    async ajaxImages() {
        let newpage = document.createElement("template");
        newpage.innerHTML = this.html;
        let paths = Array.from(newpage.content.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        return Promise.resolve();
    }
    async blocksClick(type) {
        this.DOM.holder.classList.add("load");
        await this.timeout(600);
        if (type == "block") this.DOM.holder.classList.add("blocks");
        else this.DOM.holder.classList.remove("blocks");
        this.DOM.holder.classList.remove("load");
        this.resizeLimit();
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            // console.log(this.anims[pos])
                            this.anims[pos].stick.active = 0;
                            this.movestick = null;
                        } else if (id == "v") clearInterval(this.clockInt);
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "e") {
                            this.anims[pos].classel.start();
                            this.slidetext = this.anims[pos];
                        } else if (id == "v") this.clockStart(this.anims[pos].el.parentNode.querySelector(".time"));
                        else if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.movestick = this.anims[pos];
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) super.smoothScroll();
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    modifyNav(show = false) {
        const accountBtn = document.querySelector(".nav_buttons #my-account-btn");
        const searchBtn = document.querySelector(".nav_search");
        const mpNav = document.querySelector(".nav-mp-mobile");
        const navBtn = document.querySelector(".nav_burger");
        if (!show) {
            // hide items
            searchBtn.style.maxHeight = "0%";
            navBtn.style.maxHeight = "0%";
            mpNav.style.maxHeight = "100%";
            // make target blank
            accountBtn.target = "_blank";
        } else {
            // show items
            searchBtn.style.maxHeight = "100%";
            navBtn.style.maxHeight = "100%";
            mpNav.style.maxHeight = "0%";
            // make target not blank
            accountBtn.target = "_self";
        }
    }
    async show() {
        const page_params = new URLSearchParams(window.location.search);
        const isEmbed = page_params.get("isEmbed") != null;
        if (!this?.main?.user && !isEmbed) return super.show();
        this.timeout(1);
        window.history.replaceState({
            "player_href": this.playerPage
        }, document.title, window.location.href);
        this.modifyNav();
        // load the current loaded pages playlist
        if (this.playerPage === "browse") this.lastload = (0, _browseDefault.default).load;
        else if (this.playerPage === "playlists") this.lastload = (0, _playlistsDefault.default).load;
        else if (this.playerPage === "liked-podcasts") this.lastload = (0, _likedPodcastsDefault.default).load;
        else if (this.playerPage === "playlist") this.lastload = (0, _playlistSingleDefault.default).load;
        else if (this.playerPage === "module") this.lastload = (0, _moduleSingleDefault.default).load;
        else if (this.playerPage === "search") this.lastload = (0, _searchDefault.default).load;
        else this.lastload = (0, _discoverDefault.default).load;
        await this.lastload();
        this.playPlaylist(0, true);
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        document.removeEventListener("popstate", this.collapsePlayer);
        this.modifyNav(true);
        return super.hide();
    }
};

},{"../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./template.eta":"kQNZh","./audioLib":"3t3d1","../../js🧠🧠🧠/basic/icons🔰":"kmKjG","bundle-text:/src/views👁️👁️👁️/404/notlogged.eta":"9AflI","./Discover":"i4PLA","./Browse":"gLR6B","./Playlists":"ah2XJ","./Playlist Single":"gVPWn","./Module Single":"lVp4N","./Liked_Podcasts":"9Ls4E","./Search":"9VyAs","bundle-text:./Templates/Playlist/new-playlist.eta":"lnXbX","bundle-text:./Templates/Playlist/delete-confirmation.eta":"jMrO7","bundle-text:/src/views👁️👁️👁️/404/noaccess.eta":"areSn","eta":"blnnU","../Login🥸/LinkedinLogin/Dialog":"8Lgst","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"kQNZh":[function(require,module,exports) {
module.exports = "<main class=\"player-archive\" style=\"--brand-color: <%~ it?.global?.sponsor?.color %>\">\n  <section class=\"player-header\">\n    <div class=\"player-header__logo\">\n      <img src=\"<%~ it?.global?.sponsor?.logo %>\">\n    </div>\n\n    <div class=\"player-header__search\">\n      <input id=\"player-search-bar\" type=\"text\" placeholder=\"Search..\">\n    </div>\n\n    <div class=\"player-header__profile\">\n      <div class=\"player-header__profile-img\"><img src=\"<%~ it?.global?.sponsor?.icon %>\"/></div>\n      <span class=\"player-header__profile-name\"><%~ it.global.user?.acf?.firstname%></span>\n      <span class=\"player-header__profile-email\"><%~ it.global.user?.user?.data?.user_email%></span>\n    </div>\n  </section>\n\n  <section class=\"player-page\">\n    <div class=\"player-page__nav\">\n      <div class=\"player-page__nav-tabs\">\n        <span id=\"discover-link\" class=\"player-page__nav-link mouseHover\" data-href=\"discover\">\n          <span class=\"player-page-btn--icon\"><%~it.global.icons.grid%></span>\n          <span class=\"player-page-btn--text\">Discover</span>\n        </span>\n\n        <span id=\"browse-link\" class=\"player-page__nav-link mouseHover\" data-href=\"browse\">\n          <span class=\"player-page-btn--icon\"><%~it.global.icons.book%></span>\n          <span class=\"player-page-btn--text\">Browse</span>\n        </span>\n\n        <span id=\"playlists-link\" class=\"player-page__nav-link mouseHover\" data-href=\"playlists\">\n          <span class=\"player-page-btn--icon\"><%~it.global.icons.history%></span>\n          <span class=\"player-page-btn--text\">Playlists</span>\n        </span>\n      </div>\n\n      <div class=\"player-page__nav-buttons\">\n        <% if (it?.global?.user?.acf?.allow_create_playlist) { %>\n          <span class=\"player-page__nav-link mouseHover\" data-href=\"create-playlist\">\n            <span class=\"player-page-btn--icon\"><%~it.global.icons.plus%></span>\n            <span class=\"player-page-btn--text\">Create Playlist</span>\n          </span>\n        <% } %>\n\n        <span class=\"player-page__nav-link mouseHover\" data-href=\"liked-podcasts\">\n          <span class=\"player-page-btn--icon\"><%~it.global.icons.heart%></span>\n          <span class=\"player-page-btn--text\">Liked Modules</span>\n        </span>\n      </div>\n\n      <div class=\"player-page__nav-playlists\">\n        <% Object.entries(it.user_playlists).forEach(([key, playlist]) => { %>\n          <span id=\"<%~ key%>\" class=\"mouseHover\" data-href=\"<%~ playlist.link%>\">\n            <span class=\"player-page-btn--input\" id=\"input-playlist-name\"><input type=\"text\" placeholder=\"Custom Playlist\"></span>\n            <span class=\"player-page-btn--text\"><%~ playlist.name%></span>\n            <span class=\"player-page-btn--icon share-user-pl-btn\" id=\"share-icon\"><%~it.global.icons.menu%></span>\n            <span class=\"player-page-btn--icon save-pl-btn\" id=\"close-icon\"><%~it.global.icons.check%></span>\n            <ul class=\"mp-dropmenu\" aria-label=\"Modify Playlist\">\n              <li id=\"edit-playlist-name\">Edit Playlist Name</li>\n              <li id=\"delete-this-playlist\">Delete This Playlist</li>\n              <% if (it?.global?.user?.acf?.allow_share_playlist) { %>\n                <li id=\"share-this-playlist\">Share This Playlist</li>\n              <% } %>\n            </ul>\n          </span>\n        <% }) %>\n      </div>\n    </div>\n\n    <div class=\"player-header__search-mobile\">\n      <input id=\"player-search-bar\" type=\"text\" placeholder=\"Search..\">\n    </div>\n\n    <div class=\"player-page__nav-mobile player-page__nav-tabs\">\n      <span id=\"discover-link\" class=\"player-page__nav-link mouseHover\" data-href=\"discover\">\n        <span class=\"player-page-btn--icon\"><%~it.global.icons.grid%></span>\n        <span class=\"player-page-btn--text\">Discover</span>\n      </span>\n\n      <span id=\"browse-link\" class=\"player-page__nav-link mouseHover\" data-href=\"browse\">\n        <span class=\"player-page-btn--icon\"><%~it.global.icons.book%></span>\n        <span class=\"player-page-btn--text\">Browse</span>\n      </span>\n\n      <span id=\"playlists-link\" class=\"player-page__nav-link mouseHover\" data-href=\"playlists\">\n        <span class=\"player-page-btn--icon\"><%~it.global.icons.history%></span>\n        <span class=\"player-page-btn--text\">Playlists</span>\n      </span>\n\n      <span id=\"liked-podcasts-link\"  class=\"player-page__nav-link mouseHover\" data-href=\"liked-podcasts\">\n        <span class=\"player-page-btn--icon\"><%~it.global.icons.heart%></span>\n        <span class=\"player-page-btn--text\">Liked</span>\n      </span>\n    </div>\n\n    <div class=\"player-page__content\"></div>\n\n    <div class=\"player-page__filters\">\n      <% const filter_label = it.global.acf?.filter_label ?? \"Popular\"; %>\n      <div class=\"player-page__category-filter\">\n        <h2><%~ filter_label %> Categories</h2>\n\n        <div class=\"player-page__filter-items\">\n          <% it.filters.cats.forEach(({id, name},i) => { %>\n            <span id=\"cat-<%~i%>\" data-id=\"<%~id%>\" class=\"player-page__filter-item mouseHover\"><%~name%></span>\n          <% }) %>\n        </div>\n      </div>\n\n      <div class=\"player-page__tag-filter\">\n        <h2><%~ filter_label %> Tags</h2>\n\n        <div class=\"player-page__filter-items\">\n          <% it.filters.tags.forEach(({id, name},i) => { %>\n            <span id=\"tag-<%~i%>\" data-id=\"<%~id%>\" class=\"player-page__filter-item mouseHover\"><%~name%></span>\n          <% }) %>\n        </div>\n      </div>\n      \n      <div class=\"player-page__topic-filter\">\n        <h2><%~ filter_label %> Topics</h2>\n\n        <div class=\"player-page__filter-items\">\n          <% it.filters.topics.forEach(({id, name},i) => { %>\n            <span id=\"topic-<%~i%>\" data-id=\"<%~id%>\" class=\"player-page__filter-item mouseHover\"><%~name%></span>\n          <% }) %>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"player-page__filters player-page__filters--modules\">\n      <div class=\"player-page__category-filter\">\n        <h2>Module Categories</h2>\n\n        <div class=\"player-page__filter-items player-page__filter-items--cats\"></div>\n      </div>\n\n      <div class=\"player-page__tag-filter\">\n        <h2>Module Tags</h2>\n\n        <div class=\"player-page__filter-items player-page__filter-items--tags\"></div>\n      </div>\n      \n      <div class=\"player-page__topic-filter\">\n        <h2>Module Topics</h2>\n\n        <div class=\"player-page__filter-items player-page__filter-items--topics\"></div>\n      </div>\n    </div>\n  </section>\n\n  <div class=\"player-archive-fixed\">\n    <section class=\"media-player\" style=\"height: 0;\">\n      <audio id=\"audio-player\"></audio>\n      <div class=\"media-player__banner\">\n        <img src=\"<%~ it?.global?.sponsor?.icon %>\"/>\n        <h3>DROPBOX AND #BLACKLIVESMATT...</h3>\n        <span>by Living Corporate</span>\n        <span id=\"close-mp-btn\"><%~ it.global.icons.close %></span>\n      </div>\n\n      <div class=\"media-player__image\">\n        <img src=\"<%~ it?.global?.sponsor?.icon %>\"/>\n      </div>\n\n      <div class=\"media-player__buttons media-player__buttons-1\">\n        <span class=\"mp-btn mouseHover\" id=\"prev-btn\"><%~ it.global.icons.rewind %></span>\n        <span class=\"mp-btn mouseHover\" id=\"play-btn\"><%~ it.global.icons.play %></span>\n        <span class=\"mp-btn mouseHover\" id=\"next-btn\"><%~ it.global.icons.rewind %></span>\n        <span class=\"mp-btn mouseHover\" id=\"loop-btn\"><%~ it.global.icons.loop %></span>\n        <span class=\"mp-btn mouseHover\" id=\"shuffle-btn\"><%~ it.global.icons.shuffle %></span>\n      </div>\n\n      <div class=\"media-player__info\">\n        <div class=\"media-player__title\">\n          <h3>DROPBOX AND #BLACKLIVESMATT...</h3>\n          <span>by Living Corporate</span>\n        </div>\n\n        <div class=\"media-player__time\">\n          <span id=\"curr-time\">0:00</span>\n          <span id=\"slash\">/</span>\n          <span id=\"end-time\">0:00</span>\n        </div>\n\n        <div class=\"media-player__seek-bar\">\n          <div id=\"progress\">\n            <span class=\"mouseHover\" id=\"handle\"></span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"media-player__buttons media-player__buttons-2\">\n        <span class=\"mp-btn mouseHover\" id=\"volume-btn\">\n          <%~ it.global.icons.volume %>\n          <div id=\"volume-control\" class=\"volume-btn-control\">\n            <div id=\"volume-slider\">\n              <div id=\"volume-progress\">\n                <span class=\"mouseHover\" id=\"volume-handle\"></span>\n              </div>\n            </div>\n          </div>\n        </span>\n        <span class=\"mp-btn mouseHover\" id=\"like-btn\"><%~ it.global.icons.heart %></span>\n        <span class=\"mp-btn mouseHover\" id=\"share-btn\"><%~ it.global.icons.share %></span>\n        <span class=\"mp-btn mouseHover\" id=\"menu-btn\">\n          <%~ it.global.icons.menu %>\n          <ul class=\"mp-menu\" id=\"menu-list\" aria-label=\"Add to playlist\">\n            <% Object.entries(it.user_playlists).forEach(([key, playlist]) => { %>\n              <li id=\"<%~ key%>-add\"><%~ playlist.name%></li>\n            <% }) %>\n          </ul>\n        </span>\n      </div>\n    </section>  \n    <%~ it.footer %>\n    <div class=\"snackbar\" id=\"snackbar\">Copied to clipboard</div>\n  </div>\n</main>\n";

},{}],"3t3d1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _icons = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/icons\uD83D\uDD30");
var _iconsDefault = parcelHelpers.interopDefault(_icons);
let elemObj;
let podcast_id = 0;
let play_tracked = false;
const init = (domObject)=>{
    elemObj = domObject;
    loadPlayer();
};
const loadPlayer = ()=>{
    const player = elemObj.player;
    player.src = "https://file-examples.com/storage/fe863385e163e3b0f92dc53/2017/11/file_example_MP3_700KB.mp3";
    player.addEventListener("play", ()=>play(false));
    player.addEventListener("pause", ()=>play(false));
    player.addEventListener("timeupdate", ()=>updateTime());
    player.addEventListener("volumechange", ()=>updateVolume());
    player.addEventListener("durationchange", ()=>updateDuration());
    const volString = localStorage.getItem("volume") || 1;
    player.volume = parseFloat(volString);
};
// Toggles play/pause. if toggle is false icons are jsut updated
const play = (toggle = true)=>{
    const playBtn = elemObj.playBtn;
    const player = elemObj.player;
    // toggle state
    if (toggle) {
        if (player.paused) player.play();
        else player.pause();
    }
    // update icons
    if (player.paused) playBtn.innerHTML = (0, _iconsDefault.default).play;
    else playBtn.innerHTML = (0, _iconsDefault.default).pause;
};
const updateTime = ()=>{
    // Update curr time elem
    const timeElem = elemObj.currTime;
    const time = elemObj.player.currentTime;
    timeElem.innerHTML = formatDuration(time);
    // Update seekbar width 
    const progress = elemObj.seekProgress;
    const duration = elemObj.player.duration;
    const width = time / duration * 100;
    progress.style.width = `${width}%`;
    trackPlay();
};
const updateVolume = ()=>{
    // Update volume slider height 
    const progress = elemObj.volProgress;
    const volume = elemObj.player.volume;
    const height = volume * 100;
    progress.style.height = `${height}%`;
};
const updateDuration = ()=>{
    const timeElem = elemObj.endTime;
    const duration = elemObj.player.duration;
    timeElem.innerHTML = formatDuration(duration);
};
const formatDuration = (duration)=>{
    const minutes = Math.floor(duration / 60);
    const seconds = Math.floor(duration % 60);
    return `${minutes}:${seconds.toString().padStart(2, "0")}`;
};
const seekOnBar = (e)=>{
    const player = elemObj.player;
    const bar = elemObj.seekbar;
    const x = e.clientX - bar.offsetLeft;
    player.currentTime = player.duration * (x / bar.clientWidth);
};
const seekOnHandle = (percent)=>{
    const player = elemObj.player;
    player.currentTime = player.duration * percent;
};
const volumeOnBar = (e)=>{
    const player = elemObj.player;
    const bar = elemObj.volSlider;
    const rect = bar.getBoundingClientRect();
    const y = rect.bottom - e.clientY;
    player.volume = y / bar.clientHeight;
    localStorage.setItem("volume", player.volume);
};
const volumeOnHandle = (percent)=>{
    const player = elemObj.player;
    player.volume = percent;
};
const load = ({ src , id  }, playlist, index)=>{
    const player = elemObj.player;
    podcast_id = id;
    elemObj?.mediaPlayer?.classList.remove("hidden");
    play_tracked = false;
    if (playlist.length <= 1) elemObj?.mediaPlayer?.classList.add("single-playlist");
    else elemObj?.mediaPlayer?.classList.remove("single-playlist");
    localStorage.setItem("playlist", JSON.stringify(playlist));
    localStorage.setItem("index", index);
    player.src = src;
    player.load();
    updateVolume();
};
const trackPlay = async ()=>{
    if (play_tracked) return;
    const player = elemObj.player;
    if (player.currentTime >= 60.0 || player.ended) {
        // //  console.log("play tracked", podcast_id);
        play_tracked = true;
        const params = new URLSearchParams();
        params.set("id", podcast_id);
        await fetch(`/wp-json/sdv/player/v1/track-play?${params}`);
    }
};
exports.default = {
    init,
    play,
    load,
    seekOnBar,
    seekOnHandle,
    volumeOnBar,
    volumeOnHandle
};

},{"../../js🧠🧠🧠/basic/icons🔰":"kmKjG","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"9AflI":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! SIGN UP TO ACCESS THIS CONTENT</h2>\n<h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3>\n<a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"i4PLA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _icons = require("../../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/icons\uD83D\uDD30");
var _iconsDefault = parcelHelpers.interopDefault(_icons);
var _discoverEta = require("bundle-text:./discover.eta");
var _discoverEtaDefault = parcelHelpers.interopDefault(_discoverEta);
var _playlistsEta = require("bundle-text:./../Templates/Playlist/playlists.eta");
var _playlistsEtaDefault = parcelHelpers.interopDefault(_playlistsEta);
var _sponsorPlaylistEta = require("bundle-text:./../Templates/Playlist/sponsor-playlist.eta");
var _sponsorPlaylistEtaDefault = parcelHelpers.interopDefault(_sponsorPlaylistEta);
var _modulesEta = require("bundle-text:./../Templates/Module/modules.eta");
var _modulesEtaDefault = parcelHelpers.interopDefault(_modulesEta);
var _eta = require("eta");
var _swiper = require("swiper");
let parent; // refers to `this` in the media player.js file
const init = (par_this)=>{
    parent = par_this;
};
const load = async ()=>{
    const global = parent?.main;
    const spId = parent?.spId || 0;
    const html = _eta.render((0, _discoverEtaDefault.default), {
        global
    });
    if (parent) parent.DOM.content.innerHTML = html;
    else return;
    document.querySelectorAll(".player-page-tab--active").forEach((x)=>x.classList.remove("player-page-tab--active"));
    document.querySelectorAll("#discover-link").forEach((x)=>x.classList.add("player-page-tab--active"));
    getPlaylists();
    getSponsorPlaylist(spId);
    getModules();
};
const getModules = async ()=>{
    const modulesCont = document.querySelector(".player-page__content-modules");
    const params = new URLSearchParams();
    params.set("userid", parent.main?.user?.user?.ID);
    params.set("popular", true);
    parent.addFiltersToParams(params);
    modulesCont.innerHTML = parent.loading;
    const url = `/wp-json/sdv/player/v1/get-modules?${params}`;
    const postsResp = await fetch(url);
    const posts = await postsResp.json();
    parent.nextPlaylist = posts;
    const html = _eta.render((0, _modulesEtaDefault.default), {
        posts,
        icons: (0, _iconsDefault.default),
        formatDate: parent.formatDate,
        formatDuration: parent.formatDuration
    });
    modulesCont.innerHTML = html;
    parent.regModuleClick();
    parent.regModuleButtons();
};
const getPlaylists = async ()=>{
    const playlistsCont = document.querySelector(".player-page__content-playlists .swiper-wrapper");
    const params = new URLSearchParams();
    params.set("userid", parent.main?.user?.user?.ID);
    // parent.addFiltersToParams(params);
    playlistsCont.innerHTML = parent.loading;
    const url = `/wp-json/sdv/player/v1/get-playlists?${params}`;
    const playlistsResp = await fetch(url);
    const playlists = await playlistsResp.json();
    const html = _eta.render((0, _playlistsEtaDefault.default), {
        global: parent.main,
        playlists
    });
    playlistsCont.innerHTML = html;
    setupSwiper();
    parent.regPlaylistClick();
};
const getSponsorPlaylist = async (spId)=>{
    const sponsorPlaylistsCont = document.querySelector(".sponsor-playlists");
    const params = new URLSearchParams();
    const email = parent?.main?.user ? parent?.main?.user?.user?.data?.user_email : parent?.email;
    params.set("email", email);
    // params.set("userid", parent.main?.user?.user?.ID);
    // sponsorPlaylistsCont.innerHTML = parent.loading;
    let url = `/wp-json/sdv/player/v1/get-sponsor-playlists?${params}`;
    if (spId) {
        params.set("spId", spId);
        url = `/wp-json/sdv/player/v1/get-sponsor-playlists-by-id?${params}`;
    }
    const sponsorPlaylistsResp = await fetch(url);
    const sponsors = await sponsorPlaylistsResp.json();
    const html = _eta.render((0, _sponsorPlaylistEtaDefault.default), {
        global: parent.main,
        sponsors
    });
    sponsorPlaylistsCont.innerHTML = html;
    setupSwiper();
    parent.regPlaylistClick();
};
const setupSwiper = ()=>{
    document.querySelectorAll(".swiper-wrapper .player-playlist").forEach((x)=>x.classList.add("swiper-slide"));
    const isMobile = document.documentElement.classList.contains("touch");
    const spaceBetween = isMobile ? 24 : 0;
    parent.swiper = new (0, _swiper.Swiper)(".player-page__content-playlists ,player-page__content-playlists--swiper .swiper", {
        slidesPerView: 3,
        spaceBetween,
        navigation: {
            nextEl: ".swiper-button-next",
            prevEl: ".swiper-button-prev"
        }
    });
};
exports.default = {
    init,
    load
};

},{"../../../js🧠🧠🧠/basic/icons🔰":"kmKjG","bundle-text:./discover.eta":"hYjp9","bundle-text:./../Templates/Playlist/playlists.eta":"7FmgA","bundle-text:./../Templates/Playlist/sponsor-playlist.eta":"1vmdK","bundle-text:./../Templates/Module/modules.eta":"j4Hm6","eta":"blnnU","swiper":"3ktAm","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"hYjp9":[function(require,module,exports) {
module.exports = "<div class=\"player-page__content-banner\"><img src=\"<%~ it?.global?.sponsor?.banner%>\"></div>\r\n\r\n<h2>Global Playlists</h2>\r\n<div class=\"player-page__content-playlists player-page__content-playlists--swiper swiper\">\r\n    <div class=\"swiper-wrapper\">\r\n    </div>\r\n    <div class=\"swiper-button-prev mouseHover\"></div>\r\n    <div class=\"swiper-button-next mouseHover\"></div>\r\n</div>\r\n\r\n<div class=\"sponsor-playlists\"></div>\r\n\r\n<h2>Top Modules</h2>\r\n<div class=\"player-page__content-modules swiper\"></div>";

},{}],"7FmgA":[function(require,module,exports) {
module.exports = "<% if(it.playlists && Object.entries(it.playlists).length > 0){ %>\n    <% Object.values(it.playlists).forEach((playlist,i) => { %>\n        <% if (!playlist.sponsor) { %>\n            <div class=\"player-playlist mouseHover\" id=\"playlist-<%~ i%>\" data-id=\"<%~playlist.ID%>\" data-href=\"<%~playlist.link%>\">\n                <div class=\"player-playlist__image<%~playlist.user ? '--user-playlist' : ''%>\">\n                    <img src=\"<%~playlist.user ? it?.global?.sponsor?.icon : playlist.img%>\">\n                    <% if (playlist.user) { %>\n                        <h2><%~playlist.post_title%></h2>\n                    <% } %>\n                </div>\n                <div class=\"player-playlist__details\">\n                    <span class=\"player-playlist__title\"><%~playlist.post_title%></span>\n                    <span class=\"player-playlist__epcnt\"><%~playlist.modules%> <%~playlist.modules == 1 ? \"module\" : \"modules\"%></span>\n                </div>\n            </div>\n        <% } %>\n    <% }) %>\n<% } %>";

},{}],"1vmdK":[function(require,module,exports) {
module.exports = "<% if(it.sponsors && Object.entries(it.sponsors).length > 0){ %>\r\n    <% Object.values(it.sponsors).forEach((sponsor,i) => { %>\r\n        <% if(sponsor.playlists.length > 0){ %>\r\n            <h2><%~sponsor.post_title%> Playlists</h2>\r\n            \r\n            <div class=\"player-page__content-playlists player-page__content-playlists--swiper swiper\">\r\n                <div class=\"swiper-wrapper\">\r\n                    <% if(sponsor.playlists && Object.entries(sponsor.playlists).length > 0){ %>\r\n                    <% Object.values(sponsor.playlists).forEach((playlist,i) => { %>\r\n\r\n                    <div class=\"player-playlist mouseHover p-m\" id=\"playlist-<%~ i%>\" data-id=\"<%~playlist.ID%>\" data-href=\"<%~playlist.link%>\">\r\n                        <div class=\"player-playlist__image<%~playlist.user ? '--user-playlist' : ''%>\">\r\n                            <img src=\"<%~playlist.user ? it?.global?.sponsor?.icon : playlist.img%>\">\r\n                            <% if (playlist.user) { %>\r\n                                <h2><%~playlist.post_title%></h2>\r\n                            <% } %>\r\n                        </div>\r\n                        <div class=\"player-playlist__details\">\r\n                            <span class=\"player-playlist__title\"><%~playlist.post_title%></span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <% }) %>\r\n                    <% } %>\r\n                </div>\r\n                <div class=\"swiper-button-prev mouseHover\"></div>\r\n                <div class=\"swiper-button-next mouseHover\"></div>\r\n            </div>\r\n        <% } %>\r\n    <% }) %>\r\n<% } %>";

},{}],"j4Hm6":[function(require,module,exports) {
module.exports = "<% if(it.posts && it.posts.length > 0){ %>\n    <% it.posts.forEach((x, i) => { %>\n        <div class=\"player-module mouseHover p-m\" id=\"module-<%~i%>\" data-id=\"<%~x.ID%>\" data-href=\"<%~ x.link%>\" data-liked=\"<%~ x.liked%>\">\n            <div class=\"player-module__image\"><img src=\"<%~x.img%>\"></div>\n            <div class=\"player-module__details\">\n                <span class=\"player-module__title\"><%~x.post_title%></span>\n                <span class=\"player-module__subtitle\"><%~x.byline%></span>\n            </div>\n            <span class=\"player-module__playBtn module-play-btn\" data-fetch=\"true\"><%~it.icons.playbtn%></span>\n            <span class=\"player-module__plays\"><%~it.icons.play%><%~x.plays%></span>\n            <span class=\"player-module__date\"><%~ it.formatDate(x.post_date)%></span>\n            <span class=\"player-module__length\"><%~ it.formatDuration(x.duration)%></span>\n            <span class=\"player-module__length-num\"><%~ it.formatDuration(x.duration, true)%></span>\n            <span class=\"player-module__likeBtn mouseHover module-like-btn\"><%~ x.liked ? it.icons.heart_filled : it.icons.heart%></span>\n            <span class=\"player-module__menuBtn mouseHover module-menu-btn\"><%~it.icons.menu%></span>\n        </div>\n    <% }) %>\n<% } %>";

},{}],"gLR6B":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _icons = require("../../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/icons\uD83D\uDD30");
var _iconsDefault = parcelHelpers.interopDefault(_icons);
var _browseEta = require("bundle-text:./browse.eta");
var _browseEtaDefault = parcelHelpers.interopDefault(_browseEta);
var _modulesEta = require("bundle-text:../Templates/Module/modules.eta");
var _modulesEtaDefault = parcelHelpers.interopDefault(_modulesEta);
var _eta = require("eta");
let parent; // refers to `this` in the media player.js file
let tabLatest;
let tabPopular;
const init = (par_this)=>{
    parent = par_this;
};
const load = async ()=>{
    const global = parent?.main;
    const html = _eta.render((0, _browseEtaDefault.default), {
        global
    });
    if (parent) parent.DOM.content.innerHTML = html;
    else return;
    tabLatest = document.getElementById("tab-latest");
    tabPopular = document.getElementById("tab-popular");
    document.querySelectorAll(".player-page-tab--active").forEach((x)=>x.classList.remove("player-page-tab--active"));
    document.querySelectorAll("#browse-link").forEach((x)=>x.classList.add("player-page-tab--active"));
    tabLatest.addEventListener("click", (e)=>{
        if (tabLatest.classList.contains("player-browse-tab--active")) return;
        tabLatest.classList.add("player-browse-tab--active");
        tabPopular.classList.remove("player-browse-tab--active");
        getModules();
    });
    tabPopular.addEventListener("click", (e)=>{
        if (tabPopular.classList.contains("player-browse-tab--active")) return;
        tabPopular.classList.add("player-browse-tab--active");
        tabLatest.classList.remove("player-browse-tab--active");
        getModules();
    });
    getModules();
};
const getModules = async ()=>{
    const modulesCont = document.querySelector(".player-page__content-modules");
    const params = new URLSearchParams();
    params.set("userid", parent.main?.user?.user?.ID);
    if (tabPopular.classList.contains("player-browse-tab--active")) params.set("popular", true);
    parent.addFiltersToParams(params);
    modulesCont.innerHTML = parent.loading;
    const url = `/wp-json/sdv/player/v1/get-modules?${params}`;
    const postsResp = await fetch(url);
    const posts = await postsResp.json();
    parent.nextPlaylist = posts;
    const html = _eta.render((0, _modulesEtaDefault.default), {
        posts,
        icons: (0, _iconsDefault.default),
        formatDate: parent.formatDate,
        formatDuration: parent.formatDuration
    });
    modulesCont.innerHTML = html;
    parent.regModuleClick();
    parent.regModuleButtons();
};
exports.default = {
    init,
    load
};

},{"../../../js🧠🧠🧠/basic/icons🔰":"kmKjG","bundle-text:./browse.eta":"1f5Pu","bundle-text:../Templates/Module/modules.eta":"klDV2","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"1f5Pu":[function(require,module,exports) {
module.exports = "<div class=\"player-page__content-banner\"><img src=\"<%~ it?.global?.sponsor?.banner%>\"></div>\n\n<ul class=\"player-browse__tabs\">\n    <li id=\"tab-latest\" class=\"player-browse-tab--active\">Latest</li>\n    <li id=\"tab-popular\">Popular</li>\n</ul>\n<div class=\"player-page__content-modules\"></div>";

},{}],"klDV2":[function(require,module,exports) {
module.exports = "<% if(it.posts && it.posts.length > 0){ %>\n    <% it.posts.forEach((x, i) => { %>\n        <div class=\"player-module mouseHover p-m\" id=\"module-<%~i%>\" data-id=\"<%~x.ID%>\" data-href=\"<%~ x.link%>\" data-liked=\"<%~ x.liked%>\">\n            <div class=\"player-module__image\"><img src=\"<%~x.img%>\"></div>\n            <div class=\"player-module__details\">\n                <span class=\"player-module__title\"><%~x.post_title%></span>\n                <span class=\"player-module__subtitle\"><%~x.byline%></span>\n            </div>\n            <span class=\"player-module__playBtn module-play-btn\" data-fetch=\"true\"><%~it.icons.playbtn%></span>\n            <span class=\"player-module__plays\"><%~it.icons.play%><%~x.plays%></span>\n            <span class=\"player-module__date\"><%~ it.formatDate(x.post_date)%></span>\n            <span class=\"player-module__length\"><%~ it.formatDuration(x.duration)%></span>\n            <span class=\"player-module__length-num\"><%~ it.formatDuration(x.duration, true)%></span>\n            <span class=\"player-module__likeBtn mouseHover module-like-btn\"><%~ x.liked ? it.icons.heart_filled : it.icons.heart%></span>\n            <span class=\"player-module__menuBtn mouseHover module-menu-btn\"><%~it.icons.menu%></span>\n        </div>\n    <% }) %>\n<% } %>";

},{}],"ah2XJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _playlistsEta = require("bundle-text:./playlists.eta");
var _playlistsEtaDefault = parcelHelpers.interopDefault(_playlistsEta);
var _playlistsEta1 = require("bundle-text:./../Templates/Playlist/playlists.eta");
var _playlistsEtaDefault1 = parcelHelpers.interopDefault(_playlistsEta1);
var _eta = require("eta");
let parent; // refers to `this` in the media player.js file
const init = (par_this)=>{
    parent = par_this;
};
const load = async ()=>{
    const global = parent?.main;
    const html = _eta.render((0, _playlistsEtaDefault.default), {
        global
    });
    if (parent) parent.DOM.content.innerHTML = html;
    else return;
    document.querySelectorAll(".player-page-tab--active").forEach((x)=>x.classList.remove("player-page-tab--active"));
    document.querySelectorAll("#playlists-link").forEach((x)=>x.classList.add("player-page-tab--active"));
    getPlaylists();
};
const getPlaylists = async ()=>{
    const playlistsCont = document.querySelector(".player-page__content-playlists");
    const params = new URLSearchParams();
    params.set("userid", parent.main?.user?.user?.ID);
    // parent.addFiltersToParams(params);
    playlistsCont.innerHTML = parent.loading;
    const url = `/wp-json/sdv/player/v1/get-user-playlists?${params}`;
    const playlistsResp = await fetch(url);
    const playlists = await playlistsResp.json();
    const html = _eta.render((0, _playlistsEtaDefault1.default), {
        global: parent.main,
        playlists
    });
    playlistsCont.innerHTML = html;
    parent.regPlaylistClick();
};
exports.default = {
    init,
    load
};

},{"bundle-text:./playlists.eta":"eKyCB","bundle-text:./../Templates/Playlist/playlists.eta":"lra3j","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"eKyCB":[function(require,module,exports) {
module.exports = "<div class=\"player-page__content-banner\"><img src=\"<%~ it?.global?.sponsor?.banner%>\"></div>\n\n<h2>Your Playlists</h2>\n<div class=\"player-page__content-playlists player-page__content-playlists--grid\"></div>\n";

},{}],"lra3j":[function(require,module,exports) {
module.exports = "<% if(it.playlists && Object.entries(it.playlists).length > 0){ %>\n    <% Object.values(it.playlists).forEach((playlist,i) => { %>\n        <% if (!playlist.sponsor) { %>\n            <div class=\"player-playlist mouseHover\" id=\"playlist-<%~ i%>\" data-id=\"<%~playlist.ID%>\" data-href=\"<%~playlist.link%>\">\n                <div class=\"player-playlist__image<%~playlist.user ? '--user-playlist' : ''%>\">\n                    <img src=\"<%~playlist.user ? it?.global?.sponsor?.icon : playlist.img%>\">\n                    <% if (playlist.user) { %>\n                        <h2><%~playlist.post_title%></h2>\n                    <% } %>\n                </div>\n                <div class=\"player-playlist__details\">\n                    <span class=\"player-playlist__title\"><%~playlist.post_title%></span>\n                    <span class=\"player-playlist__epcnt\"><%~playlist.modules%> <%~playlist.modules == 1 ? \"module\" : \"modules\"%></span>\n                </div>\n            </div>\n        <% } %>\n    <% }) %>\n<% } %>";

},{}],"gVPWn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _icons = require("../../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/icons\uD83D\uDD30");
var _iconsDefault = parcelHelpers.interopDefault(_icons);
var _playlistSingleEta = require("bundle-text:./playlist_single.eta");
var _playlistSingleEtaDefault = parcelHelpers.interopDefault(_playlistSingleEta);
var _modulesEta = require("bundle-text:../Templates/Module/modules.eta");
var _modulesEtaDefault = parcelHelpers.interopDefault(_modulesEta);
var _userModulesEta = require("bundle-text:../Templates/Module/user_modules.eta");
var _userModulesEtaDefault = parcelHelpers.interopDefault(_userModulesEta);
var _eta = require("eta");
let parent; // refers to `this` in the media player.js file
const init = (par_this)=>{
    parent = par_this;
};
const load = async ()=>{
    const global = parent?.main;
    const html = _eta.render((0, _playlistSingleEtaDefault.default), {
        global
    });
    if (parent) parent.DOM.content.innerHTML = html;
    else return;
    document.querySelectorAll(".player-page-tab--active").forEach((x)=>x.classList.remove("player-page-tab--active"));
    const params = new URLSearchParams(window.location.search);
    if (params.get("upid")) await getModulesUser(params.get("upid"));
    else if (parent.postid) await getModules();
};
const getModules = async ()=>{
    const modulesCont = document.querySelector(".player-page__content-modules");
    const params = new URLSearchParams();
    params.set("userid", parent.main?.user?.user?.ID);
    params.set("id", parent.postid || 0);
    parent.addFiltersToParams(params);
    modulesCont.innerHTML = parent.loading;
    const url = `/wp-json/sdv/player/v1/get-playlist?${params}`;
    const postsResp = await fetch(url);
    const result = await postsResp.json();
    if (!result) {
        modulesCont.innerHTML = "";
        document.getElementById("podcast-name").innerHTML = "Playlist Not Found";
        return;
    }
    const posts = result.modules;
    parent.nextPlaylist = posts;
    const html = _eta.render((0, _modulesEtaDefault.default), {
        posts,
        icons: (0, _iconsDefault.default),
        formatDate: parent.formatDate,
        formatDuration: parent.formatDuration
    });
    modulesCont.innerHTML = html;
    document.getElementById("podcast-name").innerHTML = result.post_title;
    parent.regModuleClick();
    parent.regModuleButtons();
};
const getModulesUser = async (upid)=>{
    const modulesCont = document.querySelector(".player-page__content-modules");
    const params = new URLSearchParams();
    params.set("userid", parent.main?.user?.user?.ID);
    params.set("upid", upid || 0);
    parent.addFiltersToParams(params);
    modulesCont.innerHTML = parent.loading;
    const url = `/wp-json/sdv/player/v1/get-user-playlist?${params}`;
    const postsResp = await fetch(url);
    const result = await postsResp.json();
    if (!result) {
        modulesCont.innerHTML = "";
        document.getElementById("podcast-name").innerHTML = "Playlist Not Found";
        return;
    }
    const posts = result.modules || [];
    parent.nextPlaylist = posts;
    const html = _eta.render((0, _userModulesEtaDefault.default), {
        posts,
        icons: (0, _iconsDefault.default),
        formatDate: parent.formatDate,
        formatDuration: parent.formatDuration
    });
    modulesCont.innerHTML = html;
    document.getElementById("podcast-name").innerHTML = result.post_title;
    if (parent.embed) document.querySelectorAll(".p-m").forEach((module)=>{
        module.addEventListener("click", ()=>module.querySelector(".module-play-btn").click());
    });
    else parent.regModuleClick();
    parent.regModuleButtons();
// console.log('parent.nextPlaylist', parent.nextPlaylist);
};
exports.default = {
    init,
    load
};

},{"../../../js🧠🧠🧠/basic/icons🔰":"kmKjG","bundle-text:./playlist_single.eta":"lAE5L","bundle-text:../Templates/Module/modules.eta":"98vyf","bundle-text:../Templates/Module/user_modules.eta":"lXoYR","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"lAE5L":[function(require,module,exports) {
module.exports = "<div class=\"player-page__content-banner\"><img src=\"<%~ it?.global?.sponsor?.banner%>\"></div>\n\n<h2 id=\"podcast-name\">Loading Playlist</h2>\n<div class=\"player-page__content-modules\"></div>";

},{}],"98vyf":[function(require,module,exports) {
module.exports = "<% if(it.posts && it.posts.length > 0){ %>\n    <% it.posts.forEach((x, i) => { %>\n        <div class=\"player-module mouseHover p-m\" id=\"module-<%~i%>\" data-id=\"<%~x.ID%>\" data-href=\"<%~ x.link%>\" data-liked=\"<%~ x.liked%>\">\n            <div class=\"player-module__image\"><img src=\"<%~x.img%>\"></div>\n            <div class=\"player-module__details\">\n                <span class=\"player-module__title\"><%~x.post_title%></span>\n                <span class=\"player-module__subtitle\"><%~x.byline%></span>\n            </div>\n            <span class=\"player-module__playBtn module-play-btn\" data-fetch=\"true\"><%~it.icons.playbtn%></span>\n            <span class=\"player-module__plays\"><%~it.icons.play%><%~x.plays%></span>\n            <span class=\"player-module__date\"><%~ it.formatDate(x.post_date)%></span>\n            <span class=\"player-module__length\"><%~ it.formatDuration(x.duration)%></span>\n            <span class=\"player-module__length-num\"><%~ it.formatDuration(x.duration, true)%></span>\n            <span class=\"player-module__likeBtn mouseHover module-like-btn\"><%~ x.liked ? it.icons.heart_filled : it.icons.heart%></span>\n            <span class=\"player-module__menuBtn mouseHover module-menu-btn\"><%~it.icons.menu%></span>\n        </div>\n    <% }) %>\n<% } %>";

},{}],"lXoYR":[function(require,module,exports) {
module.exports = "<% if(it.posts && it.posts.length > 0){ %>\n    <% it.posts.forEach((x, i) => { %>\n        <div class=\"player-module mouseHover p-m\" id=\"module-<%~i%>\" data-id=\"<%~x.ID%>\" data-href=\"<%~ x.link%>\" data-liked=\"<%~ x.liked%>\">\n            <div class=\"player-module__image\"><img src=\"<%~x.img%>\"></div>\n            <div class=\"player-module__details\">\n                <span class=\"player-module__title\"><%~x.post_title%></span>\n                <span class=\"player-module__subtitle\"><%~x.byline%></span>\n            </div>\n            <span class=\"player-module__playBtn module-play-btn\" data-fetch=\"true\"><%~it.icons.playbtn%></span>\n            <span class=\"player-module__plays\"><%~it.icons.play%><%~x.plays%></span>\n            <span class=\"player-module__date\"><%~ it.formatDate(x.post_date)%></span>\n            <span class=\"player-module__length\"><%~ it.formatDuration(x.duration)%></span>\n            <span class=\"player-module__length-num\"><%~ it.formatDuration(x.duration, true)%></span>\n            <span class=\"player-module__likeBtn mouseHover module-like-btn\"><%~ x.liked ? it.icons.heart_filled : it.icons.heart%></span>\n            <span class=\"player-module__menuBtn mouseHover module-remove-menu-btn\"><%~it.icons.menu%></span>\n\n            <ul class=\"mp-removemenu\" aria-label=\"Remove from playlist\">\n              <li id=\"remove-from-playlist\">Remove</li>\n              <li id=\"cancel-from-playlist\">cancel</li>\n            </ul>\n\n            <span class=\"player-module__menuDetailBtn mouseHover module-detail-menu-btn\"><%~it.icons.droparrow%></span>\n\n            <div class=\"player-module__detail mp-detailmenu\" style=\"width: 128%;\">\n                <% if(x.video_src){ %>\n                    <div class=\"player-module-page__video\">\n                        <iframe src=\"<%~ x.video_src %>\"></iframe>\n                    </div>\n                <% } %>\n                \n                <div class=\"player-module-page__content\">\n                    <div class=\"player-module-page__about\">\n                        <h2>About this module</h2>\n                        <span><%~ x.post_content %></span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    <% }) %>\n<% } %>";

},{}],"lVp4N":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _icons = require("../../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/icons\uD83D\uDD30");
var _iconsDefault = parcelHelpers.interopDefault(_icons);
var _moduleSingleEta = require("bundle-text:./module_single.eta");
var _moduleSingleEtaDefault = parcelHelpers.interopDefault(_moduleSingleEta);
var _eta = require("eta");
let parent; // refers to `this` in the media player.js file
const init = (par_this)=>{
    parent = par_this;
};
const load = async ()=>{
    const global = parent?.main;
    parent.DOM.content.innerHTML = parent.loading;
    document.querySelectorAll(".player-page-tab--active").forEach((x)=>x.classList.remove("player-page-tab--active"));
    getModules();
};
const getModules = async ()=>{
    const params = new URLSearchParams();
    params.set("userid", parent?.main?.user?.user?.ID);
    params.set("id", parent.postid || 0);
    const url = `/wp-json/sdv/player/v1/get-module?${params}`;
    const postsResp = await fetch(url);
    const module = await postsResp.json();
    parent.nextPlaylist = [
        module
    ];
    const html = _eta.render((0, _moduleSingleEtaDefault.default), {
        global: parent.main,
        module,
        icons: (0, _iconsDefault.default),
        formatDate: parent.formatDate,
        formatDuration: parent.formatDuration
    });
    if (parent) parent.DOM.content.innerHTML = html;
    else return;
    parent.regModuleFilters(module);
    parent.regModuleButtons();
    parent.regModuleClick();
    if (parent.embed) {
        document.querySelector(".module-play-btn")?.click();
        document.querySelector(".media-player")?.click();
    }
};
exports.default = {
    init,
    load
};

},{"../../../js🧠🧠🧠/basic/icons🔰":"kmKjG","bundle-text:./module_single.eta":"20KnQ","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"20KnQ":[function(require,module,exports) {
module.exports = "<div class=\"player-module-page__banner\">\n    <img class=\"player-module-page__img\" src=\"<%~ it.module.img%>\">\n    <h1 class=\"player-module-page__title\"><%~ it.module.post_title %></h1>\n    <span class=\"player-module-page__byline\"><%~ it.module.byline %></span>\n    <span class=\"player-module-page__summary\"><%~ it.module.summary %></span>\n\n    <div class=\"player-module-page__info\">\n        <span><%~ it.icons.play %> <%~ it.module.plays %></span>\n        <span><%~ it.formatDate(it.module.post_date)%></span>\n        <span><%~ it.formatDuration(it.module.duration)%></span>\n    </div>\n\n    <div class=\"player-module-page__buttons\" data-id=\"<%~ it.module.ID %>\">\n        <span class=\"player-module-page__buttons--play mouseHover module-play-btn\">Play Now <%~ it.icons.play %></span>\n        <span class=\"player-module-page__buttons--add mouseHover module-menu-btn\">Add to Playlist <%~ it.icons.menu %></span>\n    </div>\n</div>\n\n<% if(it.module.video_src){ %>\n    <div class=\"player-module-page__video\">\n        <iframe src=\"<%~ it.module.video_src %>\"></iframe>\n    </div>\n<% } %>\n\n<div class=\"player-module-page__content\">\n    <div class=\"player-module-page__about\">\n        <h2>About this module</h2>\n        <span><%~ it.module.post_content %></span>\n    </div>\n\n    <div class=\"player-module-page__transcript\">\n        <h2>Transcript</h2>\n        <div class=\"player-module-page__transcript-text\"><%~ it.module.transcript %></div>\n\n        <div class=\"hidetext_click module-read-transcript\">\n            <div class=\"simp mouseHover\">\n                <span>EXPAND TO READ ENTIRE TRANSCRIPT</span>\n                <span><%~ it.icons.downarrow %></span>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"player-module-page__related\">\n        <h2>Related Modules</h2>\n\n        <% let related = it.module.related || [];\n            related?.forEach((x) => { %>\n            <div class=\"player-module-page__related-module p-m\" data-id=\"<%~x.ID%>\" data-href=\"<%~ x.link%>\">\n                <div id=\"image\"><img src=\"<%~ x.img%>\"></div>\n                <h2><%~ x.post_title %></h2>\n            </div>\n        <% }); %>\n    </div>\n</div>";

},{}],"9Ls4E":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _icons = require("../../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/icons\uD83D\uDD30");
var _iconsDefault = parcelHelpers.interopDefault(_icons);
var _likedPodcastsEta = require("bundle-text:./liked_podcasts.eta");
var _likedPodcastsEtaDefault = parcelHelpers.interopDefault(_likedPodcastsEta);
var _modulesEta = require("bundle-text:../Templates/Module/modules.eta");
var _modulesEtaDefault = parcelHelpers.interopDefault(_modulesEta);
var _eta = require("eta");
let parent; // refers to `this` in the media player.js file
const init = (par_this)=>{
    parent = par_this;
};
const load = async ()=>{
    const global = parent?.main;
    const html = _eta.render((0, _likedPodcastsEtaDefault.default), {
        global
    });
    if (parent) parent.DOM.content.innerHTML = html;
    else return;
    document.querySelectorAll(".player-page-tab--active").forEach((x)=>x.classList.remove("player-page-tab--active"));
    document.querySelectorAll("#liked-podcasts-link").forEach((x)=>x.classList.add("player-page-tab--active"));
    getModules();
};
const getModules = async ()=>{
    const modulesCont = document.querySelector(".player-page__content-modules");
    const params = new URLSearchParams();
    params.set("userid", parent.main?.user?.user?.ID);
    parent.addFiltersToParams(params);
    modulesCont.innerHTML = parent.loading;
    const url = `/wp-json/sdv/player/v1/get-liked-podcasts?${params}`;
    const postsResp = await fetch(url);
    const posts = await postsResp.json();
    parent.nextPlaylist = posts;
    const html = _eta.render((0, _modulesEtaDefault.default), {
        posts,
        icons: (0, _iconsDefault.default),
        formatDate: parent.formatDate,
        formatDuration: parent.formatDuration
    });
    modulesCont.innerHTML = html;
    parent.regModuleClick();
    parent.regModuleButtons();
};
exports.default = {
    init,
    load
};

},{"../../../js🧠🧠🧠/basic/icons🔰":"kmKjG","bundle-text:./liked_podcasts.eta":"5dcoE","bundle-text:../Templates/Module/modules.eta":"gxKgB","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"5dcoE":[function(require,module,exports) {
module.exports = "<div class=\"player-page__content-banner\"><img src=\"<%~ it?.global?.sponsor?.banner%>\"></div>\n\n<h2>Liked Modules</h2>\n<div class=\"player-page__content-modules\"></div>";

},{}],"gxKgB":[function(require,module,exports) {
module.exports = "<% if(it.posts && it.posts.length > 0){ %>\n    <% it.posts.forEach((x, i) => { %>\n        <div class=\"player-module mouseHover p-m\" id=\"module-<%~i%>\" data-id=\"<%~x.ID%>\" data-href=\"<%~ x.link%>\" data-liked=\"<%~ x.liked%>\">\n            <div class=\"player-module__image\"><img src=\"<%~x.img%>\"></div>\n            <div class=\"player-module__details\">\n                <span class=\"player-module__title\"><%~x.post_title%></span>\n                <span class=\"player-module__subtitle\"><%~x.byline%></span>\n            </div>\n            <span class=\"player-module__playBtn module-play-btn\" data-fetch=\"true\"><%~it.icons.playbtn%></span>\n            <span class=\"player-module__plays\"><%~it.icons.play%><%~x.plays%></span>\n            <span class=\"player-module__date\"><%~ it.formatDate(x.post_date)%></span>\n            <span class=\"player-module__length\"><%~ it.formatDuration(x.duration)%></span>\n            <span class=\"player-module__length-num\"><%~ it.formatDuration(x.duration, true)%></span>\n            <span class=\"player-module__likeBtn mouseHover module-like-btn\"><%~ x.liked ? it.icons.heart_filled : it.icons.heart%></span>\n            <span class=\"player-module__menuBtn mouseHover module-menu-btn\"><%~it.icons.menu%></span>\n        </div>\n    <% }) %>\n<% } %>";

},{}],"9VyAs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _icons = require("../../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/icons\uD83D\uDD30");
var _iconsDefault = parcelHelpers.interopDefault(_icons);
var _searchEta = require("bundle-text:./search.eta");
var _searchEtaDefault = parcelHelpers.interopDefault(_searchEta);
var _modulesEta = require("bundle-text:../Templates/Module/modules.eta");
var _modulesEtaDefault = parcelHelpers.interopDefault(_modulesEta);
var _eta = require("eta");
let parent; // refers to `this` in the media player.js file
const init = (par_this)=>{
    parent = par_this;
};
const load = async ()=>{
    const global = parent?.main;
    const html = _eta.render((0, _searchEtaDefault.default), {
        global
    });
    if (parent) parent.DOM.content.innerHTML = html;
    else return;
    document.querySelectorAll(".player-page-tab--active").forEach((x)=>x.classList.remove("player-page-tab--active"));
    const params = new URLSearchParams(window.location.search);
    parent.search_term = parent.search_term || params.get("term");
    parent.search_term_tax = parent.search_term_tax || params.get("tax");
    getModules();
};
const getModules = async ()=>{
    const modulesCont = document.querySelector(".player-page__content-modules");
    const params = new URLSearchParams();
    // console.log('parent.search_term: ', parent.search_term);
    params.set("userid", parent.main?.user?.user?.ID);
    params.set("term", parent.search_term);
    let tax = parent.search_term_tax;
    if (tax) params.set("tax", tax);
    parent.addFiltersToParams(params);
    modulesCont.innerHTML = parent.loading;
    const url = `/wp-json/sdv/player/v1/search-player?${params}`;
    // console.log('url: ', url)
    const postsResp = await fetch(url);
    const posts = await postsResp.json();
    parent.nextPlaylist = posts;
    const html = _eta.render((0, _modulesEtaDefault.default), {
        posts,
        icons: (0, _iconsDefault.default),
        formatDate: parent.formatDate,
        formatDuration: parent.formatDuration
    });
    modulesCont.innerHTML = html;
    let text = `${posts.length} Results for "${parent.search_term}"`;
    if (tax) text = `${tax}: "${parent.search_term}"`;
    document.getElementById("search-term").innerHTML = text;
    parent.regModuleClick();
    parent.regModuleButtons();
};
exports.default = {
    init,
    load
};

},{"../../../js🧠🧠🧠/basic/icons🔰":"kmKjG","bundle-text:./search.eta":"kmAJu","bundle-text:../Templates/Module/modules.eta":"eGgyM","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"kmAJu":[function(require,module,exports) {
module.exports = "<div class=\"player-page__content-banner\"><img src=\"<%~ it?.global?.sponsor?.banner%>\"></div>\n\n<h2 id=\"search-term\">Searching</h2>\n<div class=\"player-page__content-modules\"></div>";

},{}],"eGgyM":[function(require,module,exports) {
module.exports = "<% if(it.posts && it.posts.length > 0){ %>\n    <% it.posts.forEach((x, i) => { %>\n        <div class=\"player-module mouseHover p-m\" id=\"module-<%~i%>\" data-id=\"<%~x.ID%>\" data-href=\"<%~ x.link%>\" data-liked=\"<%~ x.liked%>\">\n            <div class=\"player-module__image\"><img src=\"<%~x.img%>\"></div>\n            <div class=\"player-module__details\">\n                <span class=\"player-module__title\"><%~x.post_title%></span>\n                <span class=\"player-module__subtitle\"><%~x.byline%></span>\n            </div>\n            <span class=\"player-module__playBtn module-play-btn\" data-fetch=\"true\"><%~it.icons.playbtn%></span>\n            <span class=\"player-module__plays\"><%~it.icons.play%><%~x.plays%></span>\n            <span class=\"player-module__date\"><%~ it.formatDate(x.post_date)%></span>\n            <span class=\"player-module__length\"><%~ it.formatDuration(x.duration)%></span>\n            <span class=\"player-module__length-num\"><%~ it.formatDuration(x.duration, true)%></span>\n            <span class=\"player-module__likeBtn mouseHover module-like-btn\"><%~ x.liked ? it.icons.heart_filled : it.icons.heart%></span>\n            <span class=\"player-module__menuBtn mouseHover module-menu-btn\"><%~it.icons.menu%></span>\n        </div>\n    <% }) %>\n<% } %>";

},{}],"lnXbX":[function(require,module,exports) {
module.exports = "<span class=\"player-page__nav-new-playlist pl-adding mouseHover\">\n    <span class=\"player-page-btn--input\" id=\"input-playlist-name\"><input type=\"text\" placeholder=\"Custom Playlist\"></span>\n    <span class=\"player-page-btn--text\">Saving...</span>\n    <span class=\"player-page-btn--icon share-user-pl-btn\" id=\"share-icon\" style=\"display: none\"><%~it.icons.menu%></span>\n    <span class=\"player-page-btn--icon save-pl-btn\" id=\"close-icon\"><%~it.icons.check%></span>\n    <ul class=\"mp-dropmenu\" aria-label=\"Modify Playlist\">\n        <li id=\"edit-playlist-name\">Edit Playlist Name</li>\n        <li id=\"delete-this-playlist\">Delete This Playlist</li>\n        <% if (it?.global?.user?.acf?.allow_share_playlist) { %>\n            <li id=\"share-this-playlist\">Share This Playlist</li>\n        <% } %>\n    </ul>\n</span>";

},{}],"jMrO7":[function(require,module,exports) {
module.exports = "<div id=\"delete-conf-dialog-background\"></div>\n<div id=\"delete-conf-dialog\">\n    <h3>Delete from library</h3>\n    <span>This will delete from \"<%~ it.name %>\" from your library.</span>\n\n    <div class=\"delete-dialog-btns\">\n        <button id=\"cancel-conf-btn\">Cancel</button>\n        <button id=\"delete-conf-btn\">Delete</button>\n    </div>\n</div>";

},{}],"areSn":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! YOU DON'T HAVE ACCESS TO THIS CONTENT</h2>\n<% /* <h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3> */ %>\n<% /* <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a> */ %>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"3Vxxk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _audioLib = require("../MediaPlayer/audioLib");
var _audioLibDefault = parcelHelpers.interopDefault(_audioLib);
var _icons = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/icons\uD83D\uDD30");
var _iconsDefault = parcelHelpers.interopDefault(_icons);
var _emailRequiredEta = require("bundle-text:./emailRequired.eta");
var _emailRequiredEtaDefault = parcelHelpers.interopDefault(_emailRequiredEta);
var _discover = require("../MediaPlayer/Discover");
var _discoverDefault = parcelHelpers.interopDefault(_discover);
var _browse = require("../MediaPlayer/Browse");
var _browseDefault = parcelHelpers.interopDefault(_browse);
var _playlists = require("../MediaPlayer/Playlists");
var _playlistsDefault = parcelHelpers.interopDefault(_playlists);
var _playlistSingle = require("../MediaPlayer/Playlist Single");
var _playlistSingleDefault = parcelHelpers.interopDefault(_playlistSingle);
var _moduleSingle = require("../MediaPlayer/Module Single");
var _moduleSingleDefault = parcelHelpers.interopDefault(_moduleSingle);
var _likedPodcasts = require("../MediaPlayer/Liked_Podcasts");
var _likedPodcastsDefault = parcelHelpers.interopDefault(_likedPodcasts);
var _search = require("../MediaPlayer/Search");
var _searchDefault = parcelHelpers.interopDefault(_search);
var _newPlaylistEta = require("bundle-text:../MediaPlayer/Templates/Playlist/new-playlist.eta");
var _newPlaylistEtaDefault = parcelHelpers.interopDefault(_newPlaylistEta);
var _deleteConfirmationEta = require("bundle-text:../MediaPlayer/Templates/Playlist/delete-confirmation.eta");
var _deleteConfirmationEtaDefault = parcelHelpers.interopDefault(_deleteConfirmationEta);
var _notallowedEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/notallowed.eta");
var _notallowedEtaDefault = parcelHelpers.interopDefault(_notallowedEta);
var _notloggedEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/notlogged.eta");
var _notloggedEtaDefault = parcelHelpers.interopDefault(_notloggedEta);
var _eta = require("eta");
var _dialog = require("../Login\uD83E\uDD78/LinkedinLogin/Dialog");
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    async generate(content1) {
        let html = "";
        this.template = content1.dataset.template;
        this.playerPage = content1.dataset.child || "discover";
        this.main.title = content1.dataset.title;
        this.postid = content1.dataset.postid;
        this.spId = content1.dataset.spid || 0;
        document.documentElement.classList.add("is_shared");
        window.history.replaceState({
            ...window.history.state,
            postid: this.postid
        }, document.title, window.location.href);
        this.lsAvail = true;
        try {
            localStorage.getItem("sign_LC");
        } catch (_) {
            this.lsAvail = false;
        }
        this.state = {
            loop: this.lsAvail ? localStorage?.getItem("loop") === "true" : false,
            shuffle: this.lsAvail ? localStorage?.getItem("shuffle") === "true" : false,
            index: parseInt(this.lsAvail ? localStorage?.getItem("index") : 0),
            itemScrolling: "",
            playing: false,
            filters: {
                cats: [],
                tags: [],
                topics: []
            }
        };
        if (!this.email) {
            html = _eta.render((0, _emailRequiredEtaDefault.default), {
                global: this.main,
                footer: this.footer
            });
            document.querySelector("#content").innerHTML += html;
            this.DOM = {
                el: document.querySelector("main:not(.old)"),
                submit_email: document.getElementById("submit_email")
            };
            this.DOM.submit_email.addEventListener("click", this.submit_email);
            return;
        }
        // get filters
        const filtersResp = await fetch("/wp-json/sdv/player/v1/get-filters");
        const filters = await filtersResp.json();
        this.main.banner_image = this.main.acf?.player_banner_image;
        // get branding
        let params = new URLSearchParams();
        if (this.spId) params.set("spId", this.spId);
        if (this.email) {
            params.set("email", this.email);
            const checkUserExists = await fetch(`/wp-json/sdv/player/v1/check-user-exists?email=${this.email}`);
            const getUser = await checkUserExists.json();
            if (getUser) this.main.user = getUser;
            else await this.register();
        }
        const sponsorResp = this.spId ? await fetch(`/wp-json/sdv/player/v1/get-sponsor-id?${params}`) : await fetch(`/wp-json/sdv/player/v1/get-sponsor?${params}`);
        const sponsor = await sponsorResp.json();
        if (this?.main?.user?.user?.ID && sponsor.id === 0) {
            html = _eta.render((0, _notallowedEtaDefault.default), {
                global: this.main,
                footer: this.footer
            });
            document.querySelector("#content").innerHTML += html;
            this.DOM = {
                el: document.querySelector("main:not(.old)"),
                refresh_page: document.getElementById("refresh_page")
            };
            this.DOM.refresh_page.addEventListener("click", ()=>{
                window.location.reload();
            });
            return;
        }
        if (!this?.main?.user?.user?.ID && sponsor.id === 0) {
            html = _eta.render((0, _notloggedEtaDefault.default), {
                global: this.main,
                footer: this.footer
            });
            document.querySelector("#content").innerHTML += html;
            this.DOM = {
                el: document.querySelector("main:not(.old)")
            };
            return;
        }
        await this.getUserPlaylists();
        this.main.sponsor = sponsor;
        this.main.email = this.email;
        html = _eta.render((0, _templateEtaDefault.default), {
            global: this.main,
            footer: this.footer,
            filters,
            user_playlists: this.user_playlists
        });
        document.querySelector("#content").innerHTML += html;
        const seekbar = document.querySelector(".media-player__seek-bar");
        const volSlider = document.getElementById("volume-slider");
        this.loading = (0, _dialog.getLoadingWheel)();
        this.DOM = {
            el: document.querySelector("main:not(.old)"),
            player: document.getElementById("audio-player"),
            mediaPlayer: document.querySelector(".media-player"),
            // mobile banner player info
            mobile_image: document.querySelector(".media-player__image img"),
            banner_title: document.querySelector(".media-player__banner h3"),
            banner_byline: document.querySelector(".media-player__banner span"),
            banner_close: document.querySelector("#close-mp-btn"),
            // player info
            title: document.querySelector(".media-player__title h3"),
            byline: document.querySelector(".media-player__title span"),
            currTime: document.getElementById("curr-time"),
            endTime: document.getElementById("end-time"),
            // seekbar
            seekbar,
            seekProgress: seekbar.querySelector("#progress"),
            seekHandle: seekbar.querySelector("#handle"),
            // left buttons
            prevBtn: document.getElementById("prev-btn"),
            playBtn: document.getElementById("play-btn"),
            nextBtn: document.getElementById("next-btn"),
            loopBtn: document.getElementById("loop-btn"),
            shuffleBtn: document.getElementById("shuffle-btn"),
            volBtn: document.getElementById("volume-btn"),
            // volume controls
            volCtrl: document.getElementById("volume-control"),
            volSlider,
            volProgress: volSlider.querySelector("#volume-progress"),
            volHandle: volSlider.querySelector("#volume-handle"),
            // right buttons
            likeBtn: document.getElementById("like-btn"),
            menuBtn: document.getElementById("menu-btn"),
            menuList: document.getElementById("menu-list"),
            snackbar: document.getElementById("snackbar"),
            content: document.querySelector(".player-page__content"),
            //search
            searchBars: document.querySelectorAll("#player-search-bar")
        };
        this.updateButtons();
        if (this.state.shuffle) this.shuffledPlaylist = this.shufflePlaylist();
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
        await this.loadImages();
        await this.createAnimations();
        (0, _discoverDefault.default).init(this);
        (0, _browseDefault.default).init(this);
        (0, _playlistsDefault.default).init(this);
        (0, _likedPodcastsDefault.default).init(this);
        (0, _playlistSingleDefault.default).init(this);
        (0, _moduleSingleDefault.default).init(this);
        (0, _searchDefault.default).init(this);
        this.addEvents();
        (0, _audioLibDefault.default).init(this.DOM);
        if (!localStorage.getItem("playlist")) this.DOM.mediaPlayer?.classList.add("hidden");
        this.nextPlaylist = JSON.parse(localStorage.getItem("playlist")) ?? this.nextPlaylist;
    }
    submit_email() {
        const email = document.querySelector(".emailRequire").value;
        if (this.validateEmail(email)) {
            this.email = email;
            this.generate(content);
            this.emit("globalchange");
            this.emit("reset");
        }
    }
    validateEmail(email) {
        return email.match(/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/);
    }
    addFiltersToParams(params) {
        const filters = this.state.filters;
        if (filters.cats.length > 0) params.set("cats", filters.cats.join(","));
        if (filters.tags.length > 0) params.set("tags", filters.tags.join("|"));
        if (filters.topics.length > 0) params.set("topics", filters.topics.join("|"));
        return params;
    }
    setBranding(icon, logo, banner, color) {
        // set icon
        const iconImg = document.querySelector(".player-header__profile-img img");
        if (iconImg && icon) iconImg.src = icon;
        // set logo
        const logoImg = document.querySelector(".player-header__logo img");
        if (logoImg && logo) logoImg.src = logo;
        // set banner
        const bannerImg = document.querySelector(".player-page__content-banner img");
        if (bannerImg && banner) {
            this.main.banner_image = banner;
            bannerImg.src = banner;
        }
        const bannerImgMobile = document.querySelector(".media-player__banner img");
        if (bannerImgMobile && icon) bannerImgMobile.src = icon;
        // set color
        if (color) document.getElementById("content")?.style?.setProperty("--brand-color", color);
    }
    search(e) {
        const moduleFilterBtns = document.querySelectorAll(".player-page__filter-item--active");
        moduleFilterBtns.forEach((btn)=>{
            const actClass = "player-page__filter-item--active";
            btn.classList.remove(actClass);
        });
        const searchTerm = e.target.value;
        if (!searchTerm) return;
        this.search_term = searchTerm.trim();
        this.search_term_tax = false;
        const params = new URLSearchParams(window.location.search);
        params.set("term", this.search_term);
        params.delete("tax");
        this.DOM.searchBars?.forEach((x)=>x.blur());
        window.history.pushState({
            "player_href": "search"
        }, document.title, `${this.main.acf.search_podcasts_page_link}?${params}`);
        this.lastload = (0, _searchDefault.default).load;
        this.lastload();
    }
    addLinkEvents() {
        const goBack = ()=>{
            if (window.history.state?.player_href && document.querySelector(".media-player")) {
                const link = window.history.state?.player_href;
                this.postid = window.history.state?.postid || this.postid;
                switch(link){
                    case "discover":
                        this.lastload = (0, _discoverDefault.default).load;
                        this.lastload();
                        break;
                    case "browse":
                        this.lastload = (0, _browseDefault.default).load;
                        this.lastload();
                        break;
                    case "playlists":
                        this.lastload = (0, _playlistsDefault.default).load;
                        this.lastload();
                        break;
                    case "playlist":
                        this.lastload = (0, _playlistSingleDefault.default).load;
                        this.lastload();
                        break;
                    case "module":
                        this.lastload = (0, _moduleSingleDefault.default).load;
                        this.lastload();
                        break;
                    case "liked-podcasts":
                        this.lastload = (0, _likedPodcastsDefault.default).load;
                        this.lastload();
                        break;
                    case "search":
                        this.lastload = (0, _searchDefault.default).load;
                        this.lastload();
                        break;
                    default:
                        break;
                }
            } else window.removeEventListener("popstate", goBack);
        };
        window.addEventListener("popstate", goBack);
        const changeLink = (elem)=>{
            if (elem.classList.contains("player-page-tab--active")) return;
            const link = elem.dataset.href;
            if (!link) return;
            let url;
            switch(link){
                case "discover":
                    this.lastload = (0, _discoverDefault.default).load;
                    this.lastload();
                    url = this.main.acf.discover_page_link;
                    break;
                case "browse":
                    this.lastload = (0, _browseDefault.default).load;
                    this.lastload();
                    url = this.main.acf.browse_page_link;
                    break;
                case "playlists":
                    this.lastload = (0, _playlistsDefault.default).load;
                    this.lastload();
                    url = this.main.acf.playlists_page_link;
                    break;
                case "liked-podcasts":
                    this.lastload = (0, _likedPodcastsDefault.default).load;
                    this.lastload();
                    url = this.main.acf.liked_podcasts_page_link;
                    break;
                case "create-playlist":
                    this.createPlaylist();
                default:
                    break;
            }
            if (url) window.history.pushState({
                "player_href": link
            }, document.title, url);
        };
        document.querySelectorAll(".player-page__nav-link").forEach((x)=>x.addEventListener("click", ()=>changeLink(x)));
    }
    createPlaylist() {
        const playlists = document.querySelector(".player-page__nav-playlists");
        const html = _eta.render((0, _newPlaylistEtaDefault.default), {
            icons: (0, _iconsDefault.default)
        });
        const newPlElem = document.createElement("div");
        playlists.prepend(newPlElem);
        newPlElem.outerHTML = html;
        const newPlaylist = document.querySelector(".player-page__nav-new-playlist");
        const input = newPlaylist.querySelector("input");
        const text = newPlaylist.querySelector(".player-page-btn--text");
        const shareicon = newPlaylist.querySelector(".player-page-btn--icon");
        const close = newPlaylist.querySelector("#close-icon");
        input.focus();
        const create2 = (e)=>{
            if (e.code == "Enter") create();
        };
        const create = async ()=>{
            close.removeEventListener("mousedown", create);
            input.removeEventListener("blur", create);
            input.removeEventListener("keydown", create2);
            if (!newPlaylist) return;
            newPlaylist.classList.remove("player-page__nav-new-playlist");
            newPlaylist.classList.remove("pl-adding");
            let name = input.value;
            shareicon.style.display = null;
            const params = new URLSearchParams();
            params.set("userid", this.main.user?.user?.ID);
            params.set("name", name);
            const url = `/wp-json/sdv/player/v1/create-user-playlist?${params}`;
            const resp = await fetch(url, {
                method: "POST"
            });
            const [num, upid] = await resp.json();
            if (num === "unauthorized") newPlaylist.remove();
            else if (!name) name = `Custom Playlist #${num + 1}`;
            text.innerHTML = name;
            newPlaylist.id = `playlist_${num}`;
            newPlaylist.dataset.href = `/playlist/?upid=${upid}`;
            shareicon.addEventListener("click", (e)=>this.shareUserPlaylist(e, shareicon));
            newPlaylist.addEventListener("click", ()=>this.clickUserPlaylist(newPlaylist));
            //add to playlist menu
            this.DOM.menuList.innerHTML = `<li id="playlist_${num}-add">${name}</li>` + this.DOM.menuList.innerHTML;
            close.removeEventListener("mousedown", create);
            this.refreshPlaylistPage();
        };
        close.addEventListener("mousedown", create);
        input.addEventListener("blur", create);
        input.addEventListener("keydown", create2);
    }
    async addToPlaylist(e, id) {
        if (e.target?.id?.startsWith("playlist_")) {
            const params = new URLSearchParams();
            id = id || this.currentPodcast().id;
            params.set("userid", this.main.user?.user?.ID);
            params.set("playlist_key", e.target.id.split("-")[0]);
            params.set("podcast_id", id);
            const url = `/wp-json/sdv/player/v1/add-to-user-playlist?${params}`;
            const resp = await fetch(url, {
                method: "POST"
            });
            if (await resp.json() === true) {
                this.showSnackbar("Added to playlist");
                this.refreshPlaylistPage();
            }
        }
    }
    async removeFromPlaylist(upid, id) {
        if (!upid || !id) return;
        const params = new URLSearchParams();
        const elm = document.querySelector(`[data-href="/playlist/?upid=${upid}"]`);
        params.set("userid", this.main.user?.user?.ID);
        params.set("playlist_key", elm?.id.split("-")[0]);
        params.set("podcast_id", id);
        const url = `/wp-json/sdv/player/v1/remove-from-user-playlist?${params}`;
        const resp = await fetch(url, {
            method: "POST"
        });
        if (await resp.json() === true) {
            this.showSnackbar("Removed from playlist");
            this.refreshPlaylistPage();
        }
    }
    refreshPlaylistPage() {
        if (document.querySelector(".player-page-tab--active")?.dataset.href === "playlists") {
            this.lastload = (0, _playlistsDefault.default).load;
            this.lastload();
        } else if (window.location.href.includes("playlist")) this.lastload();
    }
    isSinglePlaylist() {
        return this.DOM?.mediaPlayer?.classList.contains("single-playlist");
    }
    mpNav() {
        const menuBtn = document.querySelector(".nav_burger-mp-mobile");
        const searchBtn = document.querySelector(".nav_search-mp-mobile");
        const menuElem = document.querySelector(".player-page__nav-mobile");
        const searchElem = document.querySelector(".player-header__search-mobile");
        const showSearch = ()=>{
            menuElem?.classList.remove("active");
            searchElem?.classList.toggle("active");
        };
        const showMenu = ()=>{
            searchElem?.classList.remove("active");
            menuElem?.classList.toggle("active");
        };
        menuBtn?.removeEventListener("click", showMenu);
        searchBtn?.removeEventListener("click", showSearch);
        menuBtn?.addEventListener("click", showMenu);
        searchBtn?.addEventListener("click", showSearch);
    }
    addEvents() {
        this.addLinkEvents();
        this.DOM.playBtn.addEventListener("click", (e)=>{
            e?.stopPropagation();
            (0, _audioLibDefault.default).play();
        });
        this.DOM.loopBtn.addEventListener("click", this.loop);
        this.DOM.shuffleBtn.addEventListener("click", this.shuffle);
        this.DOM.seekbar.addEventListener("click", (0, _audioLibDefault.default).seekOnBar);
        this.DOM.prevBtn.addEventListener("click", this.prev);
        this.DOM.nextBtn.addEventListener("click", this.next);
        this.DOM.player.addEventListener("ended", this.replay);
        this.DOM.volBtn.addEventListener("click", this.toggleVolControls);
        this.DOM.volSlider.addEventListener("click", (0, _audioLibDefault.default).volumeOnBar);
        this.DOM.volCtrl.addEventListener("click", (e)=>e.stopPropagation());
        this.DOM.volHandle.addEventListener("mousemove", this.volumeHandle);
        this.DOM.menuBtn.addEventListener("click", this.togglePlaylistMenu);
        this.DOM.menuList.addEventListener("click", this.addToPlaylist);
        this.regUserPlaylistClick();
        this.mpNav();
        this.DOM.seekHandle.addEventListener("mousemove", this.seekHandle);
        this.DOM.seekHandle.addEventListener("mousedown", ()=>{
            this.updateState({
                playing: !this.DOM.player.paused
            });
            if (this.state.playing) (0, _audioLibDefault.default).play();
        });
        document.addEventListener("mousemove", this.docSliderHandler);
        document.addEventListener("mouseup", ()=>{
            if (this.state.playing) {
                (0, _audioLibDefault.default).play();
                this.updateState({
                    playing: false
                });
            }
        });
        // search
        this.DOM.searchBars?.forEach((x)=>x.addEventListener("keydown", (e)=>{
                if (e.code == "Enter") this.search(e);
            }));
        //share user playlist
        document.querySelectorAll(".share-user-pl-btn").forEach((btn)=>btn.addEventListener("click", (e)=>this.shareUserPlaylist(e, btn)));
        //tags/cats/topics
        document.querySelectorAll(".player-page__filters:not(.player-page__filters--modules) .player-page__filter-item").forEach(this.setupFilters);
        this.expandPlayer = ()=>{
            if (this.DOM.mediaPlayer.classList.contains("media-player--active")) return;
            this.DOM.mediaPlayer.style.transform = "translateY(100%)";
            setTimeout(()=>{
                this.DOM.mediaPlayer.style.transform = "translateY(0%)";
                this.DOM.mediaPlayer?.classList.add("media-player--active");
            }, 250);
        };
        this.collapsePlayer = ()=>{
            this.DOM.mediaPlayer.style.transform = "translateY(100%)";
            setTimeout(()=>{
                this.DOM.mediaPlayer.style.transform = "translateY(0%)";
                this.DOM.mediaPlayer?.classList.remove("media-player--active");
            }, 250);
        };
        const isMobile = document.documentElement.classList.contains("touch");
        const isEmbedPlaylist = document.querySelector("html.embed #content[data-child=playlist]");
        if (isMobile && !isEmbedPlaylist) {
            this.DOM.mediaPlayer.addEventListener("click", this.expandPlayer);
            this.DOM.banner_close.addEventListener("click", (e)=>{
                e?.stopPropagation();
                this.collapsePlayer();
            });
            document.addEventListener("popstate", this.collapsePlayer);
        }
    }
    shareUserPlaylist(e, btn) {
        // this is now the menu
        const menu = btn.parentElement.querySelector(".mp-dropmenu");
        const editPlaylist = (playlist)=>{
            playlist.classList.add("pl-adding");
            const close = playlist.querySelector("#close-icon");
            const input = playlist.querySelector("input");
            const text = playlist.querySelector(".player-page-btn--text");
            const save2 = (e)=>{
                if (e.code == "Enter") save();
            };
            const save = async ()=>{
                close?.removeEventListener("mousedown", save);
                input?.removeEventListener("blur", save);
                input?.removeEventListener("keydown", save2);
                if (!playlist) return;
                const pl_id = playlist.id;
                playlist.classList.remove("pl-adding");
                let name = input.value;
                if (!name || text.innerHTML === name) return;
                const params = new URLSearchParams();
                params.set("userid", this.main.user?.user?.ID);
                params.set("playlist_key", pl_id);
                params.set("name", name);
                text.innerHTML = "Saving...";
                const url = `/wp-json/sdv/player/v1/edit-user-playlist?${params}`;
                const resp = await fetch(url, {
                    method: "POST"
                });
                const res = await resp.json();
                if (res === "unauthorized") return;
                const addToPl = document.getElementById("menu-list").querySelector(`#${pl_id}-add`);
                if (addToPl) addToPl.innerHTML = name;
                text.innerHTML = name;
                this.refreshPlaylistPage();
            };
            close.addEventListener("mousedown", save);
            input.addEventListener("blur", save);
            input.addEventListener("keydown", save2);
            setTimeout(()=>input.focus(), 500);
        };
        const deletePlaylist = (playlist)=>{
            // show popup
            const html = _eta.render((0, _deleteConfirmationEtaDefault.default), {
                name: playlist.querySelector(".player-page-btn--text")?.innerHTML
            });
            let dialog = document.createElement("div");
            document.body.append(dialog);
            dialog.outerHTML = html;
            const dialog_bg = document.getElementById("delete-conf-dialog-background");
            dialog = document.getElementById("delete-conf-dialog");
            const closeDialog = ()=>{
                dialog.remove();
                dialog_bg.remove();
            };
            const confirmDelete = async ()=>{
                if (!playlist) return;
                const pl_id = playlist.id;
                // remove playlist
                if (window.location.pathname + window.location.search === playlist.dataset.href) document.getElementById("playlists-link").click();
                document.getElementById("menu-list").querySelector(`#${pl_id}-add`)?.remove();
                playlist.remove();
                // delete request
                const params = new URLSearchParams();
                params.set("userid", this.main.user?.user?.ID);
                params.set("playlist_key", pl_id);
                const url = `/wp-json/sdv/player/v1/delete-user-playlist?${params}`;
                closeDialog();
                const resp = await fetch(url, {
                    method: "POST"
                });
                const res = await resp.json();
                if (res === "unauthorized") return;
                this.refreshPlaylistPage();
            };
            const cancel_btn = dialog.querySelector("#cancel-conf-btn");
            cancel_btn.addEventListener("click", closeDialog);
            dialog_bg.addEventListener("click", closeDialog);
            const del_btn = dialog.querySelector("#delete-conf-btn");
            del_btn.addEventListener("click", confirmDelete);
        };
        if (!menu.dataset.events) {
            menu.dataset.events = true;
            const editBtn = menu.querySelector("#edit-playlist-name");
            editBtn.addEventListener("click", ()=>editPlaylist(btn.parentElement));
            const deleteBtn = menu.querySelector("#delete-this-playlist");
            deleteBtn.addEventListener("click", ()=>deletePlaylist(btn.parentElement));
        }
        const hideMenu = ()=>{
            menu.style.display = "none";
            document.removeEventListener("click", hideMenu);
        };
        if (menu.style.display === "unset") {
            menu.style.display = "none";
            menu.classList.remove("stickout");
            document.removeEventListener("click", hideMenu);
        } else {
            document.querySelectorAll(".mp-menu, .mp-dropmenu, .mp-removemenu")?.forEach((el)=>el.style.display = "none");
            menu.style.display = "unset";
            menu.classList.add("stickout");
            document.addEventListener("click", hideMenu);
            e?.stopPropagation();
        }
    // this.share(window.location.origin + btn.parentElement.dataset.href, true);
    }
    currentPodcast() {
        const index = this.state.index;
        const playlist = this.state.shuffle ? this.shuffledPlaylist : this.playlist;
        return playlist[index];
    }
    togglePlaylistMenu(e, forceHide = false) {
        const menuList = this.DOM.menuList;
        const menuBtn = this.DOM.menuBtn;
        if (forceHide || menuList.style.display === "block") {
            menuList.style.display = "none";
            menuBtn.classList.add("mp-btn");
            document.removeEventListener("click", this.togglePlaylistMenu);
        } else {
            document.querySelectorAll(".mp-menu, .mp-dropmenu, .mp-removemenu")?.forEach((el)=>el.style.display = "none");
            menuList.style.display = "block";
            menuBtn.classList.remove("mp-btn");
            document.addEventListener("click", ()=>this.togglePlaylistMenu(e, true));
            e?.stopPropagation();
        }
    }
    async getUserPlaylists() {
        const params = new URLSearchParams();
        params.set("userid", this.main.user?.user?.ID);
        const url = `/wp-json/sdv/player/v1/get-user-playlists?${params}`;
        const resp = await fetch(url);
        this.user_playlists = await resp.json();
    }
    async playPlaylist(id, ismodule = false) {
        if (!id && !ismodule) return;
        const params = new URLSearchParams();
        params.set("id", id);
        const url = `/wp-json/sdv/player/v1/get-playlist?${params}`;
        let playlist = this.nextPlaylist;
        this.nextPlaylist = [];
        if (!ismodule) {
            const resp = await fetch(url);
            const respJson = await resp.json();
            playlist = respJson?.modules;
        }
        this.playlist = [];
        if (playlist) for (const module of playlist){
            const podcast = {
                title: module.title || module.post_title,
                byline: module.byline,
                image: module.image || module.img,
                src: module.src,
                id: module.id || module.ID,
                liked: module.liked,
                link: module.link,
                img: module.img
            };
            this.playlist.push(podcast);
        }
        this.updateState({
            index: 0
        });
        if (this.state.shuffle) this.shuffledPlaylist = this.shufflePlaylist();
        this.load(this.playlist[0]);
    }
    regModuleClick() {
        document.querySelectorAll(".p-m").forEach((module)=>{
            module.addEventListener("click", (e)=>{
                this.postid = module.dataset.id;
                window.history.pushState({
                    "player_href": "module",
                    postid: this.postid
                }, document.title, module.dataset.href);
                this.lastload = (0, _moduleSingleDefault.default).load;
                this.lastload();
            });
        });
    }
    regUserPlaylistClick() {
        document.querySelectorAll(".player-page__nav-playlists span.mouseHover").forEach((pl)=>{
            pl.querySelector("input").addEventListener("click", (e)=>e.stopPropagation());
            this.clickUserPlaylist(pl);
        });
    }
    clickUserPlaylist(playlist) {
        let clickCount = 0;
        const showPlaylist = (playlist)=>{
            window.history.pushState({
                "player_href": "playlist"
            }, document.title, playlist.dataset.href);
            this.lastload = (0, _playlistSingleDefault.default).load;
            this.lastload();
        };
        playlist.addEventListener("mousedown", (e)=>{
            if ([
                "svg",
                "path",
                "ul",
                "li"
            ].includes(e.target.tagName.toLowerCase()) || e.target.id === "share-icon") return;
            showPlaylist(playlist);
        // clickCount++;
        // if (("which" in e && e.which == 3) || ("button" in e && e.button == 2)) {
        //   editPlaylist(playlist); // right-click
        //   clickCount = 0;
        // }
        // else if (clickCount === 1) {
        //   setTimeout(() => {
        //     if (clickCount === 1) showPlaylist(playlist); // single-click
        //     else if (clickCount === 2) editPlaylist(playlist); // double-click
        //     clickCount = 0;
        //   }, 300);
        // }
        });
    }
    regPlaylistClick() {
        document.querySelectorAll(".player-playlist").forEach((playlist)=>{
            playlist.addEventListener("click", (e)=>{
                this.postid = playlist.dataset.id;
                window.history.pushState({
                    "player_href": "playlist",
                    postid: this.postid
                }, document.title, playlist.dataset.href);
                this.lastload = (0, _playlistSingleDefault.default).load;
                this.lastload();
            });
        });
    }
    regModuleFilters(module) {
        const genFilterElem = (filters, filter, type, i)=>{
            const filterElem = document.createElement("span");
            filterElem.id = `${type}-${i}`;
            filterElem.dataset.id = filter.id;
            filterElem.dataset.type = type;
            filterElem.classList.add("player-page__filter-item");
            filterElem.classList.add("mouseHover");
            filterElem.innerHTML = filter.name;
            filters.appendChild(filterElem);
        };
        // add cats
        const cats = document.querySelector(".player-page__filter-items--cats");
        cats.innerHTML = "";
        if (module?.cats) module?.cats?.map((x)=>new Object({
                id: x.term_id,
                name: x.name
            }))?.forEach((cat, i)=>genFilterElem(cats, cat, "cat", i));
        // add tags
        const tags = document.querySelector(".player-page__filter-items--tags");
        tags.innerHTML = "";
        if (module?.tags) module?.tags?.map((x)=>new Object({
                id: x.ID,
                name: x.post_title
            }))?.forEach((tag, i)=>genFilterElem(tags, tag, "tag", i));
        // add topics
        const topics = document.querySelector(".player-page__filter-items--topics");
        topics.innerHTML = "";
        if (module?.topics) module?.topics?.map((x)=>new Object({
                id: x.ID,
                name: x.post_title
            }))?.forEach((topic, i)=>genFilterElem(topics, topic, "topic", i));
        const moduleFilterBtns = document.querySelectorAll(".player-page__filters--modules .player-page__filter-item");
        moduleFilterBtns.forEach((btn)=>{
            btn.addEventListener("click", (e)=>{
                this.search_term = btn.innerText;
                this.search_term_tax = btn.dataset.type;
                const params = new URLSearchParams(window.location.search);
                params.set("term", this.search_term);
                params.set("tax", this.search_term_tax);
                this.DOM.searchBars?.forEach((x)=>x.blur());
                // clear selected cats
                const actClass = "player-page__filter-item--active";
                document.querySelectorAll(`.${actClass}`).forEach((filter)=>filter.classList.remove(actClass));
                this.state.filters = {
                    cats: [],
                    tags: [],
                    topics: []
                };
                window.history.pushState({
                    "player_href": "search"
                }, document.title, `${this.main.acf.search_podcasts_page_link}?${params}`);
                this.lastload = (0, _searchDefault.default).load;
                this.lastload();
            });
        });
    }
    regModuleButtons() {
        const playBtns = document.querySelectorAll(".module-play-btn");
        const likeBtns = document.querySelectorAll(".module-like-btn");
        const menuBtns = document.querySelectorAll(".module-menu-btn");
        const menuRemoveBtns = document.querySelectorAll(".module-remove-menu-btn");
        const menuDetailBtns = document.querySelectorAll(".module-detail-menu-btn");
        const readTranscriptBtn = document.querySelector(".module-read-transcript");
        readTranscriptBtn?.addEventListener("click", (e)=>{
            const transcript = document.querySelector(".player-module-page__transcript");
            transcript.classList.add("expanded-transcript");
        });
        playBtns.forEach((btn)=>{
            btn.addEventListener("click", async (e)=>{
                e?.stopPropagation();
                const parent = btn.parentElement;
                if (btn.dataset.fetch) {
                    const params = new URLSearchParams();
                    params.set("id", parent.dataset.id || 0);
                    const url = `/wp-json/sdv/player/v1/get-module?${params}`;
                    const postsResp = await fetch(url);
                    const module = await postsResp.json();
                    this.nextPlaylist = [
                        module
                    ];
                }
                this.playPlaylist(parent.dataset.id, true);
            });
        });
        likeBtns.forEach((btn)=>{
            btn.addEventListener("click", async (e)=>{
                e?.stopPropagation();
                const parent = btn.parentElement;
                const liked = parent.dataset.liked === "true";
                this.updateLikeButton({
                    liked: !liked
                }, btn);
                if (this.currentPodcast()?.id == parent.dataset?.id) {
                    this.currentPodcast().liked = !liked;
                    this.updateLikeButton(this.currentPodcast());
                }
                parent.dataset.liked = await this.like(parent.dataset.id, liked);
            });
        });
        menuBtns.forEach((btn)=>{
            btn.addEventListener("click", (e)=>{
                e?.stopPropagation();
                const parent = btn.parentElement;
                const currMenu = parent.querySelector(".mp-menu");
                const hideMenu = ()=>{
                    const currMenu = parent.querySelector(".mp-menu")?.remove();
                    if (currMenu) currMenu.remove();
                    document.removeEventListener("click", hideMenu);
                };
                if (currMenu) {
                    currMenu.remove();
                    document.removeEventListener("click", hideMenu);
                    return;
                }
                document.querySelectorAll(".mp-menu, .mp-dropmenu, .mp-removemenu")?.forEach((el)=>el.style.display = "none");
                document.addEventListener("click", hideMenu);
                // duplicate menu list
                const newList = document.getElementById("menu-list").cloneNode(true);
                newList.id = "";
                newList.style.display = "block";
                // attach to menu btn
                btn.appendChild(newList);
                // attach events
                newList.addEventListener("click", (e)=>this.addToPlaylist(e, parent.dataset.id));
            });
        });
        menuRemoveBtns.forEach((btn)=>{
            btn.addEventListener("click", (e)=>{
                e?.stopPropagation();
                const module = btn.parentElement;
                const menu = module.querySelector(".mp-removemenu");
                const hideMenu = ()=>{
                    menu.style.display = "none";
                    document.removeEventListener("click", hideMenu);
                };
                if (!menu.dataset.events) {
                    menu.dataset.events = true;
                    const cancel_btn = menu.querySelector("#cancel-from-playlist");
                    cancel_btn.addEventListener("click", (e)=>{
                        hideMenu();
                        e?.stopPropagation();
                    });
                    const remove_btn = menu.querySelector("#remove-from-playlist");
                    remove_btn.addEventListener("click", (e)=>{
                        hideMenu();
                        const params = new URLSearchParams(window.location.search);
                        const upid = params.get("upid");
                        this.removeFromPlaylist(upid, module.dataset.id);
                        e?.stopPropagation();
                    });
                }
                if (menu.style.display === "unset") {
                    menu.style.display = "none";
                    menu.classList.remove("stickout");
                    document.removeEventListener("click", hideMenu);
                } else {
                    document.querySelectorAll(".mp-menu, .mp-dropmenu, .mp-removemenu")?.forEach((el)=>el.style.display = "none");
                    menu.style.display = "unset";
                    menu.classList.add("stickout");
                    document.addEventListener("click", hideMenu);
                }
            });
        });
        menuDetailBtns.forEach((btn)=>{
            btn.addEventListener("click", (e)=>{
                e?.stopPropagation();
                const module = btn.parentElement;
                const detail = module.querySelector(".mp-detailmenu");
                const hideMenu = ()=>{
                    module.style.height = "unset";
                    detail.style.display = "none";
                    module.classList.remove("show-detail");
                };
                if (detail.style.display === "block") {
                    hideMenu();
                    document.removeEventListener("click", hideMenu);
                } else {
                    module.style.height = "auto";
                    detail.style.display = "block";
                    module.classList.add("show-detail");
                    document.removeEventListener("click", hideMenu);
                }
            });
        });
    }
    setupFilters(x) {
        x.addEventListener("click", async ()=>{
            const classname = "player-page__filter-item--active";
            let key;
            if (x.id.includes("cat")) key = "cats";
            if (x.id.includes("tag")) key = "tags";
            if (x.id.includes("topic")) key = "topics";
            const filterArr = this.state.filters[key];
            if (x.classList.contains(classname)) {
                x.classList.remove(classname);
                let index = filterArr.indexOf(x.dataset.id);
                if (index !== -1) filterArr.splice(index, 1);
            } else {
                x.classList.add(classname);
                filterArr.push(x.dataset.id);
            }
            // clearTimeout(this.filterChanged);
            this.lastload();
        // this.filterChanged = setTimeout(() => snackbar.classList.remove("snackbar--visible"), 2500);
        });
    }
    docSliderHandler(e) {
        if (e.buttons == 1) switch(this.state.itemScrolling){
            case "volume":
                this.volumeHandle(e);
                break;
            case "seek":
                this.seekHandle(e);
                break;
            default:
                break;
        }
        else this.updateState({
            itemScrolling: ""
        });
    }
    volumeHandle(e) {
        e.preventDefault();
        if (e.buttons == 1) {
            const y = this.DOM.volSlider.getBoundingClientRect().bottom - e.pageY;
            const height = this.DOM.volSlider.clientHeight;
            let percent = y / height;
            percent = percent <= 1 ? percent : 1;
            percent = percent >= 0 ? percent : 0;
            (0, _audioLibDefault.default).volumeOnHandle(percent);
            this.updateState({
                itemScrolling: "volume"
            });
        }
    }
    seekHandle(e) {
        e.preventDefault();
        if (e.buttons == 1) {
            const x = e.pageX - this.DOM.seekbar.offsetLeft;
            const width = this.DOM.seekbar.clientWidth;
            let percent = x / width;
            percent = percent <= 1 ? percent : 1;
            percent = percent >= 0 ? percent : 0;
            (0, _audioLibDefault.default).seekOnHandle(percent);
            this.updateState({
                itemScrolling: "seek"
            });
        }
    }
    // volume
    toggleVolControls(e, forceHide = false) {
        const volCtrl = this.DOM.volCtrl;
        const volBtn = this.DOM.volBtn;
        if (forceHide || volCtrl.style.display === "block") {
            volCtrl.style.display = "none";
            volBtn.classList.add("mp-btn");
            document.removeEventListener("click", this.toggleVolControls);
        } else {
            volCtrl.style.display = "block";
            volBtn.classList.remove("mp-btn");
            document.addEventListener("click", this.toggleVolControls);
            e?.stopPropagation();
        }
    }
    async like(id, liked = false) {
        const index = this.state.index;
        let podcast;
        const params = new URLSearchParams();
        params.set("userid", this.main.user?.user?.ID);
        if (!id) {
            podcast = this.playlist[index];
            id = podcast.id;
            liked = podcast.liked;
            podcast.liked = !podcast.liked;
            this.updateLikeButton(podcast);
        }
        params.set("podcast_id", id);
        params.set("remove", liked);
        const url = `/wp-json/sdv/player/v1/like-podcast?${params}`;
        await fetch(url, {
            method: "POST"
        });
        return !liked;
    }
    updateButtons() {
        const loop = this.state.loop;
        const loopBtn = this.DOM.loopBtn;
        if (loop) loopBtn.classList.add("mp-btn--active");
        else loopBtn.classList.remove("mp-btn--active");
        const shuffle = this.state.shuffle;
        const shuffleBtn = this.DOM.shuffleBtn;
        if (shuffle) shuffleBtn.classList.add("mp-btn--active");
        else shuffleBtn.classList.remove("mp-btn--active");
    }
    updateLikeButton({ liked  }, btn) {
        const likeBtn = btn || this.DOM.likeBtn;
        if (liked) {
            likeBtn.innerHTML = (0, _iconsDefault.default).heart_filled;
            likeBtn.classList.add("heart--filled");
        } else {
            likeBtn.innerHTML = (0, _iconsDefault.default).heart;
            likeBtn.classList.remove("heart--filled");
        }
    }
    // snackbar
    showSnackbar(message) {
        const snackbar = this.DOM.snackbar;
        clearTimeout(this.snackbarShowing);
        snackbar.style.display = "unset";
        setTimeout(()=>{
            if (message) snackbar.innerHTML = message;
            snackbar.classList.add("snackbar--visible");
            this.snackbarShowing = setTimeout(()=>snackbar.classList.remove("snackbar--visible"), 3000);
            setTimeout(()=>snackbar.style.display = "none", 3500);
        }, 100);
    }
    // audio
    replay() {
        if (this.state.loop) (0, _audioLibDefault.default).play();
        else this.next();
    }
    load(podcast) {
        setTimeout(()=>{
            this.DOM.mediaPlayer.style.height = null;
            this.DOM.mediaPlayer.style.overflow = "unset";
        }, 500);
        (0, _audioLibDefault.default).load(podcast, this.playlist, this.state.index);
        this.DOM.mobile_image.src = podcast.img;
        this.DOM.banner_title.innerHTML = podcast.title;
        this.DOM.banner_byline.innerHTML = podcast.byline;
        this.DOM.title.innerHTML = podcast.title;
        this.DOM.byline.innerHTML = podcast.byline;
        this.updateLikeButton(podcast);
    // audioLib.play();
    }
    prev(e) {
        e?.stopPropagation();
        const index = this.state.index;
        const playlist = this.state.shuffle ? this.shuffledPlaylist : this.playlist;
        const prevIndex = (index + playlist.length - 1) % playlist.length;
        const podcast = playlist[prevIndex];
        this.load(podcast);
        this.updateState({
            index: prevIndex
        });
    }
    next(e) {
        e?.stopPropagation();
        if (this.isSinglePlaylist()) return;
        const index = this.state.index;
        const playlist = this.state.shuffle ? this.shuffledPlaylist : this.playlist;
        const nextIndex = (index + 1) % playlist.length;
        const podcast = playlist[nextIndex];
        this.load(podcast);
        this.updateState({
            index: nextIndex
        });
    }
    loop() {
        if (this.isSinglePlaylist()) return;
        const loop = !this.state.loop;
        const btn = this.DOM.loopBtn;
        if (loop) btn.classList.add("mp-btn--active");
        else btn.classList.remove("mp-btn--active");
        this.updateState({
            loop
        });
    }
    shuffle() {
        if (this.isSinglePlaylist()) return;
        const shuffle = !this.state.shuffle;
        let index = 0;
        const btn = this.DOM.shuffleBtn;
        if (shuffle) {
            btn.classList.add("mp-btn--active");
            this.shuffledPlaylist = this.shufflePlaylist();
        } else {
            const podcast = this.shuffledPlaylist[index];
            btn.classList.remove("mp-btn--active");
            index = this.playlist.findIndex((x)=>x.src === podcast.src);
        }
        this.updateState({
            shuffle,
            index
        });
    }
    shufflePlaylist() {
        const array = this.playlist?.slice();
        for(let i = array.length - 1; i > 0; i--){
            let j = Math.floor(Math.random() * (i + 1));
            [array[i], array[j]] = [
                array[j],
                array[i]
            ];
        }
        let index = array.findIndex((x)=>x.src === this.playlist[this.state.index].src);
        let elem = array.splice(index, 1)[0];
        array.unshift(elem);
        return array;
    }
    // utils
    updateState(state) {
        for (const [key, value] of Object.entries(state))this.state[key] = value;
        localStorage.setItem("loop", this.state.loop);
        localStorage.setItem("shuffle", this.state.shuffle);
    }
    formatDate(dateStr) {
        const date = new Date(dateStr);
        const year = date.getFullYear();
        const month = date.toLocaleString("default", {
            month: "short"
        });
        const day = date.getDate();
        return `${month} ${day}, ${year}`;
    }
    formatDuration(duration, mmhh = false) {
        if (mmhh) {
            const minutes = Math.floor(duration / 60);
            const seconds = Math.floor(duration % 60);
            return `${minutes}:${seconds.toString().padStart(2, "0")}`;
        }
        if (duration < 60) return duration + " Secs";
        else if (duration < 3600) return Math.floor(duration / 60) + " Mins";
        else return Math.floor(duration / 3600) + " Hrs";
    }
    async ajaxImages() {
        let newpage = document.createElement("template");
        newpage.innerHTML = this.html;
        let paths = Array.from(newpage.content.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        return Promise.resolve();
    }
    async blocksClick(type) {
        this.DOM.holder.classList.add("load");
        await this.timeout(600);
        if (type == "block") this.DOM.holder.classList.add("blocks");
        else this.DOM.holder.classList.remove("blocks");
        this.DOM.holder.classList.remove("load");
        this.resizeLimit();
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            this.anims[pos].stick.active = 0;
                            this.movestick = null;
                        } else if (id == "v") clearInterval(this.clockInt);
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "e") {
                            this.anims[pos].classel.start();
                            this.slidetext = this.anims[pos];
                        } else if (id == "v") this.clockStart(this.anims[pos].el.parentNode.querySelector(".time"));
                        else if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.movestick = this.anims[pos];
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) super.smoothScroll();
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    modifyNav(show = false) {
        const accountBtn = document.querySelector(".nav_buttons #my-account-btn");
        const searchBtn = document.querySelector(".nav_search");
        const mpNav = document.querySelector(".nav-mp-mobile");
        const navBtn = document.querySelector(".nav_burger");
        if (!show) {
            // hide items
            searchBtn.style.maxHeight = "0%";
            navBtn.style.maxHeight = "0%";
            mpNav.style.maxHeight = "100%";
            // make target blank
            accountBtn.target = "_blank";
        } else {
            // show items
            searchBtn.style.maxHeight = "100%";
            navBtn.style.maxHeight = "100%";
            mpNav.style.maxHeight = "0%";
            // make target not blank
            accountBtn.target = "_self";
        }
    }
    async show() {
        this.timeout(1);
        window.history.replaceState({
            "player_href": this.playerPage
        }, document.title, window.location.href);
        this.modifyNav();
        // load the current loaded pages playlist
        if (this.playerPage === "browse") this.lastload = (0, _browseDefault.default).load;
        else if (this.playerPage === "playlists") this.lastload = (0, _playlistsDefault.default).load;
        else if (this.playerPage === "liked-podcasts") this.lastload = (0, _likedPodcastsDefault.default).load;
        else if (this.playerPage === "playlist") this.lastload = (0, _playlistSingleDefault.default).load;
        else if (this.playerPage === "module") this.lastload = (0, _moduleSingleDefault.default).load;
        else if (this.playerPage === "search") this.lastload = (0, _searchDefault.default).load;
        else this.lastload = (0, _discoverDefault.default).load;
        await this.lastload();
        this.playPlaylist(0, true);
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        document.removeEventListener("popstate", this.collapsePlayer);
        this.modifyNav(true);
        return super.hide();
    }
    async register() {
        let formdata = new FormData();
        const firstName = this.email.split("@")[0];
        formdata.set("email", this.email);
        formdata.set("first_name", firstName);
        formdata.set("last_name", "");
        formdata.set("pronoun", "");
        const registerRes = await fetch(this.main.acf.base + "/wp-json/csskiller/v1/register", {
            method: "post",
            body: formdata
        });
        const registerUser = await registerRes.json();
        this.main.user = registerUser;
    }
};

},{"../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./template.eta":"bkg5m","../MediaPlayer/audioLib":"3t3d1","bundle-text:./emailRequired.eta":"1OrbL","../MediaPlayer/Discover":"i4PLA","../MediaPlayer/Browse":"gLR6B","../MediaPlayer/Playlists":"ah2XJ","../MediaPlayer/Playlist Single":"gVPWn","../MediaPlayer/Module Single":"lVp4N","../MediaPlayer/Liked_Podcasts":"9Ls4E","../MediaPlayer/Search":"9VyAs","eta":"blnnU","../Login🥸/LinkedinLogin/Dialog":"8Lgst","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup","../../js🧠🧠🧠/basic/icons🔰":"kmKjG","bundle-text:../MediaPlayer/Templates/Playlist/new-playlist.eta":"2ynz7","bundle-text:../MediaPlayer/Templates/Playlist/delete-confirmation.eta":"4zcZA","bundle-text:/src/views👁️👁️👁️/404/notlogged.eta":"717Qy","bundle-text:/src/views👁️👁️👁️/404/notallowed.eta":"hJaUM"}],"bkg5m":[function(require,module,exports) {
module.exports = "<main class=\"player-archive\" style=\"--brand-color: <%~ it?.global?.sponsor?.color %>\">\n  <section class=\"player-header\">\n    <div class=\"player-header__logo\">\n      <img src=\"<%~ it?.global?.sponsor?.logo %>\">\n    </div>\n\n    <div class=\"player-header__search\">\n      <input id=\"player-search-bar\" type=\"text\" placeholder=\"Search..\">\n    </div>\n\n    <div class=\"player-header__profile\">\n      <div class=\"player-header__profile-img\"><img src=\"<%~ it?.global?.sponsor?.icon %>\"/></div>\n      <span class=\"player-header__profile-name\"><%~ it.global.user?.acf?.firstname%></span>\n      <span class=\"player-header__profile-email\"><%~ it.global.email%></span>\n    </div>\n  </section>\n\n  <section class=\"player-page\">\n    <div class=\"player-page__nav\">\n      <div class=\"player-page__nav-tabs\">\n        <span id=\"discover-link\" class=\"player-page__nav-link mouseHover\" data-href=\"discover\">\n          <span class=\"player-page-btn--icon\"><%~it.global.icons.grid%></span>\n          <span class=\"player-page-btn--text\">Discover</span>\n        </span>\n\n        <span id=\"browse-link\" class=\"player-page__nav-link mouseHover\" data-href=\"browse\">\n          <span class=\"player-page-btn--icon\"><%~it.global.icons.book%></span>\n          <span class=\"player-page-btn--text\">Browse</span>\n        </span>\n\n        <span id=\"playlists-link\" class=\"player-page__nav-link mouseHover\" data-href=\"playlists\">\n          <span class=\"player-page-btn--icon\"><%~it.global.icons.history%></span>\n          <span class=\"player-page-btn--text\">Playlists</span>\n        </span>\n      </div>\n\n      <div class=\"player-page__nav-buttons\">\n        <span class=\"player-page__nav-link mouseHover\" data-href=\"create-playlist\">\n          <span class=\"player-page-btn--icon\"><%~it.global.icons.plus%></span>\n          <span class=\"player-page-btn--text\">Create Playlist</span>\n        </span>\n\n        <span class=\"player-page__nav-link mouseHover\" data-href=\"liked-podcasts\">\n          <span class=\"player-page-btn--icon\"><%~it.global.icons.heart%></span>\n          <span class=\"player-page-btn--text\">Liked Modules</span>\n        </span>\n      </div>\n\n      <div class=\"player-page__nav-playlists\">\n        <% Object.entries(it.user_playlists).forEach(([key, playlist]) => { %>\n          <span id=\"<%~ key%>\" class=\"mouseHover\" data-href=\"<%~ playlist.link%>\">\n            <span class=\"player-page-btn--input\" id=\"input-playlist-name\"><input type=\"text\" placeholder=\"Custom Playlist\"></span>\n            <span class=\"player-page-btn--text\"><%~ playlist.name%></span>\n            <span class=\"player-page-btn--icon share-user-pl-btn\" id=\"share-icon\"><%~it.global.icons.menu%></span>\n            <span class=\"player-page-btn--icon save-pl-btn\" id=\"close-icon\"><%~it.global.icons.check%></span>\n            <ul class=\"mp-dropmenu\" aria-label=\"Modify Playlist\">\n              <li id=\"edit-playlist-name\">Edit Playlist Name</li>\n              <li id=\"delete-this-playlist\">Delete This Playlist</li>\n            </ul>\n          </span>\n        <% }) %>\n      </div>\n    </div>\n\n    <div class=\"player-header__search-mobile\">\n      <input id=\"player-search-bar\" type=\"text\" placeholder=\"Search..\">\n    </div>\n\n    <div class=\"player-page__nav-mobile player-page__nav-tabs\">\n      <span id=\"discover-link\" class=\"player-page__nav-link mouseHover\" data-href=\"discover\">\n        <span class=\"player-page-btn--icon\"><%~it.global.icons.grid%></span>\n        <span class=\"player-page-btn--text\">Discover</span>\n      </span>\n\n      <span id=\"browse-link\" class=\"player-page__nav-link mouseHover\" data-href=\"browse\">\n        <span class=\"player-page-btn--icon\"><%~it.global.icons.book%></span>\n        <span class=\"player-page-btn--text\">Browse</span>\n      </span>\n\n      <span id=\"playlists-link\" class=\"player-page__nav-link mouseHover\" data-href=\"playlists\">\n        <span class=\"player-page-btn--icon\"><%~it.global.icons.history%></span>\n        <span class=\"player-page-btn--text\">Playlists</span>\n      </span>\n\n      <span id=\"liked-podcasts-link\"  class=\"player-page__nav-link mouseHover\" data-href=\"liked-podcasts\">\n        <span class=\"player-page-btn--icon\"><%~it.global.icons.heart%></span>\n        <span class=\"player-page-btn--text\">Liked</span>\n      </span>\n    </div>\n\n    <div class=\"player-page__content\"></div>\n\n    <div class=\"player-page__filters\">\n      <% const filter_label = it.global.acf?.filter_label ?? \"Popular\"; %>\n      <div class=\"player-page__category-filter\">\n        <h2><%~ filter_label %> Categories</h2>\n\n        <div class=\"player-page__filter-items\">\n          <% it.filters.cats.forEach(({id, name},i) => { %>\n            <span id=\"cat-<%~i%>\" data-id=\"<%~id%>\" class=\"player-page__filter-item mouseHover\"><%~name%></span>\n          <% }) %>\n        </div>\n      </div>\n\n      <div class=\"player-page__tag-filter\">\n        <h2><%~ filter_label %> Tags</h2>\n\n        <div class=\"player-page__filter-items\">\n          <% it.filters.tags.forEach(({id, name},i) => { %>\n            <span id=\"tag-<%~i%>\" data-id=\"<%~id%>\" class=\"player-page__filter-item mouseHover\"><%~name%></span>\n          <% }) %>\n        </div>\n      </div>\n      \n      <div class=\"player-page__topic-filter\">\n        <h2><%~ filter_label %> Topics</h2>\n\n        <div class=\"player-page__filter-items\">\n          <% it.filters.topics.forEach(({id, name},i) => { %>\n            <span id=\"topic-<%~i%>\" data-id=\"<%~id%>\" class=\"player-page__filter-item mouseHover\"><%~name%></span>\n          <% }) %>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"player-page__filters player-page__filters--modules\">\n      <div class=\"player-page__category-filter\">\n        <h2>Module Categories</h2>\n\n        <div class=\"player-page__filter-items player-page__filter-items--cats\"></div>\n      </div>\n\n      <div class=\"player-page__tag-filter\">\n        <h2>Module Tags</h2>\n\n        <div class=\"player-page__filter-items player-page__filter-items--tags\"></div>\n      </div>\n      \n      <div class=\"player-page__topic-filter\">\n        <h2>Module Topics</h2>\n\n        <div class=\"player-page__filter-items player-page__filter-items--topics\"></div>\n      </div>\n    </div>\n  </section>\n\n  <div class=\"player-archive-fixed\">\n    <section class=\"media-player\" style=\"height: 0;\">\n      <audio id=\"audio-player\"></audio>\n      <div class=\"media-player__banner\">\n        <img src=\"<%~ it?.global?.sponsor?.icon %>\"/>\n        <h3>DROPBOX AND #BLACKLIVESMATT...</h3>\n        <span>by Living Corporate</span>\n        <span id=\"close-mp-btn\"><%~ it.global.icons.close %></span>\n      </div>\n\n      <div class=\"media-player__image\">\n        <img src=\"<%~ it?.global?.sponsor?.icon %>\"/>\n      </div>\n\n      <div class=\"media-player__buttons media-player__buttons-1\">\n        <span class=\"mp-btn mouseHover\" id=\"prev-btn\"><%~ it.global.icons.rewind %></span>\n        <span class=\"mp-btn mouseHover\" id=\"play-btn\"><%~ it.global.icons.play %></span>\n        <span class=\"mp-btn mouseHover\" id=\"next-btn\"><%~ it.global.icons.rewind %></span>\n        <span class=\"mp-btn mouseHover\" id=\"loop-btn\"><%~ it.global.icons.loop %></span>\n        <span class=\"mp-btn mouseHover\" id=\"shuffle-btn\"><%~ it.global.icons.shuffle %></span>\n      </div>\n\n      <div class=\"media-player__info\">\n        <div class=\"media-player__title\">\n          <h3>DROPBOX AND #BLACKLIVESMATT...</h3>\n          <span>by Living Corporate</span>\n        </div>\n\n        <div class=\"media-player__time\">\n          <span id=\"curr-time\">0:00</span>\n          <span id=\"slash\">/</span>\n          <span id=\"end-time\">0:00</span>\n        </div>\n\n        <div class=\"media-player__seek-bar\">\n          <div id=\"progress\">\n            <span class=\"mouseHover\" id=\"handle\"></span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"media-player__buttons media-player__buttons-2\">\n        <span class=\"mp-btn mouseHover\" id=\"volume-btn\">\n          <%~ it.global.icons.volume %>\n          <div id=\"volume-control\" class=\"volume-btn-control\">\n            <div id=\"volume-slider\">\n              <div id=\"volume-progress\">\n                <span class=\"mouseHover\" id=\"volume-handle\"></span>\n              </div>\n            </div>\n          </div>\n        </span>\n        <span class=\"mp-btn mouseHover\" id=\"like-btn\"><%~ it.global.icons.heart %></span>\n        <span class=\"mp-btn mouseHover\" id=\"share-btn\"><%~ it.global.icons.share %></span>\n        <span class=\"mp-btn mouseHover\" id=\"menu-btn\">\n          <%~ it.global.icons.menu %>\n          <ul class=\"mp-menu\" id=\"menu-list\" aria-label=\"Add to playlist\">\n            <% Object.entries(it.user_playlists).forEach(([key, playlist]) => { %>\n              <li id=\"<%~ key%>-add\"><%~ playlist.name%></li>\n            <% }) %>\n          </ul>\n        </span>\n      </div>\n    </section>  \n    <%~ it.footer %>\n    <div class=\"snackbar\" id=\"snackbar\">Copied to clipboard</div>\n  </div>\n</main>\n";

},{}],"1OrbL":[function(require,module,exports) {
module.exports = "<main class=\"emailpage\">\n  <section>\n    <img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n    <div class=\"c-vw\">\n      <div class=\"box\">\n        <h2 class=\"tit1\">NEED EMAIL ADDRESS TO ACCESS THIS CONTENT</h2>\n\n        <div class=\"field field-email\">\n          <input class=\"field_npt emailRequire mouseHover evt\" placeholder=\"Your Email*\">\n          <div class=\"field_err\">Wrong Format : name@example.com</div>\n        </div>\n\n        <button class=\"btn mouseHover\" id=\"submit_email\"><div class=\"btn_t\">SUBMIT</div></button>\n      </div>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"2ynz7":[function(require,module,exports) {
module.exports = "<span class=\"player-page__nav-new-playlist pl-adding mouseHover\">\n    <span class=\"player-page-btn--input\" id=\"input-playlist-name\"><input type=\"text\" placeholder=\"Custom Playlist\"></span>\n    <span class=\"player-page-btn--text\">Saving...</span>\n    <span class=\"player-page-btn--icon share-user-pl-btn\" id=\"share-icon\" style=\"display: none\"><%~it.icons.menu%></span>\n    <span class=\"player-page-btn--icon save-pl-btn\" id=\"close-icon\"><%~it.icons.check%></span>\n    <ul class=\"mp-dropmenu\" aria-label=\"Modify Playlist\">\n        <li id=\"edit-playlist-name\">Edit Playlist Name</li>\n        <li id=\"delete-this-playlist\">Delete This Playlist</li>\n        <% if (it?.global?.user?.acf?.allow_share_playlist) { %>\n            <li id=\"share-this-playlist\">Share This Playlist</li>\n        <% } %>\n    </ul>\n</span>";

},{}],"4zcZA":[function(require,module,exports) {
module.exports = "<div id=\"delete-conf-dialog-background\"></div>\n<div id=\"delete-conf-dialog\">\n    <h3>Delete from library</h3>\n    <span>This will delete from \"<%~ it.name %>\" from your library.</span>\n\n    <div class=\"delete-dialog-btns\">\n        <button id=\"cancel-conf-btn\">Cancel</button>\n        <button id=\"delete-conf-btn\">Delete</button>\n    </div>\n</div>";

},{}],"717Qy":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! SIGN UP TO ACCESS THIS CONTENT</h2>\n<h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3>\n<a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"hJaUM":[function(require,module,exports) {
module.exports = "<main class=\"emailpage\">\r\n  <section>\r\n    <img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\r\n    <div class=\"c-vw\">\r\n      <div class=\"box\">\r\n        <h2 class=\"tit1\">YOU ARE NOT ALLOWED TO ACCESS THIS PLAYER</h2>\r\n        <button class=\"btn mouseHover\" id=\"refresh_page\"><div class=\"btn_t\">TRY AGAIN</div></button>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  <%~ it.footer %>\r\n</main>";

},{}],"1LKNP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
//COMPS
var _eta = require("eta");
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        const response = await fetch(this.main.acf.base + "/wp-json/wp/v2/job/" + content.dataset.id + "?acf_format=standard");
        const data = await response.json();
        // //  console.log(data)
        this.job = {
            id: content.dataset.id,
            template: "job",
            content: content,
            url: window.location.href
        };
        var html = _eta.render((0, _templateEtaDefault.default), {
            global: this.main,
            data: data,
            footer: this.footer
        });
        // //  console.log(html)
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)")
        };
        if (this.main.user != false) this.DOM.el.querySelector(".btnfull").addEventListener("click", ()=>{
            this.emit("toApply", this.job);
        });
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.DOM.hidetext = this.DOM.el.querySelector(".hidetext");
        this.DOM.clicktext = this.DOM.el.querySelector(".hidetext_click");
        this.DOM.holdtext = this.DOM.el.querySelector(".hidetext_hold");
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
        if (this.DOM.hidetext.clientHeight + 40 > this.DOM.holdtext.clientHeight) {
            this.DOM.clicktext.classList.add("act");
            (0, _gsap.gsap).to(this.DOM.hidetext, {
                height: this.DOM.holdtext.clientHeight + "px",
                duration: .6,
                onComplete: ()=>{
                    this.DOM.hidetext.classList.add("act");
                    this.DOM.hidetext.style.height = "";
                    this.resizeLimit();
                }
            });
        } else {
            this.textExpand = ()=>{
                this.isVisible = 0;
                // //  console.log(this.sticks)
                this.DOM.clicktext.classList.add("act");
                this.timeline = (0, _gsap.gsap).timeline({
                    paused: true
                })// .to(this.sticks[0].stick.son,{duration:.6,y:'+='+(this.DOM.holdtext.clientHeight - this.DOM.hidetext.clientHeight)+'px'},'a')
                // .to(this.sticks[0].stick,{duration:.6,current:'+='+(this.DOM.holdtext.clientHeight - this.DOM.hidetext.clientHeight),target:'+='+(this.DOM.holdtext.clientHeight - this.DOM.hidetext.clientHeight)},'a')
                .to(this.DOM.hidetext, {
                    height: this.DOM.holdtext.clientHeight + "px",
                    duration: .6,
                    onUpdate: ()=>{
                    // //  console.log(this.sticks)
                    },
                    onComplete: ()=>{
                        this.isVisible = 1;
                        this.DOM.hidetext.classList.add("act");
                        this.DOM.hidetext.style.height = "";
                        this.resizeLimit();
                    }
                }, "a");
                this.timeline.play();
            };
            this.DOM.clicktext.addEventListener("click", this.textExpand);
        }
        await this.loadImages();
        await this.createAnimations();
    //  this.slidrag = new Slidrag(this.DOM.el.querySelector('.swiper'))
    //  this.slidclick = new SlidClick(this.DOM.el.querySelector('.m-slidnum'))
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            this.anims[pos].stick.active = 0;
                            let index = this.sticks.indexOf(this.anims[pos]);
                            if (index > -1) this.sticks.splice(index, 1);
                            let goto = 0;
                            if (this.anims[pos].stick.son) {
                                if (entry.boundingClientRect.y < 0) goto = this.anims[pos].stick.limit;
                                this.anims[pos].stick.target = goto;
                                this.anims[pos].stick.current = goto;
                                this.anims[pos].stick.son.style[this.transform] = `translate3d(-${goto}px,0, 0)`;
                            }
                        } else if (id == "v") clearInterval(this.clockInt);
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.sticks.push(this.anims[pos]);
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) super.smoothScroll();
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        await this.timeout(1);
        // await this.animScroll.play()
        setTimeout(()=>{
            this.DOM.el.querySelector(".btnfull").classList.add("show");
        }, 2000);
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        return super.hide();
    }
};

},{"../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./template.eta":"aGlqt","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"aGlqt":[function(require,module,exports) {
module.exports = "<main class=\"jobsingle\">\n  <section class=\"m-bc\">\n    <div class=\"c-vw\">\n      <div class=\"bc\">\n        <a class=\"mouseHover\" href=\"<%~ it.global.acf.home %>\" data-type=\"index\">LC</a>\n        <span>/</span><a class=\"mouseHover\" href=\"<%~ it.global.acf.jobs %>\" data-type=\"jobarchive\">Job board</a>\n        <span>/</span><span><%~ it.data.title.rendered %></span>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-logointro\">\n    <div class=\"c-vw\"><img src=\"<%~ it.data.acf.client_logo_a %>\"></div>\n  </section>\n  <section class=\"jobsingle_main stck_base\" id=\"stck0\">\n    <div class=\"iO iO-stck stck_control\" data-stck=\"0\"></div>\n    <div class=\"stck_main\">\n      <div class=\"stck_main_hold\">\n        <% if(!it.global.user){ %>\n        <div class=\"btnfull\">\n          <span class=\"btnfull_t\">SIGN IN OR CREATE ACCOUNT TO APPLY</span>\n        </div>\n        <%}\n        else{\n        %>\n        <div class=\"btnfull btnfull-act mouseHover\">\n          <span class=\"btnfull_t\">APPLY</span>\n        </div>\n\n        <%\n        }%>\n      </div>\n    </div>\n    <div class=\"stck_hold\">\n      <div class=\"grid\">\n        <div class=\"jobsingle_main_title\">\n          <h2 class=\"tit4\"><%~ it.data.acf.client_a %></h2>\n          <h3 class=\"tit2\"><%~ it.data.title.rendered %></h3>\n          <div class=\"locate\">\n            <%~ it.global.icons.marker %>\n            <div class=\"locate_t\"><%~ it.data.ownpost_data.location %></div>\n          </div>\n        </div>\n        <div class=\"jobsingle_main_hold\">\n        <div class=\"tags\">\n          <% it.data.acf.tags.forEach(function(p,key){ %>\n          <span><%~ p.tag %></span>\n          <% }) %>\n        </div>\n        <div class=\"hidetext\">\n          <div class=\"hidetext_click\">\n            <div class=\"simp mouseHover\"><span>Show more</span></div>\n          </div>\n          <div class=\"hidetext_hold wp\">\n            <%~ it.data.acf.content %>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  \n  <section class=\"m-share\">\n    <div class=\"m-share_hold grid\">\n      <p>Share</p>\n      <div class=\"social\">\n        <a class=\"mouseHover Stw\" href=\"https://twitter.com/intent/tweet?url=<%~ it.data.link %>\"><%~ it.global.icons.tw %></a>\n        <a class=\"mouseHover Sfb\" href=\"https://www.facebook.com/sharer/sharer.php?u=<%~ it.data.link %>\"><%~ it.global.icons.fb %></a>\n        <a class=\"mouseHover Sin\" href=\"https://www.linkedin.com/shareArticle?url=<%~ it.data.link %>\"><%~ it.global.icons.in %></a>\n        <a class=\"mouseHover Srd\" href=\"https://www.reddit.com/submit?url=<%~ it.data.link %>\"><%~ it.global.icons.reddit %></a>\n        <a class=\"mouseHover Stb\" href=\"https://www.tumblr.com/share/link?url=<%~ it.data.link %>\"><%~ it.global.icons.tumbler %></a>\n      </div>\n    </div>\n  </section>\n  \n  <%~ it.footer %>\n</main>";

},{}],"lRMJY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
var _jobEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/job.eta");
var _jobEtaDefault = parcelHelpers.interopDefault(_jobEta);
//COMPS
var _eta = require("eta");
var _introJs = require("./intro.js");
var _introJsDefault = parcelHelpers.interopDefault(_introJs);
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        const response = await fetch(this.main.acf.base + "/wp-json/csskiller/v1/job/");
        const data = await response.json();
        // //  console.log(data)
        var html = _eta.render((0, _templateEtaDefault.default), {
            global: this.main,
            data: data,
            footer: this.footer
        });
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)")
        };
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.DOM.checks = this.DOM.el.querySelectorAll(".chk_npt");
        this.DOM.closefilters = this.DOM.el.querySelector(".activeFilters");
        this.DOM.total = this.DOM.el.querySelector(".totalSearch");
        this.DOM.holdfilters = this.DOM.el.querySelector(".holdFilters");
        this.DOM.chekshold = this.DOM.el.querySelector(".bottom_checks");
        this.DOM.checksels = this.DOM.el.querySelectorAll(".bottom_checks_el");
        this.DOM.checksclick = this.DOM.el.querySelectorAll(".catEl");
        this.DOM.clear = this.DOM.el.querySelector(".btnClear");
        this.DOM.holder = this.DOM.el.querySelector(".jobs_main_results");
        (0, _gsap.gsap).set(this.DOM.clear.parentNode.parentNode, {
            height: 0
        });
        (0, _gsap.gsap).set(this.DOM.chekshold, {
            height: this.DOM.checksels[0].clientHeight + "px"
        });
        this.DOM.checksclick[0].classList.add("act");
        this.DOM.checksels[0].classList.add("act");
        this.poscat = 0;
        this.isloading = 0;
        await this.loadImages();
        await this.createAnimations();
        this.clearChecks = ()=>{
            this.isloading = 1;
            // //  console.log(this.isloading+'fi')
            for (let [index, o] of this.DOM.checks.entries())o.checked = false;
            this.isloading = 0;
            this.getPosts();
        };
        this.DOM.clear.addEventListener("click", this.clearChecks);
        this.clicktypeFn = (i)=>{
            this.DOM.checksclick[this.poscat].classList.remove("act");
            this.DOM.checksels[this.poscat].classList.remove("act");
            this.poscat = i;
            (0, _gsap.gsap).to(this.DOM.chekshold, {
                height: this.DOM.checksels[this.poscat].clientHeight + "px"
            });
            this.DOM.checksclick[this.poscat].classList.add("act");
            this.DOM.checksels[this.poscat].classList.add("act");
        };
        for (let [index, o] of this.DOM.checksclick.entries())o.addEventListener("click", ()=>this.clicktypeFn(index));
        this.DOM.closefilters.onclick = (e)=>{
            if (!this.DOM.closefilters.classList.contains("closed")) {
                this.DOM.closefilters.classList.add("closed");
                (0, _gsap.gsap).to(this.DOM.holdfilters, {
                    height: 0,
                    ease: (0, _gsap.Power2).easeInOut
                });
            } else {
                this.DOM.closefilters.classList.remove("closed");
                let h = this.DOM.holdfilters.querySelector(".holdFilters_box").clientHeight;
                (0, _gsap.gsap).to(this.DOM.holdfilters, {
                    height: h,
                    ease: (0, _gsap.Power2).easeInOut,
                    onComplete: ()=>{
                        this.DOM.holdfilters.style.height = "";
                    }
                });
            }
        };
        for (let c of this.DOM.checks)c.onchange = ()=>{
            this.getPosts();
        };
        //  this.slidrag = new Slidrag(this.DOM.el.querySelector('.swiper'))
        this.intro = new (0, _introJsDefault.default)(this.DOM.el.querySelector(".jobs_intro"));
        this.intro.start();
        this.getPosts();
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    resizeLimit() {
        (0, _gsap.gsap).set(this.DOM.chekshold, {
            height: this.DOM.checksels[this.poscat].clientHeight + "px"
        });
        return super.resizeLimit();
    }
    async ajaxImages() {
        let newpage = document.createElement("template");
        newpage.innerHTML = this.html;
        let paths = Array.from(newpage.content.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        return Promise.resolve();
    }
    async getJson(url) {
        const posts = await fetch(url);
        const datap = await posts.json();
        // //  console.log(datap)
        if (datap.total == 1) this.DOM.total.innerHTML = datap.total + " result";
        else this.DOM.total.innerHTML = datap.total + " results";
        this.html = _eta.render((0, _jobEtaDefault.default), {
            global: this.main,
            posts: datap.posts
        });
        // this.ajaxImages()
        await this.ajaxImages();
    }
    async getPosts() {
        // //  console.log('tri')
        if (this.isloading == 1) return false;
        // //  console.log(this.isloading+'islad')
        this.isloading = 1;
        this.DOM.holder.classList.add("load");
        let a = "";
        let b = "";
        for (let c of this.DOM.checksels[0].querySelectorAll("input"))if (c.checked == true) {
            if (a == "") a = c.value;
            else a += "," + c.value;
        }
        for (let c1 of this.DOM.checksels[1].querySelectorAll("input"))if (c1.checked == true) {
            if (b == "") b = c1.value;
            else b += "," + c1.value;
        }
        if (a != "" || b != "") {
            let h = this.DOM.clear.parentNode.clientHeight;
            (0, _gsap.gsap).to(this.DOM.clear.parentNode.parentNode, {
                height: h + "px",
                ease: (0, _gsap.Power2).easeInOut
            });
        } else (0, _gsap.gsap).to(this.DOM.clear.parentNode.parentNode, {
            height: 0,
            ease: (0, _gsap.Power2).easeInOut
        });
        Promise.all([
            this.timeout(600),
            this.getJson(this.main.acf.base + "/wp-json/wp/v2/getjobs?location=" + a + "&industry=" + b)
        ]).then(()=>{
            this.DOM.holder.innerHTML = this.html;
            this.DOM.holder.classList.remove("load");
            this.isloading = 0;
            this.emit("linkseventlisteners");
            this.emit("mousereset");
            this.resizeLimit();
        });
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            this.anims[pos].stick.active = 0;
                            let index = this.sticks.indexOf(this.anims[pos]);
                            if (index > -1) this.sticks.splice(index, 1);
                        } else if (id == "v") clearInterval(this.clockInt);
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.sticks.push(this.anims[pos]);
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) super.smoothScroll();
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        await this.timeout(1);
        this.DOM.el.classList.add("home-active");
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        return super.hide();
    }
};

},{"../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./template.eta":"WGeA1","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","bundle-text:/src/views👁️👁️👁️/ETA/job.eta":"8eyNi","eta":"blnnU","./intro.js":"bld8m","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"WGeA1":[function(require,module,exports) {
module.exports = "\n<main class=\"jobs\">\n  <section class=\"jobs_intro mouseScroll\">\n    <div class=\"left\" style=\"background:<%~ it.data.color_joba %>\">\n      <div class=\"left_el\">\n        <div class=\"left_el_hold\">\n          <h2 class=\"tit1\"><%~ it.data.title_joba %></h2>\n          <p class=\"tit4\"><%~ it.data.text_joba %></p>\n        </div>\n      </div>\n    </div>\n    <div class=\"right\">\n      <div class=\"right_hold\">\n        <div class=\"border\"></div>\n        <div class=\"right_el\"><img src=\"<%~ it.data.image_joba %>\"></div>\n      </div>\n    </div>\n  </section>\n  <section class=\"jobs_main\">\n    <div class=\"jobs_main_top\">\n      <div class=\"activeFilters mouseHover\">\n        <%~ it.global.icons.filter %>\n        <div class=\"activeFilters_t\">Filter by</div>\n      </div>\n      <div class=\"totalSearch\">20 Results</div>\n    </div>\n    <div class=\"holdFilters\">\n      <div class=\"holdFilters_box\">\n        <div class=\"jobs_main_bottom\">\n          <div class=\"bottom_types\">\n          <div class=\"catEl mouseHover\"><span>Location</span></div>\n          <div class=\"catEl mouseHover\"><span>Industry</span></div>\n        </div>\n        <div class=\"bottom_checks\">\n          <div class=\"bottom_checks_el\">\n          <% \n              it.data.location.forEach(function(p,key){ %>\n              <div class=\"chk mouseHover\">\n                <input class=\"chk_npt\" type=\"checkbox\" value=\"<%~ p.term_id %>\">\n                <div class=\"chk_s\">\n                  <div class=\"chk_i\"></div>\n                </div>\n                <label class=\"chk_lbl\"><%~ p.name %></label>\n              </div>\n              \n              <%\n              })\n             %>\n          </div>\n          <div class=\"bottom_checks_el\">\n          <% \n           \n              it.data.industry.forEach(function(p,key){ %>\n              <div class=\"chk mouseHover\">\n                <input class=\"chk_npt\" type=\"checkbox\" value=\"<%~ p.term_id %>\">\n                <div class=\"chk_s\">\n                  <div class=\"chk_i\"></div>\n                </div>\n                <label class=\"chk_lbl\"><%~ p.name %></label>\n              </div>\n              <%\n              })\n           %>\n          </div>\n        </div>\n        <div class=\"bottom_clear\">\n          <div class=\"bottom_clear_box\">\n            <div class=\"btn btnClear mouseHover\">\n              <div class=\"btn_x\"></div>\n              <div class=\"btn_t\">Delete Filters</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"jobs_main_results\">\n  </div>\n</section>\n<section class=\"m-cta signupmod\" style=\"--main:#E5855E\">\n  <div class=\"c-vw\">\n    <div class=\"hold\">\n        <%\n        var randomNum = Math.floor((Math.random() * it.global.acf.signup_text.length) + 1);\n        var title = it.global.acf.signup_text[randomNum-1].title;\n        var text = it.global.acf.signup_text[randomNum-1].text;\n        \n      %>\n      <h2 class=\"tit1\"><%~ title %></h2>\n      <h3 class=\"tit4\"><%~ text %> </h3>\n      </h3>\n      <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\">\n        <div class=\"btn_t\">TAP IN</div>\n      </a>\n    </div>\n  </div>\n</section>\n<section class=\"m-sectitle\">\n  <div class=\"c-vw\">\n    <div class=\"center\">\n      <h2 class=\"tit2\">Featured Guests and Brands</h2><a href=\"<%~ it.global.acf.network %>\" data-type=\"networkarchive\" class=\"simp mouseHover\" style=\"--main:#E5855E\"><span>VIEW\n          ALL</span></a>\n    </div>\n  </div>\n</section>\n<section class=\"m-logos\">\n  <div class=\"c-vw\">\n  <%  it.global.acf.featured.forEach(function(p,key){ %>\n   <div><img src=\"<%~ p %>\" /></div>\n   <%\n  })\n  %>\n  </div>\n</section>\n\n \n  <%~ it.footer %>\n</main>";

},{}],"8eyNi":[function(require,module,exports) {
module.exports = "\n<% it.posts.forEach(function(p,key){ %>\n\n  <a class=\"joblist mouseHover\" href=\"<%~ p.link %>\" data-type=\"job\">\n    <div class=\"joblist_hold\">\n      <div class=\"joblist_info\">\n        <div class=\"joblist_info_top\">\n          <h2 class=\"tit2\"><%~ p.title %></h2>\n          <h3 class=\"tit3\"><%~ p.client %></h3>\n          <div class=\"locate\">\n            <%~ it.global.icons.marker %>\n            <div class=\"locate_t\"><%~ p.location %></div>\n          </div>\n          <div class=\"description\">\n            <p><%~ p.description %></p>\n          </div>\n          <div class=\"date\">\n            <div class=\"date_t\"><%~ p.date %></div>\n          </div>\n        </div>\n      </div>\n      <div class=\"joblist_button\"><img src=\"<%~ p.logo %>\">\n        <div class=\"btns\">\n          <div class=\"btns_t\">Read more</div>\n        </div>\n      </div>\n    </div>\n  </a>\n<% }) %>";

},{}],"bld8m":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _gsap = require("gsap");
var _splitType = require("split-type");
var _splitTypeDefault = parcelHelpers.interopDefault(_splitType);
exports.default = class {
    constructor(element, isActive){
        this.el = element;
        this.elsleft = this.el.querySelectorAll(".left_el");
        this.elsright = this.el.querySelectorAll(".right_el");
        this.pos = -1;
        this.length = this.elsright.length - 1;
        this.borders = this.el.querySelectorAll(".border");
        this.splits = [];
        this.tweens = [];
        let tw;
        for (let [key, el] of this.el.querySelectorAll(".tit1").entries()){
            this.splits.push(new (0, _splitTypeDefault.default)(el, {
                types: "lines,words"
            }));
            tw = (0, _gsap.gsap).timeline({
                paused: true
            });
            for (let [index, s] of this.splits[key].words.entries()){
                (0, _gsap.gsap).set(s, {
                    yPercent: 120
                });
                tw.to(s, {
                    yPercent: 0,
                    duration: .6,
                    delay: index * .1,
                    ease: (0, _gsap.Power2).easeInOut
                }, "anim");
            }
            this.tweens.push(tw);
        }
        this.active = 0;
        if (isActive == true) this.start();
        this.initEvents();
    }
    start() {
        if (this.active == 1) return false;
        if (this.pos == -1) {
            this.change();
            setTimeout(()=>{
                this.el.classList.add("delayed");
            }, 3000);
        }
        this.active = 1;
    }
    change() {
        if (this.pos > -1) {
            (0, _gsap.gsap).to(this.borders[this.pos], {
                width: "0%",
                height: "0%",
                duration: .6,
                delay: .6,
                ease: "bounceNew"
            });
            (0, _gsap.gsap).to(this.elsright[this.pos], {
                "clip-path": "polygon(50% 50%, 50% 50%, 50% 50%, 50% 50%)",
                duration: .6,
                delay: .6,
                ease: "bounceNew"
            });
            this.elsleft[this.pos].classList.remove("active");
            this.elsright[this.pos].classList.remove("active");
            this.borders[this.pos].classList.remove("active");
            this.tweens[this.pos].reverse();
        }
        if (this.pos < this.length) this.pos++;
        else this.pos = 0;
        this.elsleft[this.pos].classList.add("active");
        this.elsright[this.pos].classList.add("active");
        this.borders[this.pos].classList.add("active");
        setTimeout(()=>{
            this.tweens[this.pos].tweenTo("end");
        }, 600);
        (0, _gsap.gsap).to(this.borders[this.pos], {
            width: "80%",
            height: "80%",
            duration: 1.4,
            delay: .3,
            ease: "bounceNew"
        });
        (0, _gsap.gsap).to(this.elsright[this.pos], {
            "clip-path": "polygon(10% 10%, 90% 10%, 90% 90%, 10% 90%)",
            duration: 1.4,
            delay: .3,
            ease: "bounceNew"
        });
    }
    stop() {
        if (this.active == 0) return false;
        this.active = 0;
        clearInterval(this.intervalSlide);
    }
    initEvents() {
    // window.addEventListener('blur',this.stop)
    // window.addEventListener('focus',this.start)
    }
    removeEvents() {}
};

},{"gsap":"gS77a","split-type":"3ncel","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"hmZuY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
var _registerJs = require("./Register.js");
var _registerJsDefault = parcelHelpers.interopDefault(_registerJs);
//COMPS
var _eta = require("eta");
var _register = require("./Register");
var _registerDefault = parcelHelpers.interopDefault(_register);
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        // const response = await fetch(this.main.acf.base+'/wp-json/wp/v2/pages/'+content.dataset.id+'?acf_format=standard')
        // const data = await response.json()
        // //  console.log(data)
        this.job = content;
        // //  console.log(this.job)
        var html = _eta.render((0, _templateEtaDefault.default), {
            global: this.main,
            data: this.id,
            footer: this.footer
        });
        // //  console.log(html)
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)")
        };
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.DOM.modal = document.documentElement.querySelector(".applyal");
        this.form = new (0, _registerDefault.default)(this.DOM.el.querySelector(".apply_form"), this.main, this.job);
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
        this.DOM.back = this.DOM.el.querySelector(".btnBack");
        this.backToJob = ()=>{
            this.emit("toJob", content);
        // //  console.log('asasas')
        };
        this.DOM.back.addEventListener("click", this.backToJob);
    }
    async loadImages() {}
    callBacks() {}
    createAnimations() {}
    makeAnim(anim, y, ratio) {}
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) super.smoothScroll();
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        await this.timeout(1);
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        if (this.DOM.modal.classList.contains("applyal-act")) {
            this.DOM.modal.classList.remove("applyal-act");
            await this.timeout(610);
            document.querySelector(".applyal").remove();
        } else document.querySelector(".applyal").remove();
        return super.hide();
    }
};

},{"../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./template.eta":"hXRj9","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","./Register.js":"6kR12","eta":"blnnU","./Register":"6kR12","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"hXRj9":[function(require,module,exports) {
module.exports = "<div class=\"applyal\">\n  <div class=\"applyal_bg\"></div>\n  <div class=\"applyal_content\">\n    <div class=\"applyal_success\">\n      <div class=\"supercheck\" style=\"--main:#E5855E\">\n        <div class=\"supercheck_i\"></div>\n      </div>\n      <h2 class=\"tit1\">Thank you!you’VE applied successfully</h2>\n      <a href=\"<%~ it.global.acf.jobs %>\" class=\"btn btn_close\" style=\"--main:#E5855E\">\n        <div class=\"btn_t\">BACK TO LISTS</div>\n      </a>\n    </div>\n    <div class=\"applyal_close\"><span></span><span></span></div>\n    <div class=\"applyal_content_text\">\n      <h3 class=\"tit4\">Must Reads for Aspiring Allies</h3>\n      <h2 class=\"tit1\">Subscribe to stay updated on this list</h2>\n      <div class=\"field field-email\"><label class=\"field_lbl\">Name</label><input class=\"field_npt\">\n        <div class=\"field_err\">Wrong format</div>\n        <div class=\"field_button\">\n          <div class=\"btninput\">\n            <div class=\"btninput_t\">Suscribe</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"chk \"><input class=\"chk_npt\" type=\"checkbox\">\n        <div class=\"chk_s\">\n          <div class=\"chk_i\"></div>\n        </div><label class=\"chk_lbl\">I accept <a>Terms and conditions</a></label>\n      </div>\n    </div><img src=\"<%~ it.global.acf.template %>/public/modal.png\">\n  </div>\n</div>\n<main class=\"apply\">\n  <section class=\"apply_intro\" style=\"background:#E5855E\">\n    <div class=\"btnarrow btnBack\">\n      <div class=\"btnarrow_n\"></div>\n      <div class=\"btnarrow_t\">Back</div>\n    </div>\n    <h2 class=\"tit1 iO\">APPLY NOW</h2>\n  </section>\n  <section class=\"apply_form\">\n    <div class=\"grid\">\n      <div class=\"txt-bureau\">\n        <p> LIVING CORPORATE team reviews resume to look for qualified applications to highlight to partner\n          companies. </p>\n      </div>\n      <form class=\"form\"></form>\n      <div class=\"field nameAp\"><label class=\"field_lbl\">Name</label><input class=\"field_npt \" value=\"<%~ it.global.user.acf.firstname %>\">\n        <div class=\"field_err\">Empty field</div>\n      </div>\n      <div class=\"field field-email emailAp\"><label class=\"field_lbl\">Email</label><input class=\"field_npt\" value=\"<%~ it.global.user.user.data.user_email %>\">\n        <div class=\"field_err\">Wrong format ex: email@example.com</div>\n      </div>\n      <div class=\"field field-txt messageAp\"><label class=\"field_lbl\">Message</label><textarea class=\"field_npt \"></textarea>\n        <div class=\"field_err\">Empty field</div>\n      </div>\n      <div class=\"file fileAp\">\n        <div class=\"file_dropzone mouseHover\"></div>\n        <div class=\"file_info\">\n          <div class=\"file_info_icon\"><%~ it.global.icons.folder %>\n          </div>\n          <h3 class=\"tit3\">UPLOAD YOUR RESUME</h3>\n          <p>CLICK OR DRAG YOUR FILE AND START UPLOADING<br>(SUPPORTED FORMATS: PDF, JPG, DOC)</p>\n        </div><input class=\"field_file\" type=\"file\">\n        <div class=\"file_err\">Empty field</div>\n      </div>\n      <div class=\"chk chkAp\"><input class=\"chk_npt mouseHover\" type=\"checkbox\">\n        <div class=\"chk_s\">\n          <div class=\"chk_i\"></div>\n        </div><label class=\"chk_lbl\">I accept <a>terms and conditions</a></label>\n      </div>\n      <div class=\"btn btn-c btnReg mouseHover\" style=\"--main:#E5855E;--base:#FEF9F3\">\n        <div class=\"btn_t\">Submit</div>\n      </div>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"6kR12":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _fieldJs = require("./Field.js");
var _fieldJsDefault = parcelHelpers.interopDefault(_fieldJs);
var _chkJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Chk.js");
var _chkJsDefault = parcelHelpers.interopDefault(_chkJs);
var _fileJs = require("./File.js");
var _fileJsDefault = parcelHelpers.interopDefault(_fileJs);
var _events = require("events");
var _eventsDefault = parcelHelpers.interopDefault(_events);
var _autoBind = require("auto-bind");
var _autoBindDefault = parcelHelpers.interopDefault(_autoBind);
"use strict";
exports.default = class extends (0, _eventsDefault.default) {
    constructor(el, global, job){
        super();
        (0, _autoBindDefault.default)(this);
        this.DOM = {
            el: el
        };
        this.main = main;
        this.job = job;
        this.email = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".emailAp"));
        this.name = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".nameAp"));
        this.message = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".messageAp"));
        this.file = new (0, _fileJsDefault.default)(this.DOM.el.querySelector(".file"));
        this.check = new (0, _chkJsDefault.default)(this.DOM.el.querySelector(".chkAp"));
        this.btn = this.DOM.el.querySelector(".btnReg");
        this.initEvents();
    }
    initEvents() {
        // this.register()
        this.registerFn = ()=>{
            this.email.check();
            this.name.check();
            this.file.check();
            this.check.check();
            this.message.check();
            if (!this.DOM.el.querySelector(".err")) this.register();
        };
        this.btn.addEventListener("click", this.registerFn);
    }
    async register() {
        let formdata = new FormData();
        formdata.set("email", this.email.DOM.npt.value);
        formdata.set("name", this.name.DOM.npt.value);
        formdata.set("message", this.message.DOM.npt.value);
        formdata.set("file", this.file.file, this.file.file.name);
        formdata.set("userid", this.main.user.user.ID);
        formdata.set("jobid", this.job.id);
        const logtest = await fetch(this.main.acf.base + "/wp-json/csskiller/v1/sentjob", {
            method: "post",
            body: formdata,
            "Content-Type": "false",
            "Process-Data": "false",
            "X-WP-Nonce": this.main.user.nonce
        });
        const datalog = await logtest;
        // //  console.log(datalog)
        document.body.querySelector(".applyal").classList.add("applyal-act");
    // this.emit('success')
    //   // this.DOM.el
    // //  console.log('badname')
    //   this.DOM.errors[0].classList.add('act')
    //   setTimeout(()=>{
    //     this.DOM.errors[0].classList.remove('act')
    //   },3300)
    // }
    // else if(datalog.code=='incorrect_password'){
    // //  console.log('badpass')
    //   this.DOM.errors[1].classList.add('act')
    //   setTimeout(()=>{
    //     this.DOM.errors[1].classList.remove('act')
    //   },3300)
    // }
    // else{
    // }
    // //  console.log('sis')
    }
    removeEvents() {}
};

},{"./Field.js":"8iebi","/src/js🧠🧠🧠/defaults/Chk.js":"LTujD","./File.js":"dLBlU","events":"32fHr","auto-bind":"iS0Jy","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"8iebi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
"use strict";
exports.default = class {
    constructor(el){
        this.DOM = {
            el: el
        };
        this.DOM.npt = this.DOM.el.querySelector(".field_npt");
        this.initEvents();
        this.checkField();
    }
    initEvents() {
        this.checkField = ()=>{
            if (this.DOM.npt.value == "") this.DOM.el.classList.remove("fill");
            else this.DOM.el.classList.add("fill");
        };
        this.focusFn = ()=>{
            this.DOM.el.classList.remove("err");
            this.DOM.el.classList.add("foc");
        };
        this.focusoutFn = ()=>{
            this.DOM.el.classList.remove("foc");
            this.DOM.el.classList.remove("err");
        };
        this.DOM.npt.addEventListener("input", ()=>this.checkField());
        this.DOM.npt.addEventListener("focusin", this.focusFn);
        this.DOM.npt.addEventListener("focusout", ()=>this.focusoutFn());
    }
    check() {
        if ("" == this.DOM.npt.value) return void this.DOM.el.classList.add("err");
        this.DOM.el.classList.remove("err");
        this.DOM.el.classList.contains("field-email") ? null == this.DOM.npt.value.match(/^([\w\!\#$\%\&\'\*\+\-\/\=\?\^\`{\|\}\~]+\.)*[\w\!\#$\%\&\'\*\+\-\/\=\?\^\`{\|\}\~]+@((((([a-z0-9]{1}[a-z0-9\-]{0,62}[a-z0-9]{1})|[a-z])\.)+[a-z]{2,6})|(\d{1,3}\.){3}\d{1,3}(\:\d{1,5})?)$/i) ? this.DOM.el.classList.add("err") : this.DOM.el.classList.remove("err") : this.DOM.el.classList.contains("field-number") && (isNaN(this.DOM.npt.value) ? this.DOM.el.classList.add("err") : this.DOM.el.classList.remove("err"));
    }
    clear() {
        this.DOM.el.classList.remove("foc");
        this.DOM.el.classList.remove("fill");
        this.DOM.el.classList.remove("err");
        this.DOM.npt.value = "";
    }
    removeEvents() {
        this.DOM.npt.removeEventListener("input", ()=>this.checkField());
        this.DOM.npt.removeEventListener("focusin", this.focusFn);
        this.DOM.npt.removeEventListener("focusout", ()=>this.focusoutFn());
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"LTujD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
"use strict";
exports.default = class {
    constructor(el){
        this.DOM = {
            el: el,
            npt: el.querySelector("input")
        };
        this.initEvents();
    }
    initEvents() {
        this.check = ()=>{
            if (this.DOM.npt.checked) this.DOM.el.classList.remove("err");
            else this.DOM.el.classList.add("err");
        };
        this.DOM.npt.addEventListener("change", this.check);
    }
    removeEvents() {
        this.DOM.npt.removeEventListener("change", this.check);
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"dLBlU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
"use strict";
//https://codepen.io/mmhuntsberry/pen/QowZwR
exports.default = class {
    constructor(el){
        this.DOM = {
            el: el,
            npt: el.querySelector("input"),
            drag: el.querySelector(".file_dropzone")
        };
        this.fd = new FormData();
        this.initEvents();
    }
    initEvents() {
        this.change = (e)=>{
            // //  console.log(this.DOM.npt.value)
            let reader = new FileReader();
            reader.readAsText(e.target.files[0]);
            // //  console.log(e.target.files)
            // //  console.log(reader)
            this.DOM.el.querySelector(".tit3").innerHTML = e.target.files[0].name;
            // this.DOM.el.querySelector('.tit3').innerHTML = readerev.target.fileName
            this.file = e.target.files[0];
            this.DOM.el.classList.remove("err");
            this.DOM.el.classList.add("suc");
        };
        this.dragOver = (e)=>{
            e.preventDefault();
        };
        this.click = (e)=>{
            this.DOM.npt.click();
        };
        this.drop = (e)=>{
            e.preventDefault();
            // const validatedFiles = this.fileValidation(unvalidatedFiles)
            // this.createFileDOMNode(validatedFiles)
            // this.fd.set('file', e.dataTransfer.files[0], e.dataTransfer.files[0].name)
            // //  console.log(e.dataTransfer.files[0].path)
            // //  console.log(this.fd)
            // //  console.log(e.dataTransfer.files)
            let reader = new FileReader();
            // reader.readAsDataURL(e.dataTransfer.files[0])
            reader.readAsText(e.dataTransfer.files[0]);
            // //  console.log(reader)
            this.DOM.el.querySelector(".tit3").innerHTML = e.dataTransfer.files[0].name;
            this.file = e.dataTransfer.files[0];
            this.DOM.el.classList.remove("err");
            this.DOM.el.classList.add("suc");
        };
        this.fileValidation = (files)=>{
            const validatedFileArray = [];
            const supportedExts = [
                "pdf"
            ];
            files.forEach((file)=>{
                const ext = this.getFileExtension(file);
                if (supportedExts.indexOf(ext) === -1) ;
                else validatedFileArray.push(file);
            });
            return validatedFileArray;
        };
        this.getFileExtension = (file)=>{
            return file.name.split(".").pop();
        };
        this.check = ()=>{
            // //  console.log(this.file)
            if (this.file) this.DOM.el.classList.remove("err");
            else this.DOM.el.classList.add("err");
        };
        this.DOM.npt.addEventListener("change", (e)=>this.change(e));
        this.DOM.drag.addEventListener("dragover", (e)=>this.dragOver(e));
        this.DOM.drag.addEventListener("drop", (e)=>this.drop(e));
        this.DOM.drag.addEventListener("click", (e)=>this.click(e));
    }
    removeEvents() {}
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"e0fqc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _templatedadEta = require("bundle-text:./templatedad.eta");
var _templatedadEtaDefault = parcelHelpers.interopDefault(_templatedadEta);
var _templatechildEta = require("bundle-text:./templatechild.eta");
var _templatechildEtaDefault = parcelHelpers.interopDefault(_templatechildEta);
var _showlistEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/showlist.eta");
var _showlistEtaDefault = parcelHelpers.interopDefault(_showlistEta);
var _notloggedEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/notlogged.eta");
var _notloggedEtaDefault = parcelHelpers.interopDefault(_notloggedEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
var _noaccessEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/noaccess.eta");
var _noaccessEtaDefault = parcelHelpers.interopDefault(_noaccessEta);
//COMPS
var _dualintroJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/components\uD83E\uDDBE/Dualintro.js");
var _dualintroJsDefault = parcelHelpers.interopDefault(_dualintroJs);
var _eta = require("eta");
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        //${"http://165.227.64.123:8126/"}/wp-json/wp/v2/podcast/40?acf_format=standard
        // const response = await fetch(this.main.acf.base+'/wp-json/wp/v2/pages/'+content.dataset.id+'?acf_format=standard')
        const response = await fetch(this.main.acf.base + "/wp-json/wp/v2/show/" + content.dataset.id + "?acf_format=standard");
        const data = await response.json();
        let html = "";
        let load = true;
        if (this?.main?.user && (data?.acf?.add_to_collective || data?.parent_data?.add_to_collective) && !this?.main?.user?.acf?.is_content_hub_user) {
            html = _eta.render((0, _noaccessEtaDefault.default), {
                global: this.main,
                data: data,
                footer: this.footer
            });
            load = false;
        } else if (data.parent == 0) html = _eta.render((0, _templatedadEtaDefault.default), {
            global: this.main,
            data: data,
            footer: this.footer
        });
        else {
            let Difference_In_Time = new Date(data.date).getTime() - new Date().getTime();
            this.Difference_In_Days = Difference_In_Time / 86400000;
            // hide content behind login if older than 56 days / 8 weeks
            // (number should be negative)
            const numDayLimit = -56;
            if (this.Difference_In_Days < numDayLimit && !this.main.user) html = _eta.render((0, _notloggedEtaDefault.default), {
                global: this.main,
                data: data,
                footer: this.footer
            });
            else html = _eta.render((0, _templatechildEtaDefault.default), {
                global: this.main,
                data: data,
                footer: this.footer
            });
        }
        // console.log(data)
        // console.log(html)
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)")
        };
        if (this.DOM.el.querySelector(".showchild_main")) {
            this.playFn = ()=>{
                this.DOM.el.querySelector(".showchild_main").classList.add("act");
                let src = this.DOM.el.querySelector(".showchild_main .btnplay").dataset.video;
                this.DOM.el.querySelector(".showchild_main iframe").setAttribute("src", src);
            };
            this.DOM.el.querySelector(".showchild_main .btnplay").addEventListener("click", this.playFn);
        }
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
        await this.loadImages();
        await this.createAnimations();
        if (this.DOM.el.querySelector(".m-dualintro")) this.slide = new (0, _dualintroJsDefault.default)(this.DOM.el.querySelector(".m-dualintro"));
        if (data.parent == 0 && load) {
            this.DOM.holder = this.DOM.el.querySelector(".hPosts");
            this.DOM.pages = this.DOM.el.querySelector(".pPosts");
            // console.log(this.DOM.holder)
            await this.getPosts(true, "show", data.id, 8, 1);
        } else if (this.DOM.el.querySelector(".hidetext")) {
            this.DOM.hidetext = this.DOM.el.querySelector(".hidetext");
            this.DOM.clicktext = this.DOM.el.querySelector(".hidetext_click");
            this.DOM.holdtext = this.DOM.el.querySelector(".hidetext_hold");
            this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
            if (this.DOM.hidetext.clientHeight + 40 > this.DOM.holdtext.clientHeight) {
                this.DOM.clicktext.classList.add("act");
                (0, _gsap.gsap).to(this.DOM.hidetext, {
                    height: this.DOM.holdtext.clientHeight + "px",
                    duration: .6,
                    onComplete: ()=>{
                        this.DOM.hidetext.classList.add("act");
                        this.DOM.hidetext.style.height = "";
                        this.resizeLimit();
                    }
                });
            } else {
                this.textExpand = ()=>{
                    this.isVisible = 0;
                    // console.log(this.sticks)
                    this.DOM.clicktext.classList.add("act");
                    this.timeline = (0, _gsap.gsap).timeline({
                        paused: true
                    })// .to(this.sticks[0].stick.son,{duration:.6,y:'+='+(this.DOM.holdtext.clientHeight - this.DOM.hidetext.clientHeight)+'px'},'a')
                    // .to(this.sticks[0].stick,{duration:.6,current:'+='+(this.DOM.holdtext.clientHeight - this.DOM.hidetext.clientHeight),target:'+='+(this.DOM.holdtext.clientHeight - this.DOM.hidetext.clientHeight)},'a')
                    .to(this.DOM.hidetext, {
                        height: this.DOM.holdtext.clientHeight + "px",
                        duration: .6,
                        onUpdate: ()=>{
                        // console.log(this.sticks)
                        },
                        onComplete: ()=>{
                            this.isVisible = 1;
                            this.DOM.hidetext.classList.add("act");
                            this.DOM.hidetext.style.height = "";
                            this.resizeLimit();
                        }
                    }, "a");
                    this.timeline.play();
                };
                this.DOM.clicktext.addEventListener("click", this.textExpand);
            }
        }
    }
    async getJson(url, isNew) {
        const posts = await fetch(url);
        const datap = await posts.json();
        // console.log(datap)
        this.html = _eta.render((0, _showlistEtaDefault.default), {
            global: this.main,
            posts: datap.posts
        });
        // this.ajaxImages()
        this.DOM.holder.innerHTML = this.html;
        if (isNew == true) {
            this.actualpage = 1;
            this.max = datap.maxpages;
        }
        await this.ajaxImages();
    }
    async ajaxImages() {
        let newpage = document.createElement("template");
        newpage.innerHTML = this.html;
        let paths = Array.from(newpage.content.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        return Promise.resolve();
    }
    async blocksClick(type) {
        this.DOM.holder.classList.add("load");
        await this.timeout(600);
        if (type == "block") this.DOM.holder.classList.add("blocks");
        else this.DOM.holder.classList.remove("blocks");
        this.DOM.holder.classList.remove("load");
        this.resizeLimit();
    }
    async getPosts(isNew, type, id, postperpage, page) {
        this.DOM.holder.classList.add("load");
        Promise.all([
            this.timeout(600),
            this.getJson(this.main.acf.base + "/wp-json/wp/v2/getposts?type=" + type + "&parent=" + id + "&page=" + page + "&perpage=" + postperpage, isNew)
        ]).then(()=>{
            this.DOM.holder.classList.remove("load");
            if (isNew == true) {
                // console.log(this.max)
                for(let i = 1; i <= this.max; i++)if (i == page) this.DOM.pages.innerHTML += '<div class="pgel mouseHover act"><div class="pgel_t">' + i + "</div></div>";
                else this.DOM.pages.innerHTML += '<div class="pgel mouseHover"><div class="pgel_t">' + i + "</div></div>";
                this.DOM.pagsel = this.DOM.pages.querySelectorAll(".pgel");
                if (this.DOM.pagsel.length == 1) this.DOM.pages.classList.add("hide");
                for (let [index, el] of this.DOM.pagsel.entries())el.onclick = (event)=>{
                    this.getPosts(false, type, id, postperpage, index + 1);
                };
            } else {
                this.DOM.pagsel[this.actualpage - 1].classList.remove("act");
                this.actualpage = page;
                this.DOM.pagsel[this.actualpage - 1].classList.add("act");
            }
            this.resizeLimit();
            this.emit("linkseventlisteners");
            this.emit("mousereset");
        });
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            // console.log(this.anims[pos])
                            this.anims[pos].stick.active = 0;
                            this.movestick = null;
                        } else if (id == "v") clearInterval(this.clockInt);
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "e") {
                            this.anims[pos].classel.start();
                            this.slidetext = this.anims[pos];
                        } else if (id == "v") this.clockStart(this.anims[pos].el.parentNode.querySelector(".time"));
                        else if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.movestick = this.anims[pos];
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) super.smoothScroll();
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        await this.timeout(1);
        // gsap.to('.home',{opacity:1,ease:Power2.easeInOut,duration:.6})
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        return super.hide();
    }
};

},{"../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./template.eta":"0CYzf","bundle-text:./templatedad.eta":"6scrc","bundle-text:./templatechild.eta":"f14HP","bundle-text:/src/views👁️👁️👁️/ETA/showlist.eta":"eoa4w","bundle-text:/src/views👁️👁️👁️/404/notlogged.eta":"fA8CK","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","bundle-text:/src/views👁️👁️👁️/404/noaccess.eta":"7WnXA","/src/js🧠🧠🧠/components🦾/Dualintro.js":"7DjOj","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"0CYzf":[function(require,module,exports) {
module.exports = "\n<main class=\"home\">\n  <section class=\"home_intro stck_base\" id=\"stck0\">\n    <div class=\"iO iO-stck stck_control\" data-stck=\"0\"></div>\n    <div class=\"iO iO-logohide\"></div>\n    <div class=\"iO iO-quickshow\"></div>\n    <div class=\"home_intro_hold stck_main\">\n      <div class=\"timehold\">\n        <div class=\"iO iO-time\"></div>\n        <div class=\"timeoflow\">\n          <div class=\"time\" data-offset=\"1\">\n            <div class=\"change\">01 <div class=\"sep\">:</div> 00 <div class=\"sep\">:</div> 12</div>\n            <div class=\"end\">ESPAÑA</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"introOut\"><span>Saltar intro</span></div>\n      <div class=\"box\">\n            <div class=\"logo\">\n              <div class=\"logo_left\">\n                <div class=\"logo_el logo_left_1\"><span>S</span></div>\n                <div class=\"logo_el logo_left_2 logo_el-hide\"><span>E</span></div>\n                <div class=\"logo_el logo_left_3\"><span>R</span></div>\n                <div class=\"logo_el logo_left_4 logo_el-hide\"><span>É</span></div>\n              </div>\n              <div class=\"logo_video\">\n                <div class=\"logo_video_mask mdlClick\" data-video=\"<%~ it.data.video_reel %>\">\n                  <video class=\"inline\"  src=\"<%~ it.data.video_anim %>\"  playsinline autoplay muted loop  poster=\"<%~ it.data.poster_animation %>\"></video>\n                  <video class=\"reel\" src=\"<%~ it.data.video_reel %>\" preload=\"none\"  playsinline muted  poster=\"<%~ it.data.poster_animation %>\"></video>\n                </div>\n              </div>\n              <div class=\"logo_right\">\n                <div class=\"logo_el logo_right_1\"><span>B</span></div>\n                <div class=\"logo_el logo_right_2\"><span>R</span></div>\n                <div class=\"logo_el logo_right_3 logo_el-hide\"><span>E</span></div>\n                <div class=\"logo_el logo_right_4\"><span>V</span></div>\n                <div class=\"logo_el logo_right_5 logo_el-hide\"><span>E</span></div>\n              </div>\n            </div>\n            <div class=\"claim\">\n              <p><span class=\"space\"></span><%~ it.data.frase_inicial %></p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n\n  <section class=\"home_claim\">\n    <div class=\"c-vw\">\n      <div class=\"col\">\n        <div class=\"title1 title1-cols\">\n\n          <% it.data.claims[0].title.forEach(function(w,key){ %>\n              <div class=\"line\"><span class=\"line_fake\"><%~  w.line %></span><span class=\"spell iO iO-spell\"><%~  w.line %></span></div>\n\n          <% }) %>\n        </div>\n      </div>\n\n      <div class=\"col col-right\">\n        <div class=\"title1\">\n          <% it.data.claims[1].title.forEach(function(w,key){ %>\n              <div class=\"line\"><span class=\"line_fake\"><%~  w.line %></span><span class=\"spell iO iO-spell\"><%~  w.line %></span></div>\n\n          <% }) %>\n        </div>\n      </div>\n\n      <div class=\"col\">\n        <div class=\"title1\">\n          <% it.data.claims[2].title.forEach(function(w,key){ %>\n              <div class=\"line\"><span class=\"line_fake\"><%~  w.line %></span><span class=\"spell iO iO-spell\"><%~  w.line %></span></div>\n\n          <% }) %>\n        </div>\n      </div>\n    </div>\n  </section>\n  <section class=\"home_text stck_base\" id=\"stck1\">\n    <div class=\"iO iO-stck iO-stck-text stck_control\" data-stck=\"1\"></div>\n    <div class=\"home_text_hold stck_main\">\n      \n      <%~ it.data.texto %>\n      <div class=\"positions\">\n        <%~ it.data.frasefinal %>\n      </div>\n    </div>\n  </section>\n  <section class=\"home_projects darksect\">\n    <div class=\"iO iO-hide\"></div>\n    <div class=\"iO iO-dark\"></div>\n    <div class=\"iO iO-foot\"></div>\n    <div class=\"home_projects_first gridmaster\">\n      <div class=\"G-intro\">\n        <div class=\"G-intro_year\">\n          <div class=\"nums nums-2 nums-anim iO iO-counter\" data-from=\"<%~  it.data.year %>\">\n            <div class=\"nums_arrow\"><%~ it.global.icons.arrowlink %></div>\n              <div class=\"nums_main\"><%~ it.global.acf.actualyear %></div>\n            </div>\n          </div>\n          <div class=\"G-intro_title\">\n            <h2 class=\"title2 title2-cols\">\n              <% it.data.titulo_1_title.forEach(function(w,key){ %>\n              <div class=\"line\"><span class=\"line_fake\"><%~  w.line %></span><span class=\"spell iO iO-spell\"><%~  w.line %></span>\n                <% if(key == it.data.titulo_1_title.length-1){ %>\n                  <div class=\"nums nums-sup nums-anim iO iO-counter\">\n                  <div class=\"nums_main\"><%~ it.data.numtitle %></div>\n                </div>\n                <% } %>\n                \n              </div>\n\n            <% }) %>\n            </h2>\n          </div>\n    \n          <div class=\"G-intro_dual\">\n\n            <a class=\"Eproject Eproject-<%~ it.data.destacado.ratio_a %>\" href=\"<%~ it.data.destacado.permalink %>\" data-type=\"proyecto\">\n              <div class=\"iO iO-par\"></div>\n              <div class=\"Eproject_box\">\n                <div class=\"iO_son Eproject_par\">\n                  <img src=\"<%~ it.data.destacado.imagen_a %>\">\n                  <% it.data.destacado.imagen_a %>\n                  <% if(it.data.destacado.video_a!=''){ %>\n                    <video src=\"<%~ it.data.destacado.video_a %>\" preload=\"none\" playsinline=\"\" muted=\"\" loop=\"\" poster=\"<%~ it.data.destacado.imagen_a %>\"></video>\n                  <% } %>\n                </div>\n              </div>\n              <div class=\"Eproject_info\">\n                <h3 class=\"titlesmall name\"><% it.data.destacado.post_title %></h3>\n                <div class=\"tags\">\n                  <div class=\"tags_el\"><% it.data.destacado.tags_a %></div>\n                </div>\n              </div>\n            </a>\n\n            <div class=\"G-intro_dual_text\">\n              <h2 class=\"title2 title2-cols\">\n              <% it.data.titulo_2_title.forEach(function(w,key){ %>\n              <div class=\"line\"><span class=\"line_fake\"><%~  w.line %></span><span class=\"spell iO iO-spell\"><%~  w.line %></span></div>\n                \n\n            <% }) %>\n              </h2>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n\n        <% cont = 0 %>\n      <div class=\"home_projects_last gridmaster\">\n        <% it.data.proyectos.forEach(function(post,key){ %>\n        <% if(cont == 0){ %>\n          \n          <% type = 'G-tri' %>\n          <div class=\"<%~ type %>\">\n        <% }\n        if(cont == 3 || cont == 6 || cont == 9 || cont == 12){\n        %>\n          </div>\n          <% type = 'G-tri' %>\n          <div class=\"<%~ type %>\">\n        <%\n        }\n        %>\n        \n            <div class=\"<%~ type %>_col\">\n              <a class=\"Eproject Eproject-<%~ post.ratio_a %>\" href=\"<%~ post.permalink %>\" data-type=\"proyecto\">\n\n                <div class=\"iO iO-par\"></div>\n                <div class=\"Eproject_box\">\n                  <div class=\"iO_son Eproject_par\">\n                    <img src=\"<%~ post.imagen_a %>\">\n                    <% if(post.video_a!=''){ %>\n                      <video src=\"<%~ post.video_a %>\" preload=\"none\" playsinline=\"\" muted=\"\" loop=\"\" poster=\"<%~ post.imagen_a %>\"></video>\n                    <% } %>\n                  </div>\n                </div>\n                <div class=\"Eproject_info\">\n                  <h3 class=\"titlesmall name\"><%~ post.post_title %></h3>\n                  <div class=\"tags\">\n                    <div class=\"tags_el\"><%~ post.tags_a %></div>\n                  </div>\n                </div>\n              </a>\n            </div>\n        <%  \n        cont++\n        }) %>\n        </div><!-- cierre last G -->\n        <div class=\"G-textright\">\n          <div class=\"holder in\">\n            <p><%~ it.data.texto_premios %></p>\n              <a class=\"linkarrow\" href=\"<%~ it.data.url_boton %>\" data-type=\"premios\">\n                <div class=\"linkarrow_t\"><%~ it.data.texto_boton %></div>\n                <div class=\"linkarrow_h\"><%~ it.data.texto_boton %></div>\n                <div class=\"linkarrow_i\"><%~ it.global.icons.arrowlink %></div>\n              </a>\n          </div>\n        </div>\n        <div class=\"G-title\">\n          <div class=\"nums nums-small nums-anim iO iO-counter\">\n            <div class=\"nums_main\"><%~ it.data.year_2 %></div>\n          </div>\n          <h3 class=\"titlesmall\"><%~ it.data.titulo_3 %></h3>\n        </div>\n        <div class=\"Stexthold\">\n          <div class=\"iO iO-stext\"></div>\n          <div class=\"Stext Stext-big\">\n            <div class=\"Stext_real\">\n              <div class=\"el\">\n                \n              <% it.data.texto_carousel.forEach(function(text,key){ %>\n                <%~ it.global.icons.asterisk %>\n                <span><%~ text.texto %></span>\n              <% }) %>\n              </div>\n            </div>\n            <div class=\"Stext_fake\"></div>\n          </div>\n        </div>\n        <div class=\"G-dual2\">\n          <div class=\"G-dual2_col\">\n            <a class=\"Eproject Eproject-<%~ it.data.destacado_2.ratio_a %>\" href=\"<%~ it.data.destacado_2.permalink %>\" data-type=\"proyecto\">\n              <div class=\"iO iO-par\"></div>\n              <div class=\"Eproject_box\">\n                <div class=\"iO_son Eproject_par\">\n                  <img src=\"<%~ it.data.destacado_2.imagen_a %>\">\n                  <% if(it.data.destacado_2.video_a!=''){ %>\n                    <video src=\"<%~ it.data.destacado_2.video_a %>\" preload=\"none\" playsinline=\"\" muted=\"\" loop=\"\" poster=\"<%~ it.data.destacado_2.imagen_a %>\"></video>\n                  <% } %>\n                </div>\n              </div>\n              <div class=\"Eproject_info\">\n                <h3 class=\"titlesmall name\"><%~ it.data.destacado_2.post_title %></h3>\n                <div class=\"tags\">\n                  <div class=\"tags_el\"><%~ it.data.destacado_2.tags_a %></div>\n                </div>\n              </div>\n            </a>\n          </div>\n          <div class=\"G-dual2_col\">\n            <div class=\"Eproject Eproject-st Eproject-no\">\n              <div class=\"iO iO-par\"></div>\n              <div class=\"Eproject_box\">\n                <div class=\"iO_son Eproject_par\"><img src=\"<%~ it.data.imagen_alternativa %>\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div><!-- cierre master -->\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"6scrc":[function(require,module,exports) {
module.exports = "<main class=\"podcast\">\n  <section class=\"m-dualintro \" >\n    <div class=\"left\" style=\"background-color:<%~ it.data.acf.color %>\">\n      <div class=\"left_hover mouseScroll\"></div>\n      <div class=\"bc\">\n        <% if(it.data.acf?.add_to_collective || it.data?.parent_data?.add_to_collective){ %>\n          <a class=\"mouseHover\" href=\"<%~ it.global.acf?.ch_home ?? '/content-hub' %>\">LC Hub</a>\n        <%  } else {%>\n          <a class=\"mouseHover\" href=\"<%~ it.global.acf.home %>\">LC</a>\n        <%  }%>\n        <span>/</span><a class=\"mouseHover\" href=\"<%~ it.global.acf.shows %>\">Shows</a>\n        <span>/</span><span><%~ it.data.title.rendered %></span>\n      </div>\n      <h2 class=\"tit1\"><%~ it.data.title.rendered %></h2>\n    </div>\n    <div class=\"right mouseScroll\">\n      <div class=\"right_el\"><img src=\"<%~ it.data.acf.imageintro %>\"></div>\n    </div>\n  </section>\n  <section class=\"m-dualsep\">\n    <div class=\"left\">\n      <h2 class=\"tit2\"><%~ it.data.acf.title_description %></h2>\n    </div>\n    <div class=\"right\">\n      <div class=\"txt-bureau\">\n        <%~ it.data.acf.descriptionl %>\n        <% if(it.data.acf.iframe){ %>\n          <a href=\"<%~ it.data.acf.crowdcast_follow %>\" class=\"mouseHover btn\" data-color=\"org\"><div class=\"btn_t\">FOLLOW US ON CROWDCAST</div></a>\n        <% } %>\n      </div>\n    </div>\n  </section>\n  <% if(it.data.acf.iframe && 0==1){ %>\n  <section class=\"m-iframe\">\n    <div class=\"m-iframe_hold\"><%~ it.data.acf.iframe %></div>\n  </section>\n  <% } %>\n  <section class=\"m-tabposts\" style=\"--main:#E5855E\">\n    <div class=\"m-tabposts_hold showPosts hPosts blocks\">\n    \n    </div>\n    <div class=\"m-tabposts_pags pg pPosts\">\n      \n    </div>\n  </section>\n  <section class=\"m-cta\" style=\"--main:#DF80AC\">\n    <div class=\"c-vw\">\n      <div class=\"hold\">\n        <h2 class=\"tit1\">Sign up now</h2>\n        <h3 class=\"tit4\">Subscribe to curated lists our editorial team has created on the topics that matter to you.\n        </h3><a class=\"btn mouseHover\">\n          <div class=\"btn_t\">TAP IN</div>\n        </a>\n      </div>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"f14HP":[function(require,module,exports) {
module.exports = "<main class=\"podcastsimple\">\n  <section class=\"m-bc\">\n    <div class=\"c-vw\">\n      <div class=\"bc\">\n        <% if(it.data.acf?.add_to_collective || it.data?.parent_data?.add_to_collective){ %>\n          <a class=\"mouseHover\" href=\"<%~ it.global.acf?.ch_home ?? '/content-hub' %>\">LC Hub</a>\n        <%  } else {%>\n          <a class=\"mouseHover\" href=\"<%~ it.global.acf.home %>\">LC</a>\n        <%  }%>\n        <span>/</span><a class=\"mouseHover\" href=\"<%~ it.global.acf.shows %>\">Shows</a>\n        <span>/</span><a href=\"<%~ it.data.parent_data.permalink %>\"><%~ it.data.parent_data.name %></a>\n        <span>/</span><span><%~ it.data.title.rendered %></span>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-simpleintro\">\n    <div class=\"c-vw\">\n      <h2 class=\"tit2\"><%~ it.data.title.rendered %></h2>\n      <div class=\"m-simpleintro_info\">\n        <div class=\"autor\">\n          <p>by <%~ it.data.parent_data.name %></p>\n        </div>\n      </div>\n    </div>\n  </section>\n  <section class=\"showchild_main\">\n    <div class=\"showchild_main_hold\"><img src=\"<%~ it.data.acf.image_show %>\">\n      <div class=\"btnplay mouseHover\" data-video=\"https://player.vimeo.com/video/<%~ it.data.acf.iframe_show %>?h=b07f3a44b6&amp;color=DF80AC&amp;autoplay=1\">\n        <div class=\"btnplay_tri\"></div>\n      </div>\n      <iframe scrolling=\"no\" style=\"overflow:hidden;\" width=\"100%\" height=\"100%\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen=\"\"></iframe>\n    </div>\n  </section>\n  <section class=\"m-dualsep\">\n    <div class=\"left\">\n      <h2 class=\"tit2\"><%~ it.data.acf.title_description %></h2>\n    </div>\n    <div class=\"right\">\n      <div class=\"txt-bureau\">\n        <p><%~ it.data.acf.descriptionl %></p>\n      </div>\n    </div>\n  </section>\n  <% if(it.data.acf.transcription){ %>\n  <section class=\"podcastsingle_main\">\n    <div class=\"grid\">\n      <div class=\"hidetext\">\n        <div class=\"hidetext_click\">\n          <div class=\"simp mouseHover\"><span>Read more</span></div>\n        </div>\n        <div class=\"hidetext_hold wp\">\n        <%~ it.data.acf.transcription %>\n        </div>\n      </div>\n      </div>\n    </div>\n  </section>\n  <% } %>\n  <section class=\"m-social\">\n    <div class=\"left\">\n      <h2 class=\"tit4\">Share</h2>\n    </div>\n    <div class=\"right\">\n      <div class=\"social\">\n        <a class=\"mouseHover Stw\" href=\"https://twitter.com/intent/tweet?url=<%~ it.data.link %>\"><%~ it.global.icons.tw %></a>\n        <a class=\"mouseHover Sfb\" href=\"https://www.facebook.com/sharer/sharer.php?u=<%~ it.data.link %>\"><%~ it.global.icons.fb %></a>\n        <a class=\"mouseHover Sin\" href=\"https://www.linkedin.com/shareArticle?url=<%~ it.data.link %>\"><%~ it.global.icons.in %></a>\n        <a class=\"mouseHover Srd\" href=\"https://www.reddit.com/submit?url=<%~ it.data.link %>\"><%~ it.global.icons.reddit %></a>\n        <a class=\"mouseHover Stb\" href=\"https://www.tumblr.com/share/link?url=<%~ it.data.link %>\"><%~ it.global.icons.tumbler %></a>\n      </div>\n    </div>\n  </section>\n  <%\n    if(it.data.parent_data.creators){ \n    it.data.parent_data.creators.forEach(function(p,key){ %>\n  <section class=\"m-creator\">\n    <div class=\"m-creator_image\">\n      <div class=\"m-creator_image_hold\"><img src=\"<%~ p.image %>\"></div>\n    </div>\n    <div class=\"m-creator_info\">\n      <h3 class=\"tit2\"><%~ p.title %></h3>\n      <% if(p.description){ %>\n      <div class=\"desc\"><%~ p.description %></div>\n      <% }\n      if(p.website){ %>\n      <a href=\"<%~ p.website %>\" class=\"simp mouseHover\"><span>website</span></a>\n      <% } %>\n      <div class=\"m-creator_info_bottom\">\n        <% if(p.contactsocial_links==true){ %>\n        <div class=\"social\">\n          <% if(p.social.instagram){ %>\n            <a class=\"mouseHover sIg\" href=\"<%~ p.social.instagram %>\"><%~ it.global.icons.ig %></a>\n          <% }\n          if(p.social.linkedin){ %>\n            <a class=\"mouseHover Sin\" href=\"<%~ p.social.linkedin %>\"><%~ it.global.icons.in %></a>\n          <%\n          }\n          if(p.social.facebook){ %>\n            <a class=\"mouseHover Sfb\" href=\"<%~ p.social.facebook %>\"><%~ it.global.icons.fb %></a>\n          <%\n          }\n          if(p.social.twitter){ %>\n            <a class=\"mouseHover Stw\" href=\"<%~ p.social.twitter %>\"><%~ it.global.icons.tw %></a>\n          <% }%>\n        </div>\n        <% } \n        else{\n        %>\n        <a class=\"btns mouseHover\" href=\"<%~ p.email_contact %>\"><div class=\"btns_t\">contact</div></a>\n        <% } %>\n      </div>\n    </div>\n  </section>\n  <% })\n  }\n  %>\n  <% \n    \n  if(it.data.acf.creators){ \n  it.data.acf.creators.forEach(function(p,key){ \n  if(p.title!=''){\n  \n  %>\n  <section class=\"m-creator\">\n    <div class=\"m-creator_image\">\n      <div class=\"m-creator_image_hold\"><img src=\"<%~ p.image %>\"></div>\n    </div>\n    <div class=\"m-creator_info\">\n      <h3 class=\"tit2\"><%~ p.title %></h3>\n      <% if(p.description){ %>\n      <div class=\"desc\"><%~ p.description %></div>\n      <% }\n      if(p.website){ %>\n      <a href=\"<%~ p.website %>\" class=\"simp mouseHover\"><span>website</span></a>\n      <% } %>\n      <div class=\"m-creator_info_bottom\">\n        <% if(p.contactsocial_links==true){ %>\n        <div class=\"social\">\n          <% if(p.social.instagram){ %>\n            <a class=\"mouseHover Sig\" href=\"<%~ p.social.instagram %>\"><%~ it.global.icons.ig %></a>\n          <% }\n          if(p.social.linkedin){ %>\n            <a class=\"mouseHover Sin\" href=\"<%~ p.social.linkedin %>\"><%~ it.global.icons.in %></a>\n          <%\n          }\n          if(p.social.facebook){ %>\n            <a class=\"mouseHover Sfb\" href=\"<%~ p.social.facebook %>\"><%~ it.global.icons.fb %></a>\n          <%\n          }\n          if(p.social.twitter){ %>\n            <a class=\"mouseHover Stw\" href=\"<%~ p.social.twitter %>\"><%~ it.global.icons.tw %></a>\n          <% }%>\n        </div>\n        <% } \n        else{\n        %>\n        <a class=\"btns mouseHover\" href=\"<%~ p.email_contact %>\"><div class=\"btns_t\">contact</div></a>\n        <% } %>\n      </div>\n    </div>\n  </section>\n  <% \n    }\n    })\n  }\n  %>\n    \n  <section class=\"m-nextprev\">\n    <% if(it.data.parent_data.prev!=null){ %>\n    <a class=\"left mouseHover\" href=\"<%~ it.data.parent_data.prev.permalink %>\" data-type=\"podcastchild\">\n      <div class=\"btnarrow\">\n        <div class=\"btnarrow_n\"></div>\n        <div class=\"btnarrow_t\">Previous</div>\n      </div>\n    </a>\n    <% }\n    else{\n\n    }\n    if(it.data.parent_data.next!=null){\n    %>\n    <a class=\"right mouseHover\" href=\"<%~ it.data.parent_data.next.permalink %>\" data-type=\"podcastchild\">\n      <div class=\"btnarrow\">\n        <div class=\"btnarrow_t\">Next</div>\n        <div class=\"btnarrow_n\"></div>\n      </div>\n    </a>\n    <%\n      }\n    %>\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"eoa4w":[function(require,module,exports) {
module.exports = "\n<% it.posts.forEach(function(p,key){ %>\n\n\n  <div class=\"show\">\n    <div class=\"show_hold\">\n      <a class=\"show_image mouseHover\" data-type=\"showchild\" href=\"<%~ p.link %>\">\n        <div class=\"btnplay \" >\n          <div class=\"btnplay_tri\"></div>\n        </div>\n        <img src=\"<%~ p.image %>\">\n      </a>\n      <div class=\"show_info\">\n        <h3 class=\"tit3\"><%~ p.title %></h3>\n        <div class=\"txt-bureau\">\n          <p><%~ p.description %></p>\n        </div>\n        <div class=\"show_info_bottom\">\n          <div class=\"date\"><%~ p.date %></div>\n          <div class=\"shareclick mouseHover\">\n            <%~ it.global.icons.share %>\n            <div class=\"shareclick_close\"></div>\n            <div class=\"shareclick_icons\">\n              <a class=\"mouseHover Stw\" href=\"https://twitter.com/intent/tweet?url=<%~ p.permalink %>\"><%~ it.global.icons.tw %></a>\n              <a class=\"mouseHover Sfb\" href=\"https://www.facebook.com/sharer/sharer.php?u=<%~ p.permalink %>\"><%~ it.global.icons.fb %></a>\n              <a class=\"mouseHover Sin\" href=\"https://www.linkedin.com/shareArticle?url=<%~ p.permalink %>\"><%~ it.global.icons.in %></a>\n              <a class=\"mouseHover Srd\" href=\"https://www.reddit.com/submit?url=<%~ p.permalink %>\"><%~ it.global.icons.reddit %></a>\n              <a class=\"mouseHover Stb\" href=\"https://www.tumblr.com/share/link?url=<%~ p.permalink %>\"><%~ it.global.icons.tumbler %></a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n<% }) \nif(it.posts.length %2 != 0){\n%>\n  <div class=\"show show-fake\"></div>\n<%\n}\n%>";

},{}],"fA8CK":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! SIGN UP TO ACCESS THIS CONTENT</h2>\n<h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3>\n<a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"7WnXA":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! YOU DON'T HAVE ACCESS TO THIS CONTENT</h2>\n<% /* <h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3> */ %>\n<% /* <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a> */ %>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"7rEA1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
var _fileJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/File.js");
var _fileJsDefault = parcelHelpers.interopDefault(_fileJs);
var _formJs = require("./Form.js");
var _formJsDefault = parcelHelpers.interopDefault(_formJs);
//COMPS
var _eta = require("eta");
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    async generate(content) {
        const response = await fetch(this.main.acf.base + "/wp-json/wp/v2/pages/" + content.dataset.id + "?acf_format=standard");
        const data = await response.json();
        // //  console.log(data)
        var html = _eta.render((0, _templateEtaDefault.default), {
            global: this.main,
            data: data.acf,
            footer: this.footer
        });
        // //  console.log(html)
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)")
        };
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.DOM.modal = document.documentElement.querySelector(".contactal");
        // //  console.log(this.DOM.modal)
        // //  console.log(this.DOM.modal.parentNode)
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
        this.form = new (0, _formJsDefault.default)(this.DOM.el.querySelector(".form"), this.main);
        this.DOM.tooltipclick = this.DOM.el.querySelector(".tooltip");
        this.DOM.tooltipmsg = this.DOM.el.querySelector(".tooltipmsg");
        this.DOM.tooltipclick.onclick = ()=>{
            if (this.DOM.tooltipclick.classList.contains("act")) {
                this.DOM.tooltipclick.classList.remove("act");
                this.DOM.tooltipmsg.classList.remove("act");
                this.DOM.tooltipmsg.style.height = "";
            } else {
                this.DOM.tooltipclick.classList.add("act");
                this.DOM.tooltipmsg.classList.add("act");
                this.DOM.tooltipmsg.style.height = this.DOM.tooltipmsg.querySelector(".cover").clientHeight + "px";
            }
            setTimeout(()=>{
                this.resizeLimit();
            }, 610);
        };
    }
    async loadImages() {}
    callBacks() {}
    createAnimations() {}
    makeAnim(anim, y, ratio) {}
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) super.smoothScroll();
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        await this.timeout(1);
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        if (this.DOM.modal.classList.contains("contactal-act")) {
            this.DOM.modal.classList.remove("contactal-act");
            await this.timeout(610);
            document.querySelector(".contactal").remove();
        } else document.querySelector(".contactal").remove();
        return super.hide();
    }
};

},{"../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./template.eta":"ethle","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","/src/js🧠🧠🧠/defaults/File.js":"ji0L2","./Form.js":"l75yw","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"ethle":[function(require,module,exports) {
module.exports = "<div class=\"contactal\">\n  <div class=\"contactal_bg\"></div>\n  <div class=\"contactal_content\">\n    <div class=\"contactal_success\">\n      <div class=\"supercheck\" style=\"--main:#E5855E\">\n        <div class=\"supercheck_i\"></div>\n      </div>\n      <h2 class=\"tit1\">Thank you!We will contact you soon</h2>\n      <a href=\"<%~ it.global.acf.home %>\" data-type=\"index\" class=\"mouseHover btn btn_close\" style=\"--main:#E5855E\">\n        <div class=\"btn_t\">BACK TO Home</div>\n      </a>\n    </div>\n    <div class=\"contactal_close\"><span></span><span></span></div>\n    <div class=\"contactal_content_text\">\n      <h3 class=\"tit4\">Must Reads for Aspiring Allies</h3>\n      <h2 class=\"tit1\">Subscribe to stay updated on this list</h2>\n      <div class=\"field field-email\"><label class=\"field_lbl\">Name</label><input class=\"field_npt\">\n        <div class=\"field_err\">Wrong format</div>\n        <div class=\"field_button\">\n          <div class=\"btninput\">\n            <div class=\"btninput_t\">Suscribe</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"chk \"><input class=\"chk_npt\" type=\"checkbox\">\n        <div class=\"chk_s\">\n          <div class=\"chk_i\"></div>\n        </div><label class=\"chk_lbl\">I accept <a>Terms and conditions</a></label>\n      </div>\n    </div><img src=\"<%~ it.global.acf.template %>/public/modal.png\">\n  </div>\n</div>\n\n<main class=\"contact\">\n  <section class=\"contact_intro\" style=\"background:#E5855E\">\n    <h2 class=\"tit1\">Contact us</h2>\n    <p><%~ it.data.text %></p><a class=\"mail mouseHover\" href=\"mailto:<%~ it.global.acf.emailcontact %>\"><%~ it.global.acf.emailcontact %></a>\n  </section>\n  <section class=\"contact_form\">\n    <div class=\"grid\">\n      <form class=\"form\">\n        <div class=\"form_el\">\n          <div class=\"selc topicCon\"><select>\n              <option value=\"\" hidden=\"\" selected=\"\">SELECT YOUR TOPIC</option>\n              <% it.data.topics.forEach(function(p,key){ %>\n              <option value=\"<%~ p.text %>\"><%~ p.text %></option>\n              <% }) %>\n            </select></div>\n          <div class=\"tooltip mouseHover\">\n            <div class=\"tooltip_icon\">\n              <div class=\"tooltip_icon_i\">?</div>\n            </div>\n          </div>\n          <div class=\"tooltipmsg\"><div class=\"cover\"><p><%~ it.global.acf.pronouns_tooltip %></p></div></div>\n        </div>\n        <div class=\"field field-email emailCon\"><label class=\"field_lbl\">Email</label><input class=\"field_npt\">\n          <div class=\"field_err\">Empty field</div>\n        </div>\n        <div class=\"field field nameCon\"><label class=\"field_lbl\">Name</label><input class=\"field_npt\">\n          <div class=\"field_err\">Empty field</div>\n        </div>\n        <div class=\"field field-txt messageCon\"><label class=\"field_lbl\">Message</label><textarea class=\"field_npt\"></textarea>\n          <div class=\"field_err\">Empty field</div>\n        </div>\n        <div class=\"chk chkCon\"><input class=\"chk_npt mouseHover\" type=\"checkbox\">\n          <div class=\"chk_s\">\n            <div class=\"chk_i\"></div>\n          </div><label class=\"chk_lbl\">I accept <a>terms & conditions</a></label>\n        </div>\n        <div class=\"btn btn-c btnCon mouseHover\" style=\"--main:#E5855E;--base:#FEF9F3\">\n          <div class=\"btn_t\">Submit</div>\n        </div>\n      </form>\n    </div>\n  </section>\n  <section class=\"m-cta signupmod\" style=\"--main:#895434\">\n    <div class=\"c-vw\">\n      <div class=\"hold\">\n         <%\n          var randomNum = Math.floor((Math.random() * it.global.acf.signup_text.length) + 1);\n          var title = it.global.acf.signup_text[randomNum-1].title;\n          var text = it.global.acf.signup_text[randomNum-1].text;\n          \n        %>\n        <h2 class=\"tit1\"><%~ title %></h2>\n        <h3 class=\"tit4\"><%~ text %> </h3>\n        </h3>\n        <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\">\n          <div class=\"btn_t\">TAP IN</div>\n        </a>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-dual\">\n    <div class=\"left\">\n      \n      <%\n        var randomNum = Math.floor((Math.random() * it.global.acf.support_text.length) + 1);\n        var title = it.global.acf.support_text[randomNum-1].title;\n        var text = it.global.acf.support_text[randomNum-1].text;\n        \n      %>\n      <h2 class=\"tit1\"><%~ title %></h2>\n      <h3 class=\"tit4\"><%~ text %> </h3>\n      <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.support %>\" style=\"--main:#E5855E\" style=\"--main:#E5855E;--base:#FEF9F3\">\n        <div class=\"btn_t\">SUPPORT</div>\n      </a>\n    </div>\n    <div class=\"right\">\n      <div class=\"right_el\"><img src=\"<%~ it.data.image_support %>\"></div>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"ji0L2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
"use strict";
//https://codepen.io/mmhuntsberry/pen/QowZwR
exports.default = class {
    constructor(el){
        this.DOM = {
            el: el,
            npt: el.querySelector("input"),
            drag: el.querySelector(".file_dropzone")
        };
        this.fd = new FormData();
        this.initEvents();
    }
    initEvents() {
        this.change = (e)=>{
            // //  console.log(this.DOM.npt.value)
            let reader = new FileReader();
            reader.readAsText(e.target.files[0]);
        // //  console.log(reader)
        };
        this.dragOver = (e)=>{
            e.preventDefault();
        };
        this.click = (e)=>{
            this.DOM.npt.click();
        };
        this.drop = (e)=>{
            e.preventDefault();
            // const validatedFiles = this.fileValidation(unvalidatedFiles)
            // this.createFileDOMNode(validatedFiles)
            // this.fd.set('file', e.dataTransfer.files[0], e.dataTransfer.files[0].name)
            // //  console.log(e.dataTransfer.files[0].path)
            // //  console.log(this.fd)
            let reader = new FileReader();
            // reader.readAsDataURL(e.dataTransfer.files[0])
            reader.readAsText(e.dataTransfer.files[0]);
        // //  console.log(reader)
        };
        this.fileValidation = (files)=>{
            const validatedFileArray = [];
            const supportedExts = [
                "png",
                "jpg",
                "doc",
                "xls",
                "pdf"
            ];
            files.forEach((file)=>{
                const ext = this.getFileExtension(file);
                if (supportedExts.indexOf(ext) === -1) ;
                else validatedFileArray.push(file);
            });
            return validatedFileArray;
        };
        this.getFileExtension = (file)=>{
            return file.name.split(".").pop();
        };
        this.DOM.npt.addEventListener("change", (e)=>this.change(e));
        this.DOM.drag.addEventListener("dragover", (e)=>this.dragOver(e));
        this.DOM.drag.addEventListener("drop", (e)=>this.drop(e));
        this.DOM.drag.addEventListener("click", (e)=>this.click(e));
    }
    removeEvents() {}
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"l75yw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _fieldJs = require("./Field.js");
var _fieldJsDefault = parcelHelpers.interopDefault(_fieldJs);
var _chkJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Chk.js");
var _chkJsDefault = parcelHelpers.interopDefault(_chkJs);
var _selcJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Selc.js");
var _selcJsDefault = parcelHelpers.interopDefault(_selcJs);
var _events = require("events");
var _eventsDefault = parcelHelpers.interopDefault(_events);
var _autoBind = require("auto-bind");
var _autoBindDefault = parcelHelpers.interopDefault(_autoBind);
"use strict";
exports.default = class extends (0, _eventsDefault.default) {
    constructor(el, main){
        super();
        (0, _autoBindDefault.default)(this);
        this.DOM = {
            el: el
        };
        this.main = main;
        this.email = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".emailCon"));
        this.name = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".nameCon"));
        this.message = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".messageCon"));
        this.check = new (0, _chkJsDefault.default)(this.DOM.el.querySelector(".chkCon"));
        this.topic = new (0, _selcJsDefault.default)(this.DOM.el.querySelector(".topicCon"));
        this.btn = this.DOM.el.querySelector(".btnCon");
        this.initEvents();
    }
    initEvents() {
        // this.register()
        this.registerFn = ()=>{
            this.email.check();
            this.name.check();
            this.topic.check();
            this.check.check();
            this.message.check();
            if (!this.DOM.el.querySelector(".err")) this.register();
        };
        this.btn.addEventListener("click", this.registerFn);
    }
    async register() {
        let formdata = new FormData();
        formdata.set("email", this.email.DOM.npt.value);
        formdata.set("name", this.name.DOM.npt.value);
        formdata.set("message", this.message.DOM.npt.value);
        formdata.set("topic", this.topic.DOM.npt.value);
        const logtest = await fetch(this.main.acf.base + "/wp-json/csskiller/v1/sendform", {
            method: "post",
            body: formdata
        });
        const datalog = await logtest;
        // //  console.log(datalog)
        document.body.querySelector(".contactal").classList.add("contactal-act");
    // document.body.querySelector('.applyal').classList.add('applyal-act')  
    // this.emit('success')
    //   // this.DOM.el
    // //  console.log('badname')
    //   this.DOM.errors[0].classList.add('act')
    //   setTimeout(()=>{
    //     this.DOM.errors[0].classList.remove('act')
    //   },3300)
    // }
    // else if(datalog.code=='incorrect_password'){
    // //  console.log('badpass')
    //   this.DOM.errors[1].classList.add('act')
    //   setTimeout(()=>{
    //     this.DOM.errors[1].classList.remove('act')
    //   },3300)
    // }
    // else{
    // }
    // //  console.log('sis')
    }
    removeEvents() {}
};

},{"./Field.js":"79xEE","/src/js🧠🧠🧠/defaults/Chk.js":"LTujD","/src/js🧠🧠🧠/defaults/Selc.js":"1p4lk","events":"32fHr","auto-bind":"iS0Jy","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"79xEE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
"use strict";
exports.default = class {
    constructor(el){
        this.DOM = {
            el: el
        };
        this.DOM.npt = this.DOM.el.querySelector(".field_npt");
        this.initEvents();
        this.checkField();
    }
    initEvents() {
        this.checkField = ()=>{
            if (this.DOM.npt.value == "") this.DOM.el.classList.remove("fill");
            else this.DOM.el.classList.add("fill");
        };
        this.focusFn = ()=>{
            this.DOM.el.classList.remove("err");
            this.DOM.el.classList.add("foc");
        };
        this.focusoutFn = ()=>{
            this.DOM.el.classList.remove("foc");
            this.DOM.el.classList.remove("err");
        };
        this.DOM.npt.addEventListener("input", ()=>this.checkField());
        this.DOM.npt.addEventListener("focusin", this.focusFn);
        this.DOM.npt.addEventListener("focusout", ()=>this.focusoutFn());
    }
    check() {
        if ("" == this.DOM.npt.value) return void this.DOM.el.classList.add("err");
        this.DOM.el.classList.remove("err");
        this.DOM.el.classList.contains("field-email") ? null == this.DOM.npt.value.match(/^([\w\!\#$\%\&\'\*\+\-\/\=\?\^\`{\|\}\~]+\.)*[\w\!\#$\%\&\'\*\+\-\/\=\?\^\`{\|\}\~]+@((((([a-z0-9]{1}[a-z0-9\-]{0,62}[a-z0-9]{1})|[a-z])\.)+[a-z]{2,6})|(\d{1,3}\.){3}\d{1,3}(\:\d{1,5})?)$/i) ? this.DOM.el.classList.add("err") : this.DOM.el.classList.remove("err") : this.DOM.el.classList.contains("field-number") && (isNaN(this.DOM.npt.value) ? this.DOM.el.classList.add("err") : this.DOM.el.classList.remove("err"));
    }
    clear() {
        this.DOM.el.classList.remove("foc");
        this.DOM.el.classList.remove("fill");
        this.DOM.el.classList.remove("err");
        this.DOM.npt.value = "";
    }
    removeEvents() {
        this.DOM.npt.removeEventListener("input", ()=>this.checkField());
        this.DOM.npt.removeEventListener("focusin", this.focusFn);
        this.DOM.npt.removeEventListener("focusout", ()=>this.focusoutFn());
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"1p4lk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
"use strict";
exports.default = class {
    constructor(el){
        this.DOM = {
            el: el,
            npt: el.querySelector("select")
        };
        this.initEvents();
    }
    initEvents() {
        this.check = ()=>{
            if (this.DOM.npt.value != "") this.DOM.el.classList.remove("err");
            else this.DOM.el.classList.add("err");
        };
        this.changeFn = ()=>{
            if (this.DOM.npt.value != "") this.DOM.el.classList.remove("err");
        };
        this.DOM.npt.addEventListener("change", this.changeFn);
    }
    removeEvents() {
        this.DOM.npt.removeEventListener("change", this.changeFn);
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"ay4ky":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _podcastEta = require("bundle-text:./podcast.eta");
var _podcastEtaDefault = parcelHelpers.interopDefault(_podcastEta);
var _learnEta = require("bundle-text:./learn.eta");
var _learnEtaDefault = parcelHelpers.interopDefault(_learnEta);
var _articleEta = require("bundle-text:./article.eta");
var _articleEtaDefault = parcelHelpers.interopDefault(_articleEta);
var _networkEta = require("bundle-text:./network.eta");
var _networkEtaDefault = parcelHelpers.interopDefault(_networkEta);
var _showEta = require("bundle-text:./show.eta");
var _showEtaDefault = parcelHelpers.interopDefault(_showEta);
var _networkEta1 = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/network.eta");
var _networkEtaDefault1 = parcelHelpers.interopDefault(_networkEta1);
var _podcastEta1 = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/podcast.eta");
var _podcastEtaDefault1 = parcelHelpers.interopDefault(_podcastEta1);
var _learnEta1 = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/learn.eta");
var _learnEtaDefault1 = parcelHelpers.interopDefault(_learnEta1);
var _artEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/art.eta");
var _artEtaDefault = parcelHelpers.interopDefault(_artEta);
var _showEta1 = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/show.eta");
var _showEtaDefault1 = parcelHelpers.interopDefault(_showEta1);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
//COMPS
var _dualintroJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/components\uD83E\uDDBE/Dualintro.js");
var _dualintroJsDefault = parcelHelpers.interopDefault(_dualintroJs);
var _eta = require("eta");
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        //${process.env.PUBLIC_URL}/wp-json/wp/v2/podcast/40?acf_format=standard
        // const response = await fetch(this.main.acf.base+'/wp-json/wp/v2/pages/'+content.dataset.id+'?acf_format=standard')
        // const response = await fetch(this.main.acf.base+'/wp-json/wp/v2/podcast/'+content.dataset.id+'?acf_format=standard')
        // const data = await response.json()
        // //  console.log(data)
        let html = "";
        this.type = content.dataset.type;
        // //  console.log(this.type)
        if (this.type == "podcast") {
            html = _eta.render((0, _podcastEtaDefault.default), {
                global: this.main,
                footer: this.footer
            });
            document.querySelector("#content").innerHTML += html;
            this.DOM = {
                el: document.querySelector("main:not(.old)")
            };
            this.DOM.holder = this.DOM.el.querySelector(".hPosts");
            await this.getPosts(true, -1, -1, 1);
        } else if (this.type == "learn") {
            html = _eta.render((0, _learnEtaDefault.default), {
                global: this.main,
                footer: this.footer
            });
            document.querySelector("#content").innerHTML += html;
            this.DOM = {
                el: document.querySelector("main:not(.old)")
            };
            this.DOM.holder = this.DOM.el.querySelector(".hPosts");
            await this.getPosts(true, -1, -1, 1);
        } else if (this.type == "post") {
            html = _eta.render((0, _articleEtaDefault.default), {
                global: this.main,
                footer: this.footer
            });
            document.querySelector("#content").innerHTML += html;
            this.DOM = {
                el: document.querySelector("main:not(.old)")
            };
            this.DOM.holder = this.DOM.el.querySelector(".hPosts");
            this.DOM.pages = this.DOM.el.querySelector(".pPosts");
            await this.getPosts(true, 0, 8, 1);
        } else if (this.type == "network") {
            html = _eta.render((0, _networkEtaDefault.default), {
                global: this.main,
                footer: this.footer
            });
            document.querySelector("#content").innerHTML += html;
            // //  console.log(html)
            this.DOM = {
                el: document.querySelector("main:not(.old)")
            };
            this.DOM.holder = this.DOM.el.querySelector(".hPosts");
            this.DOM.pages = this.DOM.el.querySelector(".pPosts");
            await this.getPosts(true, -1, 9, 1);
        } else if (this.type == "show") {
            html = _eta.render((0, _showEtaDefault.default), {
                global: this.main,
                footer: this.footer
            });
            document.querySelector("#content").innerHTML += html;
            // //  console.log(html)
            this.DOM = {
                el: document.querySelector("main:not(.old)")
            };
            this.DOM.holder = this.DOM.el.querySelector(".hPosts");
            await this.getPosts(true, -1, -1, 1);
        }
        // //  console.log(data)
        // //  console.log(html)
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
        await this.loadImages();
        await this.createAnimations();
    }
    async ajaxImages() {
        let newpage = document.createElement("template");
        newpage.innerHTML = this.html;
        let paths = Array.from(newpage.content.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        return Promise.resolve();
    }
    async blocksClick(type) {
        this.DOM.holder.classList.add("load");
        await this.timeout(600);
        if (type == "block") this.DOM.holder.classList.add("blocks");
        else this.DOM.holder.classList.remove("blocks");
        this.DOM.holder.classList.remove("load");
        this.resizeLimit();
    }
    async getJson(url, isNew) {
        // //  console.log(url)
        const posts = await fetch(url);
        const datap = await posts.json();
        if (this.type == "post") this.html = _eta.render((0, _artEtaDefault.default), {
            global: this.main,
            posts: datap.posts
        });
        else if (this.type == "podcast") this.html = _eta.render((0, _podcastEtaDefault1.default), {
            global: this.main,
            posts: datap.posts
        });
        else if (this.type == "learn") this.html = _eta.render((0, _learnEtaDefault1.default), {
            global: this.main,
            posts: datap.posts
        });
        else if (this.type == "show") this.html = _eta.render((0, _showEtaDefault1.default), {
            global: this.main,
            posts: datap.posts
        });
        else if (this.type == "network") this.html = _eta.render((0, _networkEtaDefault1.default), {
            global: this.main,
            posts: datap.posts
        });
        this.DOM.holder.innerHTML = this.html;
        // this.ajaxImages()
        if (isNew == true) {
            this.actualpage = 1;
            this.max = datap.maxpages;
        }
        await this.ajaxImages();
    }
    async getPosts(isNew, id, postperpage, page) {
        this.DOM.holder.classList.add("load");
        Promise.all([
            this.timeout(600),
            this.getJson(this.main.acf.base + "/wp-json/wp/v2/getposts?type=" + this.type + "&parent=" + id + "&page=" + page + "&perpage=" + postperpage, isNew)
        ]).then(()=>{
            this.DOM.holder.classList.remove("load");
            if (isNew == true && this.DOM.pages) {
                // //  console.log(this.max)
                for(let i = 1; i <= this.max; i++)if (i == page) this.DOM.pages.innerHTML += '<div class="pgel mouseHover act"><div class="pgel_t">' + i + "</div></div>";
                else this.DOM.pages.innerHTML += '<div class="pgel mouseHover"><div class="pgel_t">' + i + "</div></div>";
                this.DOM.pagsel = this.DOM.pages.querySelectorAll(".pgel");
                if (this.DOM.pagsel.length == 1) this.DOM.pages.classList.add("hide");
                for (let [index, el] of this.DOM.pagsel.entries())el.onclick = (event)=>{
                    this.getPosts(false, id, postperpage, index + 1);
                };
                if (this.DOM.el.querySelector(".sPosts")) for (let el1 of this.DOM.el.querySelectorAll(".sPosts .blockClick"))el1.onclick = (ev)=>{
                    this.DOM.el.querySelector(".blockClick.act").classList.remove("act");
                    el1.classList.add("act");
                    this.blocksClick(el1.dataset.type);
                };
            } else if (this.DOM.pages) {
                this.DOM.pagsel[this.actualpage - 1].classList.remove("act");
                this.actualpage = page;
                this.DOM.pagsel[this.actualpage - 1].classList.add("act");
            }
            this.emit("linkseventlisteners");
            this.emit("mousereset");
            this.resizeLimit();
        });
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            // //  console.log(this.anims[pos])
                            this.anims[pos].stick.active = 0;
                            this.movestick = null;
                        } else if (id == "v") clearInterval(this.clockInt);
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "e") {
                            this.anims[pos].classel.start();
                            this.slidetext = this.anims[pos];
                        } else if (id == "v") this.clockStart(this.anims[pos].el.parentNode.querySelector(".time"));
                        else if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.movestick = this.anims[pos];
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) super.smoothScroll();
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        this.timeout(1);
        // gsap.to('.home',{opacity:1,ease:Power2.easeInOut,duration:.6})
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        return super.hide();
    }
};

},{"../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./podcast.eta":"fvySY","bundle-text:./learn.eta":"59Hm9","bundle-text:./article.eta":"9M97t","bundle-text:./network.eta":"6S0GA","bundle-text:./show.eta":"kPUGl","bundle-text:/src/views👁️👁️👁️/ETA/network.eta":"iqqpr","bundle-text:/src/views👁️👁️👁️/ETA/podcast.eta":"d8wWm","bundle-text:/src/views👁️👁️👁️/ETA/learn.eta":"eZ8de","bundle-text:/src/views👁️👁️👁️/ETA/art.eta":"2COPr","bundle-text:/src/views👁️👁️👁️/ETA/show.eta":"4wWGm","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","/src/js🧠🧠🧠/components🦾/Dualintro.js":"7DjOj","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"fvySY":[function(require,module,exports) {
module.exports = "<main class=\"artarchive\">\n  <section class=\"m-simpleintro m-simpleintro-r\">\n    <div class=\"c-vw\">\n      <h2 class=\"tit1\">Podcasts</h2>\n    </div>\n  </section>\n  <section class=\"m-pods\">\n    <div class=\"m-pods_hold hPosts\">\n    </div>\n  </section>\n\n  <section class=\"m-cta signupmod\" style=\"--main:#DF80AC\">\n    <div class=\"c-vw\">\n      <div class=\"hold\">\n         <%\n          var randomNum = Math.floor((Math.random() * it.global.acf.signup_text.length) + 1);\n          var title = it.global.acf.signup_text[randomNum-1].title;\n          var text = it.global.acf.signup_text[randomNum-1].text;\n          \n        %>\n        <h2 class=\"tit1\"><%~ title %></h2>\n        <h3 class=\"tit4\"><%~ text %> </h3>\n        </h3>\n        <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\">\n          <div class=\"btn_t\">TAP IN</div>\n        </a>\n      </div>\n    </div>\n  </section>\n\n  <section class=\"m-dual\">\n    <div class=\"left\" >\n      <%\n        var randomNum = Math.floor((Math.random() * it.global.acf.support_text.length) + 1);\n        var title = it.global.acf.support_text[randomNum-1].title;\n        var text = it.global.acf.support_text[randomNum-1].text;\n        \n      %>\n      <h2 class=\"tit1\"><%~ title %></h2>\n      <h3 class=\"tit4\"><%~ text %> </h3>\n      <a  class=\"btn mouseHover\" style=\"--main:#DF80AC\" href=\"<%~ it.global.acf.support %>\">\n        <div class=\"btn_t\">Support</div>\n      </a>\n    </div>\n    <div class=\"right\">\n      <div class=\"right_el\"><img src=\"<%~ it.global.acf.image_podcast %>\"></div>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"59Hm9":[function(require,module,exports) {
module.exports = "<main class=\"artarchive\">\n  <section class=\"m-simpleintro m-simpleintro-r\">\n    <div class=\"c-vw\">\n      <h2 class=\"tit1\">Learning Platform</h2>\n    </div>\n  </section>\n  <section class=\"m-pods\">\n    <div class=\"m-pods_hold hPosts\">\n    </div>\n  </section>\n\n  <section class=\"m-cta signupmod\" style=\"--main:#DF80AC\">\n    <div class=\"c-vw\">\n      <div class=\"hold\">\n         <%\n          var randomNum = Math.floor((Math.random() * it.global.acf.signup_text.length) + 1);\n          var title = it.global.acf.signup_text[randomNum-1].title;\n          var text = it.global.acf.signup_text[randomNum-1].text;\n          \n        %>\n        <h2 class=\"tit1\"><%~ title %></h2>\n        <h3 class=\"tit4\"><%~ text %> </h3>\n        </h3>\n        <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\">\n          <div class=\"btn_t\">TAP IN</div>\n        </a>\n      </div>\n    </div>\n  </section>\n\n  <section class=\"m-dual\">\n    <div class=\"left\" >\n      <%\n        var randomNum = Math.floor((Math.random() * it.global.acf.support_text.length) + 1);\n        var title = it.global.acf.support_text[randomNum-1].title;\n        var text = it.global.acf.support_text[randomNum-1].text;\n        \n      %>\n      <h2 class=\"tit1\"><%~ title %></h2>\n      <h3 class=\"tit4\"><%~ text %> </h3>\n      <a  class=\"btn mouseHover\" style=\"--main:#DF80AC\" href=\"<%~ it.global.acf.support %>\">\n        <div class=\"btn_t\">Support</div>\n      </a>\n    </div>\n    <div class=\"right\">\n      <div class=\"right_el\"><img src=\"<%~ it.global.acf.image_learn %>\"></div>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"9M97t":[function(require,module,exports) {
module.exports = "<main class=\"artarchive\">\n  <section class=\"m-simpleintro\">\n    <div class=\"c-vw\">\n      <h2 class=\"tit1\">Articles</h2>\n    </div>\n  </section>\n  <section class=\"m-arts\">\n    <div class=\"m-arts_hold holdarts hPosts c-vw\">\n    </div>\n    <div class=\"m-arts_pags c-vw pg pPosts\">\n    </div>\n  </section>\n  \n  <section class=\"m-cta signupmod\" style=\"--main:#DF80AC\">\n    <div class=\"c-vw\">\n      <div class=\"hold\">\n         <%\n          var randomNum = Math.floor((Math.random() * it.global.acf.signup_text.length) + 1);\n          var title = it.global.acf.signup_text[randomNum-1].title;\n          var text = it.global.acf.signup_text[randomNum-1].text;\n          \n        %>\n        <h2 class=\"tit1\"><%~ title %></h2>\n        <h3 class=\"tit4\"><%~ text %> </h3>\n        </h3>\n        <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\">\n          <div class=\"btn_t\">TAP IN</div>\n        </a>\n      </div>\n    </div>\n  </section>\n\n  \n  <section class=\"m-dual\">\n    <div class=\"left\">\n      \n      <%\n        var randomNum = Math.floor((Math.random() * it.global.acf.support_text.length) + 1);\n        var title = it.global.acf.support_text[randomNum-1].title;\n        var text = it.global.acf.support_text[randomNum-1].text;\n        \n      %>\n      <h2 class=\"tit1\"><%~ title %></h2>\n      <h3 class=\"tit4\"><%~ text %> </h3>\n      <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.support %>\" style=\"--main:#DF80AC\">\n        <div class=\"btn_t\">SUPPORT</div>\n      </a>\n    </div>\n    <div class=\"right\">\n      <div class=\"right_el\"><img src=\"<%~ it.global.acf.image_archive_article %>\"></div>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"6S0GA":[function(require,module,exports) {
module.exports = "<main class=\"artarchive\">\n  <section class=\"m-simpleintro\">\n    <div class=\"c-vw\">\n      <h2 class=\"tit1\">Network</h2>\n      <h3 class=\"tit3\">EXCLUSIVE CONTENT FROM FEATURED GUESTS AND BRANDS</h4>\n    </div>\n  </section>\n  <section class=\"m-networks\">\n    <div class=\"m-networks_hold holdarts hPosts\">\n    </div>\n    <div class=\"m-networks_pags c-vw pg pPosts\">\n    </div>\n  </section>\n  \n  <section class=\"m-cta signupmod\" style=\"--main:#DF80AC\">\n    <div class=\"c-vw\">\n      <div class=\"hold\">\n         <%\n          var randomNum = Math.floor((Math.random() * it.global.acf.signup_text.length) + 1);\n          var title = it.global.acf.signup_text[randomNum-1].title;\n          var text = it.global.acf.signup_text[randomNum-1].text;\n          \n        %>\n        <h2 class=\"tit1\"><%~ title %></h2>\n        <h3 class=\"tit4\"><%~ text %> </h3>\n        </h3>\n        <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\">\n          <div class=\"btn_t\">TAP IN</div>\n        </a>\n      </div>\n    </div>\n  </section>\n\n  <section class=\"m-dual\">\n    <div class=\"left\">\n      \n      <%\n        var randomNum = Math.floor((Math.random() * it.global.acf.support_text.length) + 1);\n        var title = it.global.acf.support_text[randomNum-1].title;\n        var text = it.global.acf.support_text[randomNum-1].text;\n        \n      %>\n      <h2 class=\"tit1\"><%~ title %></h2>\n      <h3 class=\"tit4\"><%~ text %> </h3>\n      <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.support %>\" style=\"--main:#DF80AC\">\n        <div class=\"btn_t\">SUPPORT</div>\n      </a>\n    </div>\n    <div class=\"right\">\n      <div class=\"right_el\"><img src=\"<%~ it.global.acf.image_network %>\"></div>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"kPUGl":[function(require,module,exports) {
module.exports = "<main class=\"artarchive\">\n  <section class=\"m-simpleintro\">\n    <div class=\"c-vw\">\n      <h2 class=\"tit1\">SHOWS</h2>\n    </div>\n  </section>\n  <section class=\"m-textbutton\">\n    <div class=\"c-vw\">\n      <h3 class=\"tit3\">recurring web shows that reinforce our mission: centering and amplifying marginalized voices\n        at work. Follow us on Crowdcast to never miss an episode.</h3><a class=\"btn mouseHover\"\n        href=\"https://www.crowdcast.io/livingcorporate\">\n        <div class=\"btn_t\" data-color=\"or\">FOLLOW US</div>\n      </a>\n    </div>\n  </section>\n  <section class=\"m-shows\">\n    <div class=\"m-shows_hold hPosts\">\n    </div>\n  </section>\n  \n  <section class=\"m-cta signupmod\" style=\"--main:#E5855E\">\n    <div class=\"c-vw\">\n      <div class=\"hold\">\n         <%\n          var randomNum = Math.floor((Math.random() * it.global.acf.signup_text.length) + 1);\n          var title = it.global.acf.signup_text[randomNum-1].title;\n          var text = it.global.acf.signup_text[randomNum-1].text;\n          \n        %>\n        <h2 class=\"tit1\"><%~ title %></h2>\n        <h3 class=\"tit4\"><%~ text %> </h3>\n        </h3>\n        <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\">\n          <div class=\"btn_t\">TAP IN</div>\n        </a>\n      </div>\n    </div>\n  </section>\n\n  \n  <section class=\"m-dual\">\n    <div class=\"left\">\n      \n      <%\n        var randomNum = Math.floor((Math.random() * it.global.acf.support_text.length) + 1);\n        var title = it.global.acf.support_text[randomNum-1].title;\n        var text = it.global.acf.support_text[randomNum-1].text;\n        \n      %>\n      <h2 class=\"tit1\"><%~ title %></h2>\n      <h3 class=\"tit4\"><%~ text %> </h3>\n      <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.support %>\" style=\"--main:#E5855E\">\n        <div class=\"btn_t\">SUPPORT</div>\n      </a>\n    </div>\n    <div class=\"right\">\n      <div class=\"right_el\"><img src=\"<%~ it.global.acf.image_archive_show %>\"></div>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"iqqpr":[function(require,module,exports) {
module.exports = "\n<%\n  cont = 0\n   it.posts.forEach(function(p,key){\n  %>\n  <a class=\"network mouseHover\" href=\"<%~ p.link %>\" style=\"--main:<%~ p.color %>\">\n    <div class=\"network_hold\">\n      <div class=\"network_logo\"><img src=\"<%~ p.logo %>\"></div>\n    </div>\n    \n  </a>\n<% \n  if(cont==3){\n  cont=0\n  }\n  })\nif(cont != 0 ){\n  for(i=0;i<3-cont;i++){\n  %>\n    <div class=\"fake\"></div>\n\n  <%\n  }\n\n}\n%>";

},{}],"d8wWm":[function(require,module,exports) {
module.exports = "\n<% \n  cont = 0\n  it.posts.forEach(function(p,key){ %>\n  <a class=\"pod mouseHover\" href=\"<%~ p.link %>\" data-type=\"podcastdad\">\n    <div class=\"pod_image\">\n      <%~ it.global.icons.elipse %>\n      <div class=\"pod_image_hold\"><img src=\"<%~ p.image %>\"></div>\n    </div>\n    <div class=\"pod_info\">\n      <h3 class=\"tit4\"><%~ p.title %></h3>\n      <p><%~ p.sons %></p>\n    </div>\n  </a>\n<% \n  cont++\n  if(cont==3){\n  cont=0\n  }\n  })\nif(cont != 0 ){\n  for(i=0;i<3-cont;i++){\n  %>\n    <div class=\"fake\"></div>\n\n  <%\n  }\n\n}\n%>";

},{}],"eZ8de":[function(require,module,exports) {
module.exports = "\n<% \n  cont = 0\n  it.posts.forEach(function(p,key){ %>\n  <a class=\"pod mouseHover\" href=\"<%~ p.link %>\" data-type=\"learndad\">\n    <div class=\"pod_image\">\n      <%~ it.global.icons.elipse %>\n      <div class=\"pod_image_hold\"><img src=\"<%~ p.image %>\"></div>\n    </div>\n    <div class=\"pod_info\">\n      <h3 class=\"tit4\"><%~ p.title %></h3>\n      <p><%~ p.sons %></p>\n    </div>\n  </a>\n<% \n  cont++\n  if(cont==3){\n  cont=0\n  }\n  })\nif(cont != 0 ){\n  for(i=0;i<3-cont;i++){\n  %>\n    <div class=\"fake\"></div>\n\n  <%\n  }\n\n}\n%>";

},{}],"2COPr":[function(require,module,exports) {
module.exports = "\n<% it.posts.forEach(function(p,key){ %>\n  <a class=\"art mouseHover\" href=\"<%~ p.link %>\" data-type=\"article\">\n    <div class=\"art_hold\">\n      <div class=\"art_image\">\n        <div class=\"btnmore btnmore-hovered\">\n          <div class=\"btnmore_t\">read more</div>\n        </div><img src=\"<%~ p.image %>\">\n      </div>\n      <div class=\"art_info\">\n        <h3 class=\"tit3\"><%~ p.title %></h3>\n        <% if(p.description!=null){ %>\n        <p class=\"desc\"><%~ p.description %></p>\n        <% } %>\n        <div class=\"date tit4\"><%~ p.date %></div>\n      </div>\n    </div>\n  </a>\n<% }) %>";

},{}],"4wWGm":[function(require,module,exports) {
module.exports = "\n<% it.posts.forEach(function(p,key){ %>\n\n\n  <a class=\"showa mouseHover\" href=\"<%~ p.link %>\" data-type=\"showdad\">\n    <div class=\"showa_hold\">\n      <div class=\"showa_image\">\n        <img src=\"<%~ p.image %>\">\n        <div class=\"btn\">\n          <div class=\"btn_t\">Watch Show</div>\n        </div>\n      </div>\n    </div>\n  </a>\n<% })\n%>";

},{}],"fPp1z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
//COMPS
var _eta = require("eta");
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        // console.log(this.main.acf.base+'/wp-json/wp/v2/pages/'+content.dataset.id+'?acf_format=standard')
        const response = await fetch(this.main.acf.base + "/wp-json/wp/v2/pages/" + content.dataset.id + "?acf_format=standard");
        const data = await response.json();
        // console.log(data)
        var html = _eta.render((0, _templateEtaDefault.default), {
            global: this.main,
            data: data,
            footer: this.footer
        });
        // console.log(html)
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)")
        };
        // this.DOM.watchers = this.DOM.el.querySelectorAll('.iO')
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
    // await this.loadImages()
    // await this.createAnimations()
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            // console.log(this.anims[pos])
                            this.anims[pos].stick.active = 0;
                            this.movestick = null;
                        } else if (id == "v") clearInterval(this.clockInt);
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "e") {
                            this.anims[pos].classel.start();
                            this.slidetext = this.anims[pos];
                        } else if (id == "v") this.clockStart(this.anims[pos].el.parentNode.querySelector(".time"));
                        else if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.movestick = this.anims[pos];
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) super.smoothScroll();
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        await this.timeout(1);
        this.DOM.el.classList.add("home-active");
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        return super.hide();
    }
};

},{"../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./template.eta":"gNjnX","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"gNjnX":[function(require,module,exports) {
module.exports = "<main class=\"articlesingle\">\n  <section class=\"m-simpleintro\">\n    <div class=\"c-vw\">\n      <h2 class=\"tit1\"><%~ it.data.title.rendered %></h2>\n    </div>\n  </section>\n  <section class=\"articlesingle_main\">\n      <div class=\"grid wp\">\n        <%~ it.data.content.rendered %>\n      </div>\n    </section>\n    <section class=\"m-cta signupmod\" style=\"--main:#DF80AC\">\n    <div class=\"c-vw\">\n      <div class=\"hold\">\n         <%\n          var randomNum = Math.floor((Math.random() * it.global.acf.signup_text.length) + 1);\n          var title = it.global.acf.signup_text[randomNum-1].title;\n          var text = it.global.acf.signup_text[randomNum-1].text;\n          \n        %>\n        <h2 class=\"tit1\"><%~ title %></h2>\n        <h3 class=\"tit4\"><%~ text %> </h3>\n        </h3>\n        <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\">\n          <div class=\"btn_t\">TAP IN</div>\n        </a>\n      </div>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>\n      ";

},{}],"7vdFL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _component = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Component");
var _componentDefault = parcelHelpers.interopDefault(_component);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _audio = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Audio");
var _audioDefault = parcelHelpers.interopDefault(_audio);
var _eta = require("eta");
exports.default = class extends (0, _componentDefault.default) {
    constructor(main){
        super({});
        this.main = main;
        this.create();
    }
    async create() {
        const string = _eta.render((0, _templateEtaDefault.default), {
            global: this.main
        });
        document.querySelector("body").insertAdjacentHTML("afterbegin", string);
        this.DOM = {
            el: document.querySelector(".player")
        };
        this.audio = new (0, _audioDefault.default)(this.DOM.el);
    }
    async start(el) {
        this.DOM.el.classList.add("act");
        this.audio.reset(el);
    }
};

},{"/src/js🧠🧠🧠/defaults/Component":"1K7Kz","bundle-text:./template.eta":"5mU2a","/src/js🧠🧠🧠/defaults/Audio":"4NOjf","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"5mU2a":[function(require,module,exports) {
module.exports = "<div class=\"player\">\n  <audio></audio>\n  <div class=\"player_buttons\">\n    <div class=\"btn10left\"><%~ it.global.icons.rewind %></div>\n    <div class=\"btnplayer\">\n      <div class=\"btnplayer_play\"></div>\n      <div class=\"btnplayer_pause\"></div>\n    </div>\n    <div class=\"btn10right\"><%~ it.global.icons.rewind %></div>\n    <div class=\"btnrestart\"><%~ it.global.icons.repeat %></div>\n  </div>\n  <div class=\"player_time\">\n    <div class=\"player_time_start\">01:20</div>\n    <div class=\"player_time_bar\">\n      <div class=\"playerball\"></div>\n    </div>\n    <div class=\"player_time_end\">14:40</div>\n  </div>\n  <div class=\"player_volume\">\n    <div class=\"player_volume_icon\"><%~ it.global.icons.volume %></div>\n    <div class=\"player_volume_bar\">\n      <div class=\"hold\">\n        <div class=\"volumeball\"></div>\n        <div class=\"volumepos\"></div>\n      </div>\n    </div>\n  </div>\n  <div class=\"player_info\">\n    <div class=\"player_info_image\"><img src=\"\"></div>\n    <div class=\"player_info_title\">\n      <h3 class=\"tit4\"></h3>\n      <p class=\"titleparent\"></p>\n    </div>\n  </div>\n</div>";

},{}],"4NOjf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
"use strict";
function format(s) {
    var m = Math.floor(s / 60);
    m = m >= 10 ? m : "0" + m;
    s = Math.floor(s % 60);
    s = s >= 10 ? s : "0" + s;
    return m + ":" + s;
}
exports.default = class {
    constructor(el){
        this.DOM = {
            el: el,
            media: el.querySelector("audio"),
            start: el.querySelector(".player_time_start"),
            end: el.querySelector(".player_time_end"),
            ball: el.querySelector(".playerball"),
            bar: el.querySelector(".player_time_bar"),
            btn: el.querySelector(".btnplayer"),
            rew: el.querySelector(".btn10left"),
            forw: el.querySelector(".btn10right"),
            rest: el.querySelector(".btnrestart"),
            volume: el.querySelector(".player_volume"),
            volbar: el.querySelector(".player_volume_bar"),
            volicon: el.querySelector(".player_volume_icon"),
            volres: el.querySelector(".player_volume_bar .volumepos"),
            volball: el.querySelector(".player_volume_bar .volumeball")
        };
        this.initEvents();
    }
    initEvents() {
        this.progressHandler = (event)=>{
            var proportion = Math.round(event.target.currentTime * 100);
            this.DOM.ball.style.left = proportion / event.target.duration + "%";
            this.DOM.start.innerHTML = format(event.target.currentTime);
        };
        this.DOM.media.addEventListener("timeupdate", this.progressHandler);
        this.clickBar = (ev)=>{
            this.DOM.media.currentTime = this.DOM.media.duration * ev.offsetX / ev.target.clientWidth;
        };
        this.DOM.bar.addEventListener("click", (ev)=>this.clickBar(ev));
        this.pauseFn = ()=>{
            if (this.DOM.btn.classList.contains("playing")) {
                this.DOM.btn.classList.remove("playing");
                this.DOM.media.pause();
            } else {
                this.DOM.btn.classList.add("playing");
                this.DOM.media.play();
            }
        };
        this.DOM.btn.addEventListener("click", this.pauseFn);
        this.rew = ()=>{
            this.DOM.media.currentTime = this.DOM.media.currentTime - 10;
        };
        this.DOM.rew.addEventListener("click", this.rew);
        this.forw = ()=>{
            this.DOM.media.currentTime = this.DOM.media.currentTime + 10;
        };
        this.DOM.forw.addEventListener("click", this.forw);
        this.rest = ()=>{
            this.DOM.media.currentTime = 0;
        };
        this.DOM.rest.addEventListener("click", this.rest);
        this.volume = ()=>{
            if (this.DOM.volume.classList.contains("showVol")) this.DOM.volume.classList.remove("showVol");
            else this.DOM.volume.classList.add("showVol");
        };
        if (document.documentElement.classList.contains("touch")) this.DOM.volume.addEventListener("click", this.volume);
        else {
            this.DOM.volume.addEventListener("mouseenter", this.volume);
            this.DOM.volume.addEventListener("mouseleave", this.volume);
        }
        this.clickvolBar = (ev)=>{
            this.DOM.media.volume = 1 - ev.offsetY / ev.target.clientHeight;
            this.DOM.volres.style.height = (1 - ev.offsetY / ev.target.clientHeight) * 100 + "%";
            this.DOM.volball.style.top = ev.offsetY / ev.target.clientHeight * 100 + "%";
            this.DOM.volicon.style.opacity = 1 - (ev.offsetY / ev.target.clientHeight + .1);
        // //  console.log(ev.offsetY / ev.target.clientHeight)
        };
        this.isactive = 0;
        this.activVol = (ev)=>{
            this.isactive = 1;
        };
        this.deactivVol = (ev)=>{
            this.isactive = 0;
        };
        this.clickmoveBar = (ev)=>{
            if (this.isactive == 0) return false;
            let tot = Math.max(0, Math.min(ev.offsetY / ev.target.clientHeight, 1));
            // //  console.log(tot)
            this.DOM.media.volume = 1 - tot;
            this.DOM.volres.style.height = (1 - tot) * 100 + "%";
            this.DOM.volball.style.top = ev.offsetY / ev.target.clientHeight * 100 + "%";
            // //  console.log(1-(Math.min(tot,.7)))
            this.DOM.volicon.style.opacity = 1 - Math.min(tot, .7);
        // //  console.log(ev.offsetY / ev.target.clientHeight)
        // //  console.log(1-(ev.offsetY / ev.target.clientHeight))
        };
        if (document.documentElement.classList.contains("touch")) this.DOM.volbar.addEventListener("click", (ev)=>this.clickvolBar(ev));
        else {
            this.DOM.volbar.addEventListener("mousedown", (ev)=>this.activVol(ev));
            this.DOM.volbar.addEventListener("mousemove", (ev)=>this.clickmoveBar(ev));
            window.addEventListener("mouseup", (ev)=>this.deactivVol(ev));
        }
    }
    async reset(el) {
        this.DOM.media.setAttribute("src", el.dataset.player);
        this.DOM.el.querySelector("img").setAttribute("src", el.dataset.image);
        this.DOM.el.querySelector(".tit4").innerHTML = el.dataset.title;
        this.DOM.el.querySelector(".titleparent").innerHTML = el.dataset.subtitle;
        await this.DOM.media.play();
        this.DOM.el.classList.add("load");
        this.DOM.start.innerHTML = "00:00";
        this.DOM.end.innerHTML = format(this.DOM.media.duration);
        this.DOM.btn.classList.add("playing");
        document.documentElement.classList.add("audio-playing");
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"kKRn2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _modalJs = require("./modal.js");
var _modalJsDefault = parcelHelpers.interopDefault(_modalJs);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _modalEta = require("bundle-text:./modal.eta");
var _modalEtaDefault = parcelHelpers.interopDefault(_modalEta);
var _curatedlistEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/curatedlist.eta");
var _curatedlistEtaDefault = parcelHelpers.interopDefault(_curatedlistEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
//COMPS
var _eta = require("eta");
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        let html = "";
        const response = await fetch(this.main.acf.base + "/wp-json/csskiller/v1/list/");
        const data = await response.json();
        // //  console.log(data)
        html = _eta.render((0, _templateEtaDefault.default), {
            data: data,
            global: this.main,
            footer: this.footer
        });
        this.modalhtml = _eta.render((0, _modalEtaDefault.default), {
            global: this.main
        });
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)")
        };
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.DOM.holder = this.DOM.el.querySelector(".hPosts");
        await this.loadImages();
        await this.createAnimations();
        await this.getPosts();
        // document.querySelector('#content').innerHTML += modalhtml
        this.modal = new (0, _modalJsDefault.default)(document.documentElement.querySelector(".modal"));
    // fetch(document.body.dataset.js+'/wp-json/csskiller/v1/mailchimp',{
    //   method: 'get',
    //   headers : {
    //     'Content-Type': 'application/json',
    //     // 'X-WP-Nonce': document.body.dataset.nonce // here you used the wrong name
    //   },
    //   // credentials: 'same-origin',
    // }).then((data)=>{
    // //  console.log(data)
    // })
    // var em= 'angelperezpedrosa@gmail.com'
    // var urlne = 'https://living-corporate.us13.list-manage.com/subscribe/subscribe/post-json?u=2462c30f2ff80099eb631fecb&amp;id=fa2ff7f67c'
    // var urlap = 'https://us13.api.mailchimp.com/2.0/lists/subscribe.json?apikey=03fb47ab9900e747c89f1491bb2c126d-us13&id=fa2ff7f67c&email[email]='+em+'&double_optin=false&send_welcome=false'
    // var formdata = new FormData()
    // formdata.set('EMAIL','angelperezpedrosa@gmail.com')
    // setTimeout(() => {
    // //  console.log('fona?')
    //   fetch(urlap,{
    //   }).then((o)=>{
    //     // //  console.log(o)
    //   })
    // fetch(urlne,{
    //   method: 'post',
    //   body:formdata,
    //   headers:{
    //     'Content-Type': 'jsonp',
    //     'jsonp': 'c'
    //   },
    // }).then((o)=>{
    // //  console.log(o)
    // })
    // }, 600);
    //  this.slidrag = new Slidrag(this.DOM.el.querySelector('.swiper'))
    //  this.slidclick = new SlidClick(this.DOM.el.querySelector('.m-slidnum'))
    }
    async ajaxImages() {
        let newpage = document.createElement("template");
        newpage.innerHTML = this.html;
        let paths = Array.from(newpage.content.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        return Promise.resolve();
    }
    async getJson(url) {
        // //  console.log(url)
        const posts = await fetch(url);
        const datap = await posts.json();
        // //  console.log(datap)
        this.html = _eta.render((0, _curatedlistEtaDefault.default), {
            global: this.main,
            posts: datap.posts
        });
        // //  console.log(this.html)
        // //  console.log(this.DOM.holder)
        this.DOM.holder.innerHTML = this.html;
        await this.ajaxImages();
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    async getPosts() {
        this.DOM.holder.classList.add("load");
        Promise.all([
            this.timeout(600),
            this.getJson(this.main.acf.base + "/wp-json/wp/v2/getlists")
        ]).then(()=>{
            this.DOM.holder.classList.remove("load");
            for (let el of this.DOM.holder.querySelectorAll(".list"))// //  console.log(el)
            el.addEventListener("click", ()=>this.modalFn(el));
            this.emit("linkseventlisteners");
            this.emit("mousereset");
            this.resizeLimit();
        });
    }
    modalFn(el) {
        this.modal.create(el);
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            this.anims[pos].stick.active = 0;
                            let index = this.sticks.indexOf(this.anims[pos]);
                            if (index > -1) this.sticks.splice(index, 1);
                        } else if (id == "v") clearInterval(this.clockInt);
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.sticks.push(this.anims[pos]);
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) super.smoothScroll();
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        await this.timeout(1);
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        this.modal.removeEvents();
        return super.hide();
    }
};

},{"../../js🧠🧠🧠/defaults/Page":"98P6v","./modal.js":"bb6kT","bundle-text:./template.eta":"31hSf","bundle-text:./modal.eta":"6He4W","bundle-text:/src/views👁️👁️👁️/ETA/curatedlist.eta":"Q1KzW","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"bb6kT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _chk = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Chk");
var _chkDefault = parcelHelpers.interopDefault(_chk);
var _fieldJs = require("./Field.js");
var _fieldJsDefault = parcelHelpers.interopDefault(_fieldJs);
"use strict";
exports.default = class {
    constructor(el){
        this.DOM = {
            el: el,
            close: el.querySelector(".modal_close"),
            bg: el.querySelector(".modal_bg"),
            buttonclose: el.querySelector(".modal_success .btn")
        };
        this.initEvents();
    }
    initEvents() {
        this.field = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".field"));
        this.check = new (0, _chkDefault.default)(this.DOM.el.querySelector(".chk"));
        this.closeFn = ()=>{
            this.DOM.el.classList.remove("modal-act");
            setTimeout(()=>{
                this.DOM.el.classList.remove("modal-success");
            }, 760);
        };
        this.DOM.close.addEventListener("click", this.closeFn);
        this.DOM.bg.addEventListener("click", this.closeFn);
        this.DOM.buttonclose.addEventListener("click", this.closeFn);
        this.clickFn = ()=>{
            this.field.check();
            this.check.check();
            if (!this.DOM.el.querySelector(".err")) // //  console.log('no error')
            fetch(document.body.dataset.js + "/wp-json/csskiller/v1/mailchimp/?email=" + this.field.DOM.npt.value + "&list=" + this.field.DOM.npt.dataset.list, {
                method: "get",
                headers: {
                    "Content-Type": "application/json"
                }
            }).then((data)=>{
                // this.closeFn()
                this.DOM.el.classList.add("modal-success");
            });
        };
        // //  console.log(this.field.DOM.btn)
        this.field.DOM.btn.addEventListener("click", this.clickFn);
    }
    removeEvents() {
        this.DOM.close.addEventListener("click", this.closeFn);
        this.DOM.bg.addEventListener("click", this.closeFn);
        this.field.DOM.btn.removeEventListener("click", this.clickFn);
        this.field.removeEvents();
        this.check.removeEvents();
    }
    create(el) {
        this.DOM.el.querySelector(".tit4").innerHTML = el.dataset.title;
        this.DOM.el.querySelector(".field_npt").dataset.list = el.dataset.list;
        this.DOM.el.classList.add("modal-act");
    }
};

},{"../../js🧠🧠🧠/defaults/Chk":"LTujD","./Field.js":"MHplq","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"MHplq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
"use strict";
exports.default = class {
    constructor(el){
        this.DOM = {
            el: el
        };
        this.DOM.npt = this.DOM.el.querySelector(".field_npt");
        this.DOM.btn = this.DOM.el.querySelector(".field_button");
        this.initEvents();
    }
    initEvents() {
        this.checkField = ()=>{
            if (this.DOM.npt.value == "") this.DOM.el.classList.add("fill");
            else this.DOM.el.classList.add("fill");
        };
        this.focusFn = ()=>{
            this.DOM.el.classList.remove("err");
            this.DOM.el.classList.add("foc");
        };
        this.focusoutFn = ()=>{
            this.DOM.el.classList.remove("foc");
            this.DOM.el.classList.remove("err");
        };
        this.DOM.npt.addEventListener("input", ()=>this.checkField());
        this.DOM.npt.addEventListener("focusin", this.focusFn);
        this.DOM.npt.addEventListener("focusout", ()=>this.focusoutFn());
    }
    check() {
        if ("" == this.DOM.npt.value) return void this.DOM.el.classList.add("err");
        this.DOM.el.classList.remove("err");
        this.DOM.el.classList.contains("field-email") ? null == this.DOM.npt.value.match(/^([\w\!\#$\%\&\'\*\+\-\/\=\?\^\`{\|\}\~]+\.)*[\w\!\#$\%\&\'\*\+\-\/\=\?\^\`{\|\}\~]+@((((([a-z0-9]{1}[a-z0-9\-]{0,62}[a-z0-9]{1})|[a-z])\.)+[a-z]{2,6})|(\d{1,3}\.){3}\d{1,3}(\:\d{1,5})?)$/i) ? this.DOM.el.classList.add("err") : this.DOM.el.classList.remove("err") : this.DOM.el.classList.contains("field-number") && (isNaN(this.DOM.npt.value) ? this.DOM.el.classList.add("err") : this.DOM.el.classList.remove("err"));
    }
    clear() {
        this.DOM.el.classList.remove("foc");
        this.DOM.el.classList.remove("fill");
        this.DOM.el.classList.remove("err");
        this.DOM.npt.value = "";
    }
    removeEvents() {
        this.DOM.npt.removeEventListener("input", ()=>this.checkField());
        this.DOM.npt.removeEventListener("focusin", this.focusFn);
        this.DOM.npt.removeEventListener("focusout", ()=>this.focusoutFn());
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"31hSf":[function(require,module,exports) {
module.exports = "<main class=\"artarchive\">\n  <section class=\"m-simpleintro\">\n    <div class=\"c-vw\">\n      <h2 class=\"tit1\"><%~ it.data.title_lista %></h2>\n      <p><%~ it.data.text_lista %></p>\n    </div>\n  </section>\n  <section class=\"m-lists\">\n    <div class=\"m-lists_hold hPosts\">\n    </div>\n  </section>\n  <section class=\"m-quote\">\n    <div class=\"m-quote_hold\">\n      <div class=\"left\">\n        <div class=\"left_el\"><img src=\"<%~ it.data.image_lista %>\"></div>\n      </div>\n      <div class=\"right\">\n        <h2 class=\"tit2\">“<br><%~ it.data.quote_lista %></h2>\n        <h3 class=\"tit4\">- <%~ it.data.author_lista %></h3>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-cta signupmod\" style=\"--main:#895434\">\n    <div class=\"c-vw\">\n      <div class=\"hold\">\n         <%\n          var randomNum = Math.floor((Math.random() * it.global.acf.signup_text.length) + 1);\n          var title = it.global.acf.signup_text[randomNum-1].title;\n          var text = it.global.acf.signup_text[randomNum-1].text;\n          \n        %>\n        <h2 class=\"tit1\"><%~ title %></h2>\n        <h3 class=\"tit4\"><%~ text %> </h3>\n        </h3>\n        <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\">\n          <div class=\"btn_t\">TAP IN</div>\n        </a>\n      </div>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"6He4W":[function(require,module,exports) {
module.exports = "<div class=\"modal\">\n    <div class=\"modal_bg\"></div>\n    <div class=\"modal_content\">\n      <div class=\"modal_close\"><span></span><span></span></div>\n      <div class=\"modal_content_text\">\n        <h3 class=\"tit4\"></h3>\n        <h2 class=\"tit1\">Subscribe to stay updated on this list</h2>\n        <div class=\"field field-email\">\n          <label class=\"field_lbl\">Name</label>\n          <input class=\"field_npt\" data-list=\"\" />\n          <div class=\"field_err\">Wrong format</div>\n          <div class=\"field_button\">\n            <div class=\"btninput\">\n              <div class=\"btninput_t\">Suscribe</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"chk\"><input class=\"chk_npt\" type=\"checkbox\">\n          <div class=\"chk_s\">\n            <div class=\"chk_i\"></div>\n          </div><label class=\"chk_lbl\">I accept <a href=\"<%~ it.global.acf.legal %>\">Terms and conditions</a></label>\n        </div>\n      </div><img src=\"<%~ it.global.acf.template %>/public/modal.png\">\n    </div>\n  </div>";

},{}],"Q1KzW":[function(require,module,exports) {
module.exports = "\n<% \n  var numcol =  Math.floor((Math.random() * it.global.colors.length-1)+1)\n  it.posts.forEach(function(p,key){\n  if(numcol==3){\n    numcol=0\n  }\n %>\n  <div class=\"list  mouseHover\" style=\"--main:<%~ it.global.colors[numcol] %>\" data-title=\"<%~ p.title %>\" data-list=\"<%~ p.list %>\">\n    <div class=\"list_hold\">\n      <div class=\"list_info\">\n        <h3 class=\"tit2\"><%~ p.title %></h3>\n        <div class=\"description\">\n          <p><%~ p.description %></p>\n        </div>\n        <div class=\"tit4\"><%~ p.subtitle %> </div>\n        \n      </div>\n      <div class=\"list_image\"><div class=\"list_image_hold\"><img src=\"<%~ p.image %>\"></div></div>\n    </div>\n  </div>\n  <%\n  numcol++;\n  }) \n%>";

},{}],"gJu8G":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _fieldJs = require("./Field.js");
var _fieldJsDefault = parcelHelpers.interopDefault(_fieldJs);
var _searchlistEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/searchlist.eta");
var _searchlistEtaDefault = parcelHelpers.interopDefault(_searchlistEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
var _eta = require("eta");
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        //${"http://165.227.64.123:8126/"}/wp-json/wp/v2/podcast/40?acf_format=standard
        // const response = await fetch(this.main.acf.base+'/wp-json/wp/v2/pages/'+content.dataset.id+'?acf_format=standard')
        // const response = await fetch(this.main.acf.base+'/wp-json/wp/v2/podcast/'+content.dataset.id+'?acf_format=standard')
        // const data = await response.json()
        // console.log(data)
        let html = "";
        html = _eta.render((0, _templateEtaDefault.default), {
            global: this.main,
            footer: this.footer
        });
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)")
        };
        this.DOM.total = this.DOM.el.querySelector(".totalSearch");
        this.DOM.holder = this.DOM.el.querySelector(".hPosts");
        this.DOM.cats = this.DOM.el.querySelectorAll(".catEl");
        this.field = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".field"));
        this.field.DOM.npt.addEventListener("input", ()=>{
            this.getPosts(this.field.DOM.npt.value);
        });
        this.field.DOM.npt.value = content.dataset.search;
        this.field.checkField();
        this.cat = "";
        await this.getPosts(content.dataset.search);
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
        for (let a of this.DOM.cats)a.addEventListener("click", ()=>this.blocksClick(a));
        await this.loadImages();
        await this.createAnimations();
    }
    async ajaxImages() {
        let newpage = document.createElement("template");
        newpage.innerHTML = this.html;
        let paths = Array.from(newpage.content.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        return Promise.resolve();
    }
    async blocksClick(el) {
        this.DOM.el.querySelector(".catEl.act").classList.remove("act");
        const type = el.dataset.post;
        el.classList.add("act");
        // this.DOM.holder.classList.add('load')
        // await this.timeout(600)
        // if(type=='block'){
        //   this.DOM.holder.classList.add('blocks')
        // }
        // else{
        //   this.DOM.holder.classList.remove('blocks')
        // }
        // this.DOM.holder.classList.remove('load')
        this.cat = type;
        if (this.cat != "") {
            for (let el1 of this.DOM.el.querySelectorAll(".result"))if (this.cat == el1.dataset.post) el1.classList.remove("hide");
            else el1.classList.add("hide");
        } else for (let el2 of this.DOM.el.querySelectorAll(".result"))el2.classList.remove("hide");
        if (this.DOM.el.querySelectorAll(".result:not(.hide)").length == 1) this.DOM.total.innerHTML = this.DOM.el.querySelectorAll(".result:not(.hide)").length + " result";
        else this.DOM.total.innerHTML = this.DOM.el.querySelectorAll(".result:not(.hide)").length + " results";
    }
    async getJson(url) {
        // console.log(url)
        const posts = await fetch(url);
        const datap = await posts.json();
        // console.log(datap)
        this.html = _eta.render((0, _searchlistEtaDefault.default), {
            global: this.main,
            type: this.cat,
            posts: datap.post
        });
        this.DOM.holder.innerHTML = this.html;
        if (this.DOM.el.querySelectorAll(".result:not(.hide)").length == 1) this.DOM.total.innerHTML = this.DOM.el.querySelectorAll(".result:not(.hide)").length + " result";
        else this.DOM.total.innerHTML = this.DOM.el.querySelectorAll(".result:not(.hide)").length + " results";
        await this.ajaxImages();
    }
    async getPosts(search) {
        this.DOM.holder.classList.add("load");
        Promise.all([
            this.timeout(600),
            this.getJson(this.main.acf.base + "/wp-json/wp/v2/getsearch?search=" + search)
        ]).then(()=>{
            this.DOM.holder.classList.remove("load");
            this.emit("linkseventlisteners");
            this.emit("mousereset");
            this.resizeLimit();
        });
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            // console.log(this.anims[pos])
                            this.anims[pos].stick.active = 0;
                            this.movestick = null;
                        } else if (id == "v") clearInterval(this.clockInt);
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "e") {
                            this.anims[pos].classel.start();
                            this.slidetext = this.anims[pos];
                        } else if (id == "v") this.clockStart(this.anims[pos].el.parentNode.querySelector(".time"));
                        else if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.movestick = this.anims[pos];
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) super.smoothScroll();
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        this.timeout(1);
        // gsap.to('.home',{opacity:1,ease:Power2.easeInOut,duration:.6})
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        return super.hide();
    }
};

},{"../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./template.eta":"3SpTv","./Field.js":"cWhQm","bundle-text:/src/views👁️👁️👁️/ETA/searchlist.eta":"hHfWf","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"3SpTv":[function(require,module,exports) {
module.exports = "<main class=\"searchp\">\n  <section class=\"searchp_intro\">\n    <div class=\"searchp_intro_field\">\n      <div class=\"field\"><label class=\"field_lbl\">Search</label><input class=\"field_npt\">\n        \n      </div>\n    </div>\n  </section>\n  <section class=\"searchp_tabs\">\n    <div class=\"tabs\">\n      <div class=\"tabs_els\">\n        <div class=\"simp catEl act\" data-post=\"\"><span>All</span></div>\n        <div class=\"simp catEl\" data-post=\"podcast\"><span>Pods</span></div>\n        <div class=\"simp catEl\" data-post=\"show\"><span>Shows</span></div>\n        <div class=\"simp catEl\" data-post=\"post\"><span>Articles</span></div>\n      </div>\n    </div>\n    <div class=\"totalSearch\">0 results</div>\n  </section>\n  <section class=\"searchp_results hPosts\">\n  </section>\n\n  <section class=\"m-cta signupmod\" style=\"--main:#DF80AC\">\n    <div class=\"c-vw\">\n      <div class=\"hold\">\n         <%\n          var randomNum = Math.floor((Math.random() * it.global.acf.signup_text.length) + 1);\n          var title = it.global.acf.signup_text[randomNum-1].title;\n          var text = it.global.acf.signup_text[randomNum-1].text;\n          \n        %>\n        <h2 class=\"tit1\"><%~ title %></h2>\n        <h3 class=\"tit4\"><%~ text %> </h3>\n        </h3>\n        <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\">\n          <div class=\"btn_t\">TAP IN</div>\n        </a>\n      </div>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>\n      ";

},{}],"cWhQm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
"use strict";
exports.default = class {
    constructor(el){
        this.DOM = {
            el: el
        };
        this.DOM.npt = this.DOM.el.querySelector(".field_npt");
        this.initEvents();
    }
    initEvents() {
        this.checkField = ()=>{
            if (this.DOM.npt.value == "") this.DOM.el.classList.add("fill");
            else this.DOM.el.classList.add("fill");
        };
        this.focusFn = ()=>{
            this.DOM.el.classList.remove("err");
            this.DOM.el.classList.add("foc");
        };
        this.focusoutFn = ()=>{
            this.DOM.el.classList.remove("foc");
            this.DOM.el.classList.remove("err");
        };
        // this.DOM.npt.addEventListener("input", ()=>this.checkField())
        this.DOM.npt.addEventListener("focusin", this.focusFn);
        this.DOM.npt.addEventListener("focusout", ()=>this.focusoutFn());
    }
    check() {
        if ("" == this.DOM.npt.value) return void this.DOM.el.classList.add("err");
        this.DOM.el.classList.remove("err");
    }
    clear() {
        this.DOM.el.classList.remove("foc");
        this.DOM.el.classList.remove("fill");
        this.DOM.el.classList.remove("err");
        this.DOM.npt.value = "";
    }
    removeEvents() {
        this.DOM.npt.removeEventListener("input", ()=>this.checkField());
        this.DOM.npt.removeEventListener("focusin", this.focusFn);
        this.DOM.npt.removeEventListener("focusout", ()=>this.focusoutFn());
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"hHfWf":[function(require,module,exports) {
module.exports = "\r\n<% \r\nvar numcol =  Math.floor((Math.random() * it.global.colors.length-1)+1)\r\nconst shownPosts = [];\r\n\r\nit.posts.forEach(function(p,key){\r\n  if(numcol==3){\r\n    numcol=0\r\n  }\r\n  hide = ''\r\n  if(it.type!='' && p.type!=it.type){\r\n    hide='hide'\r\n  }\r\n\r\n  const title = p.title;\r\n  const description = p.description;\r\n\r\n  let match = false;\r\n  //check if post has been shown to prevent duplicates across categories\r\n  for(const el of shownPosts) {\r\n    if(title == el.title || description == el.description){\r\n      match = true;\r\n      break;\r\n    }\r\n  }\r\n\r\n  //return to continue to next iteration/result\r\n  if(match){\r\n    return;\r\n  }\r\n\r\n  shownPosts.push({title, description});\r\n\r\n  if(p.type==\"podcast\"){ %>\r\n    <a class=\"result <%~ hide %> mouseHover\" style=\"--main:<%~ it.global.colors[numcol] %>\" data-type=\"<%~ p.type %>\" data-post=\"<%~ p.type %>\" href=\"<%~ p.link %>\">\r\n      <div class=\"result_hold\">\r\n        <div class=\"result_info\">\r\n          <h3 class=\"tit3\"><%~ p.title %></h3>\r\n          <% if(p.description){ %>\r\n          <div class=\"description\">\r\n            <p><%~ p.description %></p>\r\n          </div>\r\n          <% } %>\r\n          <div class=\"btnplay\">\r\n            <div class=\"btnplay_tri\"></div>\r\n          </div>\r\n          <div class=\"result_info_bottom\">\r\n            <p>By <%~ p.author %></p>\r\n            <div class=\"date\"><%~ p.date %></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"result_image\"><img src=\"<%~ p.image %>\"></div>\r\n      </div>\r\n    </a>\r\n  <% } else { %>\r\n    <a class=\"result <%~ hide %> mouseHover\" style=\"--main:<%~ it.global.colors[numcol] %>\"  data-type=\"<%~ p.type %>\" data-post=\"<%~ p.type %>\" href=\"<%~ p.link %>\">\r\n      <div class=\"result_hold\">\r\n        <div class=\"result_info\">\r\n          <h3 class=\"tit3\"><%~ p.title %></h3>\r\n          <% if(p.description){ %>\r\n          <div class=\"description\">\r\n            <p><%~ p.description %></p>\r\n          </div>\r\n          <% } %>\r\n          <div class=\"date\"><%~ p.date %></div>\r\n        <div class=\"btns\">\r\n            <div class=\"btns_t\">Read more</div>\r\n          </div>\r\n          \r\n        </div>\r\n        <div class=\"result_image\"><img src=\"<%~ p.image %>\"></div>\r\n      </div>\r\n    </a>\r\n  <% }\r\n  numcol++;\r\n}) %>";

},{}],"9oVGw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _introJs = require("./Intro.js");
var _introJsDefault = parcelHelpers.interopDefault(_introJs);
var _loginJs = require("./Login.js");
var _loginJsDefault = parcelHelpers.interopDefault(_loginJs);
var _forgetJs = require("./Forget.js");
var _forgetJsDefault = parcelHelpers.interopDefault(_forgetJs);
var _registerJs = require("./Register.js");
var _registerJsDefault = parcelHelpers.interopDefault(_registerJs);
var _resetJs = require("./Reset.js");
var _resetJsDefault = parcelHelpers.interopDefault(_resetJs);
var _passJs = require("./Pass.js");
var _passJsDefault = parcelHelpers.interopDefault(_passJs);
var _editJs = require("./Edit.js");
var _editJsDefault = parcelHelpers.interopDefault(_editJs);
var _deleteJs = require("./Delete.js");
var _deleteJsDefault = parcelHelpers.interopDefault(_deleteJs);
var _connectLIJs = require("./ConnectLI.js");
var _connectLIJsDefault = parcelHelpers.interopDefault(_connectLIJs);
var _userEta = require("bundle-text:./user.eta");
var _userEtaDefault = parcelHelpers.interopDefault(_userEta);
var _loginEta = require("bundle-text:./login.eta");
var _loginEtaDefault = parcelHelpers.interopDefault(_loginEta);
var _jobEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/job.eta");
var _jobEtaDefault = parcelHelpers.interopDefault(_jobEta);
var _dialogEta = require("bundle-text:./LinkedinLogin/dialog.eta");
var _dialogEtaDefault = parcelHelpers.interopDefault(_dialogEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
//COMPS
var _eta = require("eta");
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate() {
        let html = "";
        _eta.templates.define("li_dialog", _eta.compile((0, _dialogEtaDefault.default)));
        if (document.documentElement.classList.contains("logged")) {
            // //  console.log(this.main)
            const response = await fetch(this.main.acf.base + "/wp-json/csskiller/v1/topic/");
            const data = await response.json();
            if (this.main.user.acf.topics) {
                let selectedids = this.main.user.acf.topics.split(",");
                for (let [key, el] of data.topics.entries()){
                    for (let id of selectedids)if (id == el.id) data.topics[key].selected = true;
                }
            }
            // //  console.log(this.main.user.acf.jobs)
            if (this.main.user.acf.jobs != "") {
                const responsejobs = await fetch(this.main.acf.base + "/wp-json/wp/v2/getjobs?jobsids=" + this.main.user.acf.jobs);
                const datajobs = await responsejobs.json();
                // //  console.log(datajobs)
                this.jobshtml = _eta.render((0, _jobEtaDefault.default), {
                    global: this.main,
                    posts: datajobs.posts
                });
            } else this.jobshtml = "";
            html = _eta.render((0, _userEtaDefault.default), {
                global: this.main,
                data: data.topics,
                jobs: this.jobshtml
            });
            document.querySelector("#content").innerHTML += html;
            // document.querySelector('#content').innerHTML += '<main>###</main>'
            this.DOM = {
                el: document.querySelector("main:not(.old)")
            };
            //Los sections ( los tabs principales)
            this.sections = this.DOM.el.querySelectorAll("section");
            this.sectionpos = 0;
            // el primero, el de config
            this.sections[this.sectionpos].style.display = "flex";
            this.sections[this.sectionpos].classList.remove("activeSect");
            this.timeout(12);
            this.sections[0].classList.add("activeSect");
            //El segundo, el de edición
            this.edit = new (0, _editJsDefault.default)(this.DOM.el.querySelector(".datap"), this.main);
            this.edit.on("resetuser", ()=>{
                this.main.user = this.pass.main.user;
                this.emit("globalchange");
            });
            this.pass = new (0, _passJsDefault.default)(this.DOM.el.querySelector(".datap"), this.main);
            this.pass.on("resetuser", ()=>{
                this.main.user = this.pass.main.user;
                this.emit("globalchange");
            });
            this.pass = new (0, _deleteJsDefault.default)(this.DOM.el.querySelector(".datap"), this.main);
            this.pass.on("resetuser", ()=>{
                this.main.user = false;
                this.emit("globalchange");
                this.emit("gotohome");
            });
            this.pass = new (0, _connectLIJsDefault.default)(this.DOM.el.querySelector(".datap"), this.main);
            // this.pass.on('resetuser',()=>{
            //   this.main.user = false
            //   this.emit('globalchange')
            //   this.emit('gotohome')
            // })
            this.sectionselector = this.DOM.el.parentNode.querySelectorAll(".usercontrols_top .simp");
            this.sectionFn = async (index, el)=>{
                // //  console.log(index)
                if (index == 0) {
                    if (this.pos == 4) this.opholderFn(0);
                    this.sectionselector[this.sectionpos].classList.remove("act");
                    this.DOM.bottomops.classList.add("actBottom");
                    this.sections[this.sectionpos].classList.remove("activeSect");
                    await this.timeout(610);
                    if (!this.main.isTouch) {
                        this.scroll.current = 0;
                        this.scroll.target = 0;
                        this.DOM.el.style[this.transform] = `translate3d(0, 0px, 0)`;
                    }
                    this.sections[this.sectionpos].style.display = "none";
                    this.sectionpos = index;
                    this.sections[this.sectionpos].style.display = "flex";
                    await this.timeout(12);
                    this.sectionselector[this.sectionpos].classList.add("act");
                    this.sections[this.sectionpos].classList.add("activeSect");
                } else if (index == 3) {
                    const response = await fetch(this.main.acf.base + "/wp-json/csskiller/v1/logout/");
                    this.main.user = false;
                    document.documentElement.classList.remove("logged");
                    this.emit("globalchange");
                    this.emit("gotohome");
                } else {
                    this.DOM.bottomops.classList.remove("actBottom");
                    this.sectionselector[this.sectionpos].classList.remove("act");
                    this.sections[this.sectionpos].classList.remove("activeSect");
                    await this.timeout(610);
                    if (!this.main.isTouch) {
                        this.scroll.current = 0;
                        this.scroll.target = 0;
                        this.DOM.el.style[this.transform] = `translate3d(0, 0px, 0)`;
                    }
                    this.sections[this.sectionpos].style.display = "none";
                    this.sectionpos = index;
                    this.sections[this.sectionpos].style.display = "flex";
                    await this.timeout(12);
                    this.sectionselector[this.sectionpos].classList.add("act");
                    this.sections[this.sectionpos].classList.add("activeSect");
                }
                this.resizeLimit();
            };
            for (let [index, el1] of this.sectionselector.entries())el1.addEventListener("click", ()=>this.sectionFn(index, el1));
            // Las ops de abajo 
            this.DOM.bottomops = this.DOM.el.parentNode.querySelector(".usercontrols_bottom");
            if (this.main.user.acf.info_selected != true) setTimeout(()=>{
                this.DOM.bottomops.classList.add("actBottom");
            }, 1600);
            //LOS RADS
            this.clickRadFn = (el, key, dad)=>{
                // //  console.log(el)
                if (el.classList.contains("act")) ;
                else {
                    this.DOM.btnnext.classList.remove("inact");
                    for (let other of this.ops[dad])other.classList.remove("act");
                    el.classList.add("act");
                    this.pags[dad + 1].classList.remove("dis");
                    if (this.DOM.el.querySelector(".userp_form_" + (dad + 1)) && dad != 2) {
                        if (this.DOM.el.querySelector(".userp_form_" + (dad + 1) + " .userp_form_ops.activeOp")) this.DOM.el.querySelector(".userp_form_" + (dad + 1) + " .userp_form_ops.activeOp").classList.remove("activeOp");
                        this.DOM.el.querySelectorAll(".userp_form_" + (dad + 1) + " .userp_form_ops")[key].classList.add("activeOp");
                    }
                    if (dad == 0 && this.DOM.el.querySelector(".userp_form_1 .rad.act")) {
                        this.DOM.el.querySelector(".userp_form_1 .rad.act").classList.remove("act");
                        // this.pags[1].classList.add('dis')
                        this.pags[2].classList.add("dis");
                    }
                    if ((dad == 0 || dad == 1) && this.DOM.el.querySelector(".userp_form_2 .rad.act")) this.DOM.el.querySelector(".userp_form_2 .rad.act").classList.remove("act");
                }
            };
            this.ops = [];
            this.ops.push(this.DOM.el.querySelectorAll(".userp_form_0 .rad"));
            this.ops.push(this.DOM.el.querySelectorAll(".userp_form_1 .rad"));
            this.ops.push(this.DOM.el.querySelectorAll(".userp_form_2 .rad"));
            for (let [key1, el2] of this.ops[0].entries())el2.addEventListener("click", ()=>this.clickRadFn(el2, key1, 0));
            for (let [key2, el3] of this.ops[1].entries())el3.addEventListener("click", ()=>this.clickRadFn(el3, key2, 1));
            for (let [key3, el4] of this.ops[2].entries())el4.addEventListener("click", ()=>this.clickRadFn(el4, key3, 2));
            //LOS CHECKS
            this.clickCheckFn = (el)=>{
                if (el.classList.contains("act")) el.classList.remove("act");
                else el.classList.add("act");
                if (this.DOM.el.querySelector(".userp_form_3 .check.act")) this.DOM.btnnext.classList.remove("inact");
                else this.DOM.btnnext.classList.add("inact");
            };
            this.ops.push(this.DOM.el.querySelectorAll(".userp_form_3 .check"));
            for (let [key4, el5] of this.ops[3].entries())el5.addEventListener("click", ()=>this.clickCheckFn(el5));
            this.pos = 0;
            //Los ops son los articles, que son los elementos para la modificación del perfil
            this.opholder = this.sections[0].querySelectorAll("article");
            this.opholderFn = async (num = null)=>{
                this.pags[this.pos].classList.remove("act");
                this.opholder[this.pos].classList.remove("activeArt");
                if (num != 4 && num != null) this.DOM.bottomops.classList.add("actBottom");
                await this.timeout(610);
                this.opholder[this.pos].style.display = "none";
                const oldnum = this.pos;
                if (num != null) this.pos = num;
                else this.pos++;
                if (this.pos == 3) this.DOM.btnnext.classList.add("btn-last");
                else this.DOM.btnnext.classList.remove("btn-last");
                this.opholder[this.pos].style.display = "flex";
                await this.timeout(10);
                this.opholder[this.pos].classList.add("activeArt");
                this.resizeLimit();
                this.pags[this.pos].classList.remove("dis");
                this.pags[this.pos].classList.add("act");
                // //  console.log(this.opholder[this.pos])
                if (!this.opholder[this.pos].querySelector(".rad.act") && !this.opholder[this.pos].querySelector(".check.act")) this.DOM.btnnext.classList.add("inact");
                else this.DOM.btnnext.classList.remove("inact");
                // if(!this.opholder[this.pos].querySelector('.check.act')){
                //   this.DOM.btnnext.classList.add('inact')
                // }
                // else{
                //   this.DOM.btnnext.classList.remove('inact')
                // }
                this.opholder[this.pos].classList.add("activeArt");
            };
            this.pags = this.DOM.el.parentNode.querySelectorAll(".pgel");
            this.backs = this.DOM.el.querySelectorAll(".btnBack");
            for (let [i, el6] of this.backs.entries())el6.addEventListener("click", ()=>this.opholderFn(i));
            this.pags = this.DOM.el.parentNode.querySelectorAll(".pgel");
            for (let [i1, el7] of this.pags.entries())el7.addEventListener("click", ()=>this.opholderFn(i1));
            this.DOM.btnnext = this.DOM.el.parentNode.querySelector(".btnNext");
            this.clickNext = async ()=>{
                if (this.pos == 3) {
                    this.opholder[this.pos].classList.remove("activeArt");
                    this.pags[this.pos].classList.remove("act");
                    let formdata = new FormData();
                    if (this.DOM.el.querySelector(".userp_form_0 .rad.act")) formdata.set("option_0", this.DOM.el.querySelector(".userp_form_0 .rad.act").dataset.value);
                    if (this.DOM.el.querySelector(".userp_form_1 .rad.act")) formdata.set("option_1", this.DOM.el.querySelector(".userp_form_1 .rad.act").dataset.value);
                    if (this.DOM.el.querySelector(".userp_form_2 .rad.act")) formdata.set("option_2", this.DOM.el.querySelector(".userp_form_2 .rad.act").dataset.value);
                    if (this.DOM.el.querySelector(".userp_form_3 .check.act")) {
                        const checks = this.DOM.el.querySelectorAll(".userp_form_3 .check.act");
                        let checksid = "";
                        let cont = 0;
                        for (let [key, el] of checks.entries())if (key == 0) checksid += el.dataset.id;
                        else checksid += "," + el.dataset.id;
                        formdata.set("topics", checksid);
                    }
                    formdata.set("userid", this.main.user.user.ID);
                    // //  console.log(formdata.get('userid'))
                    const logtest = await fetch(this.main.acf.base + "/wp-json/csskiller/v1/preferences", {
                        method: "post",
                        body: formdata,
                        "Content-Type": "application/json",
                        "X-WP-Nonce": this.main.user.nonce // here you used the wrong name
                    });
                    const datalog = await logtest.json();
                    // //  console.log(datalog)
                    await this.timeout(610);
                    this.opholder[this.pos].style.display = "none";
                    this.pos = 4;
                    this.opholder[this.pos].style.display = "flex";
                    await this.timeout(10);
                    this.opholder[this.pos].classList.add("activeArt");
                    this.DOM.bottomops.classList.remove("actBottom");
                } else this.opholderFn();
            };
            this.DOM.btnnext.addEventListener("click", this.clickNext);
            this.opholder[this.pos].style.display = "flex";
            await this.timeout(1);
            this.opholder[this.pos].classList.add("activeArt");
            if (this.main.user.acf.info_selected == true) this.opholderFn(4);
            else this.sectionselector[0].classList.add("act");
            this.DOM.btnstart = this.DOM.el.querySelector(".btnToStart");
            this.clickStart = ()=>{
                this.opholderFn(0);
                this.sectionselector[0].classList.add("act");
            };
            this.DOM.btnstart.addEventListener("click", this.clickStart);
            this.DOM.btnnext.addEventListener("click", this.clickNext);
        } else {
            const urlParams = new URLSearchParams(window.location.search);
            const loginpar = urlParams.get("login");
            // const response = await fetch(this.main.acf.base+'/wp-json/csskiller/v1/list/')
            // const data = await response.json()
            if (loginpar != "expired" && loginpar != null) html = _eta.render((0, _loginEtaDefault.default), {
                global: this.main,
                recover: true
            });
            else html = _eta.render((0, _loginEtaDefault.default), {
                global: this.main,
                recover: false
            });
            document.querySelector("#content").innerHTML += html;
            this.DOM = {
                el: document.querySelector("main:not(.old)")
            };
            this.login = new (0, _loginJsDefault.default)(this.DOM.el.querySelector(".logintab"), this.main);
            this.register = new (0, _registerJsDefault.default)(this.DOM.el.querySelector(".signuptab"), this.main);
            this.forget = new (0, _forgetJsDefault.default)(this.DOM.el.querySelector(".forgettab"), this.main);
            this.reset = new (0, _resetJsDefault.default)(this.DOM.el.querySelector(".resettab"), this.main);
            this.reset.on("login", ()=>{
                document.documentElement.classList.add("logged");
                // //  console.log('reset and emit login main reset')
                this.main.user = this.register.main.user;
                this.emit("globalchange");
                this.emit("reset");
            });
            this.login.on("login", ()=>{
                document.documentElement.classList.add("logged");
                // //  console.log(' emit login -> globalchange -> main reset')
                this.main.user = this.login.main.user;
                // //  console.log(this.main)
                this.emit("globalchange");
                this.emit("reset");
            });
            this.register.on("login", ()=>{
                document.documentElement.classList.add("logged");
                // //  console.log('register and emit login main reset')
                this.main.user = this.register.main.user;
                this.emit("globalchange");
                this.emit("reset");
            });
            // //  console.log(urlParams)
            // //  console.log(loginpar)
            if (loginpar != "expired" && loginpar != null) this.intro = new (0, _introJsDefault.default)(this.DOM.el.querySelector(".m-login"), 2);
            else this.intro = new (0, _introJsDefault.default)(this.DOM.el.querySelector(".m-login"), true);
        }
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        // this.login = new Login(this.DOM.el.querySelector('.logintab'))
        // this.login = new Login(this.DOM.el.querySelector('.logintab'))
        await this.loadImages();
        await this.createAnimations();
    // fetch(document.body.dataset.js+'/wp-json/csskiller/v1/mailchimp',{
    //   method: 'get',
    //   headers : {
    //     'Content-Type': 'application/json',
    //     // 'X-WP-Nonce': document.body.dataset.nonce // here you used the wrong name
    //   },
    //   // credentials: 'same-origin',
    // }).then((data)=>{
    // //  console.log(data)
    // })
    // var em= 'angelperezpedrosa@gmail.com'
    // var urlne = 'https://living-corporate.us13.list-manage.com/subscribe/subscribe/post-json?u=2462c30f2ff80099eb631fecb&amp;id=fa2ff7f67c'
    // var urlap = 'https://us13.api.mailchimp.com/2.0/lists/subscribe.json?apikey=03fb47ab9900e747c89f1491bb2c126d-us13&id=fa2ff7f67c&email[email]='+em+'&double_optin=false&send_welcome=false'
    // var formdata = new FormData()
    // formdata.set('EMAIL','angelperezpedrosa@gmail.com')
    // setTimeout(() => {
    // //  console.log('fona?')
    //   fetch(urlap,{
    //   }).then((o)=>{
    //     // //  console.log(o)
    //   })
    // fetch(urlne,{
    //   method: 'post',
    //   body:formdata,
    //   headers:{
    //     'Content-Type': 'jsonp',
    //     'jsonp': 'c'
    //   },
    // }).then((o)=>{
    // //  console.log(o)
    // })
    // }, 600);
    //  this.slidrag = new Slidrag(this.DOM.el.querySelector('.swiper'))
    //  this.slidclick = new SlidClick(this.DOM.el.querySelector('.m-slidnum'))
    }
    async ajaxImages() {
        let newpage = document.createElement("template");
        newpage.innerHTML = this.html;
        let paths = Array.from(newpage.content.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        return Promise.resolve();
    }
    async getJson(url) {
        // //  console.log(url)
        const posts = await fetch(url);
        const datap = await posts.json();
        // //  console.log(datap)
        this.html = _eta.render(list, {
            global: this.main,
            posts: datap.posts
        });
        // //  console.log(this.html)
        // //  console.log(this.DOM.holder)
        this.DOM.holder.innerHTML = this.html;
        await this.ajaxImages();
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            this.anims[pos].stick.active = 0;
                            let index = this.sticks.indexOf(this.anims[pos]);
                            if (index > -1) this.sticks.splice(index, 1);
                        } else if (id == "v") clearInterval(this.clockInt);
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.sticks.push(this.anims[pos]);
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) super.smoothScroll();
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        await this.timeout(1);
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        if (document.querySelector(".usercontrols")) (0, _gsap.gsap).to(".usercontrols", {
            opacity: 0,
            duration: .6,
            onComplete: ()=>{
                document.documentElement.querySelector(".usercontrols").remove();
            }
        });
        return super.hide();
    }
};

},{"../../js🧠🧠🧠/defaults/Page":"98P6v","./Intro.js":"6HkEM","./Login.js":"a7Dfs","./Forget.js":"5x52d","./Register.js":"dVkym","./Reset.js":"j1eKB","./Pass.js":"kwYIP","./Edit.js":"fiBda","./Delete.js":"fl5G8","./ConnectLI.js":"ggaO8","bundle-text:./user.eta":"5rojW","bundle-text:./login.eta":"jtZWX","bundle-text:/src/views👁️👁️👁️/ETA/job.eta":"hIT3l","bundle-text:./LinkedinLogin/dialog.eta":"9TJdn","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"6HkEM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _gsap = require("gsap");
var _splitType = require("split-type");
var _splitTypeDefault = parcelHelpers.interopDefault(_splitType);
exports.default = class {
    constructor(element, isActive){
        this.el = element;
        this.elsleft = this.el.querySelectorAll(".right_tabs_el");
        this.elsimages = this.el.querySelectorAll(".left_el");
        this.selectors = this.el.querySelectorAll(".tabselector");
        this.pos = -1;
        this.length = this.elsimages.length - 1;
        this.borders = this.el.querySelectorAll(".border");
        this.bgs = this.el.querySelectorAll(".bgop");
        this.splits = [];
        this.tweens = [];
        let tw;
        for (let [key, el] of this.el.querySelectorAll(".tit1").entries()){
            this.splits.push(new (0, _splitTypeDefault.default)(el, {
                types: "lines,words"
            }));
            tw = (0, _gsap.gsap).timeline({
                paused: true
            });
            for (let [index, s] of this.splits[key].words.entries()){
                (0, _gsap.gsap).set(s, {
                    yPercent: 120
                });
                tw.to(s, {
                    yPercent: 0,
                    duration: .6,
                    delay: index * .1,
                    ease: (0, _gsap.Power2).easeInOut
                }, "anim");
            }
            this.tweens.push(tw);
        }
        this.active = 0;
        // //  console.log(isActive)
        if (isActive == 2) this.active = 2;
        this.initEvents();
    }
    start() {
        if (this.active == 1) return false;
        if (this.pos == -1) {
            if (this.active != 0) {
                this.change(this.active);
                setTimeout(()=>{
                    this.el.classList.add("delayed");
                }, 3000);
            } else {
                this.change();
                setTimeout(()=>{
                    this.el.classList.add("delayed");
                }, 3000);
            }
        }
        this.active = 1;
        // this.intervalSlide = setInterval(()=>{
        //   gsap.set(this.total,{width:0+'%',opacity:1,
        //     onComplete:()=>{
        //       if(this.poscontroler.querySelector('.out')){
        //         this.poscontroler.querySelector('.out').remove()
        //       }
        //     }
        //   })
        //   this.change()
        // }, 5600)
        this.changeTab = (i)=>{
            this.change(i);
        };
        for (let [index, el] of this.selectors.entries())el.addEventListener("click", ()=>this.changeTab(index));
    }
    change(num = null) {
        if (this.pos > -1) {
            (0, _gsap.gsap).to(this.borders[this.pos], {
                width: "0%",
                height: "0%",
                duration: .6,
                delay: .6,
                ease: "bounceNew"
            });
            (0, _gsap.gsap).to(this.elsimages[this.pos], {
                "clip-path": "polygon(50% 50%, 50% 50%, 50% 50%, 50% 50%)",
                duration: .6,
                delay: .6,
                ease: "bounceNew"
            });
            this.elsleft[this.pos].classList.remove("active");
            this.elsimages[this.pos].classList.remove("active");
            this.borders[this.pos].classList.remove("active");
            this.bgs[this.pos].classList.remove("active");
            this.selectors[this.pos].classList.remove("act");
            this.tweens[this.pos].reverse();
        }
        if (num == null) {
            if (this.pos < this.length) this.pos++;
            else this.pos = 0;
        } else this.pos = num;
        // //  console.log(this.pos+'asa')
        this.elsleft[this.pos].classList.add("active");
        this.elsimages[this.pos].classList.add("active");
        this.borders[this.pos].classList.add("active");
        this.bgs[this.pos].classList.add("active");
        this.selectors[this.pos].classList.add("act");
        setTimeout(()=>{
            this.tweens[this.pos].tweenTo("end");
        }, 600);
        (0, _gsap.gsap).to(this.borders[this.pos], {
            width: "80%",
            height: "80%",
            duration: 1.4,
            delay: .3,
            ease: "bounceNew"
        });
        (0, _gsap.gsap).to(this.elsimages[this.pos], {
            "clip-path": "polygon(10% 10%, 90% 10%, 90% 90%, 10% 90%)",
            duration: 1.4,
            delay: .3,
            ease: "bounceNew"
        });
    }
    stop() {
        if (this.active == 0) return false;
        this.active = 0;
    }
    initEvents() {
    // window.addEventListener('blur',this.stop)
    // window.addEventListener('focus',this.start)
    }
    removeEvents() {}
};

},{"gsap":"gS77a","split-type":"3ncel","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"a7Dfs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _fieldJs = require("./Field.js");
var _fieldJsDefault = parcelHelpers.interopDefault(_fieldJs);
var _chkJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Chk.js");
var _chkJsDefault = parcelHelpers.interopDefault(_chkJs);
var _events = require("events");
var _eventsDefault = parcelHelpers.interopDefault(_events);
var _autoBind = require("auto-bind");
var _autoBindDefault = parcelHelpers.interopDefault(_autoBind);
var _linkedinLoginJs = require("./LinkedinLogin/LinkedinLogin.js");
"use strict";
exports.default = class extends (0, _eventsDefault.default) {
    constructor(el, main){
        super();
        (0, _autoBindDefault.default)(this);
        this.DOM = {
            el: el
        };
        this.main = main;
        this.email = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".logEm").parentNode);
        this.password = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".logPass").parentNode);
        this.rem = new (0, _chkJsDefault.default)(this.DOM.el.querySelector(".logRem").parentNode);
        this.btn = this.DOM.el.querySelector(".btnLogin");
        this.btnLi = this.DOM.el.querySelector(".btnLILogin");
        this.DOM.errors = this.DOM.el.querySelectorAll(".error");
        // //  console.log(this.DOM.errors)
        this.initEvents();
    }
    initEvents() {
        // this.login()
        this.loginFn = ()=>{
            this.email.check();
            this.password.check();
            if (!this.DOM.el.querySelector(".err")) this.login();
        };
        this.btn.addEventListener("click", this.loginFn);
        this.btnLi?.addEventListener("click", this.loginLI);
    }
    async login() {
        let formdata = new FormData();
        // formdata.set('username','angelperezpedrosa@gmail.com')
        // formdata.set('password',encodeURIComponent('jy1&K7w)i14O$BDCtC'))
        // //  console.log(this.email.DOM.npt.value)
        // //  console.log(this.password.DOM.npt.value)
        formdata.set("username", this.email.DOM.npt.value);
        formdata.set("password", encodeURIComponent(this.password.DOM.npt.value));
        const logtest = await fetch(this.main.acf.base + "/wp-json/csskiller/v1/login", {
            method: "post",
            body: formdata
        });
        const datalog = await logtest.json();
        // //  console.log(datalog)
        if (datalog.code == "empty_username") {
            // this.DOM.el
            // //  console.log('badname')
            this.DOM.errors[0].classList.add("act");
            setTimeout(()=>{
                this.DOM.errors[0].classList.remove("act");
            }, 3300);
        } else if (datalog.code == "incorrect_password") {
            // //  console.log('badpass')
            this.DOM.errors[1].classList.add("act");
            setTimeout(()=>{
                this.DOM.errors[1].classList.remove("act");
            }, 3300);
        } else {
            this.main.user = datalog;
            // //  console.log('login is made')
            // //  console.log(this.main)
            // this.emit('login')
            window.location.reload();
        }
    }
    async loginLI() {
        await (0, _linkedinLoginJs.linkedInLogin)(this.main.acf);
        const finishLogin = setInterval(()=>{
            if (window.loginFinished) {
                this.main.user = window.loginFinished;
                // //  console.log('linkedin login is made')
                // //  console.log(this.main)
                this.emit("login");
                clearInterval(finishLogin);
            }
        });
    }
    removeEvents() {}
};

},{"./Field.js":"98uGf","/src/js🧠🧠🧠/defaults/Chk.js":"LTujD","events":"32fHr","auto-bind":"iS0Jy","./LinkedinLogin/LinkedinLogin.js":"5II5f","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"98uGf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
"use strict";
exports.default = class {
    constructor(el){
        this.DOM = {
            el: el
        };
        this.DOM.npt = this.DOM.el.querySelector(".field_npt");
        this.initEvents();
        this.checkField();
    }
    initEvents() {
        this.checkField = ()=>{
            if (this.DOM.npt.value == "") this.DOM.el.classList.remove("fill");
            else this.DOM.el.classList.add("fill");
        };
        this.focusFn = ()=>{
            this.DOM.el.classList.remove("err");
            this.DOM.el.classList.add("foc");
        };
        this.focusoutFn = ()=>{
            this.DOM.el.classList.remove("foc");
            this.DOM.el.classList.remove("err");
        };
        this.DOM.npt.addEventListener("input", ()=>this.checkField());
        this.DOM.npt.addEventListener("focusin", this.focusFn);
        this.DOM.npt.addEventListener("focusout", ()=>this.focusoutFn());
    }
    check() {
        if ("" == this.DOM.npt.value) return void this.DOM.el.classList.add("err");
        this.DOM.el.classList.remove("err");
        this.DOM.el.classList.contains("field-email") ? null == this.DOM.npt.value.match(/^([\w\!\#$\%\&\'\*\+\-\/\=\?\^\`{\|\}\~]+\.)*[\w\!\#$\%\&\'\*\+\-\/\=\?\^\`{\|\}\~]+@((((([a-z0-9]{1}[a-z0-9\-]{0,62}[a-z0-9]{1})|[a-z])\.)+[a-z]{2,6})|(\d{1,3}\.){3}\d{1,3}(\:\d{1,5})?)$/i) ? this.DOM.el.classList.add("err") : this.DOM.el.classList.remove("err") : this.DOM.el.classList.contains("field-number") && (isNaN(this.DOM.npt.value) ? this.DOM.el.classList.add("err") : this.DOM.el.classList.remove("err"));
    }
    clear() {
        this.DOM.el.classList.remove("foc");
        this.DOM.el.classList.remove("fill");
        this.DOM.el.classList.remove("err");
        this.DOM.npt.value = "";
    }
    removeEvents() {
        this.DOM.npt.removeEventListener("input", ()=>this.checkField());
        this.DOM.npt.removeEventListener("focusin", this.focusFn);
        this.DOM.npt.removeEventListener("focusout", ()=>this.focusoutFn());
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"5II5f":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "linkedInLogin", ()=>linkedInLogin);
parcelHelpers.export(exports, "linkedInRegister", ()=>linkedInRegister);
parcelHelpers.export(exports, "linkedInConnect", ()=>linkedInConnect);
parcelHelpers.export(exports, "linkedInDisconnect", ()=>linkedInDisconnect);
var _callbacks = require("./Callbacks");
var _dialog = require("./Dialog");
const api_url = "https://api.linkedin.com";
const startAuthFlow = async (acf, callback, user = "")=>{
    const base_url = acf.base;
    const url = `${api_url}/oauth/v2/authorization?`;
    const client_id = acf.linkedin_api.client_id;
    const client_secret = acf.linkedin_api.client_secret;
    const redirect_uri = `${base_url}/login/`;
    const scope = "r_liteprofile r_emailaddress";
    const state = Math.random().toString(36).slice(2); // generate random alpha-numeric string for verification
    if (!client_id || !client_secret) return false;
    const json_params = {
        response_type: "code",
        client_id,
        client_secret,
        redirect_uri,
        state,
        scope
    };
    const popup = createPopup(url, json_params);
    let authcode;
    setTimeout(async ()=>{
        const checkPopup = setInterval(async ()=>{
            try {
                if (popup?.location?.href?.includes(redirect_uri)) {
                    //get bearer token from url
                    const params = new Proxy(new URLSearchParams(popup.location.search), {
                        get: (searchParams, prop)=>searchParams.get(prop)
                    });
                    authcode = params.code ?? "";
                    //verify state
                    if (state === params.state) callback(acf, authcode, user);
                    else (0, _dialog.showMessage)("Error during authentication");
                    popup.close();
                }
                if (!popup || !popup.closed) {
                    clearInterval(checkPopup);
                    return;
                }
            } catch (err) {
                if (!err instanceof DOMException) console.error(err);
            }
        }, 500);
    }, 500);
};
const linkedInLogin = async (acf)=>{
    return await startAuthFlow(acf, (0, _callbacks.loginWithLinkedin));
};
const linkedInRegister = async (acf)=>{
    return await startAuthFlow(acf, (0, _callbacks.registerWithLinkedin));
};
const linkedInConnect = async (acf, user)=>{
    return await startAuthFlow(acf, (0, _callbacks.connectLinkedin), user);
};
const linkedInDisconnect = async (acf, user, passField)=>{
    const modal = document.querySelector(".disLIModal");
    const bg = modal.querySelector(".disLIModal__bg");
    const body = modal.querySelector(".disLIModal__body");
    modal.style.display = "unset";
    setTimeout(()=>bg.style.opacity = 1.0, 50);
    setTimeout(()=>body.style.opacity = 1.0, 50);
    const btn = modal.querySelector(".btnDisConf");
    btn.addEventListener("click", async ()=>{
        passField.check();
        if (modal.querySelector(".err")) return;
        btn.querySelector(".btn_t").innerHTML = (0, _dialog.getLoadingWheel)();
        const pass = encodeURIComponent(passField.DOM.npt.value);
        return await (0, _callbacks.disconnectLinkedin)(acf, user, pass, (message)=>{
            const messageElem = modal.querySelector(".disLIModal__message");
            btn.querySelector(".btn_t").innerHTML = "CONFIRM DISCONNECT";
            if (message) {
                messageElem.innerHTML = message;
                messageElem.style.maxHeight = "100%";
                messageElem.style.padding = "1rem";
                setTimeout(()=>{
                    messageElem.style.maxHeight = 0;
                    messageElem.style.padding = 0;
                }, 3300);
            }
        });
    });
};
const createPopup = (url, json_params)=>{
    const query_params = new URLSearchParams(json_params);
    const width = 450;
    const height = 600;
    const top = screen.height / 2 - height / 2;
    const left = screen.width / 2 - width / 2;
    const popup = window.open(url + query_params, "lc_linkedin_login", `menubar=no,location=no,resizable=no,scrollbars=no,status=no,popup=true,width=${width},height=${height},top=${top},left=${left}`);
    if (window.focus) popup.focus();
    return popup;
};

},{"./Callbacks":"8LavD","./Dialog":"8Lgst","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"8LavD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "loginWithLinkedin", ()=>loginWithLinkedin);
parcelHelpers.export(exports, "registerWithLinkedin", ()=>registerWithLinkedin);
parcelHelpers.export(exports, "connectLinkedin", ()=>connectLinkedin);
parcelHelpers.export(exports, "disconnectLinkedin", ()=>disconnectLinkedin);
//calls to server
var _dialog = require("./Dialog");
const setupParams = (acf, code)=>{
    const base_url = acf.base;
    const client_id = acf.linkedin_api.client_id;
    const client_secret = acf.linkedin_api.client_secret;
    const redirect_uri = `${base_url}/login/`;
    const json_params = {
        grant_type: "authorization_code",
        code,
        client_id,
        client_secret,
        redirect_uri
    };
    return json_params;
};
//access token and profile called on backend due to cors
const loginWithLinkedin = async (acf, code)=>{
    const base_url = acf.base;
    const url = `${base_url}/wp-json/csskiller/v1/linkedin-login/`;
    if (!base_url || !code) {
        // error
        (0, _dialog.showMessage)("Authentication error");
        return false;
    }
    const json_params = setupParams(acf, code);
    const response = await fetch(url, {
        method: "POST",
        headers: {
            "Content-Type": "application/x-www-form-urlencoded"
        },
        body: new URLSearchParams(json_params)
    });
    if (response.status != 200) {
        //show error
        (0, _dialog.showMessage)("LinkedIn not connected an account");
        return false;
    }
    const json = await response.json();
    if (json) window.loginFinished = json;
    return json;
};
const registerWithLinkedin = async (acf, code)=>{
    const base_url = acf.base;
    const url = `${base_url}/wp-json/csskiller/v1/linkedin-register/`;
    if (!base_url || !code) {
        // error
        (0, _dialog.showMessage)("Authentication error", "signuptab");
        return false;
    }
    const json_params = setupParams(acf, code);
    const response = await fetch(url, {
        method: "POST",
        headers: {
            "Content-Type": "application/x-www-form-urlencoded"
        },
        body: new URLSearchParams(json_params)
    });
    if (response.status != 200) {
        //show error
        (0, _dialog.showMessage)("Email/LinkedIn already connected an account", "signuptab");
        return false;
    }
    const json = await response.json();
    if (json) {
        window.registerFinished = json;
        (0, _dialog.showMessage)("Signup successful!", "signuptab");
    }
    return json;
};
const connectLinkedin = async (acf, code, user)=>{
    const base_url = acf.base;
    const email = user.user.data.user_email;
    const url = `${base_url}/wp-json/csskiller/v1/linkedin-connect/`;
    if (!base_url || !code || !email) {
        // error
        (0, _dialog.showModal)("Error connecting linkedin", "An error occurred during connection");
        return false;
    }
    const json_params = setupParams(acf, code);
    const response = await fetch(url, {
        method: "POST",
        headers: {
            "Content-Type": "application/x-www-form-urlencoded"
        },
        body: new URLSearchParams({
            ...json_params,
            email
        })
    });
    if (response.status != 200) {
        //show error
        (0, _dialog.showModal)("Error connecting linkedin", "This linkedin is already connected to an account");
        return false;
    }
    const json = await response.json();
    (0, _dialog.showModal)("Success", "LinkedIn account was connected successfully");
    if (json) window.liConnected = true;
    return json;
};
const disconnectLinkedin = async (acf, user, pass, showMessage)=>{
    const base_url = acf.base;
    const email = user.user.data.user_email;
    const url = `${base_url}/wp-json/csskiller/v1/linkedin-disconnect/`;
    if (!base_url || !email || !pass) {
        // error
        showMessage("An error occurred during disconnection");
        return false;
    }
    const response = await fetch(url, {
        method: "POST",
        headers: {
            "Content-Type": "application/x-www-form-urlencoded"
        },
        body: new URLSearchParams({
            email,
            pass
        })
    });
    if (response.status != 200) {
        //show error
        showMessage("This linkedin is not connected to an account");
        return false;
    }
    const json = await response.json();
    showMessage("LinkedIn account was disconnected successfully");
    if (json) {
        window.liDisconnected = true;
        showMessage("LinkedIn account was disconnected successfully");
        setTimeout(()=>{
            const modal = document.querySelector(".disLIModal");
            const bg = modal.querySelector(".disLIModal__bg");
            const body = modal.querySelector(".disLIModal__body");
            bg.style.opacity = 0;
            body.style.opacity = 0;
            setTimeout(()=>modal.style.display = "none", 350);
        }, 1500);
    }
    return json;
};

},{"./Dialog":"8Lgst","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"5x52d":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _fieldJs = require("./Field.js");
var _fieldJsDefault = parcelHelpers.interopDefault(_fieldJs);
var _events = require("events");
var _eventsDefault = parcelHelpers.interopDefault(_events);
var _autoBind = require("auto-bind");
var _autoBindDefault = parcelHelpers.interopDefault(_autoBind);
"use strict";
exports.default = class extends (0, _eventsDefault.default) {
    constructor(el, main){
        super();
        (0, _autoBindDefault.default)(this);
        this.DOM = {
            el: el
        };
        this.main = main;
        this.email = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".emFor").parentNode);
        this.btn = this.DOM.el.querySelector(".btnForget");
        this.DOM.errors = this.DOM.el.querySelectorAll(".error");
        // //  console.log(this.DOM.errors)
        this.initEvents();
    }
    initEvents() {
        // this.login()
        this.forgetpassFn = ()=>{
            this.email.check();
            if (!this.DOM.el.querySelector(".err")) this.forgetpass();
        };
        this.btn.addEventListener("click", this.forgetpassFn);
    }
    async forgetpass() {
        let formdata = new FormData();
        // formdata.set('username','angelperezpedrosa@gmail.com')
        // formdata.set('password',encodeURIComponent('jy1&K7w)i14O$BDCtC'))
        // //  console.log(this.email.DOM.npt.value)
        formdata.set("email", this.email.DOM.npt.value);
        const logtest = await fetch(this.main.acf.base + "/wp-json/csskiller/v1/forgetpassword?email=" + this.email.DOM.npt.value, {});
        const datalog = await logtest.json();
        // //  console.log(datalog)
        if (datalog == "300") {
            // this.DOM.el
            // //  console.log('badmail')
            this.DOM.errors[0].classList.add("act");
            setTimeout(()=>{
                this.DOM.errors[0].classList.remove("act");
            }, 3300);
        } else if (datalog == "200") {
            this.DOM.errors[1].classList.add("act");
            setTimeout(()=>{
                this.DOM.errors[1].classList.remove("act");
            }, 3300);
        }
    }
    removeEvents() {}
};

},{"./Field.js":"98uGf","events":"32fHr","auto-bind":"iS0Jy","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"dVkym":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _fieldJs = require("./Field.js");
var _fieldJsDefault = parcelHelpers.interopDefault(_fieldJs);
var _chkJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Chk.js");
var _chkJsDefault = parcelHelpers.interopDefault(_chkJs);
var _selcJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Selc.js");
var _selcJsDefault = parcelHelpers.interopDefault(_selcJs);
var _events = require("events");
var _eventsDefault = parcelHelpers.interopDefault(_events);
var _autoBind = require("auto-bind");
var _autoBindDefault = parcelHelpers.interopDefault(_autoBind);
var _linkedinLoginJs = require("./LinkedinLogin/LinkedinLogin.js");
"use strict";
exports.default = class extends (0, _eventsDefault.default) {
    constructor(el, main){
        super();
        (0, _autoBindDefault.default)(this);
        this.DOM = {
            el: el
        };
        this.main = main;
        this.email = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".emailReg").parentNode);
        this.first = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".firstReg").parentNode);
        this.last = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".lastReg").parentNode);
        this.pronoun = new (0, _selcJsDefault.default)(this.DOM.el.querySelector(".pronounReg").parentNode);
        this.btn = this.DOM.el.querySelector(".btnReg");
        this.btnLi = this.DOM.el.querySelector(".btnLIReg");
        this.DOM.errors = this.DOM.el.querySelectorAll(".error");
        // //  console.log(this.DOM.errors)
        this.initEvents();
    }
    initEvents() {
        // this.register()
        this.registerFn = ()=>{
            this.email.check();
            this.first.check();
            this.last.check();
            if (!this.DOM.el.querySelector(".err")) this.register();
        };
        this.btn.addEventListener("click", this.registerFn);
        this.btnLi?.addEventListener("click", this.registerLI);
    }
    async register() {
        let formdata = new FormData();
        // formdata.set('email','angelperezpedrosa@gmail.com')
        // formdata.set('password',encodeURIComponent('jy1&K7w)i14O$BDCtC'))
        formdata.set("email", this.email.DOM.npt.value);
        formdata.set("first_name", this.first.DOM.npt.value);
        formdata.set("last_name", this.last.DOM.npt.value);
        formdata.set("pronoun", this.pronoun.DOM.npt.value);
        const logtest = await fetch(this.main.acf.base + "/wp-json/csskiller/v1/register", {
            method: "post",
            body: formdata
        });
        const datalog = await logtest.json();
        // //  console.log(datalog)
        if (datalog == 300) {
            this.DOM.errors[0].classList.add("act");
            setTimeout(()=>{
                this.DOM.errors[0].classList.remove("act");
            }, 3300);
        } else {
            // //  console.log('register and emit login')
            this.main.user = datalog;
            this.emit("login");
        }
    //   // this.DOM.el
    // //  console.log('badname')
    //   this.DOM.errors[0].classList.add('act')
    //   setTimeout(()=>{
    //     this.DOM.errors[0].classList.remove('act')
    //   },3300)
    // }
    // else if(datalog.code=='incorrect_password'){
    // //  console.log('badpass')
    //   this.DOM.errors[1].classList.add('act')
    //   setTimeout(()=>{
    //     this.DOM.errors[1].classList.remove('act')
    //   },3300)
    // }
    // else{
    // }
    // //  console.log('sis')
    }
    async registerLI() {
        await (0, _linkedinLoginJs.linkedInRegister)(this.main.acf);
        const finishLogin = setInterval(()=>{
            if (window.registerFinished) {
                // //  console.log('linkedin register and emit login')
                this.main.user = window.registerFinished;
                this.emit("login");
                clearInterval(finishLogin);
            }
        });
    }
    removeEvents() {}
};

},{"./Field.js":"98uGf","/src/js🧠🧠🧠/defaults/Chk.js":"LTujD","/src/js🧠🧠🧠/defaults/Selc.js":"1p4lk","events":"32fHr","auto-bind":"iS0Jy","./LinkedinLogin/LinkedinLogin.js":"5II5f","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"j1eKB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _fieldJs = require("./Field.js");
var _fieldJsDefault = parcelHelpers.interopDefault(_fieldJs);
var _events = require("events");
var _eventsDefault = parcelHelpers.interopDefault(_events);
var _autoBind = require("auto-bind");
var _autoBindDefault = parcelHelpers.interopDefault(_autoBind);
"use strict";
exports.default = class extends (0, _eventsDefault.default) {
    constructor(el, main){
        super();
        (0, _autoBindDefault.default)(this);
        this.DOM = {
            el: el
        };
        this.main = main;
        this.pass1 = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".recPass1").parentNode);
        this.pass2 = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".recPass2").parentNode);
        this.btn = this.DOM.el.querySelector(".btnRecpass");
        this.DOM.errors = this.DOM.el.querySelectorAll(".error");
        this.initEvents();
    }
    initEvents() {
        // this.pass()
        this.passFn = ()=>{
            this.pass1.check();
            this.pass2.check();
            if (!this.DOM.el.querySelector(".err")) this.pass();
        };
        this.btn.addEventListener("click", this.passFn);
    }
    async pass() {
        const urlParams = new URLSearchParams(window.location.search);
        const loginpar = urlParams.get("login");
        const keypar = urlParams.get("key");
        let formdata = new FormData();
        // //  console.log(this.pass1.DOM.npt.value)
        // //  console.log(this.pass2.DOM.npt.value)
        formdata.set("pass1", encodeURIComponent(this.pass1.DOM.npt.value));
        const pass1 = encodeURIComponent(this.pass1.DOM.npt.value);
        const pass2 = encodeURIComponent(this.pass2.DOM.npt.value);
        const login = loginpar;
        const key = encodeURIComponent(keypar);
        // formdata.set('pass2',encodeURIComponent(this.pass2.DOM.npt.value))
        // formdata.set('login',encodeURIComponent(loginpar))
        // formdata.set('pass2',encodeURIComponent(keypar))
        const logtest = await fetch(this.main.acf.base + "/wp-json/csskiller/v1/recoverpass?pass1=" + pass1 + "&pass2=" + pass2 + "&key=" + key + "&login=" + login, {
            method: "GET"
        });
        const datalog = await logtest.json();
        // //  console.log(datalog)
        if (datalog == 300) {
            this.DOM.errors[0].classList.add("act");
            setTimeout(()=>{
                this.DOM.errors[0].classList.remove("act");
            }, 3300);
        } else {
            this.DOM.errors[1].classList.add("act");
            setTimeout(()=>{
                this.DOM.errors[1].classList.remove("act");
            }, 3300);
            this.main.user = datalog;
            this.emit("login");
        }
    //   // this.DOM.el
    // //  console.log('badname')
    //   this.DOM.errors[0].classList.add('act')
    //   setTimeout(()=>{
    //     this.DOM.errors[0].classList.remove('act')
    //   },3300)
    // }
    // else if(datalog.code=='incorrect_password'){
    // //  console.log('badpass')
    //   this.DOM.errors[1].classList.add('act')
    //   setTimeout(()=>{
    //     this.DOM.errors[1].classList.remove('act')
    //   },3300)
    // }
    // else{
    // }
    // //  console.log('sis')
    }
    removeEvents() {}
};

},{"./Field.js":"98uGf","events":"32fHr","auto-bind":"iS0Jy","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"kwYIP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _fieldJs = require("./Field.js");
var _fieldJsDefault = parcelHelpers.interopDefault(_fieldJs);
var _selcJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Selc.js");
var _selcJsDefault = parcelHelpers.interopDefault(_selcJs);
var _events = require("events");
var _eventsDefault = parcelHelpers.interopDefault(_events);
var _autoBind = require("auto-bind");
var _autoBindDefault = parcelHelpers.interopDefault(_autoBind);
"use strict";
exports.default = class extends (0, _eventsDefault.default) {
    constructor(el, main){
        super();
        (0, _autoBindDefault.default)(this);
        this.DOM = {
            el: el
        };
        // //  console.log(this.DOM.el)
        this.main = main;
        this.pass1 = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".p1Pass").parentNode);
        this.pass2 = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".p2Pass").parentNode);
        this.btn = this.DOM.el.querySelector(".btnPass");
        this.DOM.errors = document.body.querySelectorAll(".usercontrols_errors .error");
        this.initEvents();
    }
    initEvents() {
        // this.pass()
        this.passFn = ()=>{
            this.pass1.check();
            this.pass2.check();
            if (!this.DOM.el.querySelector(".err")) this.pass();
        };
        this.btn.addEventListener("click", this.passFn);
    }
    async pass() {
        let formdata = new FormData();
        formdata.set("pass1", encodeURIComponent(this.pass1.DOM.npt.value));
        formdata.set("pass2", encodeURIComponent(this.pass2.DOM.npt.value));
        formdata.set("userid", this.main.user.user.ID);
        // //  console.log(this.main.acf.base)
        // //  console.log(this.main.user.nonce)
        const logtest = await fetch(this.main.acf.base + "/wp-json/csskiller/v1/setpass", {
            method: "post",
            body: formdata,
            "Content-Type": "application/json",
            "X-WP-Nonce": this.main.user.nonce
        });
        const datalog = await logtest.json();
        // //  console.log(datalog)
        if (datalog == 300) {
            this.DOM.errors[2].classList.add("act");
            setTimeout(()=>{
                this.DOM.errors[2].classList.remove("act");
            }, 3300);
        } else {
            this.DOM.errors[3].classList.add("act");
            setTimeout(()=>{
                this.DOM.errors[3].classList.remove("act");
            }, 3300);
            this.main.user = datalog;
            this.emit("resetuser");
        }
    //   // this.DOM.el
    // //  console.log('badname')
    //   this.DOM.errors[0].classList.add('act')
    //   setTimeout(()=>{
    //     this.DOM.errors[0].classList.remove('act')
    //   },3300)
    // }
    // else if(datalog.code=='incorrect_password'){
    // //  console.log('badpass')
    //   this.DOM.errors[1].classList.add('act')
    //   setTimeout(()=>{
    //     this.DOM.errors[1].classList.remove('act')
    //   },3300)
    // }
    // else{
    // }
    // //  console.log('sis')
    }
    removeEvents() {}
};

},{"./Field.js":"98uGf","/src/js🧠🧠🧠/defaults/Selc.js":"1p4lk","events":"32fHr","auto-bind":"iS0Jy","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"fiBda":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _fieldJs = require("./Field.js");
var _fieldJsDefault = parcelHelpers.interopDefault(_fieldJs);
var _selcJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Selc.js");
var _selcJsDefault = parcelHelpers.interopDefault(_selcJs);
var _events = require("events");
var _eventsDefault = parcelHelpers.interopDefault(_events);
var _autoBind = require("auto-bind");
var _autoBindDefault = parcelHelpers.interopDefault(_autoBind);
"use strict";
exports.default = class extends (0, _eventsDefault.default) {
    constructor(el, main){
        super();
        (0, _autoBindDefault.default)(this);
        this.DOM = {
            el: el
        };
        // //  console.log(this.DOM.el)
        this.main = main;
        this.email = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".emailEdit").parentNode);
        this.first = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".firstEdit").parentNode);
        this.last = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".lastEdit").parentNode);
        this.pronoun = new (0, _selcJsDefault.default)(this.DOM.el.querySelector(".pronounEdit").parentNode);
        this.btn = this.DOM.el.querySelector(".btnEdit");
        this.DOM.errors = document.body.querySelectorAll(".usercontrols_errors .error");
        this.initEvents();
    }
    initEvents() {
        // this.edit()
        this.editFn = ()=>{
            this.email.check();
            this.first.check();
            this.last.check();
            if (!this.DOM.el.querySelector(".err")) this.edit();
        };
        this.btn.addEventListener("click", this.editFn);
    }
    async edit() {
        let formdata = new FormData();
        formdata.set("email", this.email.DOM.npt.value);
        formdata.set("first_name", this.first.DOM.npt.value);
        formdata.set("last_name", this.last.DOM.npt.value);
        formdata.set("pronoun", this.pronoun.DOM.npt.value);
        formdata.set("pronoun", this.pronoun.DOM.npt.value);
        formdata.set("userid", this.main.user.user.ID);
        // //  console.log(this.main.acf.base)
        // //  console.log(this.main.user.nonce)
        const logtest = await fetch(this.main.acf.base + "/wp-json/csskiller/v1/editinfo", {
            method: "post",
            body: formdata,
            "Content-Type": "application/json",
            "X-WP-Nonce": this.main.user.nonce
        });
        const datalog = await logtest.json();
        // //  console.log(datalog)
        if (datalog == 300) {
            this.DOM.errors[0].classList.add("act");
            setTimeout(()=>{
                this.DOM.errors[0].classList.remove("act");
            }, 3300);
        } else {
            this.DOM.errors[1].classList.add("act");
            setTimeout(()=>{
                this.DOM.errors[1].classList.remove("act");
            }, 3300);
            // //  console.log('edit and emit login')
            this.main.user = datalog;
            this.emit("resetuser");
        }
    //   // this.DOM.el
    // //  console.log('badname')
    //   this.DOM.errors[0].classList.add('act')
    //   setTimeout(()=>{
    //     this.DOM.errors[0].classList.remove('act')
    //   },3300)
    // }
    // else if(datalog.code=='incorrect_password'){
    // //  console.log('badpass')
    //   this.DOM.errors[1].classList.add('act')
    //   setTimeout(()=>{
    //     this.DOM.errors[1].classList.remove('act')
    //   },3300)
    // }
    // else{
    // }
    // //  console.log('sis')
    }
    removeEvents() {}
};

},{"./Field.js":"98uGf","/src/js🧠🧠🧠/defaults/Selc.js":"1p4lk","events":"32fHr","auto-bind":"iS0Jy","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"fl5G8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _fieldJs = require("./Field.js");
var _fieldJsDefault = parcelHelpers.interopDefault(_fieldJs);
var _events = require("events");
var _eventsDefault = parcelHelpers.interopDefault(_events);
var _autoBind = require("auto-bind");
var _autoBindDefault = parcelHelpers.interopDefault(_autoBind);
var _dialogJs = require("./LinkedinLogin/Dialog.js");
"use strict";
exports.default = class extends (0, _eventsDefault.default) {
    constructor(el, main){
        super();
        (0, _autoBindDefault.default)(this);
        this.DOM = {
            el: el
        };
        // //  console.log(this.DOM.el)
        this.main = main;
        this.delConfModal = document.querySelector(".delAcctModal");
        this.pass = new (0, _fieldJsDefault.default)(this.delConfModal.querySelector(".pass_conf").parentNode);
        this.delBtn = this.DOM.el.querySelector(".btnDelete");
        this.delConfBtn = this.delConfModal.querySelector(".btnDeleteConf");
        this.delModalBg = this.delConfModal.querySelector(".delAcctModal__bg");
        this.delModalMessage = this.delConfModal.querySelector(".delAcctModal__message");
        this.DOM.errors = document.body.querySelectorAll(".usercontrols_errors .error");
        this.initEvents();
    }
    initEvents() {
        this.deleteFn = ()=>{
            //show modal and then delete
            this.showModal();
        };
        this.delBtn.addEventListener("click", this.deleteFn);
        this.delConfBtn.addEventListener("click", this.delete);
        this.delModalBg.addEventListener("click", ()=>this.showModal(false));
    }
    async delete() {
        this.pass.check();
        if (this.delConfModal.querySelector(".err")) return;
        //loading wheel
        const delConfText = this.delConfBtn.querySelector(".btn_t");
        delConfText.innerHTML = (0, _dialogJs.getLoadingWheel)();
        // //  console.log(this.main.acf.base)
        // //  console.log(this.main.user.nonce)
        let formdata = new FormData();
        formdata.set("userid", this.main.user.user.ID);
        formdata.set("pass", encodeURIComponent(this.pass.DOM.npt.value));
        //delete account
        const response = await fetch(this.main.acf.base + "/wp-json/csskiller/v1/delete-account/", {
            method: "post",
            body: formdata,
            "Content-Type": "application/json",
            "X-WP-Nonce": this.main.user.nonce
        });
        const success = await response.json();
        delConfText.innerHTML = "CONFIRM AND DELETE";
        if (success) {
            this.showMessage("Account deleted successfully");
            this.showModal(false);
            this.emit("resetuser");
        } else this.showMessage("Incorrect password");
    }
    async showModal(show = true) {
        const modal = this.delConfModal;
        const delModalBg = this.delModalBg;
        const delModalBody = this.delConfModal.querySelector(".delAcctModal__body");
        if (show) {
            modal.style.display = "unset";
            setTimeout(()=>delModalBg.style.opacity = 1.0, 50);
            setTimeout(()=>delModalBody.style.opacity = 1.0, 50);
        } else {
            delModalBg.style.opacity = 0;
            delModalBody.style.opacity = 0;
            setTimeout(()=>modal.style.display = "none", 350);
        }
    }
    showMessage(message) {
        const delModalMessage = this.delModalMessage;
        if (message) {
            delModalMessage.innerHTML = message;
            delModalMessage.style.maxHeight = "100%";
            delModalMessage.style.padding = "1rem";
            setTimeout(this.showMessage, 3300);
        } else {
            delModalMessage.style.maxHeight = 0;
            delModalMessage.style.padding = 0;
        }
    }
    removeEvents() {}
};

},{"./Field.js":"98uGf","events":"32fHr","auto-bind":"iS0Jy","./LinkedinLogin/Dialog.js":"8Lgst","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"ggaO8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _events = require("events");
var _eventsDefault = parcelHelpers.interopDefault(_events);
var _fieldJs = require("./Field.js");
var _fieldJsDefault = parcelHelpers.interopDefault(_fieldJs);
var _autoBind = require("auto-bind");
var _autoBindDefault = parcelHelpers.interopDefault(_autoBind);
var _linkedinLoginJs = require("./LinkedinLogin/LinkedinLogin.js");
"use strict";
exports.default = class extends (0, _eventsDefault.default) {
    constructor(el, main){
        super();
        (0, _autoBindDefault.default)(this);
        this.DOM = {
            el: el
        };
        // //  console.log(this.DOM.el)
        this.main = main;
        this.btn = this.DOM.el.querySelector(".btnLIConnect");
        this.DOM.errors = document.body.querySelectorAll(".usercontrols_errors .error");
        this.disLIModal = document.querySelector(".disLIModal");
        this.pass = new (0, _fieldJsDefault.default)(this.disLIModal.querySelector(".pass_conf").parentNode);
        if (this.main.user.linkedin_id) {
            const btn_t = this.btn.querySelector(".btn_t");
            btn_t.innerHTML = btn_t.innerHTML.replace("CONNECT", "DISCONNECT");
        }
        this.initEvents();
    }
    initEvents() {
        if (this.main.user.linkedin_id) this.btn?.addEventListener("click", this.disconnectLI);
        else this.btn?.addEventListener("click", this.connectLI);
    }
    async connectLI() {
        await (0, _linkedinLoginJs.linkedInConnect)(this.main.acf, this.main.user);
        const finishConnect = setInterval(()=>{
            if (window.liConnected) {
                window.liConnected = false;
                // //  console.log('linkedin connected')
                this.main.linkedin_id = window.liConnected;
                const btn_t = this.btn.querySelector(".btn_t");
                btn_t.innerHTML = btn_t.innerHTML.replace("CONNECT", "DISCONNECT");
                // swap events
                this.btn?.removeEventListener("click", this.connectLI);
                this.btn?.addEventListener("click", this.disconnectLI);
                clearInterval(finishConnect);
            }
        });
    }
    async disconnectLI() {
        await (0, _linkedinLoginJs.linkedInDisconnect)(this.main.acf, this.main.user, this.pass);
        const finishDisconnect = setInterval(()=>{
            if (window.liDisconnected) {
                window.liDisconnected = false;
                // //  console.log('linkedin disconnected')
                this.main.linkedin_id = "";
                const btn_t = this.btn.querySelector(".btn_t");
                btn_t.innerHTML = btn_t.innerHTML.replace("DISCONNECT", "CONNECT");
                this.btn?.removeEventListener("click", this.disconnectLI);
                this.btn?.addEventListener("click", this.connectLI);
                clearInterval(finishDisconnect);
            }
        });
    }
    removeEvents() {}
};

},{"events":"32fHr","./Field.js":"98uGf","auto-bind":"iS0Jy","./LinkedinLogin/LinkedinLogin.js":"5II5f","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"5rojW":[function(require,module,exports) {
module.exports = "\r\n<main class=\"usermain\">\r\n  <section class=\"userp\">\r\n    <div class=\"userp_form\">\r\n      <article class=\"userp_form_0\">\r\n        <div class=\"userp_form_title\">\r\n          \r\n          <div class=\"userp_pos\">1 of 4</div>\r\n          <h2 class=\"tit2\">WELCOME! TELL US A<br>LITTLE BIT ABOUT YOU</h2>\r\n          <p>(This info will help us curate content just for you)</p>\r\n        </div>\r\n        <div class=\"userp_form_ops activeOp\">\r\n          <% \r\n            firstis = null\r\n            it.global.acf.options_0.forEach(function(p,key){ %>\r\n          <div class=\"rad <% if(it.global.user.acf.option_0 == p.title){ firstis = key %> act <% } %> mouseHover\" data-value=\"<%~ p.title %>\" data-key=\"<%~ key %>\">\r\n            <div class=\"rad_cont\">\r\n              <div class=\"rad_s\">\r\n                <div class=\"rad_i\"></div>\r\n              </div>\r\n              <div class=\"rad_t\"><%~ p.title %></div>\r\n            </div>\r\n          </div>\r\n          <% }) %>\r\n        </div>\r\n      </article>\r\n\r\n      <article class=\"userp_form_1\">\r\n        <div class=\"userp_form_title\">\r\n          <div class=\"userp_back\">\r\n            <div class=\"btnarrow btnBack mouseHover\">\r\n              <div class=\"btnarrow_n\"></div>\r\n              <div class=\"btnarrow_t\">Back</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"userp_pos\">2 of 4</div>\r\n          <h2 class=\"tit2\">WELCOME! TELL US A<br>LITTLE BIT ABOUT YOU</h2>\r\n          <p>(This info will help us curate content just for you)</p>\r\n        </div>\r\n          <% \r\n            cont1=0\r\n            secondis = null\r\n            it.global.acf.options_0.forEach(function(p,key){ %>\r\n            <div class=\"userp_form_ops <% if(firstis==key){ %>activeOp<% } %>\" data-op=\"<%~ cont1 %>\">\r\n          <% p.options_1.forEach(function(w,keya){ %>\r\n            <div class=\"rad mouseHover <% if(it.global.user.acf.option_1 == w.title){ secondis = cont1 %> act <% } %>\" data-value=\"<%~ w.title %>\" data-key0=\"<%~ key %>\" data-key1=\"<%~ keya %>\">\r\n              <div class=\"rad_cont\">\r\n                <div class=\"rad_s\">\r\n                  <div class=\"rad_i\"></div>\r\n                </div>\r\n                <div class=\"rad_t\"><%~ w.title %></div>\r\n              </div>\r\n            </div>\r\n            <% \r\n              \r\n            cont1++\r\n              }) %>\r\n          </div>\r\n          <% \r\n            }) %>\r\n      </article>\r\n\r\n      <article class=\"userp_form_2\">\r\n        <div class=\"userp_form_title\">\r\n          <div class=\"userp_back\">\r\n            <div class=\"btnarrow btnBack mouseHover\">\r\n              <div class=\"btnarrow_n\"></div>\r\n              <div class=\"btnarrow_t\">Back</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"userp_pos\">3 of 4</div>\r\n          <h2 class=\"tit2\">WELCOME! TELL US A<br>LITTLE BIT ABOUT YOU</h2>\r\n          <p>(This info will help us curate content just for you)</p>\r\n        </div>\r\n          <% \r\n            cont2 = 0\r\n            thirdis = null\r\n            it.global.acf.options_0.forEach(function(p,key){ %>\r\n          <% p.options_1.forEach(function(w,keya){ %>\r\n            <div class=\"userp_form_ops <% if(secondis==cont2){ %>activeOp<% } %>\" data-se=\"<%~ secondis %>\" data-op=\"<%~ cont2 %>\" data-text=\"<%~ p.title %> <%~ w.title %>\">\r\n              <% w.options_2.forEach(function(z,keyb){ %>\r\n              <div class=\"rad mouseHover <% if(it.global.user.acf.option_2 == z.text){ thirdis = 1 %> act <% } %>\" data-value=\"<%~ z.text %>\" data-key0=\"<%~ key %>\" data-key1=\"<%~ keya %>\" data-key2=\"<%~ keyb %>\">\r\n                <div class=\"rad_cont\">\r\n                  <div class=\"rad_s\">\r\n                    <div class=\"rad_i\"></div>\r\n                  </div>\r\n                  <div class=\"rad_t\"><%~ z.text %></div>\r\n                </div>\r\n              </div>\r\n              <% \r\n                }) %>\r\n            </div>\r\n            <% \r\n              cont2++\r\n              }) %>\r\n          <% }) %>\r\n      </article>\r\n\r\n      <article class=\"userp_form_3\">\r\n        <div class=\"userp_form_titlelast\">\r\n          <div class=\"userp_back\">\r\n            <div class=\"btnarrow btnBack mouseHover\">\r\n              <div class=\"btnarrow_n\"></div>\r\n              <div class=\"btnarrow_t\">Back</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"userp_pos\">4 of 4</div>\r\n          <h2 class=\"tit2\">CHOOSE THE TOPICS AND CONTENT<br>THAT RESONATE WITH YOU.</h2>\r\n          <p>DON’T WORRY, YOU CAN ALWAYS CHANGE IT LATER :)</p>\r\n        </div>\r\n            <div class=\"userp_form_ops activeOp\">\r\n              <% \r\n                \r\n                fourdis = null\r\n                it.data.forEach(function(t,keyb){ %>\r\n              <div class=\"check mouseHover <% if(t.selected==true){ fourdis=1 %> act <% } %>\" data-value=\"<%~ t.title %>\" data-id=\"<%~ t.id %>\">\r\n                <div class=\"check_cont\">\r\n                  <div class=\"check_s\">\r\n                    <div class=\"check_i\"></div>\r\n                  </div>\r\n                  <div class=\"check_t\"><%~ t.title %></div>\r\n                </div>\r\n              </div>\r\n              <% \r\n                }) %>\r\n            </div>\r\n      </article>\r\n      <article class=\"userp_form_4\">\r\n        <div class=\"userp_form_titlelast\">\r\n\r\n        <h2 class=\"tit1\">Welcome <%~ it.global.user.acf.firstname %>!</h2>\r\n        <p><%~ it.global.acf.userwelcome %></p>\r\n        <div class=\"btn btnToStart mouseHover\"><div class=\"btn_t\">Edit my preferences</div></div>\r\n        </div>\r\n      </article>\r\n    </div>\r\n  </section>\r\n  <section class=\"datap\">\r\n    <div class=\"datap_title\">\r\n      <h2 class=\"tit2\">UPDATE AND MANAGE YOUR<br>ACCOUNT SETTINGS</h2>\r\n    </div>\r\n    <article>\r\n      <div class=\"edits\">\r\n        <div class=\"field\">\r\n          <label class=\"field_lbl\">First Name</label>\r\n          <input class=\"field_npt firstEdit\" <% if(it.global.user.acf.firstname ){ %>value=\"<%~ it.global.user.acf.firstname  %>\"<%} %>>\r\n          <div class=\"field_err\">Empty field</div>\r\n        </div>\r\n        <div class=\"field\">\r\n          <label class=\"field_lbl\">Last Name</label>\r\n          <input class=\"field_npt lastEdit\" <% if(it.global.user.acf.lastname ){ %>value=\"<%~ it.global.user.acf.lastname  %>\"<%} %>>\r\n          <div class=\"field_err\">Empty field</div>\r\n        </div>\r\n        <div class=\"selc\">\r\n          <select class=\"pronounEdit\">\r\n            <option hidden=\"\"  value=\"\">Pronouns</option>\r\n            <% it.global.acf.pronouns.forEach(function(t,keyb){ %>\r\n                      \r\n            <option <% if(t.title==it.global.user.acf.pronoun){ %>selected<% } %> value=\"<%~ t.title %>\"><%~ t.title %></option>\r\n            <% }) %>\r\n          </select>\r\n        </div>\r\n        <div class=\"field field-email\">\r\n          <label class=\"field_lbl\">Email</label>\r\n          <input class=\"field_npt emailEdit\" <% if(it.global.user.user.data.user_email ){ %>value=\"<%~ it.global.user.user.data.user_email  %>\"<%} %>>\r\n          <div class=\"field_err\">Wrong Format : name@example.com</div>\r\n        </div>\r\n        <div class=\"btnEdit btn mouseHover\" style=\"--main:#E5855E;--base:#FEF9F3\">\r\n          <div class=\"btn_t\">SAVE INFO</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"passwords\">\r\n        <h3 class=\"passwords_title\"><span>Edit passwords</span></h3>\r\n        <div class=\"field\">\r\n          <label class=\"field_lbl\">Password</label>\r\n          <input class=\"field_npt p1Pass\" type=\"password\">\r\n          <div class=\"field_err\">Empty field</div>\r\n        </div>\r\n        <div class=\"field\">\r\n          <label class=\"field_lbl\">Confirm password</label>\r\n          <input class=\"field_npt p2Pass\" type=\"password\">\r\n          <div class=\"field_err\">Empty field</div>\r\n        </div>\r\n        <div class=\"btnPass btn mouseHover\" style=\"--main:#E5855E;--base:#FEF9F3\">\r\n          <div class=\"btn_t\">CHANGE</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"connect\">\r\n        <h3 class=\"connect_title\"></h3>\r\n        <div class=\"btn btnLIConnect mouseHover\" style=\"--main:#0E76A8;--base:#FEF9F3\">\r\n          <div class=\"btn_t\">CONNECT <span class=\"btnLIConnect--icons\"><%~ it.global.icons.in %> <%~ it.global.icons.in %></span></div>\r\n        </div>\r\n      </div>\r\n      <div class=\"delete\">\r\n        <div class=\"btnDelete btn mouseHover\" style=\"--main:#FF244C;--base:#FEF9F3;margin-top:1.8rem\">\r\n          <div class=\"btn_t\">DELETE ACCOUNT</div>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  </section>\r\n  <section class=\"jobsp\">\r\n    <div class=\"jobsp_title\">\r\n      <h2 class=\"tit2\">CHECK OUT THE JOBS<br>YOU’VE APPLIED FOR</h2>\r\n    </div>\r\n    <article>\r\n    <%~ it.jobs %>\r\n    </article>\r\n  </section>\r\n</main>\r\n\r\n<%~ include(\"li_dialog\")%>\r\n\r\n<div class=\"delAcctModal\">\r\n  <div class=\"delAcctModal__bg\"></div>\r\n  <div class=\"delAcctModal__body\">\r\n    <div class=\"delAcctModal__title\">DELETE ACCOUNT</div>\r\n    <div class=\"delAcctModal__content\">\r\n      <p>Confirm that you wish to delete this account.</p>\r\n\r\n      <div class=\"field\">\r\n        <label class=\"field_lbl\">Password</label>\r\n        <input class=\"field_npt pass_conf\" type=\"password\">\r\n        <div class=\"field_err\">Empty field</div>\r\n      </div>\r\n\r\n      <div class=\"btnDeleteConf btn mouseHover\" style=\"--main:#FF244C;--base:#FEF9F3;\">\r\n        <div class=\"btn_t\">CONFIRM AND DELETE</div>\r\n      </div>\r\n    </div>\r\n    <p class=\"delAcctModal__message\">Test message</p>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"disLIModal\">\r\n  <div class=\"disLIModal__bg\"></div>\r\n  <div class=\"disLIModal__body\">\r\n    <div class=\"disLIModal__title\">DISCONNECT LINKEDIN</div>\r\n    <div class=\"disLIModal__content\">\r\n      <p>Confirm that you wish to disconnect your LinkedIn.</p>\r\n\r\n      <div class=\"field\">\r\n        <label class=\"field_lbl\">Password</label>\r\n        <input class=\"field_npt pass_conf\" type=\"password\">\r\n        <div class=\"field_err\">Empty field</div>\r\n      </div>\r\n\r\n      <div class=\"btnDisConf btn mouseHover\" style=\"--main:#FF244C;--base:#FEF9F3;\">\r\n        <div class=\"btn_t\">CONFIRM DISCONNECT</div>\r\n      </div>\r\n    </div>\r\n    <p class=\"disLIModal__message\">Test message</p>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"usercontrols\">\r\n  <div class=\"usercontrols_top\">\r\n    <div class=\"simp mouseHover\" style=\"--main:#DF80AC\"><span class=\"xs\">Content</span><span>Preferred content</span></div>\r\n    <div class=\"simp mouseHover\" style=\"--main:#E5855E\"><span class=\"xs\">settings</span><span>Profile settings</span></div>\r\n    <div class=\"simp mouseHover\" style=\"--main:#DF80AC\"><span>Jobs</span></div>\r\n    <div class=\"simp mouseHover\"><span>Log out</span></div>\r\n  </div>\r\n  <div class=\"usercontrols_errors\">\r\n    <div class=\"error\">Email already in use</div>\r\n    <div class=\"error succ\"><div class=\"iconcheck\"></div>Info updated</div>\r\n    <div class=\"error\">Passwords dont match</div>\r\n    <div class=\"error succ\"><div class=\"iconcheck\"></div>Password updated</div>\r\n  </div>\r\n  \r\n  <div class=\"usercontrols_bottom\">\r\n    <div class=\"pg\">\r\n      <div class=\"mouseHover pgel act\">\r\n        <div class=\"pgel_t\">1</div>\r\n      </div>\r\n      <div class=\"mouseHover pgel <% if(firstis==null){%> dis  <%}%>\" data-color=\"pink\">\r\n        <div class=\"pgel_t\">2</div>\r\n      </div>\r\n      <div class=\"mouseHover pgel <% if(secondis==null){%> dis  <%}%>\" data-color=\"pink\">\r\n        <div class=\"pgel_t\">3</div>\r\n      </div>\r\n      <div class=\"mouseHover pgel <% if(thirdis==null){%> dis  <%}%>\" data-color=\"pink\">\r\n        <div class=\"pgel_t\">4</div>\r\n      </div>\r\n      <div class=\"mouseHover pgel\" style=\"display:none!important\">\r\n        <div class=\"pgel_t\">5</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"btnNext mouseHover btn  <% if(secondis==null){%> inact  <%}%>\" style=\"--main:#DF80AC;--base:#FEF9F3\">\r\n      <div class=\"btn_t\">Continue</div>\r\n      <div class=\"btn_l\">Save changes</div>\r\n    </div>\r\n  </div>\r\n</div>";

},{}],"jtZWX":[function(require,module,exports) {
module.exports = "<main class=\"loginp\">\n    <section class=\"m-login\">\n      <div class=\"left\">\n          <div class=\"bgop\" style=\"background-color:#DF80AC\"></div>\n          <div class=\"bgop\" style=\"background-color:#E5855E\"></div>\n          <div class=\"bgop\" style=\"background-color:#895434\"></div>\n          <div class=\"bgop\" style=\"background-color:#DF80AC\"></div>\n        <div class=\"left_hold\">\n          <div class=\"border\"></div>\n          <div class=\"border\"></div>\n          <div class=\"border\"></div>\n          <div class=\"border\"></div>\n          <div class=\"left_el\"><img src=\"<%~ it.global.acf.template %>/public/images/login/1.jpg\"></div>\n          <div class=\"left_el\"><img src=\"<%~ it.global.acf.template %>/public/images/login/2.jpg\"></div>\n          <div class=\"left_el\"><img src=\"<%~ it.global.acf.template %>/public/images/login/3.jpg\"></div>\n          <div class=\"left_el\"><img src=\"<%~ it.global.acf.template %>/public/images/login/3.jpg\"></div>\n        </div>\n      </div>\n      <div class=\"right\">\n        <div class=\"right_top\">\n          <div class=\"tabselector simp mouseHover\" style=\"--main:#DF80AC<% if(it.recover==true){%>;display:none;<%}%>\"><span>Sign up</span></div>\n          <div class=\"tabselector simp mouseHover\" style=\"--main:#E5855E<% if(it.recover==true){%>;display:none;<%}%>\"><span>Log in</span></div>\n          <div class=\"tabselector simp mouseHover\" style=\"--main:#DF80AC;display:none;\"><span>Reset pass</span></div>\n        </div>\n        <div class=\"right_tabs\">\n          <div class=\"right_tabs_el signuptab\">\n            <div class=\"error\">\n              <p>Email already exists</p>\n            </div>\n            <div class=\"error error-3\">\n              <p>Custom message</p>\n            </div>\n            <h2 class=\"tit1\">Sign up</h2>\n            <div class=\"signuptab_inputs\">\n              <div class=\"field\"><label class=\"field_lbl\">First Name</label><input class=\"field_npt firstReg\">\n                <div class=\"field_err\">Empty field</div>\n              </div>\n              <div class=\"field6\">\n                <div class=\"field\"><label class=\"field_lbl\">Last Name</label><input\n                    class=\"field_npt lastReg\">\n                  <div class=\"field_err\">Empty field</div>\n                </div>\n                <div class=\"selc\"><select class=\"pronounReg\">\n                    <option hidden=\"\" selected=\"\" value=\"\">Pronouns</option>\n                    <% it.global.acf.pronouns.forEach(function(t,k){ %>\n                      \n                    <option  value=\"<%~ t.title %>\"><%~ t.title %></option>\n                    <% }) %>\n                  </select></div>\n              </div>\n              <div class=\"field field-email\"><label class=\"field_lbl\">Your Email*</label><input\n                  class=\"field_npt emailReg\">\n                <div class=\"field_err\">Wrong Format : name@example.com</div>\n              </div>\n              <div class=\"signuptab_text\">\n                <h3 class=\"tit4\">A password will be sent to your email</h3>\n                <div class=\"txt-bureau\">\n                  <p>Your personal data will be used to support your experience throughout this website, to manage\n                    access to your account, and for other purposes described in our <a>PRIVACY POLICY</a></p>\n                </div>\n              </div>\n              <div class=\"login_btn_cont\">\n                <div class=\"btn btnReg mouseHover\" style=\"--main:#DF80AC;--base:#FEF9F3\">\n                  <div class=\"btn_t\">Register</div>\n                </div>\n                <%if(it.global.acf.linkedin_api.client_id || it.global.acf.linkedin_api.client_secret){%>\n                  <div class=\"btn btnLIReg mouseHover\" style=\"--main:#0E76A8;--base:#FEF9F3\">\n                    <div class=\"btn_t\">Sign up with <span class=\"btnLIReg--icons\"><%~ it.global.icons.in %> <%~ it.global.icons.in %></span></div>\n                  </div>\n                <%}%>\n              </div>\n            </div>\n          </div>\n          <div class=\"right_tabs_el logintab\">\n            <div class=\"error error-1\">\n              <p>Email is wrong</p>\n            </div>\n            <div class=\"error error-2\">\n              <p>Password is wrong</p>\n            </div>\n            <div class=\"error error-3\">\n              <p>Custom message</p>\n            </div>\n            <div class=\"logintab_hold\">\n              <h2 class=\"tit1\">Log in</h2>\n              <div class=\"logintab_inputs\">\n                <div class=\"field field-email\"><label class=\"field_lbl\">Email</label><input\n                    class=\"field_npt logEm mouseHover\">\n                  <div class=\"field_err\">Wrong Format : name@example.com</div>\n                </div>\n                <div class=\"field field-pass\"><label class=\"field_lbl\">password*</label><input\n                    class=\"field_npt logPass mouseHover\" type=\"password\">\n                  <div class=\"field_err\">Empty field</div>\n                </div>\n                <div class=\"chk\"><input class=\"mouseHover chk_npt logRem\" type=\"checkbox\">\n                  <div class=\"chk_s\">\n                    <div class=\"chk_i\"></div>\n                  </div><label class=\"chk_lbl\">Remember me</label>\n                </div>\n                <div class=\"login_btn_cont\">\n                  <div class=\"btn btnLogin mouseHover\" style=\"--main:#E5855E;--base:#FEF9F3\">\n                    <div class=\"btn_t\">Log in</div>\n                  </div>\n                  <%if(it.global.acf.linkedin_api.client_id || it.global.acf.linkedin_api.client_secret){%>\n                    <div class=\"btn btnLILogin mouseHover\" style=\"--main:#0E76A8;--base:#FEF9F3\">\n                      <div class=\"btn_t\">Log in with <span class=\"btnLILogin--icons\"><%~ it.global.icons.in %> <%~ it.global.icons.in %></span></div>\n                    </div>\n                  <%}%>\n                </div>\n                <div class=\"tabselector forget mouseHover\">Forgot your password?</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"right_tabs_el resettab\">\n            <div class=\"error\">\n              <p>Passwords dont match</p>\n            </div>\n            <div class=\"error error-1 succ\">\n              <div class=\"iconcheck\"></div>\n              <p>Success! Your password has been changed</p>\n            </div>\n            <h2 class=\"tit1\">Reset<br>password</h2>\n            <div class=\"resettab_inputs\">\n              <div class=\"field\"><label class=\"field_lbl\">Password</label><input\n                  class=\"field_npt mouseHover recPass1\" type=\"password\">\n                <div class=\"field_err\">Empty field</div>\n              </div>\n              <div class=\"field\"><label class=\"field_lbl\">Confirm password</label>\n              <input type=\"password\" class=\"field_npt mouseHover recPass2\">\n                <div class=\"field_err\">Empty field</div>\n              </div>\n              <div class=\"btn btnRecpass mouseHover\">\n                <div class=\"btn_t\">Change Password</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"right_tabs_el forgettab\">\n            <div class=\"error\">\n              <p>Email doesnt exists</p>\n            </div>\n            <div class=\"error error-1 succ\">\n              <div class=\"iconcheck\"></div>\n              <p>Success! You will recieve an email confirmation</p>\n            </div>\n            <h2 class=\"tit1\">Reset<br>password</h2>\n            <div class=\"forgettab_inputs\">\n              <div class=\"field field-email\"><label class=\"field_lbl\">Email</label><input\n                  class=\"field_npt mouseHover emFor\">\n                <div class=\"field_err\">Wrong Format : name@example.com</div>\n              </div>\n              <div class=\"btn btnForget mouseHover\" style=\"--main:#DF80AC;--base:#FEF9F3\">\n                <div class=\"btn_t\">Reset Password</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </main>";

},{}],"hIT3l":[function(require,module,exports) {
module.exports = "\n<% it.posts.forEach(function(p,key){ %>\n\n  <a class=\"joblist mouseHover\" href=\"<%~ p.link %>\" data-type=\"job\">\n    <div class=\"joblist_hold\">\n      <div class=\"joblist_info\">\n        <div class=\"joblist_info_top\">\n          <h2 class=\"tit2\"><%~ p.title %></h2>\n          <h3 class=\"tit3\"><%~ p.client %></h3>\n          <div class=\"locate\">\n            <%~ it.global.icons.marker %>\n            <div class=\"locate_t\"><%~ p.location %></div>\n          </div>\n          <div class=\"description\">\n            <p><%~ p.description %></p>\n          </div>\n          <div class=\"date\">\n            <div class=\"date_t\"><%~ p.date %></div>\n          </div>\n        </div>\n      </div>\n      <div class=\"joblist_button\"><img src=\"<%~ p.logo %>\">\n        <div class=\"btns\">\n          <div class=\"btns_t\">Read more</div>\n        </div>\n      </div>\n    </div>\n  </a>\n<% }) %>";

},{}],"9TJdn":[function(require,module,exports) {
module.exports = "<div class=\"li_dialog\">\n  <div class=\"li_dialog__bg\"></div>\n  <div class=\"li_dialog__body\">\n    <div class=\"li_dialog__title\">DELETE ACCOUNT</div>\n    <div class=\"li_dialog__content\">\n      <p>Confirm that you wish to delete this account.</p>\n\n      <div class=\"li_dialog__btn btn mouseHover\" style=\"--main:#E5855E;--base:#FEF9F3\">\n        <div class=\"btn_t\">CLOSE</div>\n      </div>\n    </div>\n    <p class=\"li_dialog__message\">Test message</p>\n  </div>\n</div>\n";

},{}],"1Ektz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
//COMPS
var _eta = require("eta");
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        var html = _eta.render((0, _templateEtaDefault.default), {
            global: this.main,
            footer: this.footer
        });
        // //  console.log(html)
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)")
        };
        // this.DOM.watchers = this.DOM.el.querySelectorAll('.iO')
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
    // await this.loadImages()
    // await this.createAnimations()
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            // //  console.log(this.anims[pos])
                            this.anims[pos].stick.active = 0;
                            this.movestick = null;
                        } else if (id == "v") clearInterval(this.clockInt);
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "e") {
                            this.anims[pos].classel.start();
                            this.slidetext = this.anims[pos];
                        } else if (id == "v") this.clockStart(this.anims[pos].el.parentNode.querySelector(".time"));
                        else if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.movestick = this.anims[pos];
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) super.smoothScroll();
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        await this.timeout(1);
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        return super.hide();
    }
};

},{"../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./template.eta":"8WsYz","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"8WsYz":[function(require,module,exports) {
module.exports = "<main class=\"errorpage error404\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/404.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h3 class=\"tit4\">404 ERROR</h3>\n<h2 class=\"tit1\">OOPS!WE CAN’T FIND THIS PAGE</h2>\n<a class=\"btn mouseHover\" href=\"<%~ it.global.acf.home %>\"><div class=\"btn_t\">Back to LC</div></a>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"52vPY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
var _swiper = require("swiper");
var _swiperDefault = parcelHelpers.interopDefault(_swiper);
var _notloggedEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/notlogged.eta");
var _notloggedEtaDefault = parcelHelpers.interopDefault(_notloggedEta);
var _noaccessEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/noaccess.eta");
var _noaccessEtaDefault = parcelHelpers.interopDefault(_noaccessEta);
var _eta = require("eta");
(0, _swiperDefault.default).use([
    (0, _swiper.Navigation)
]);
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        var html = "";
        // //  console.log(this.main)
        const response = await fetch(this.main.acf.base + "/wp-json/wp/v2/pages/" + content.dataset.id + "?acf_format=standard");
        const data = await response.json();
        // //  console.log(data)
        if (this?.main?.user) {
            if (!this?.main?.user?.acf?.is_content_hub_user) {
                html = _eta.render((0, _noaccessEtaDefault.default), {
                    global: this.main,
                    footer: this.footer
                });
                document.querySelector("#content").innerHTML += html;
                this.DOM = {
                    el: document.querySelector("main:not(.old)")
                };
                return;
            }
        } else {
            html = _eta.render((0, _notloggedEtaDefault.default), {
                global: this.main,
                footer: this.footer
            });
            document.querySelector("#content").innerHTML += html;
            this.DOM = {
                el: document.querySelector("main:not(.old)")
            };
            return;
        }
        html = _eta.render((0, _templateEtaDefault.default), {
            global: this.main,
            data: data,
            footer: this.footer
        });
        // //  console.log(html)
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)"),
            btnmore: document.querySelector(".ch-home_intro .btnmore")
        };
        const btnmore = this.DOM.btnmore;
        if (btnmore && btnmore?.href?.includes("#purpose")) {
            const purpose = document.querySelector(".ch-home_purpose");
            const navmenu = document.querySelector(".nav_box");
            btnmore.addEventListener("click", (e)=>{
                e.preventDefault();
                let scrollPos = purpose.offsetTop - navmenu.offsetHeight;
                scrollPos = scrollPos >= 0 ? scrollPos : 0;
                const slowScroll = setInterval(()=>{
                    this.scroll.target += 75;
                    if (this.scroll.target > scrollPos) {
                        this.scroll.target = scrollPos;
                        clearInterval(slowScroll);
                    }
                }, 10);
            });
        }
        this.swiper = new (0, _swiperDefault.default)(".swiper", {
            slidesPerView: 1,
            spaceBetween: 25,
            // autoHeight: true,
            navigation: {
                nextEl: ".swiper-button-next",
                prevEl: ".swiper-button-prev"
            }
        });
        this.indexlist = 0;
        this.DOM.listimg = this.DOM.el.querySelectorAll(".ch-homeposts .image");
        this.DOM.listel = this.DOM.el.querySelectorAll(".ch-homeposts .el");
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
        this.addEvents();
        await this.loadImages();
        await this.createAnimations();
    }
    changeHeader() {
        const el = document.querySelector(".ch-home_intro");
        const rect = el?.getBoundingClientRect();
        const viewportWidth = window.innerWidth || document.documentElement.clientWidth;
        const viewportHeight = window.innerHeight || document.documentElement.clientHeight;
        const navmenu = document.querySelector(".nav_box");
        const navlogo = document.querySelector(".nav_logo");
        if (rect?.bottom < 500 || rect?.top >= viewportHeight) navmenu.classList.add("nav_box--ch");
        else {
            navmenu.classList.remove("nav_box--ch");
            navlogo.href = "/";
        }
    }
    addEvents() {
        this.regChildScrollWithBar(document.querySelector(".ch-home_purpose"));
        this.regChildScroll(document.querySelector(".ch-home_actions"));
        this.regChildScrollWithBar(document.querySelector(".ch-home_media"));
        this.regChildScroll(document.querySelector(".ch-home_resources"));
        this.regChildScrollWithBar(document.querySelector(".ch-home_latest"));
    }
    onScroll(t) {
        this.scroll.target = document.body.scrollTop;
        this.mobileScroll();
        if (document.body.scrollTop == 0) document.documentElement.classList.remove("scrolled");
        else document.documentElement.classList.add("scrolled");
    }
    regChildScrollWithBar(elem) {
        if (!elem) return;
        const list = elem.querySelector("#ch-list");
        const bar = elem.querySelector("#ch-bar");
        let scrollTimer;
        list?.addEventListener("scroll", ()=>{
            if (scrollTimer) clearTimeout(scrollTimer);
            this.childscrolling = true;
            const winScroll = list.scrollTop || list.scrollTop;
            const height = list.scrollHeight - list.clientHeight;
            const scrolled = winScroll / height * 100;
            bar.style.height = scrolled + "%";
            scrollTimer = setTimeout(()=>this.childscrolling = false, 150);
        });
    }
    regChildScroll(elem) {
        if (!elem) return;
        const postlist = elem.querySelector(".ch-homeposts_main");
        let scrollTimer;
        postlist?.addEventListener("scroll", ()=>{
            if (scrollTimer) clearTimeout(scrollTimer);
            this.childscrolling = true;
            scrollTimer = setTimeout(()=>this.childscrolling = false, 150);
        });
    }
    resizeLimit() {
        if (!this.scroll) return false;
        if (!this.avoidScroll) {
            for (let anim of this.anims){
                if (anim.stick != null) {
                    if (anim.stick.parent.classList.contains("ch-homeposts_main")) anim.stick.limit = anim.stick.parent.clientHeight - 100;
                }
            }
            this.size = this.DOM.el.clientHeight - window.innerHeight;
            this.scroll.limit = this.size;
        // this.content.style.height = this.scroll.limit+'px'
        }
    }
    slideList(index) {
        if (this.indexlist != index) {
            if (this.indexlist != -1) {
                this.DOM.listimg[this.indexlist].classList.remove("act");
                this.DOM.listel[this.indexlist].classList.remove("act");
            }
            this.indexlist = index;
            if (index != -1) {
                // //  console.log(this.indexlist)
                this.DOM.listimg[this.indexlist].classList.add("act");
                this.DOM.listel[this.indexlist].classList.add("act");
            }
        }
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            this.anims[pos].stick.active = 0;
                            let index = this.sticks.indexOf(this.anims[pos]);
                            if (index > -1) this.sticks.splice(index, 1);
                        } else if (id == "v") ;
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "e") {
                            this.anims[pos].classel.start();
                            this.slidetext = this.anims[pos];
                        } else if (id == "v") ;
                        else if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.sticks.push(this.anims[pos]);
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) {
            this.optionsob = {
                root: document.body,
                threshold: this.buildThresholdList(500)
            };
            this.optionsobo = {
                root: document.body,
                threshold: [
                    0,
                    1
                ]
            };
        } else {
            this.optionsob = {
                root: null,
                threshold: this.buildThresholdList(500)
            };
            this.optionso = {
                root: null,
                threshold: [
                    1
                ]
            };
        }
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
        this.callbacko = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (this.isVisible == 0) return false;
                // //  console.log(entry.isIntersecting+' '+entry.target.dataset.el)
                if (entry.boundingClientRect.y > 100) this.slideList(entry.target.dataset.el);
            });
        };
        this.observero = new IntersectionObserver(this.callbacko, this.optionso);
        if (this.DOM.el.querySelectorAll(".cOel")) this.DOM.el.querySelectorAll(".cOel").forEach((el)=>{
            this.observero.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-slidetime")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1 && !this.childscrolling) {
            super.smoothScroll();
            this.changeHeader();
        } else super.smoothScroll(true);
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        await this.timeout(1);
        this.DOM.el.classList.add("ch-home-active");
        (0, _gsap.gsap).to(".ch-home", {
            opacity: 1,
            ease: (0, _gsap.Power2).easeInOut,
            duration: .6
        });
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        return super.hide();
    }
};

},{"../../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./template.eta":"f1TzN","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","swiper":"3ktAm","bundle-text:/src/views👁️👁️👁️/404/notlogged.eta":"292Ua","bundle-text:/src/views👁️👁️👁️/404/noaccess.eta":"dBKwP","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"f1TzN":[function(require,module,exports) {
module.exports = "<main class=\"ch-home\">\n      <% let item = it.data.acf.ch_intro; %>\n      <section class=\"ch-home_intro\">\n        <div class=\"iO iO-slidetime\"></div>\n        <div class=\"left\">\n          <div class=\"left_el\">\n            <div class=\"left_el_hold\">\n              <% if(item){ %>\n                <img src=\"<%~ item.image %>\"/>\n              <% } %>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"right\">\n          <div class=\"right_hold\">\n            <% if(item){ %>\n              <h2 class=\"tit1\"><%~ item.heading %></h2>\n              <h3 class=\"tit4\">\n                <div class=\"line\">\n                  <div class=\"word\"><%~ item.subheading %></div>\n                </div>\n              </h3>\n\n              <a class=\"btnmore mouseHover\" href=\"<%~ item.link ? item.link['url'] : '#' %>\">\n                <div class=\"btnmore_t\"><%~ item.link ? item.link['title'] : '' %></div>\n              </a>\n            <% } %>\n          </div>\n        </div>\n\n      </section>\n\n      <% item = it.data.acf.ch_purpose; %>\n      <section class=\"ch-home_purpose\" id=\"purpose\">\n        <div class=\"iO iO-slidetime\"></div>\n        <div class=\"left\">\n          <div class=\"left_hold\">\n            <% if(item){ %>\n              <h2 class=\"tit1\"><%~ item.heading %></h2>\n              <h3 class=\"tit4\">\n                <div class=\"line\">\n                  <div class=\"word\"><%~ item.subheading %></div>\n                </div>\n              </h3>\n\n              <a class=\"btnmore mouseHover\" href=\"<%~ item.link ? item.link['url'] : '#' %>\">\n                <div class=\"btnmore_t\"><%~ item.link ? item.link['title'] : '' %></div>\n              </a>\n            <% } %>\n          </div>\n        </div>\n\n        <div class=\"right\">\n          <div class=\"right_el\">\n            <div class=\"right_el_hold\">\n              <div class=\"ch_list_prog-cont\">\n                <div class=\"ch_list_prog-bar\" id=\"ch-bar\"></div>\n              </div>\n              <div class=\"ch_list\" id=\"ch-list\">\n                <% if(item.list){ %>\n                  <% item.list.forEach((elem) => { %>\n                    <a class=\"ch_item mouseHover\" href=\"<%~ elem.link ?? '#' %>\">\n                      <h4 class=\"tit4\"><%~ elem.subheading %></h4>\n                      <h2 class=\"tit2\"><%~ elem.heading %></h2>\n                      <span class=\"desc\"><%~ elem.description %></span>\n                    </a>\n                  <% }); %>\n                <% } %>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <% item = it.data.acf.ch_ceo_action; %>\n      <section class=\"ch-home_ceo_action\">\n        <div class=\"iO iO-slidetime\"></div>\n        <div class=\"left\">\n          <div class=\"left_hold\">\n            <% if(item){ %>\n              <h2 class=\"tit1\"><%~ item.heading %></h2>\n              <h3 class=\"tit4\">\n                <div class=\"line\">\n                  <div class=\"word\"><%~ item.subheading %></div>\n                </div>\n              </h3>\n\n              <a class=\"btnmore mouseHover\" href=\"<%~ item.link ? item.link['url'] : '#' %>\">\n                <div class=\"btnmore_t\"><%~ item.link ? item.link['title'] : '' %></div>\n              </a>\n            <% } %>\n          </div>\n        </div>\n\n        <div class=\"right\">\n          <div class=\"right_el\">\n            <div class=\"right_el_hold\">\n              <div class=\"swiper\">\n                <div class=\"swiper-wrapper\">\n                  <% if(item.list){ %>\n                    <% item.list.forEach((elem) => { %>\n                      <div class=\"swiper-slide\">\n                        <img src=\"<%~ elem.image %>\"/>\n                        <h2 class=\"tit2\"><%~ elem.heading %></h2>\n                        <h4 class=\"tit4\"><%~ elem.subheading %></h4>\n                      </div>\n                    <% }); %>\n                  <% } %>\n                </div>\n\n                <div class=\"swiper-button-prev mouseHover\"></div>\n                <div class=\"swiper-button-next mouseHover\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <% item = it.data.acf.ch_action; %>\n      <section class=\"ch-home_actions\">\n        <h2 class=\"tit1\"><%~ item.heading %></h2>\n\n        <div class=\"ch-homeposts_main\">\n          <% item.list.forEach(function(w,key){ %>\n            <a class=\"el mouseFollow\" data-image=\"<%~ w.image_a %>\" data-type=\"article\" href=\"<%~ w.permalink %>\">\n              <h3 class=\"tit2\"><span><%~ w.post_title %></span></h3>\n            </a>\n          <% }) %>\n        </div>\n      </section>\n\n      <% item = it.data.acf.ch_media; %>\n      <section class=\"ch-home_media\">\n        <div class=\"iO iO-slidetime\"></div>\n        <div class=\"left\">\n          <div class=\"left_hold\">\n            <% if(item){ %>\n              <h2 class=\"tit1\"><%~ item.heading %></h2>\n              <h3 class=\"tit4\">\n                <div class=\"line\">\n                  <div class=\"word\"><%~ item.subheading %></div>\n                </div>\n              </h3>\n\n              <a class=\"btnmore mouseHover\" href=\"<%~ item.link ? item.link['url'] : '#' %>\">\n                <div class=\"btnmore_t\"><%~ item.link ? item.link['title'] : '' %></div>\n              </a>\n            <% } %>\n          </div>\n          <div class=\"ch_list_prog-cont\">\n            <div class=\"ch_list_prog-bar\" id=\"ch-bar\"></div>\n          </div>\n        </div>\n\n        <div class=\"right\">\n          <div class=\"right_el\">\n            <div class=\"right_el_hold\">\n              <div class=\"ch_list\" id=\"ch-list\">\n                <% if(item.list){ %>\n                  <% item.list.forEach((elem) => { %>\n                    <div class=\"ch_item\">\n                      <h2 class=\"tit2\"><%~ elem.post_title %></h2>\n                      <h4 class=\"tit4\"><%~ elem.description_a || '' %></h4>\n\n                      <img src=\"<%~ elem.image_a %>\"/>\n                      <a class=\"btnmore mouseHover\" href=\"<%~ elem.permalink %>\">\n                        <div class=\"btnmore_t\">Read More</div>\n                      </a>\n                    </div>\n                  <% }); %>\n                <% } %>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <% item = it.data.acf.ch_resources; %>\n      <section class=\"ch-home_resources\">\n        <h2 class=\"tit1\"><%~ item.heading %></h2>\n\n        <div class=\"ch-homeposts_main\">\n          <% item.list.forEach(function(w,key){ %>\n            <a class=\"el mouseFollow\" data-image=\"<%~ w.image_a %>\" data-type=\"article\" href=\"<%~ w.permalink %>\">\n              <h3 class=\"tit2\"><span><%~ w.post_title %></span></h3>\n            </a>\n          <% }) %>\n        </div>\n      </section>\n\n      <% item = it.data.acf.ch_latest; %>\n      <section class=\"ch-home_latest\">\n        <div class=\"iO iO-slidetime\"></div>\n        <div class=\"left\">\n          <div class=\"left_hold\">\n            <% if(item){ %>\n              <h2 class=\"tit1\"><%~ item.heading %></h2>\n              <h3 class=\"tit4\">\n                <div class=\"line\">\n                  <div class=\"word\"><%~ item.subheading %></div>\n                </div>\n              </h3>\n\n              <a class=\"btnmore mouseHover\" href=\"<%~ item.link ? item.link['url'] : '#' %>\">\n                <div class=\"btnmore_t\"><%~ item.link ? item.link['title'] : '' %></div>\n              </a>\n            <% } %>\n          </div>\n        </div>\n\n        <div class=\"right\">\n          <div class=\"right_el\">\n            <div class=\"right_el_hold\">\n              <div class=\"ch_list_prog-cont\">\n                <div class=\"ch_list_prog-bar\" id=\"ch-bar\"></div>\n              </div>\n              <div class=\"ch_list\" id=\"ch-list\">\n                <% if(item.list){ %>\n                  <% item.list.forEach((elem) => { %>\n                    <a class=\"ch_item mouseHover\" href=\"<%~ elem.link ?? '#' %>\">\n                      <h4 class=\"tit4\"><%~ elem.subheading %></h4>\n                      <h2 class=\"tit2\"><%~ elem.heading %></h2>\n                      <span class=\"desc\"><%~ elem.description %></span>\n                    </a>\n                  <% }); %>\n                <% } %>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n\n      <section class=\"m-cta\" style=\"--main:#FEF9F3\">\n        <div class=\"c-vw\">\n          <div class=\"hold\">\n            <% const contact = it.global.acf.contact_text; %>\n            <h2 class=\"tit1\"><%~ contact.title %></h2>\n            <h3 class=\"tit4\"><%~ contact.text %> </h3>\n            <a class=\"btn mouseHover\" href=\"<%~ contact.link['url'] %>\">\n              <div class=\"btn_t\"><%~ contact.link['title'] %></div>\n            </a>\n          </div>\n        </div>\n      </section>\n  <%~ it.footer %>\n</main>";

},{}],"292Ua":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! SIGN UP TO ACCESS THIS CONTENT</h2>\n<h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3>\n<a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"dBKwP":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! YOU DON'T HAVE ACCESS TO THIS CONTENT</h2>\n<% /* <h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3> */ %>\n<% /* <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a> */ %>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"dzThK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _listEta = require("bundle-text:./list.eta");
var _listEtaDefault = parcelHelpers.interopDefault(_listEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
var _swiper = require("swiper");
var _swiperDefault = parcelHelpers.interopDefault(_swiper);
var _dialog = require("../../Login\uD83E\uDD78/LinkedinLogin/Dialog");
var _notloggedEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/notlogged.eta");
var _notloggedEtaDefault = parcelHelpers.interopDefault(_notloggedEta);
var _noaccessEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/noaccess.eta");
var _noaccessEtaDefault = parcelHelpers.interopDefault(_noaccessEta);
var _eta = require("eta");
(0, _swiperDefault.default).use([
    (0, _swiper.Navigation)
]);
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        var html = "";
        // //  console.log(this.main)
        const response = await fetch(this.main.acf.base + "/wp-json/wp/v2/pages/" + content.dataset.id + "?acf_format=standard");
        const data = await response.json();
        if (this?.main?.user) {
            if (!this?.main?.user?.acf?.is_content_hub_user) {
                html = _eta.render((0, _noaccessEtaDefault.default), {
                    global: this.main,
                    footer: this.footer
                });
                document.querySelector("#content").innerHTML += html;
                this.DOM = {
                    el: document.querySelector("main:not(.old)")
                };
                return;
            }
        } else {
            html = _eta.render((0, _notloggedEtaDefault.default), {
                global: this.main,
                footer: this.footer
            });
            document.querySelector("#content").innerHTML += html;
            this.DOM = {
                el: document.querySelector("main:not(.old)")
            };
            return;
        }
        html = _eta.render((0, _templateEtaDefault.default), {
            global: this.main,
            data: data,
            footer: this.footer
        });
        // //  console.log(html)
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)"),
            searchbar: document.getElementById("action-search"),
            searchbutton: document.querySelector(".ch_search-cont svg"),
            alphaFilter: document.getElementById("alpha-filter"),
            dateFilter: document.getElementById("date-filter")
        };
        this.filters = {
            sortby: "alpha"
        };
        this.search();
        this.indexlist = 0;
        this.DOM.listimg = this.DOM.el.querySelectorAll(".ch-homeposts .image");
        this.DOM.listel = this.DOM.el.querySelectorAll(".ch-homeposts .el");
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
        this.addEvents();
        await this.loadImages();
        await this.createAnimations();
    }
    changeHeader() {
        const el = document.querySelector(".ch-actions_intro");
        const rect = el?.getBoundingClientRect();
        const viewportWidth = window.innerWidth || document.documentElement.clientWidth;
        const viewportHeight = window.innerHeight || document.documentElement.clientHeight;
        const navmenu = document.querySelector(".nav_box");
        const navlogo = document.querySelector(".nav_logo");
        if (rect?.bottom < 500 || rect?.top >= viewportHeight) navmenu.classList.add("nav_box--ch");
        else {
            navmenu.classList.remove("nav_box--ch");
            navlogo.href = "/";
        }
    }
    addEvents() {
        this.regChildScroll(document.querySelector(".ch-actions_content"));
        this.DOM.searchbutton.addEventListener("click", this.search);
        this.DOM.searchbar.addEventListener("keydown", (e)=>{
            if (e.key == "Enter" || e.code == 9 || e.code == 13) this.search();
        });
        // filters
        this.DOM.alphaFilter.addEventListener("click", this.sortbyalpha);
        this.DOM.dateFilter.addEventListener("click", this.sortbydate);
    }
    sortbyalpha(e) {
        const elem = this.DOM.alphaFilter;
        this.changeSortBy(elem);
    }
    sortbydate(e) {
        const elem = this.DOM.dateFilter;
        this.changeSortBy(elem);
    }
    changeSortBy(elem) {
        document.querySelectorAll(".ch_filter--active").forEach((x)=>x.classList.remove("ch_filter--active"));
        elem.classList.add("ch_filter--active");
        this.filters.sortby = elem.dataset.sort;
        this.search();
    }
    async search() {
        const val = this.DOM.searchbar.value;
        const params = new URLSearchParams();
        const right = document.querySelector(".ch-actions_content .right");
        right.innerHTML = (0, _dialog.getLoadingWheel)();
        params.set("term", val);
        params.set("sortby", this.filters.sortby);
        const response = await fetch(`/wp-json/sdv/content-hub/v1/get-actions/?${params}`);
        let actions = await response.json();
        let html = _eta.render((0, _listEtaDefault.default), {
            actions
        });
        right.innerHTML = html;
    }
    onScroll(t) {
        if (this.childscrolling) return;
        this.scroll.target = document.body.scrollTop;
        this.mobileScroll();
        if (document.body.scrollTop == 0) document.documentElement.classList.remove("scrolled");
        else document.documentElement.classList.add("scrolled");
    }
    regChildScroll(elem) {
        if (!elem) return;
        const postlist = elem.querySelector(".right");
        let scrollTimer;
        postlist?.addEventListener("scroll", ()=>{
            if (scrollTimer) clearTimeout(scrollTimer);
            this.childscrolling = true;
            scrollTimer = setTimeout(()=>this.childscrolling = false, 150);
        });
    }
    resizeLimit() {
        if (!this.scroll) return false;
        if (!this.avoidScroll) {
            for (let anim of this.anims){
                if (anim.stick != null) {
                    if (anim.stick.parent.classList.contains("ch-homeposts_main")) anim.stick.limit = anim.stick.parent.clientHeight - 100;
                }
            }
            this.size = this.DOM.el.clientHeight - window.innerHeight;
            this.scroll.limit = this.size;
        // this.content.style.height = this.scroll.limit+'px'
        }
    }
    slideList(index) {
        if (this.indexlist != index) {
            if (this.indexlist != -1) {
                this.DOM.listimg[this.indexlist].classList.remove("act");
                this.DOM.listel[this.indexlist].classList.remove("act");
            }
            this.indexlist = index;
            if (index != -1) {
                // //  console.log(this.indexlist)
                this.DOM.listimg[this.indexlist].classList.add("act");
                this.DOM.listel[this.indexlist].classList.add("act");
            }
        }
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            this.anims[pos].stick.active = 0;
                            let index = this.sticks.indexOf(this.anims[pos]);
                            if (index > -1) this.sticks.splice(index, 1);
                        } else if (id == "v") ;
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "e") {
                            this.anims[pos].classel.start();
                            this.slidetext = this.anims[pos];
                        } else if (id == "v") ;
                        else if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.sticks.push(this.anims[pos]);
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) {
            this.optionsob = {
                root: document.body,
                threshold: this.buildThresholdList(500)
            };
            this.optionsobo = {
                root: document.body,
                threshold: [
                    0,
                    1
                ]
            };
        } else {
            this.optionsob = {
                root: null,
                threshold: this.buildThresholdList(500)
            };
            this.optionso = {
                root: null,
                threshold: [
                    1
                ]
            };
        }
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
        this.callbacko = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (this.isVisible == 0) return false;
                // //  console.log(entry.isIntersecting+' '+entry.target.dataset.el)
                if (entry.boundingClientRect.y > 100) this.slideList(entry.target.dataset.el);
            });
        };
        this.observero = new IntersectionObserver(this.callbacko, this.optionso);
        if (this.DOM.el.querySelectorAll(".cOel")) this.DOM.el.querySelectorAll(".cOel").forEach((el)=>{
            this.observero.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-slidetime")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1 && !this.childscrolling) {
            super.smoothScroll();
            this.changeHeader();
        } else super.smoothScroll(true);
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        await this.timeout(1);
        this.DOM.el.classList.add("ch-home-active");
        (0, _gsap.gsap).to(".ch-home", {
            opacity: 1,
            ease: (0, _gsap.Power2).easeInOut,
            duration: .6
        });
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        return super.hide();
    }
};

},{"../../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./template.eta":"4w8M6","bundle-text:./list.eta":"7qEEE","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","swiper":"3ktAm","../../Login🥸/LinkedinLogin/Dialog":"8Lgst","bundle-text:/src/views👁️👁️👁️/404/notlogged.eta":"3WtYV","bundle-text:/src/views👁️👁️👁️/404/noaccess.eta":"KgwUV","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"4w8M6":[function(require,module,exports) {
module.exports = "<main class=\"ch-actions\">\n  <% let item = it.data.acf.ch_intro; %>\n  <section class=\"ch-actions_intro\">\n    <div class=\"iO iO-slidetime\"></div>\n    <div class=\"left\">\n      <div class=\"left_el\">\n        <div class=\"left_el_hold\">\n          <% if(item){ %>\n            <img src=\"<%~ item.image %>\"/>\n          <% } %>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"right\">\n      <div class=\"right_hold\">\n        <% if(item){ %>\n          <h2 class=\"tit1\"><%~ item.heading %></h2>\n          <h3 class=\"tit4\">\n            <div class=\"line\">\n              <div class=\"word\"><%~ item.subheading %></div>\n            </div>\n          </h3>\n        <% } %>\n      </div>\n    </div>\n  </section>\n\n  <section class=\"ch-actions_content\">\n    <div class=\"left\">\n      <div class=\"ch_search-cont\">\n        <input class=\"ch_search\" type=\"text\" id=\"action-search\" name=\"action-search\" placeholder=\"Search Actions\">\n        <%~ it.global.icons.search %>\n      </div>\n\n      <div class=\"ch_filters\">\n        <div class=\"ch_sort\">\n          <div id=\"alpha-filter\" data-sort=\"alpha\" class=\"ch_filter ch_filter--active\"><span>Alphabetical</span></div>\n          <div id=\"date-filter\" data-sort=\"date\" class=\"ch_filter\"><span>Newest</span></div>\n        </div>\n        \n        <% /* <div class=\"ch_filter\"><span>Company</span></div>\n        <div class=\"ch_filter ch_filter--active\"><span>Industry</span></div>\n        <div class=\"ch_filter\"><span>Category</span></div> */ %>\n      </div>\n    </div>\n\n    <div class=\"right\">\n    </div>\n\n  </section>\n\n  <%~ it.footer %>\n</main>";

},{}],"7qEEE":[function(require,module,exports) {
module.exports = "<% it.actions.forEach(function(action){ %>\n    <a class=\"title el mouseHover\" data-type=\"network\" href=\"<%~ action.permalink %>\">\n        <img src=\"<%~ action.logo_a %>\"/>\n        <h2 class=\"tit1\"><%~ action.post_title %></h2>\n    </a>\n    <div class=\"ch-homeposts_main\" style=\"--main: <%~ action.color_a != '#000000' ? action.color_a : '#696969' %>;\">\n        <% action.children.forEach(function(item){ %>\n            <a class=\"el mouseHover\" data-type=\"network\" href=\"<%~ item.permalink %>\">\n                <h3 class=\"tit2\"><span><%~ item.post_title %></span></h3>\n            </a>\n        <% }) %>\n    </div>\n<% }) %>";

},{}],"3WtYV":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! SIGN UP TO ACCESS THIS CONTENT</h2>\n<h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3>\n<a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"KgwUV":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! YOU DON'T HAVE ACCESS TO THIS CONTENT</h2>\n<% /* <h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3> */ %>\n<% /* <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a> */ %>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"4U0Pg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _listEta = require("bundle-text:./list.eta");
var _listEtaDefault = parcelHelpers.interopDefault(_listEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
var _swiper = require("swiper");
var _swiperDefault = parcelHelpers.interopDefault(_swiper);
var _dialog = require("../../Login\uD83E\uDD78/LinkedinLogin/Dialog");
var _notloggedEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/notlogged.eta");
var _notloggedEtaDefault = parcelHelpers.interopDefault(_notloggedEta);
var _noaccessEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/noaccess.eta");
var _noaccessEtaDefault = parcelHelpers.interopDefault(_noaccessEta);
var _eta = require("eta");
(0, _swiperDefault.default).use([
    (0, _swiper.Navigation)
]);
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        var html = "";
        // //  console.log(this.main)
        const response = await fetch(this.main.acf.base + "/wp-json/wp/v2/pages/" + content.dataset.id + "?acf_format=standard");
        const data = await response.json();
        if (this?.main?.user) {
            if (!this?.main?.user?.acf?.is_content_hub_user) {
                html = _eta.render((0, _noaccessEtaDefault.default), {
                    global: this.main,
                    footer: this.footer
                });
                document.querySelector("#content").innerHTML += html;
                this.DOM = {
                    el: document.querySelector("main:not(.old)")
                };
                return;
            }
        } else {
            html = _eta.render((0, _notloggedEtaDefault.default), {
                global: this.main,
                footer: this.footer
            });
            document.querySelector("#content").innerHTML += html;
            this.DOM = {
                el: document.querySelector("main:not(.old)")
            };
            return;
        }
        html = _eta.render((0, _templateEtaDefault.default), {
            global: this.main,
            data: data,
            footer: this.footer
        });
        // //  console.log(html)
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)"),
            searchbar: document.getElementById("ceo-search"),
            searchbutton: document.querySelector(".ch_search-cont svg"),
            alphaFilter: document.getElementById("alpha-filter"),
            dateFilter: document.getElementById("date-filter")
        };
        this.filters = {
            sortby: "alpha"
        };
        this.search();
        this.indexlist = 0;
        this.DOM.listimg = this.DOM.el.querySelectorAll(".ch-homeposts .image");
        this.DOM.listel = this.DOM.el.querySelectorAll(".ch-homeposts .el");
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
        this.addEvents();
        await this.loadImages();
        await this.createAnimations();
    }
    changeHeader() {
        const el = document.querySelector(".ch-ceos_intro");
        const rect = el?.getBoundingClientRect();
        const viewportWidth = window.innerWidth || document.documentElement.clientWidth;
        const viewportHeight = window.innerHeight || document.documentElement.clientHeight;
        const navmenu = document.querySelector(".nav_box");
        const navlogo = document.querySelector(".nav_logo");
        if (rect?.bottom < 500 || rect?.top >= viewportHeight) navmenu.classList.add("nav_box--ch");
        else {
            navmenu.classList.remove("nav_box--ch");
            navlogo.href = "/";
        }
    }
    addEvents() {
        this.regChildScroll(document.querySelector(".ch-ceos_content"));
        this.DOM.searchbutton.addEventListener("click", this.search);
        this.DOM.searchbar.addEventListener("keydown", (e)=>{
            if (e.key == "Enter" || e.code == 9 || e.code == 13) this.search();
        });
        // filters
        this.DOM.alphaFilter.addEventListener("click", this.sortbyalpha);
        this.DOM.dateFilter.addEventListener("click", this.sortbydate);
    }
    sortbyalpha(e) {
        const elem = this.DOM.alphaFilter;
        this.changeSortBy(elem);
    }
    sortbydate(e) {
        const elem = this.DOM.dateFilter;
        this.changeSortBy(elem);
    }
    changeSortBy(elem) {
        document.querySelectorAll(".ch_filter--active").forEach((x)=>x.classList.remove("ch_filter--active"));
        elem.classList.add("ch_filter--active");
        this.filters.sortby = elem.dataset.sort;
        this.search();
    }
    async search() {
        const val = this.DOM.searchbar.value;
        const params = new URLSearchParams();
        const right = document.querySelector(".ch-ceos_content .right");
        right.innerHTML = (0, _dialog.getLoadingWheel)();
        params.set("term", val);
        params.set("sortby", this.filters.sortby);
        const response = await fetch(`/wp-json/sdv/content-hub/v1/get-ceos/?${params}`);
        let ceos = await response.json();
        let html = _eta.render((0, _listEtaDefault.default), {
            ceos,
            icons: this.main.icons
        });
        right.innerHTML = html;
    }
    onScroll(t) {
        if (this.childscrolling) return;
        this.scroll.target = document.body.scrollTop;
        this.mobileScroll();
        if (document.body.scrollTop == 0) document.documentElement.classList.remove("scrolled");
        else document.documentElement.classList.add("scrolled");
    }
    regChildScroll(elem) {
        if (!elem) return;
        const postlist = elem.querySelector(".right");
        let scrollTimer;
        postlist?.addEventListener("scroll", ()=>{
            if (scrollTimer) clearTimeout(scrollTimer);
            this.childscrolling = true;
            scrollTimer = setTimeout(()=>this.childscrolling = false, 150);
        });
    }
    resizeLimit() {
        if (!this.scroll) return false;
        if (!this.avoidScroll) {
            for (let anim of this.anims){
                if (anim.stick != null) {
                    if (anim.stick.parent.classList.contains("ch-homeposts_main")) anim.stick.limit = anim.stick.parent.clientHeight - 100;
                }
            }
            this.size = this.DOM.el.clientHeight - window.innerHeight;
            this.scroll.limit = this.size;
        // this.content.style.height = this.scroll.limit+'px'
        }
    }
    slideList(index) {
        if (this.indexlist != index) {
            if (this.indexlist != -1) {
                this.DOM.listimg[this.indexlist].classList.remove("act");
                this.DOM.listel[this.indexlist].classList.remove("act");
            }
            this.indexlist = index;
            if (index != -1) {
                // //  console.log(this.indexlist)
                this.DOM.listimg[this.indexlist].classList.add("act");
                this.DOM.listel[this.indexlist].classList.add("act");
            }
        }
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            this.anims[pos].stick.active = 0;
                            let index = this.sticks.indexOf(this.anims[pos]);
                            if (index > -1) this.sticks.splice(index, 1);
                        } else if (id == "v") ;
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "e") {
                            this.anims[pos].classel.start();
                            this.slidetext = this.anims[pos];
                        } else if (id == "v") ;
                        else if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.sticks.push(this.anims[pos]);
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) {
            this.optionsob = {
                root: document.body,
                threshold: this.buildThresholdList(500)
            };
            this.optionsobo = {
                root: document.body,
                threshold: [
                    0,
                    1
                ]
            };
        } else {
            this.optionsob = {
                root: null,
                threshold: this.buildThresholdList(500)
            };
            this.optionso = {
                root: null,
                threshold: [
                    1
                ]
            };
        }
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
        this.callbacko = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (this.isVisible == 0) return false;
                // //  console.log(entry.isIntersecting+' '+entry.target.dataset.el)
                if (entry.boundingClientRect.y > 100) this.slideList(entry.target.dataset.el);
            });
        };
        this.observero = new IntersectionObserver(this.callbacko, this.optionso);
        if (this.DOM.el.querySelectorAll(".cOel")) this.DOM.el.querySelectorAll(".cOel").forEach((el)=>{
            this.observero.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-slidetime")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1 && !this.childscrolling) {
            super.smoothScroll();
            this.changeHeader();
        } else super.smoothScroll(true);
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        await this.timeout(1);
        this.DOM.el.classList.add("ch-home-active");
        (0, _gsap.gsap).to(".ch-home", {
            opacity: 1,
            ease: (0, _gsap.Power2).easeInOut,
            duration: .6
        });
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        return super.hide();
    }
};

},{"../../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./template.eta":"fyE0G","bundle-text:./list.eta":"fhIZ1","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","swiper":"3ktAm","../../Login🥸/LinkedinLogin/Dialog":"8Lgst","bundle-text:/src/views👁️👁️👁️/404/notlogged.eta":"cHl0J","bundle-text:/src/views👁️👁️👁️/404/noaccess.eta":"6OoHD","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"fyE0G":[function(require,module,exports) {
module.exports = "<main class=\"ch-ceos\">\r\n  <% let item = it.data.acf.ch_intro; %>\r\n  <section class=\"ch-ceos_intro\">\r\n    <div class=\"iO iO-slidetime\"></div>\r\n    <div class=\"left\">\r\n      <div class=\"left_el\">\r\n        <div class=\"left_el_hold\">\r\n          <% if(item){ %>\r\n            <img src=\"<%~ item.image %>\"/>\r\n          <% } %>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"right\">\r\n      <div class=\"right_hold\">\r\n        <% if(item){ %>\r\n          <h2 class=\"tit1\"><%~ item.heading %></h2>\r\n          <h3 class=\"tit4\">\r\n            <div class=\"line\">\r\n              <div class=\"word\"><%~ item.subheading %></div>\r\n            </div>\r\n          </h3>\r\n        <% } %>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <section class=\"ch-ceos_content\">\r\n    <div class=\"left\">\r\n      <div class=\"ch_search-cont\">\r\n        <input class=\"ch_search\" type=\"text\" id=\"ceo-search\" name=\"ceo-search\" placeholder=\"Search Member Organizations\">\r\n        <%~ it.global.icons.search %>\r\n      </div>\r\n\r\n      <div class=\"ch_filters\">\r\n        <div class=\"ch_sort\">\r\n          <div id=\"alpha-filter\" data-sort=\"alpha\" class=\"ch_filter ch_filter--active\"><span>Alphabetical</span></div>\r\n          <div id=\"date-filter\" data-sort=\"date\" class=\"ch_filter\"><span>Newest</span></div>\r\n        </div>\r\n        \r\n        <% /* <div class=\"ch_filter\"><span>Company</span></div>\r\n        <div class=\"ch_filter ch_filter--active\"><span>Industry</span></div>\r\n        <div class=\"ch_filter\"><span>Category</span></div> */ %>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"right\">\r\n    </div>\r\n\r\n  </section>\r\n\r\n  <%~ it.footer %>\r\n</main>";

},{}],"fhIZ1":[function(require,module,exports) {
module.exports = "<% it.ceos.forEach(function(ceo){ %>\r\n    <a class=\"ceo mouseHover\" data-type=\"ceo\" href=\"<%~ ceo.permalink %>\">\r\n        <div class=\"ceo__image\">\r\n            <%~ it.icons.elipse %>\r\n            <img class=\"ceo-image\" src=\"<%~ ceo.image_a %>\"/>\r\n            <img class=\"company-image\" src=\"<%~ ceo.image_a %>\"/>\r\n        </div>\r\n        <div class=\"ceo__details\">\r\n            <h2 class=\"ceo__title\"><%~ ceo.post_title %></h2>\r\n            <span class=\"ceo__company\"><%~ ceo.company_a[0].post_title %></span>\r\n        </div>\r\n    </a>\r\n<% }) %>";

},{}],"cHl0J":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! SIGN UP TO ACCESS THIS CONTENT</h2>\n<h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3>\n<a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"6OoHD":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! YOU DON'T HAVE ACCESS TO THIS CONTENT</h2>\n<% /* <h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3> */ %>\n<% /* <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a> */ %>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"dSZAX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _templatedadEta = require("bundle-text:./templatedad.eta");
var _templatedadEtaDefault = parcelHelpers.interopDefault(_templatedadEta);
var _showlistEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/showlist.eta");
var _showlistEtaDefault = parcelHelpers.interopDefault(_showlistEta);
var _notloggedEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/notlogged.eta");
var _notloggedEtaDefault = parcelHelpers.interopDefault(_notloggedEta);
var _noaccessEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/noaccess.eta");
var _noaccessEtaDefault = parcelHelpers.interopDefault(_noaccessEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
//COMPS
var _dualintroJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/components\uD83E\uDDBE/Dualintro.js");
var _dualintroJsDefault = parcelHelpers.interopDefault(_dualintroJs);
var _eta = require("eta");
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        //${process.env.PUBLIC_URL}/wp-json/wp/v2/podcast/40?acf_format=standard
        // const response = await fetch(this.main.acf.base+'/wp-json/wp/v2/pages/'+content.dataset.id+'?acf_format=standard')
        const response = await fetch(this.main.acf.base + "/wp-json/wp/v2/ceos/" + content.dataset.id + "?acf_format=standard");
        const data = await response.json();
        let ceo_link = "#";
        const ch_menu_links = this.main?.acf?.ch_menu_links || [];
        ch_menu_links.forEach((x)=>{
            const url = x.link.url;
            const title = x.link.title.toLowerCase();
            if (title.includes("ceo")) ceo_link = url;
        });
        let html;
        if (this?.main?.user) {
            if (!this?.main?.user?.acf?.is_content_hub_user) {
                html = _eta.render((0, _noaccessEtaDefault.default), {
                    global: this.main,
                    footer: this.footer
                });
                document.querySelector("#content").innerHTML += html;
                this.DOM = {
                    el: document.querySelector("main:not(.old)")
                };
                return;
            }
        } else {
            html = _eta.render((0, _notloggedEtaDefault.default), {
                global: this.main,
                footer: this.footer
            });
            document.querySelector("#content").innerHTML += html;
            this.DOM = {
                el: document.querySelector("main:not(.old)")
            };
            return;
        }
        html = _eta.render((0, _templatedadEtaDefault.default), {
            global: this.main,
            data: data,
            footer: this.footer,
            ceo_link
        });
        // //  console.log(data)
        // //  console.log(html)
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)")
        };
        if (this.DOM.el.querySelector(".showchild_main")) {
            this.playFn = ()=>{
                this.DOM.el.querySelector(".showchild_main").classList.add("act");
                let src = this.DOM.el.querySelector(".showchild_main .btnplay").dataset.video;
                this.DOM.el.querySelector(".showchild_main iframe").setAttribute("src", src);
            };
            this.DOM.el.querySelector(".showchild_main .btnplay").addEventListener("click", this.playFn);
        }
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
        await this.loadImages();
        await this.createAnimations();
        if (this.DOM.el.querySelector(".m-dualintro")) this.slide = new (0, _dualintroJsDefault.default)(this.DOM.el.querySelector(".m-dualintro"));
        if (data.parent == 0) {
            this.DOM.holder = this.DOM.el.querySelector(".hPosts");
            this.DOM.pages = this.DOM.el.querySelector(".pPosts");
            // //  console.log(this.DOM.holder)
            await this.getPosts(true, "show", data.id, 8, 1);
        } else if (this.DOM.el.querySelector(".hidetext")) {
            this.DOM.hidetext = this.DOM.el.querySelector(".hidetext");
            this.DOM.clicktext = this.DOM.el.querySelector(".hidetext_click");
            this.DOM.holdtext = this.DOM.el.querySelector(".hidetext_hold");
            this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
            if (this.DOM.hidetext.clientHeight + 40 > this.DOM.holdtext.clientHeight) {
                this.DOM.clicktext.classList.add("act");
                (0, _gsap.gsap).to(this.DOM.hidetext, {
                    height: this.DOM.holdtext.clientHeight + "px",
                    duration: .6,
                    onComplete: ()=>{
                        this.DOM.hidetext.classList.add("act");
                        this.DOM.hidetext.style.height = "";
                        this.resizeLimit();
                    }
                });
            } else {
                this.textExpand = ()=>{
                    this.isVisible = 0;
                    // //  console.log(this.sticks)
                    this.DOM.clicktext.classList.add("act");
                    this.timeline = (0, _gsap.gsap).timeline({
                        paused: true
                    })// .to(this.sticks[0].stick.son,{duration:.6,y:'+='+(this.DOM.holdtext.clientHeight - this.DOM.hidetext.clientHeight)+'px'},'a')
                    // .to(this.sticks[0].stick,{duration:.6,current:'+='+(this.DOM.holdtext.clientHeight - this.DOM.hidetext.clientHeight),target:'+='+(this.DOM.holdtext.clientHeight - this.DOM.hidetext.clientHeight)},'a')
                    .to(this.DOM.hidetext, {
                        height: this.DOM.holdtext.clientHeight + "px",
                        duration: .6,
                        onUpdate: ()=>{
                        // //  console.log(this.sticks)
                        },
                        onComplete: ()=>{
                            this.isVisible = 1;
                            this.DOM.hidetext.classList.add("act");
                            this.DOM.hidetext.style.height = "";
                            this.resizeLimit();
                        }
                    }, "a");
                    this.timeline.play();
                };
                this.DOM.clicktext.addEventListener("click", this.textExpand);
            }
        }
    }
    changeHeader() {
        const el = document.querySelector(".m-dualintro");
        const rect = el?.getBoundingClientRect();
        const viewportWidth = window.innerWidth || document.documentElement.clientWidth;
        const viewportHeight = window.innerHeight || document.documentElement.clientHeight;
        const navmenu = document.querySelector(".nav_box");
        const navlogo = document.querySelector(".nav_logo");
        if (rect?.bottom < 500 || rect?.top >= viewportHeight) navmenu.classList.add("nav_box--ch");
        else {
            navmenu.classList.remove("nav_box--ch");
            navlogo.href = "/";
        }
    }
    async getJson(url, isNew) {
        const posts = await fetch(url);
        const datap = await posts.json();
        // //  console.log(datap)
        this.html = _eta.render((0, _showlistEtaDefault.default), {
            global: this.main,
            posts: datap.posts
        });
        // this.ajaxImages()
        this.DOM.holder.innerHTML = this.html;
        if (isNew == true) {
            this.actualpage = 1;
            this.max = datap.maxpages;
        }
        await this.ajaxImages();
    }
    async ajaxImages() {
        let newpage = document.createElement("template");
        newpage.innerHTML = this.html;
        let paths = Array.from(newpage.content.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        return Promise.resolve();
    }
    async blocksClick(type) {
        this.DOM.holder.classList.add("load");
        await this.timeout(600);
        if (type == "block") this.DOM.holder.classList.add("blocks");
        else this.DOM.holder.classList.remove("blocks");
        this.DOM.holder.classList.remove("load");
        this.resizeLimit();
    }
    async getPosts(isNew, type, id, postperpage, page) {
        this.DOM.holder.classList.add("load");
        Promise.all([
            this.timeout(600),
            this.getJson(this.main.acf.base + "/wp-json/wp/v2/getposts?type=" + type + "&parent=" + id + "&page=" + page + "&perpage=" + postperpage, isNew)
        ]).then(()=>{
            this.DOM.holder.classList.remove("load");
            if (isNew == true) {
                // //  console.log(this.max)
                for(let i = 1; i <= this.max; i++)if (i == page) this.DOM.pages.innerHTML += '<div class="pgel mouseHover act"><div class="pgel_t">' + i + "</div></div>";
                else this.DOM.pages.innerHTML += '<div class="pgel mouseHover"><div class="pgel_t">' + i + "</div></div>";
                this.DOM.pagsel = this.DOM.pages.querySelectorAll(".pgel");
                if (this.DOM.pagsel.length == 1) this.DOM.pages.classList.add("hide");
                for (let [index, el] of this.DOM.pagsel.entries())el.onclick = (event)=>{
                    this.getPosts(false, type, id, postperpage, index + 1);
                };
            } else {
                this.DOM.pagsel[this.actualpage - 1].classList.remove("act");
                this.actualpage = page;
                this.DOM.pagsel[this.actualpage - 1].classList.add("act");
            }
            this.resizeLimit();
            this.emit("linkseventlisteners");
            this.emit("mousereset");
        });
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            // //  console.log(this.anims[pos])
                            this.anims[pos].stick.active = 0;
                            this.movestick = null;
                        } else if (id == "v") clearInterval(this.clockInt);
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "e") {
                            this.anims[pos].classel.start();
                            this.slidetext = this.anims[pos];
                        } else if (id == "v") this.clockStart(this.anims[pos].el.parentNode.querySelector(".time"));
                        else if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.movestick = this.anims[pos];
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) {
            super.smoothScroll();
            this.changeHeader();
        }
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        await this.timeout(1);
        // gsap.to('.home',{opacity:1,ease:Power2.easeInOut,duration:.6})
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        return super.hide();
    }
};

},{"../../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./template.eta":"lYhDR","bundle-text:./templatedad.eta":"iqcZG","bundle-text:/src/views👁️👁️👁️/ETA/showlist.eta":"48jKA","bundle-text:/src/views👁️👁️👁️/404/notlogged.eta":"hWemI","bundle-text:/src/views👁️👁️👁️/404/noaccess.eta":"4WZC6","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","/src/js🧠🧠🧠/components🦾/Dualintro.js":"7DjOj","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"lYhDR":[function(require,module,exports) {
module.exports = "\n<main class=\"home\">\n  <section class=\"home_intro stck_base\" id=\"stck0\">\n    <div class=\"iO iO-stck stck_control\" data-stck=\"0\"></div>\n    <div class=\"iO iO-logohide\"></div>\n    <div class=\"iO iO-quickshow\"></div>\n    <div class=\"home_intro_hold stck_main\">\n      <div class=\"timehold\">\n        <div class=\"iO iO-time\"></div>\n        <div class=\"timeoflow\">\n          <div class=\"time\" data-offset=\"1\">\n            <div class=\"change\">01 <div class=\"sep\">:</div> 00 <div class=\"sep\">:</div> 12</div>\n            <div class=\"end\">ESPAÑA</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"introOut\"><span>Saltar intro</span></div>\n      <div class=\"box\">\n            <div class=\"logo\">\n              <div class=\"logo_left\">\n                <div class=\"logo_el logo_left_1\"><span>S</span></div>\n                <div class=\"logo_el logo_left_2 logo_el-hide\"><span>E</span></div>\n                <div class=\"logo_el logo_left_3\"><span>R</span></div>\n                <div class=\"logo_el logo_left_4 logo_el-hide\"><span>É</span></div>\n              </div>\n              <div class=\"logo_video\">\n                <div class=\"logo_video_mask mdlClick\" data-video=\"<%~ it.data.video_reel %>\">\n                  <video class=\"inline\"  src=\"<%~ it.data.video_anim %>\"  playsinline autoplay muted loop  poster=\"<%~ it.data.poster_animation %>\"></video>\n                  <video class=\"reel\" src=\"<%~ it.data.video_reel %>\" preload=\"none\"  playsinline muted  poster=\"<%~ it.data.poster_animation %>\"></video>\n                </div>\n              </div>\n              <div class=\"logo_right\">\n                <div class=\"logo_el logo_right_1\"><span>B</span></div>\n                <div class=\"logo_el logo_right_2\"><span>R</span></div>\n                <div class=\"logo_el logo_right_3 logo_el-hide\"><span>E</span></div>\n                <div class=\"logo_el logo_right_4\"><span>V</span></div>\n                <div class=\"logo_el logo_right_5 logo_el-hide\"><span>E</span></div>\n              </div>\n            </div>\n            <div class=\"claim\">\n              <p><span class=\"space\"></span><%~ it.data.frase_inicial %></p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n\n  <section class=\"home_claim\">\n    <div class=\"c-vw\">\n      <div class=\"col\">\n        <div class=\"title1 title1-cols\">\n\n          <% it.data.claims[0].title.forEach(function(w,key){ %>\n              <div class=\"line\"><span class=\"line_fake\"><%~  w.line %></span><span class=\"spell iO iO-spell\"><%~  w.line %></span></div>\n\n          <% }) %>\n        </div>\n      </div>\n\n      <div class=\"col col-right\">\n        <div class=\"title1\">\n          <% it.data.claims[1].title.forEach(function(w,key){ %>\n              <div class=\"line\"><span class=\"line_fake\"><%~  w.line %></span><span class=\"spell iO iO-spell\"><%~  w.line %></span></div>\n\n          <% }) %>\n        </div>\n      </div>\n\n      <div class=\"col\">\n        <div class=\"title1\">\n          <% it.data.claims[2].title.forEach(function(w,key){ %>\n              <div class=\"line\"><span class=\"line_fake\"><%~  w.line %></span><span class=\"spell iO iO-spell\"><%~  w.line %></span></div>\n\n          <% }) %>\n        </div>\n      </div>\n    </div>\n  </section>\n  <section class=\"home_text stck_base\" id=\"stck1\">\n    <div class=\"iO iO-stck iO-stck-text stck_control\" data-stck=\"1\"></div>\n    <div class=\"home_text_hold stck_main\">\n      \n      <%~ it.data.texto %>\n      <div class=\"positions\">\n        <%~ it.data.frasefinal %>\n      </div>\n    </div>\n  </section>\n  <section class=\"home_projects darksect\">\n    <div class=\"iO iO-hide\"></div>\n    <div class=\"iO iO-dark\"></div>\n    <div class=\"iO iO-foot\"></div>\n    <div class=\"home_projects_first gridmaster\">\n      <div class=\"G-intro\">\n        <div class=\"G-intro_year\">\n          <div class=\"nums nums-2 nums-anim iO iO-counter\" data-from=\"<%~  it.data.year %>\">\n            <div class=\"nums_arrow\"><%~ it.global.icons.arrowlink %></div>\n              <div class=\"nums_main\"><%~ it.global.acf.actualyear %></div>\n            </div>\n          </div>\n          <div class=\"G-intro_title\">\n            <h2 class=\"title2 title2-cols\">\n              <% it.data.titulo_1_title.forEach(function(w,key){ %>\n              <div class=\"line\"><span class=\"line_fake\"><%~  w.line %></span><span class=\"spell iO iO-spell\"><%~  w.line %></span>\n                <% if(key == it.data.titulo_1_title.length-1){ %>\n                  <div class=\"nums nums-sup nums-anim iO iO-counter\">\n                  <div class=\"nums_main\"><%~ it.data.numtitle %></div>\n                </div>\n                <% } %>\n                \n              </div>\n\n            <% }) %>\n            </h2>\n          </div>\n    \n          <div class=\"G-intro_dual\">\n\n            <a class=\"Eproject Eproject-<%~ it.data.destacado.ratio_a %>\" href=\"<%~ it.data.destacado.permalink %>\" data-type=\"proyecto\">\n              <div class=\"iO iO-par\"></div>\n              <div class=\"Eproject_box\">\n                <div class=\"iO_son Eproject_par\">\n                  <img src=\"<%~ it.data.destacado.imagen_a %>\">\n                  <% it.data.destacado.imagen_a %>\n                  <% if(it.data.destacado.video_a!=''){ %>\n                    <video src=\"<%~ it.data.destacado.video_a %>\" preload=\"none\" playsinline=\"\" muted=\"\" loop=\"\" poster=\"<%~ it.data.destacado.imagen_a %>\"></video>\n                  <% } %>\n                </div>\n              </div>\n              <div class=\"Eproject_info\">\n                <h3 class=\"titlesmall name\"><% it.data.destacado.post_title %></h3>\n                <div class=\"tags\">\n                  <div class=\"tags_el\"><% it.data.destacado.tags_a %></div>\n                </div>\n              </div>\n            </a>\n\n            <div class=\"G-intro_dual_text\">\n              <h2 class=\"title2 title2-cols\">\n              <% it.data.titulo_2_title.forEach(function(w,key){ %>\n              <div class=\"line\"><span class=\"line_fake\"><%~  w.line %></span><span class=\"spell iO iO-spell\"><%~  w.line %></span></div>\n                \n\n            <% }) %>\n              </h2>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n\n        <% cont = 0 %>\n      <div class=\"home_projects_last gridmaster\">\n        <% it.data.proyectos.forEach(function(post,key){ %>\n        <% if(cont == 0){ %>\n          \n          <% type = 'G-tri' %>\n          <div class=\"<%~ type %>\">\n        <% }\n        if(cont == 3 || cont == 6 || cont == 9 || cont == 12){\n        %>\n          </div>\n          <% type = 'G-tri' %>\n          <div class=\"<%~ type %>\">\n        <%\n        }\n        %>\n        \n            <div class=\"<%~ type %>_col\">\n              <a class=\"Eproject Eproject-<%~ post.ratio_a %>\" href=\"<%~ post.permalink %>\" data-type=\"proyecto\">\n\n                <div class=\"iO iO-par\"></div>\n                <div class=\"Eproject_box\">\n                  <div class=\"iO_son Eproject_par\">\n                    <img src=\"<%~ post.imagen_a %>\">\n                    <% if(post.video_a!=''){ %>\n                      <video src=\"<%~ post.video_a %>\" preload=\"none\" playsinline=\"\" muted=\"\" loop=\"\" poster=\"<%~ post.imagen_a %>\"></video>\n                    <% } %>\n                  </div>\n                </div>\n                <div class=\"Eproject_info\">\n                  <h3 class=\"titlesmall name\"><%~ post.post_title %></h3>\n                  <div class=\"tags\">\n                    <div class=\"tags_el\"><%~ post.tags_a %></div>\n                  </div>\n                </div>\n              </a>\n            </div>\n        <%  \n        cont++\n        }) %>\n        </div><!-- cierre last G -->\n        <div class=\"G-textright\">\n          <div class=\"holder in\">\n            <p><%~ it.data.texto_premios %></p>\n              <a class=\"linkarrow\" href=\"<%~ it.data.url_boton %>\" data-type=\"premios\">\n                <div class=\"linkarrow_t\"><%~ it.data.texto_boton %></div>\n                <div class=\"linkarrow_h\"><%~ it.data.texto_boton %></div>\n                <div class=\"linkarrow_i\"><%~ it.global.icons.arrowlink %></div>\n              </a>\n          </div>\n        </div>\n        <div class=\"G-title\">\n          <div class=\"nums nums-small nums-anim iO iO-counter\">\n            <div class=\"nums_main\"><%~ it.data.year_2 %></div>\n          </div>\n          <h3 class=\"titlesmall\"><%~ it.data.titulo_3 %></h3>\n        </div>\n        <div class=\"Stexthold\">\n          <div class=\"iO iO-stext\"></div>\n          <div class=\"Stext Stext-big\">\n            <div class=\"Stext_real\">\n              <div class=\"el\">\n                \n              <% it.data.texto_carousel.forEach(function(text,key){ %>\n                <%~ it.global.icons.asterisk %>\n                <span><%~ text.texto %></span>\n              <% }) %>\n              </div>\n            </div>\n            <div class=\"Stext_fake\"></div>\n          </div>\n        </div>\n        <div class=\"G-dual2\">\n          <div class=\"G-dual2_col\">\n            <a class=\"Eproject Eproject-<%~ it.data.destacado_2.ratio_a %>\" href=\"<%~ it.data.destacado_2.permalink %>\" data-type=\"proyecto\">\n              <div class=\"iO iO-par\"></div>\n              <div class=\"Eproject_box\">\n                <div class=\"iO_son Eproject_par\">\n                  <img src=\"<%~ it.data.destacado_2.imagen_a %>\">\n                  <% if(it.data.destacado_2.video_a!=''){ %>\n                    <video src=\"<%~ it.data.destacado_2.video_a %>\" preload=\"none\" playsinline=\"\" muted=\"\" loop=\"\" poster=\"<%~ it.data.destacado_2.imagen_a %>\"></video>\n                  <% } %>\n                </div>\n              </div>\n              <div class=\"Eproject_info\">\n                <h3 class=\"titlesmall name\"><%~ it.data.destacado_2.post_title %></h3>\n                <div class=\"tags\">\n                  <div class=\"tags_el\"><%~ it.data.destacado_2.tags_a %></div>\n                </div>\n              </div>\n            </a>\n          </div>\n          <div class=\"G-dual2_col\">\n            <div class=\"Eproject Eproject-st Eproject-no\">\n              <div class=\"iO iO-par\"></div>\n              <div class=\"Eproject_box\">\n                <div class=\"iO_son Eproject_par\"><img src=\"<%~ it.data.imagen_alternativa %>\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div><!-- cierre master -->\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"iqcZG":[function(require,module,exports) {
module.exports = "<main class=\"podcast ceo\">\n  <section class=\"m-dualintro \" >\n    <div class=\"left\" style=\"background-color:<%~ it.data.acf.company_a[0].color_a %>\">\n      <div class=\"left_hover mouseScroll\"></div>\n      <div class=\"bc\">\n        <a class=\"mouseHover\" href=\"<%~ it.global.acf?.ch_home ?? '/content-hub' %>\">LC Hub</a>\n        <span>/</span><a class=\"mouseHover\" href=\"<%~ it.ceo_link %>\">CEOs</a>\n        <span>/</span><span><%~ it.data.title.rendered %></span>\n      </div>\n      <h2 class=\"tit1\"><%~ it.data.title.rendered %></h2>\n    </div>\n    <div class=\"right mouseScroll\">\n      <div class=\"right_el\"><img src=\"<%~ it.data.acf.image_a %>\"></div>\n    </div>\n  </section>\n  <section class=\"m-dualsep\">\n    <div class=\"left\">\n      <h2 class=\"tit2\">About <%~ it.data.title.rendered %></h2>\n    </div>\n    <div class=\"right\">\n      <div class=\"txt-bureau\">\n        <%~ it.data.acf.description_a %>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-dualsep\">\n    <div class=\"left\">\n      <h2 class=\"tit2\">About <%~ it.data.acf.company_a[0].post_title %></h2>\n    </div>\n    <div class=\"right\">\n      <div class=\"txt-bureau\">\n        <%~ it.data.acf.company_a[0].descriptionl %>\n        <% if(it.data.acf.company_a[0].link){ %>\n        <a class=\"simp mouseHover\" href=\"<%~ it.data.acf.company_a[0].link %>\"><span>Visit site</span></a>\n        <% } %>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-social\">\n    <div class=\"left\">\n      <h2 class=\"tit4\"><%~ it.data.acf.company_a[0].title_social %></h2>\n    </div>\n    <div class=\"right\">\n      <div class=\"social\">\n          <% if(it.data.acf.company_a[0].instagram){ %>\n            <a class=\"mouseHover Sig\" href=\"<%~it.data.acf.company_a[0].instagram %>\"><%~ it.global.icons.ig %></a>\n          <% }\n          if(it.data.acf.company_a[0].linkedin){ %>\n            <a class=\"mouseHover Sin\" href=\"<%~it.data.acf.company_a[0].linkedin %>\"><%~ it.global.icons.in %></a>\n          <%\n          }\n          if(it.data.acf.company_a[0].facebook){ %>\n            <a class=\"mouseHover Sfb\" href=\"<%~it.data.acf.company_a[0].facebook %>\"><%~ it.global.icons.fb %></a>\n          <%\n          }\n          if(it.data.acf.company_a[0].twitter){ %>\n            <a class=\"mouseHover Stw\" href=\"<%~it.data.acf.company_a[0].twitter %>\"><%~ it.global.icons.tw %></a>\n          <% }%>\n        </div>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"48jKA":[function(require,module,exports) {
module.exports = "\n<% it.posts.forEach(function(p,key){ %>\n\n\n  <div class=\"show\">\n    <div class=\"show_hold\">\n      <a class=\"show_image mouseHover\" data-type=\"showchild\" href=\"<%~ p.link %>\">\n        <div class=\"btnplay \" >\n          <div class=\"btnplay_tri\"></div>\n        </div>\n        <img src=\"<%~ p.image %>\">\n      </a>\n      <div class=\"show_info\">\n        <h3 class=\"tit3\"><%~ p.title %></h3>\n        <div class=\"txt-bureau\">\n          <p><%~ p.description %></p>\n        </div>\n        <div class=\"show_info_bottom\">\n          <div class=\"date\"><%~ p.date %></div>\n          <div class=\"shareclick mouseHover\">\n            <%~ it.global.icons.share %>\n            <div class=\"shareclick_close\"></div>\n            <div class=\"shareclick_icons\">\n              <a class=\"mouseHover Stw\" href=\"https://twitter.com/intent/tweet?url=<%~ p.permalink %>\"><%~ it.global.icons.tw %></a>\n              <a class=\"mouseHover Sfb\" href=\"https://www.facebook.com/sharer/sharer.php?u=<%~ p.permalink %>\"><%~ it.global.icons.fb %></a>\n              <a class=\"mouseHover Sin\" href=\"https://www.linkedin.com/shareArticle?url=<%~ p.permalink %>\"><%~ it.global.icons.in %></a>\n              <a class=\"mouseHover Srd\" href=\"https://www.reddit.com/submit?url=<%~ p.permalink %>\"><%~ it.global.icons.reddit %></a>\n              <a class=\"mouseHover Stb\" href=\"https://www.tumblr.com/share/link?url=<%~ p.permalink %>\"><%~ it.global.icons.tumbler %></a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n<% }) \nif(it.posts.length %2 != 0){\n%>\n  <div class=\"show show-fake\"></div>\n<%\n}\n%>";

},{}],"hWemI":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! SIGN UP TO ACCESS THIS CONTENT</h2>\n<h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3>\n<a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"4WZC6":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! YOU DON'T HAVE ACCESS TO THIS CONTENT</h2>\n<% /* <h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3> */ %>\n<% /* <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a> */ %>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"jGp45":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _fieldJs = require("./Field.js");
var _fieldJsDefault = parcelHelpers.interopDefault(_fieldJs);
var _artEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/art.eta");
var _artEtaDefault = parcelHelpers.interopDefault(_artEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
var _notloggedEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/notlogged.eta");
var _notloggedEtaDefault = parcelHelpers.interopDefault(_notloggedEta);
var _dialog = require("../../Login\uD83E\uDD78/LinkedinLogin/Dialog");
var _eta = require("eta");
var _noaccessEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/noaccess.eta");
var _noaccessEtaDefault = parcelHelpers.interopDefault(_noaccessEta);
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        let html = "";
        const response = await fetch(this.main.acf.base + "/wp-json/wp/v2/pages/" + content.dataset.id + "?acf_format=standard");
        const data = await response.json();
        // //  console.log(data)
        if (this?.main?.user) {
            if (!this?.main?.user?.acf?.is_content_hub_user) {
                html = _eta.render((0, _noaccessEtaDefault.default), {
                    global: this.main,
                    footer: this.footer
                });
                document.querySelector("#content").innerHTML += html;
                this.DOM = {
                    el: document.querySelector("main:not(.old)")
                };
                return;
            }
        } else {
            html = _eta.render((0, _notloggedEtaDefault.default), {
                global: this.main,
                footer: this.footer
            });
            document.querySelector("#content").innerHTML += html;
            this.DOM = {
                el: document.querySelector("main:not(.old)")
            };
            return;
        }
        html = _eta.render((0, _templateEtaDefault.default), {
            data,
            global: this.main,
            footer: this.footer
        });
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)")
        };
        this.DOM.total = this.DOM.el.querySelector(".totalSearch");
        this.DOM.holder = this.DOM.el.querySelector(".hPosts");
        this.DOM.cats = this.DOM.el.querySelectorAll(".catEl");
        this.field = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".field"));
        this.field.DOM.npt.addEventListener("input", ()=>{
            this.getPosts(this.field.DOM.npt.value);
        });
        this.field.DOM.npt.value = "";
        this.field.checkField();
        this.cat = "";
        await this.getPosts("");
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
        for (let a of this.DOM.cats)a.addEventListener("click", ()=>this.blocksClick(a));
        await this.loadImages();
        await this.createAnimations();
    }
    changeHeader() {
        const el = document.querySelector(".m-simpleintro");
        const rect = el?.getBoundingClientRect();
        const viewportWidth = window.innerWidth || document.documentElement.clientWidth;
        const viewportHeight = window.innerHeight || document.documentElement.clientHeight;
        const navmenu = document.querySelector(".nav_box");
        const navlogo = document.querySelector(".nav_logo");
        if (rect?.bottom < 100 || rect?.top >= viewportHeight) navmenu.classList.add("nav_box--ch");
        else {
            navmenu.classList.remove("nav_box--ch");
            navlogo.href = "/";
        }
    }
    async ajaxImages() {
        let newpage = document.createElement("template");
        newpage.innerHTML = this.html;
        let paths = Array.from(newpage.content.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        return Promise.resolve();
    }
    async blocksClick(el) {
        this.DOM.el.querySelector(".catEl.act").classList.remove("act");
        const type = el.dataset.post;
        el.classList.add("act");
        this.cat = type;
        if (this.cat != "") {
            for (let el1 of this.DOM.el.querySelectorAll(".result"))if (this.cat == el1.dataset.post) el1.classList.remove("hide");
            else el1.classList.add("hide");
        } else for (let el2 of this.DOM.el.querySelectorAll(".result"))el2.classList.remove("hide");
        this.post_type = type;
        this.getPosts(this.field.DOM.npt.value);
    }
    async getJson(url) {
        this.DOM.holder.innerHTML = (0, _dialog.getLoadingWheel)();
        const posts = await fetch(url);
        const datap = await posts.json();
        this.html = _eta.render((0, _artEtaDefault.default), {
            global: this.main,
            type: this.cat,
            posts: datap.post
        });
        this.DOM.holder.innerHTML = this.html;
        if (this.DOM.el.querySelectorAll(".art:not(.hide)").length == 1) this.DOM.total.innerHTML = this.DOM.el.querySelectorAll(".art:not(.hide)").length + " result";
        else this.DOM.total.innerHTML = this.DOM.el.querySelectorAll(".art:not(.hide)").length + " results";
        await this.ajaxImages();
    }
    async getPosts(search) {
        this.DOM.holder.classList.add("load");
        const params = new URLSearchParams();
        params.set("search", search);
        if (this.post_type) params.set("post_type", this.post_type);
        Promise.all([
            this.timeout(600),
            this.getJson(`${this.main.acf.base}/wp-json/sdv/content-hub/v1/get-media?${params}`)
        ]).then(()=>{
            this.DOM.holder.classList.remove("load");
            this.emit("linkseventlisteners");
            this.emit("mousereset");
            this.resizeLimit();
        });
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            // //  console.log(this.anims[pos])
                            this.anims[pos].stick.active = 0;
                            this.movestick = null;
                        } else if (id == "v") clearInterval(this.clockInt);
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "e") {
                            this.anims[pos].classel.start();
                            this.slidetext = this.anims[pos];
                        } else if (id == "v") this.clockStart(this.anims[pos].el.parentNode.querySelector(".time"));
                        else if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.movestick = this.anims[pos];
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) {
            super.smoothScroll();
            this.changeHeader();
        }
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        this.timeout(1);
        // gsap.to('.home',{opacity:1,ease:Power2.easeInOut,duration:.6})
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        return super.hide();
    }
};

},{"../../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./template.eta":"d8jgb","./Field.js":"embQ7","bundle-text:/src/views👁️👁️👁️/ETA/art.eta":"chp7q","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","bundle-text:/src/views👁️👁️👁️/404/notlogged.eta":"3pFVS","../../Login🥸/LinkedinLogin/Dialog":"8Lgst","eta":"blnnU","bundle-text:/src/views👁️👁️👁️/404/noaccess.eta":"dvZGg","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"d8jgb":[function(require,module,exports) {
module.exports = "<main class=\"mediap\">\n  <section class=\"m-simpleintro\">\n    <div class=\"c-vw\">\n      <h2 class=\"tit1\"><%~ it.data.acf.title_lista %></h2>\n      <p><%~ it.data.acf.text_lista %></p>\n    </div>\n  </section>\n  <section class=\"mediap_intro\">\n    <div class=\"mediap_intro_field\">\n      <div class=\"field\"><label class=\"field_lbl\">Search</label><input class=\"field_npt\">\n        \n      </div>\n    </div>\n  </section>\n  <section class=\"mediap_tabs\">\n    <div class=\"tabs\">\n      <div class=\"tabs_els\">\n        <div class=\"simp catEl act\" data-post=\"\"><span>All</span></div>\n        <div class=\"simp catEl\" data-post=\"podcast\"><span>Pods</span></div>\n        <div class=\"simp catEl\" data-post=\"show\"><span>Shows</span></div>\n        <div class=\"simp catEl\" data-post=\"post\"><span>Articles</span></div>\n      </div>\n    </div>\n    <div class=\"totalSearch\">0 results</div>\n  </section>\n  <section class=\"mediap_results hPosts\">\n  </section>\n\n  <section class=\"m-cta signupmod\" style=\"--main:#DF80AC\">\n    <div class=\"c-vw\">\n      <div class=\"hold\">\n         <%\n          var randomNum = Math.floor((Math.random() * it.global.acf.signup_text.length) + 1);\n          var title = it.global.acf.signup_text[randomNum-1].title;\n          var text = it.global.acf.signup_text[randomNum-1].text;\n          \n        %>\n        <h2 class=\"tit1\"><%~ title %></h2>\n        <h3 class=\"tit4\"><%~ text %> </h3>\n        </h3>\n        <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\">\n          <div class=\"btn_t\">TAP IN</div>\n        </a>\n      </div>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>\n      ";

},{}],"embQ7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
"use strict";
exports.default = class {
    constructor(el){
        this.DOM = {
            el: el
        };
        this.DOM.npt = this.DOM.el.querySelector(".field_npt");
        this.initEvents();
    }
    initEvents() {
        this.checkField = ()=>{
            if (this.DOM.npt.value == "") this.DOM.el.classList.add("fill");
            else this.DOM.el.classList.add("fill");
        };
        this.focusFn = ()=>{
            this.DOM.el.classList.remove("err");
            this.DOM.el.classList.add("foc");
        };
        this.focusoutFn = ()=>{
            this.DOM.el.classList.remove("foc");
            this.DOM.el.classList.remove("err");
        };
        // this.DOM.npt.addEventListener("input", ()=>this.checkField())
        this.DOM.npt.addEventListener("focusin", this.focusFn);
        this.DOM.npt.addEventListener("focusout", ()=>this.focusoutFn());
    }
    check() {
        if ("" == this.DOM.npt.value) return void this.DOM.el.classList.add("err");
        this.DOM.el.classList.remove("err");
    }
    clear() {
        this.DOM.el.classList.remove("foc");
        this.DOM.el.classList.remove("fill");
        this.DOM.el.classList.remove("err");
        this.DOM.npt.value = "";
    }
    removeEvents() {
        this.DOM.npt.removeEventListener("input", ()=>this.checkField());
        this.DOM.npt.removeEventListener("focusin", this.focusFn);
        this.DOM.npt.removeEventListener("focusout", ()=>this.focusoutFn());
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"chp7q":[function(require,module,exports) {
module.exports = "\n<% it.posts.forEach(function(p,key){ %>\n  <a class=\"art mouseHover\" href=\"<%~ p.link %>\" data-type=\"article\">\n    <div class=\"art_hold\">\n      <div class=\"art_image\">\n        <div class=\"btnmore btnmore-hovered\">\n          <div class=\"btnmore_t\">read more</div>\n        </div><img src=\"<%~ p.image %>\">\n      </div>\n      <div class=\"art_info\">\n        <h3 class=\"tit3\"><%~ p.title %></h3>\n        <% if(p.description!=null){ %>\n        <p class=\"desc\"><%~ p.description %></p>\n        <% } %>\n        <div class=\"date tit4\"><%~ p.date %></div>\n      </div>\n    </div>\n  </a>\n<% }) %>";

},{}],"3pFVS":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! SIGN UP TO ACCESS THIS CONTENT</h2>\n<h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3>\n<a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"dvZGg":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! YOU DON'T HAVE ACCESS TO THIS CONTENT</h2>\n<% /* <h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3> */ %>\n<% /* <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a> */ %>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"e7xCJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
// import Modal from './modal.js'
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
// import modal from 'bundle-text:./modal.eta'
var _resourcelistEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/resourcelist.eta");
var _resourcelistEtaDefault = parcelHelpers.interopDefault(_resourcelistEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
var _dialog = require("../../Login\uD83E\uDD78/LinkedinLogin/Dialog");
var _notloggedEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/notlogged.eta");
var _notloggedEtaDefault = parcelHelpers.interopDefault(_notloggedEta);
var _noaccessEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/noaccess.eta");
var _noaccessEtaDefault = parcelHelpers.interopDefault(_noaccessEta);
//COMPS
var _eta = require("eta");
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        let html = "";
        // const response = await fetch(this.main.acf.base+'/wp-json/csskiller/v1/resources/')
        const response = await fetch(this.main.acf.base + "/wp-json/wp/v2/pages/" + content.dataset.id + "?acf_format=standard");
        const data = await response.json();
        // //  console.log(data)
        if (this?.main?.user) {
            if (!this?.main?.user?.acf?.is_content_hub_user) {
                html = _eta.render((0, _noaccessEtaDefault.default), {
                    global: this.main,
                    footer: this.footer
                });
                document.querySelector("#content").innerHTML += html;
                this.DOM = {
                    el: document.querySelector("main:not(.old)")
                };
                return;
            }
        } else {
            html = _eta.render((0, _notloggedEtaDefault.default), {
                global: this.main,
                footer: this.footer
            });
            document.querySelector("#content").innerHTML += html;
            this.DOM = {
                el: document.querySelector("main:not(.old)")
            };
            return;
        }
        html = _eta.render((0, _templateEtaDefault.default), {
            data: data,
            global: this.main,
            footer: this.footer,
            loading: (0, _dialog.getLoadingWheel)()
        });
        // this.modalhtml = Eta.render(modal,{global:this.main})
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)")
        };
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.DOM.holder = this.DOM.el.querySelector(".hPosts");
        await this.loadImages();
        await this.createAnimations();
        await this.getPosts();
    // document.querySelector('#content').innerHTML += modalhtml
    // this.modal = new Modal(document.documentElement.querySelector('.modal'))
    }
    changeHeader() {
        const el = document.querySelector(".m-simpleintro");
        const rect = el?.getBoundingClientRect();
        const viewportWidth = window.innerWidth || document.documentElement.clientWidth;
        const viewportHeight = window.innerHeight || document.documentElement.clientHeight;
        const navmenu = document.querySelector(".nav_box");
        const navlogo = document.querySelector(".nav_logo");
        if (rect?.bottom < 100 || rect?.top >= viewportHeight) navmenu.classList.add("nav_box--ch");
        else {
            navmenu.classList.remove("nav_box--ch");
            navlogo.href = "/";
        }
    }
    async ajaxImages() {
        let newpage = document.createElement("template");
        newpage.innerHTML = this.html;
        let paths = Array.from(newpage.content.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        return Promise.resolve();
    }
    async getJson(url) {
        // //  console.log(url)
        const posts = await fetch(url);
        const datap = await posts.json();
        // //  console.log(datap)
        this.html = _eta.render((0, _resourcelistEtaDefault.default), {
            global: this.main,
            posts: datap.posts
        });
        // //  console.log(this.html)
        // //  console.log(this.DOM.holder)
        this.DOM.holder.innerHTML = this.html;
        await this.ajaxImages();
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    async getPosts() {
        this.DOM.holder.classList.add("load");
        Promise.all([
            this.timeout(600),
            this.getJson(this.main.acf.base + "/wp-json/sdv/content-hub/v1/get-resources")
        ]).then(()=>{
            this.DOM.holder.classList.remove("load");
            for (let el of this.DOM.holder.querySelectorAll(".list"))// //  console.log(el)
            el.addEventListener("click", ()=>this.modalFn(el));
            this.emit("linkseventlisteners");
            this.emit("mousereset");
            this.resizeLimit();
        });
    }
    modalFn(el) {
    // this.modal.create(el)
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            this.anims[pos].stick.active = 0;
                            let index = this.sticks.indexOf(this.anims[pos]);
                            if (index > -1) this.sticks.splice(index, 1);
                        } else if (id == "v") clearInterval(this.clockInt);
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.sticks.push(this.anims[pos]);
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) {
            super.smoothScroll();
            this.changeHeader();
        }
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        await this.timeout(1);
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        // this.modal.removeEvents()
        return super.hide();
    }
};

},{"../../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./template.eta":"lCA7F","bundle-text:/src/views👁️👁️👁️/ETA/resourcelist.eta":"5aBda","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","../../Login🥸/LinkedinLogin/Dialog":"8Lgst","bundle-text:/src/views👁️👁️👁️/404/notlogged.eta":"lmsO5","bundle-text:/src/views👁️👁️👁️/404/noaccess.eta":"1N2Z6","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"lCA7F":[function(require,module,exports) {
module.exports = "<main class=\"resources\">\n  <section class=\"m-simpleintro\">\n    <div class=\"c-vw\">\n      <h2 class=\"tit1\"><%~ it.data.acf.title_lista %></h2>\n      <p><%~ it.data.acf.text_lista %></p>\n    </div>\n  </section>\n  <section class=\"m-lists\">\n    <div class=\"m-lists_hold hPosts\">\n    <%~ it.loading %>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>";

},{}],"5aBda":[function(require,module,exports) {
module.exports = "\n<% \n  it.posts.forEach(function(p,key){\n %>\n  <a class=\"list mouseHover\" data-title=\"<%~ p.title %>\" href=\"<%~ p.link %>\">\n    <div class=\"list_hold\">\n      <div class=\"list_info\">\n        <h3 class=\"tit2\"><%~ p.title %></h3>\n        <div class=\"description\">\n          <p><%~ p.description %></p>\n        </div>\n        <div class=\"tit4\"><%~ p.subtitle %> </div>\n        \n      </div>\n      <div class=\"list_image\"><div class=\"list_image_hold\"><img src=\"<%~ p.image %>\"></div></div>\n    </div>\n  </a>\n  <%\n  }) \n%>";

},{}],"lmsO5":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! SIGN UP TO ACCESS THIS CONTENT</h2>\n<h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3>\n<a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"1N2Z6":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! YOU DON'T HAVE ACCESS TO THIS CONTENT</h2>\n<% /* <h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3> */ %>\n<% /* <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a> */ %>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"5LEDn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
var _artEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/art.eta");
var _artEtaDefault = parcelHelpers.interopDefault(_artEta);
var _noaccessEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/noaccess.eta");
var _noaccessEtaDefault = parcelHelpers.interopDefault(_noaccessEta);
var _notloggedEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/notlogged.eta");
var _notloggedEtaDefault = parcelHelpers.interopDefault(_notloggedEta);
//COMPS
// import Timer from '/src/js🧠🧠🧠/components🦾/Timer.js'
var _eta = require("eta");
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        const response = await fetch(this.main.acf.base + "/wp-json/wp/v2/resource/" + content.dataset.id + "?acf_format=standard");
        const data = await response.json();
        // //  console.log(data)
        let Difference_In_Time = new Date(data.date).getTime() - new Date().getTime();
        let Difference_In_Days = Difference_In_Time / 86400000;
        let html = "";
        if (this?.main?.user) {
            if (!this?.main?.user?.acf?.is_content_hub_user) {
                html = _eta.render((0, _noaccessEtaDefault.default), {
                    global: this.main,
                    footer: this.footer
                });
                document.querySelector("#content").innerHTML += html;
                this.DOM = {
                    el: document.querySelector("main:not(.old)")
                };
                return;
            }
        } else {
            html = _eta.render((0, _notloggedEtaDefault.default), {
                global: this.main,
                footer: this.footer
            });
            document.querySelector("#content").innerHTML += html;
            this.DOM = {
                el: document.querySelector("main:not(.old)")
            };
            return;
        }
        // hide content behind login if older than 56 days / 8 weeks
        // (number should be negative)
        const numDayLimit = -56;
        {
            let resource_link = "#";
            const ch_menu_links = this.main?.acf?.ch_menu_links || [];
            ch_menu_links.forEach((x)=>{
                const url = x.link.url;
                const title = x.link.title.toLowerCase();
                if (title.includes("resources")) resource_link = url;
            });
            html = _eta.render((0, _templateEtaDefault.default), {
                global: this.main,
                data: data,
                footer: this.footer,
                resource_link
            });
        // //  console.log(html)
        }
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)")
        };
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
        await this.loadImages();
        await this.createAnimations();
        if (Difference_In_Days < -14 && !this.main.user) ;
        else await this.getRandom("resource", content.dataset.id, 2);
    //  this.slidrag = new Slidrag(this.DOM.el.querySelector('.swiper'))
    //  this.slidclick = new SlidClick(this.DOM.el.querySelector('.m-slidnum'))
    }
    changeHeader() {
        const el = document.querySelector(".m-simpleintro");
        const rect = el?.getBoundingClientRect();
        const viewportWidth = window.innerWidth || document.documentElement.clientWidth;
        const viewportHeight = window.innerHeight || document.documentElement.clientHeight;
        const navmenu = document.querySelector(".nav_box");
        const navlogo = document.querySelector(".nav_logo");
        if (rect?.bottom < 100 || rect?.top >= viewportHeight) navmenu.classList.add("nav_box--ch");
        else {
            navmenu.classList.remove("nav_box--ch");
            navlogo.href = "/";
        }
    }
    async loadImages() {
        const paths = this.DOM.el.querySelectorAll("img");
        const promises = [];
        for (let path of paths)if (path.dataset.src) await this.loadImage(path);
    }
    async loadImage(elem) {
        return new Promise((resolve, reject)=>{
            let url = elem.dataset.src;
            elem.src = url;
            // //  console.log('eeee')
            elem.onload = ()=>{
                if (elem.naturalWidth < elem.naturalHeight) {
                    elem.parentNode.classList.add("portrait");
                    let el = document.createElement("div");
                    el.classList.add("bigger");
                    el.style.display = "none";
                    elem.parentNode.appendChild(el);
                }
                resolve(elem);
            };
            elem.onerror = reject;
        });
    }
    async getJson(url) {
        const posts = await fetch(url);
        const datap = await posts.json();
        this.html = _eta.render((0, _artEtaDefault.default), {
            global: this.main,
            posts: datap.posts
        });
        await this.ajaxImages();
    }
    async ajaxImages() {
        let newpage = document.createElement("template");
        newpage.innerHTML = this.html;
        let paths = Array.from(newpage.content.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        return Promise.resolve();
    }
    async getRandom(type, notin, postperpage) {
        this.DOM.holder = this.DOM.el.querySelector(".hPosts");
        Promise.all([
            this.timeout(600),
            this.getJson(this.main.acf.base + "/wp-json/wp/v2/getrandom?type=" + type + "&notin=" + notin + "&perpage=" + postperpage)
        ]).then(()=>{
            this.DOM.holder.innerHTML = this.html;
            this.emit("linkseventlisteners");
            this.emit("mousereset");
            this.resizeLimit();
        });
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            // //  console.log(this.anims[pos])
                            this.anims[pos].stick.active = 0;
                            this.movestick = null;
                        } else if (id == "v") clearInterval(this.clockInt);
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "e") {
                            this.anims[pos].classel.start();
                            this.slidetext = this.anims[pos];
                        } else if (id == "v") this.clockStart(this.anims[pos].el.parentNode.querySelector(".time"));
                        else if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.movestick = this.anims[pos];
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) {
            super.smoothScroll();
            this.changeHeader();
        }
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        await this.timeout(1);
        this.DOM.el.classList.add("home-active");
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        return super.hide();
    }
};

},{"../../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./template.eta":"beROW","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","bundle-text:/src/views👁️👁️👁️/ETA/art.eta":"hkL5n","bundle-text:/src/views👁️👁️👁️/404/noaccess.eta":"8ybIO","bundle-text:/src/views👁️👁️👁️/404/notlogged.eta":"bKI7O","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"beROW":[function(require,module,exports) {
module.exports = "<main class=\"articlesingle\">\n  <section class=\"m-bc\">\n    <div class=\"c-vw\">\n      <div class=\"bc\">\n        <a class=\"mouseHover\" href=\"<%~ it.global.acf?.ch_home ?? '/content-hub' %>\">LC Hub</a>\n        <span>/</span><a class=\"mouseHover\" href=\"<%~ it.resource_link %>\">Resources</a>\n        <span>/</span><span><%~ it.data.title.rendered %></span>\n      </div>\n    </div>\n  </section>\n  <section class=\"m-simpleintro\">\n    <div class=\"c-vw\">\n      <h2 class=\"tit1\"><%~ it.data.title.rendered %></h2>\n      <div class=\"m-simpleintro_info\">\n        <div class=\"date\"><%~ it.data.ownpost_data.date %></div>\n      </div>\n    </div>\n  </section>\n\n  <section class=\"articlesingle_main\">\n      <div class=\"grid wp\">\n        <%~ it.data.content.rendered %>\n      </div>\n    </section>\n    <section class=\"m-share\">\n      <div class=\"m-share_hold grid\">\n        <p>share</p>\n        <div class=\"social\">\n          <a class=\"mouseHover Stw\" href=\"https://twitter.com/intent/tweet?url=<%~ it.data.link %>\"><%~ it.global.icons.tw %></a>\n            <a class=\"mouseHover Sfb\" href=\"https://www.facebook.com/sharer/sharer.php?u=<%~ it.data.link %>\"><%~ it.global.icons.fb %></a>\n            <a class=\"mouseHover Sin\" href=\"https://www.linkedin.com/shareArticle?url=<%~ it.data.link %>\"><%~ it.global.icons.in %></a>\n            <a class=\"mouseHover Srd\" href=\"https://www.reddit.com/submit?url=<%~ it.data.link %>\"><%~ it.global.icons.reddit %></a>\n            <a class=\"mouseHover Stb\" href=\"https://www.tumblr.com/share/link?url=<%~ it.data.link %>\"><%~ it.global.icons.tumbler %></a>\n        </div>\n      </div>\n    </section>\n    <section class=\"articlesingle_more hPosts\">\n    </section>\n    <section class=\"m-cta signupmod\" style=\"--main:#DF80AC\">\n    <div class=\"c-vw\">\n      <div class=\"hold\">\n         <%\n          var randomNum = Math.floor((Math.random() * it.global.acf.signup_text.length) + 1);\n          var title = it.global.acf.signup_text[randomNum-1].title;\n          var text = it.global.acf.signup_text[randomNum-1].text;\n          \n        %>\n        <h2 class=\"tit1\"><%~ title %></h2>\n        <h3 class=\"tit4\"><%~ text %> </h3>\n        </h3>\n        <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\">\n          <div class=\"btn_t\">TAP IN</div>\n        </a>\n      </div>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>\n      ";

},{}],"hkL5n":[function(require,module,exports) {
module.exports = "\n<% it.posts.forEach(function(p,key){ %>\n  <a class=\"art mouseHover\" href=\"<%~ p.link %>\" data-type=\"article\">\n    <div class=\"art_hold\">\n      <div class=\"art_image\">\n        <div class=\"btnmore btnmore-hovered\">\n          <div class=\"btnmore_t\">read more</div>\n        </div><img src=\"<%~ p.image %>\">\n      </div>\n      <div class=\"art_info\">\n        <h3 class=\"tit3\"><%~ p.title %></h3>\n        <% if(p.description!=null){ %>\n        <p class=\"desc\"><%~ p.description %></p>\n        <% } %>\n        <div class=\"date tit4\"><%~ p.date %></div>\n      </div>\n    </div>\n  </a>\n<% }) %>";

},{}],"8ybIO":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! YOU DON'T HAVE ACCESS TO THIS CONTENT</h2>\n<% /* <h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3> */ %>\n<% /* <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a> */ %>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"bKI7O":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! SIGN UP TO ACCESS THIS CONTENT</h2>\n<h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3>\n<a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"fr4mY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _fieldJs = require("./Field.js");
var _fieldJsDefault = parcelHelpers.interopDefault(_fieldJs);
var _jobEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/ETA/job.eta");
var _jobEtaDefault = parcelHelpers.interopDefault(_jobEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
var _notloggedEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/notlogged.eta");
var _notloggedEtaDefault = parcelHelpers.interopDefault(_notloggedEta);
var _noaccessEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/noaccess.eta");
var _noaccessEtaDefault = parcelHelpers.interopDefault(_noaccessEta);
var _eta = require("eta");
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        let html = "";
        const response = await fetch(this.main.acf.base + "/wp-json/wp/v2/pages/" + content.dataset.id + "?acf_format=standard");
        const data = await response.json();
        // //  console.log(data)
        if (this?.main?.user) {
            if (!this?.main?.user?.acf?.is_content_hub_user) {
                html = _eta.render((0, _noaccessEtaDefault.default), {
                    global: this.main,
                    footer: this.footer
                });
                document.querySelector("#content").innerHTML += html;
                this.DOM = {
                    el: document.querySelector("main:not(.old)")
                };
                return;
            }
        } else {
            html = _eta.render((0, _notloggedEtaDefault.default), {
                global: this.main,
                footer: this.footer
            });
            document.querySelector("#content").innerHTML += html;
            this.DOM = {
                el: document.querySelector("main:not(.old)")
            };
            return;
        }
        html = _eta.render((0, _templateEtaDefault.default), {
            data,
            global: this.main,
            footer: this.footer
        });
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)")
        };
        this.DOM.total = this.DOM.el.querySelector(".totalSearch");
        this.DOM.holder = this.DOM.el.querySelector(".hPosts");
        this.DOM.cats = this.DOM.el.querySelectorAll(".catEl");
        this.field = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".field"));
        this.field.DOM.npt.addEventListener("input", ()=>{
            this.getPosts(this.field.DOM.npt.value);
        });
        this.field.DOM.npt.value = "";
        this.field.checkField();
        this.cat = "";
        await this.getPosts("");
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
        for (let a of this.DOM.cats)a.addEventListener("click", ()=>this.blocksClick(a));
        await this.loadImages();
        await this.createAnimations();
    }
    changeHeader() {
        const el = document.querySelector(".ch-purpose_intro");
        const rect = el?.getBoundingClientRect();
        const viewportWidth = window.innerWidth || document.documentElement.clientWidth;
        const viewportHeight = window.innerHeight || document.documentElement.clientHeight;
        const navmenu = document.querySelector(".nav_box");
        const navlogo = document.querySelector(".nav_logo");
        if (rect?.bottom < 500 || rect?.top >= viewportHeight) navmenu.classList.add("nav_box--ch");
        else {
            navmenu.classList.remove("nav_box--ch");
            navlogo.href = "/";
        }
    }
    async ajaxImages() {
        let newpage = document.createElement("template");
        newpage.innerHTML = this.html;
        let paths = Array.from(newpage.content.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        return Promise.resolve();
    }
    async blocksClick(el) {
        this.DOM.el.querySelector(".catEl.act").classList.remove("act");
        const type = el.dataset.post;
        el.classList.add("act");
        // this.DOM.holder.classList.add('load')
        // await this.timeout(600)
        // if(type=='block'){
        //   this.DOM.holder.classList.add('blocks')
        // }
        // else{
        //   this.DOM.holder.classList.remove('blocks')
        // }
        // this.DOM.holder.classList.remove('load')
        this.cat = type;
        if (this.cat != "") {
            for (let el1 of this.DOM.el.querySelectorAll(".result"))if (this.cat == el1.dataset.post) el1.classList.remove("hide");
            else el1.classList.add("hide");
        } else for (let el2 of this.DOM.el.querySelectorAll(".result"))el2.classList.remove("hide");
        if (this.DOM.el.querySelectorAll(".art:not(.hide)").length == 1) this.DOM.total.innerHTML = this.DOM.el.querySelectorAll(".art:not(.hide)").length + " result";
        else this.DOM.total.innerHTML = this.DOM.el.querySelectorAll(".art:not(.hide)").length + " results";
    }
    async getJson(url) {
        // //  console.log(url)
        const posts = await fetch(url);
        const datap = await posts.json();
        // //  console.log(datap)
        this.html = _eta.render((0, _jobEtaDefault.default), {
            global: this.main,
            type: this.cat,
            posts: datap.posts
        });
        this.DOM.holder.innerHTML = this.html;
        await this.ajaxImages();
    }
    async getPosts(search) {
        this.DOM.holder.classList.add("load");
        Promise.all([
            this.timeout(600),
            this.getJson(this.main.acf.base + "/wp-json/wp/v2/getjobs")
        ]).then(()=>{
            this.DOM.holder.classList.remove("load");
            this.emit("linkseventlisteners");
            this.emit("mousereset");
            this.resizeLimit();
        });
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            // //  console.log(this.anims[pos])
                            this.anims[pos].stick.active = 0;
                            this.movestick = null;
                        } else if (id == "v") clearInterval(this.clockInt);
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "e") {
                            this.anims[pos].classel.start();
                            this.slidetext = this.anims[pos];
                        } else if (id == "v") this.clockStart(this.anims[pos].el.parentNode.querySelector(".time"));
                        else if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.movestick = this.anims[pos];
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) {
            super.smoothScroll();
            this.changeHeader();
        }
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        this.timeout(1);
        // gsap.to('.home',{opacity:1,ease:Power2.easeInOut,duration:.6})
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        return super.hide();
    }
};

},{"../../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./template.eta":"6gV2U","./Field.js":"cOJjn","bundle-text:/src/views👁️👁️👁️/ETA/job.eta":"7Tb1Q","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","bundle-text:/src/views👁️👁️👁️/404/notlogged.eta":"iCYtc","bundle-text:/src/views👁️👁️👁️/404/noaccess.eta":"iV6Xb","eta":"blnnU","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"6gV2U":[function(require,module,exports) {
module.exports = "<main class=\"purposep\">\n  <% let item = it.data.acf.ch_intro; %>\n  <section class=\"ch-purpose_intro\">\n    <div class=\"iO iO-slidetime\"></div>\n    <div class=\"left\">\n      <div class=\"left_el\">\n        <div class=\"left_el_hold\">\n          <% if(item){ %>\n            <img src=\"<%~ item.image %>\"/>\n          <% } %>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"right\">\n      <div class=\"right_hold\">\n        <% if(item){ %>\n          <h2 class=\"tit1\"><%~ item.heading %></h2>\n          <h3 class=\"tit4\">\n            <div class=\"line\">\n              <div class=\"word\"><%~ item.subheading %></div>\n            </div>\n          </h3>\n\n          <a class=\"btnmore mouseHover\" href=\"<%~ item.link ? item.link['url'] : '#' %>\">\n            <div class=\"btnmore_t\"><%~ item.link ? item.link['title'] : '' %></div>\n          </a>\n        <% } %>\n      </div>\n    </div>\n  </section>\n\n  <section class=\"purposep_intro\">\n    <div class=\"purposep_intro_field\">\n      <div class=\"field\"><label class=\"field_lbl\">Search</label><input class=\"field_npt\">\n        \n      </div>\n    </div>\n  </section>\n  <section class=\"purposep_tabs\">\n    <div class=\"tabs\">\n      <div class=\"tabs_els\">\n        <div class=\"simp catEl act\" data-post=\"\"><span>All</span></div>\n        <div class=\"simp catEl\" data-post=\"podcast\"><span>Pods</span></div>\n        <div class=\"simp catEl\" data-post=\"show\"><span>Shows</span></div>\n        <div class=\"simp catEl\" data-post=\"post\"><span>Articles</span></div>\n      </div>\n    </div>\n    <div class=\"totalSearch\">0 results</div>\n  </section>\n  <section class=\"purposep_results hPosts\">\n  </section>\n\n  <section class=\"m-cta signupmod\" style=\"--main:#DF80AC\">\n    <div class=\"c-vw\">\n      <div class=\"hold\">\n         <%\n          var randomNum = Math.floor((Math.random() * it.global.acf.signup_text.length) + 1);\n          var title = it.global.acf.signup_text[randomNum-1].title;\n          var text = it.global.acf.signup_text[randomNum-1].text;\n          \n        %>\n        <h2 class=\"tit1\"><%~ title %></h2>\n        <h3 class=\"tit4\"><%~ text %> </h3>\n        </h3>\n        <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\">\n          <div class=\"btn_t\">TAP IN</div>\n        </a>\n      </div>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>\n      ";

},{}],"cOJjn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
"use strict";
exports.default = class {
    constructor(el){
        this.DOM = {
            el: el
        };
        this.DOM.npt = this.DOM.el.querySelector(".field_npt");
        this.initEvents();
    }
    initEvents() {
        this.checkField = ()=>{
            if (this.DOM.npt.value == "") this.DOM.el.classList.add("fill");
            else this.DOM.el.classList.add("fill");
        };
        this.focusFn = ()=>{
            this.DOM.el.classList.remove("err");
            this.DOM.el.classList.add("foc");
        };
        this.focusoutFn = ()=>{
            this.DOM.el.classList.remove("foc");
            this.DOM.el.classList.remove("err");
        };
        // this.DOM.npt.addEventListener("input", ()=>this.checkField())
        this.DOM.npt.addEventListener("focusin", this.focusFn);
        this.DOM.npt.addEventListener("focusout", ()=>this.focusoutFn());
    }
    check() {
        if ("" == this.DOM.npt.value) return void this.DOM.el.classList.add("err");
        this.DOM.el.classList.remove("err");
    }
    clear() {
        this.DOM.el.classList.remove("foc");
        this.DOM.el.classList.remove("fill");
        this.DOM.el.classList.remove("err");
        this.DOM.npt.value = "";
    }
    removeEvents() {
        this.DOM.npt.removeEventListener("input", ()=>this.checkField());
        this.DOM.npt.removeEventListener("focusin", this.focusFn);
        this.DOM.npt.removeEventListener("focusout", ()=>this.focusoutFn());
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"7Tb1Q":[function(require,module,exports) {
module.exports = "\n<% it.posts.forEach(function(p,key){ %>\n\n  <a class=\"joblist mouseHover\" href=\"<%~ p.link %>\" data-type=\"job\">\n    <div class=\"joblist_hold\">\n      <div class=\"joblist_info\">\n        <div class=\"joblist_info_top\">\n          <h2 class=\"tit2\"><%~ p.title %></h2>\n          <h3 class=\"tit3\"><%~ p.client %></h3>\n          <div class=\"locate\">\n            <%~ it.global.icons.marker %>\n            <div class=\"locate_t\"><%~ p.location %></div>\n          </div>\n          <div class=\"description\">\n            <p><%~ p.description %></p>\n          </div>\n          <div class=\"date\">\n            <div class=\"date_t\"><%~ p.date %></div>\n          </div>\n        </div>\n      </div>\n      <div class=\"joblist_button\"><img src=\"<%~ p.logo %>\">\n        <div class=\"btns\">\n          <div class=\"btns_t\">Read more</div>\n        </div>\n      </div>\n    </div>\n  </a>\n<% }) %>";

},{}],"iCYtc":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! SIGN UP TO ACCESS THIS CONTENT</h2>\n<h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3>\n<a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"iV6Xb":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! YOU DON'T HAVE ACCESS TO THIS CONTENT</h2>\n<% /* <h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3> */ %>\n<% /* <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a> */ %>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"a3LP2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _page = require("../../../js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/defaults/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _templateEta = require("bundle-text:./template.eta");
var _templateEtaDefault = parcelHelpers.interopDefault(_templateEta);
var _fieldJs = require("./Field.js");
var _fieldJsDefault = parcelHelpers.interopDefault(_fieldJs);
var _listEta = require("bundle-text:./list.eta");
var _listEtaDefault = parcelHelpers.interopDefault(_listEta);
var _gsap = require("gsap");
var _mathJs = require("/src/js\uD83E\uDDE0\uD83E\uDDE0\uD83E\uDDE0/basic/math.js");
var _notloggedEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/notlogged.eta");
var _notloggedEtaDefault = parcelHelpers.interopDefault(_notloggedEta);
var _dialog = require("../../Login\uD83E\uDD78/LinkedinLogin/Dialog");
var _eta = require("eta");
var _noaccessEta = require("bundle-text:/src/views\uD83D\uDC41️\uD83D\uDC41️\uD83D\uDC41️/404/noaccess.eta");
var _noaccessEtaDefault = parcelHelpers.interopDefault(_noaccessEta);
exports.default = class extends (0, _pageDefault.default) {
    constructor(main, footer){
        super(main, footer);
    }
    /**
   * Animations.
   */ async generate(content) {
        let html = "";
        const response = await fetch(this.main.acf.base + "/wp-json/wp/v2/pages/" + content.dataset.id + "?acf_format=standard");
        const data = await response.json();
        // //  console.log(data)
        if (this?.main?.user) {
            if (!this?.main?.user?.acf?.is_content_hub_user) {
                html = _eta.render((0, _noaccessEtaDefault.default), {
                    global: this.main,
                    footer: this.footer
                });
                document.querySelector("#content").innerHTML += html;
                this.DOM = {
                    el: document.querySelector("main:not(.old)")
                };
                return;
            }
        } else {
            html = _eta.render((0, _notloggedEtaDefault.default), {
                global: this.main,
                footer: this.footer
            });
            document.querySelector("#content").innerHTML += html;
            this.DOM = {
                el: document.querySelector("main:not(.old)")
            };
            return;
        }
        html = _eta.render((0, _templateEtaDefault.default), {
            data,
            global: this.main,
            footer: this.footer
        });
        document.querySelector("#content").innerHTML += html;
        this.DOM = {
            el: document.querySelector("main:not(.old)")
        };
        this.DOM.total = this.DOM.el.querySelector(".totalSearch");
        this.DOM.holder = this.DOM.el.querySelector(".hPosts");
        this.DOM.cats = this.DOM.el.querySelectorAll(".catEl");
        this.field = new (0, _fieldJsDefault.default)(this.DOM.el.querySelector(".field"));
        this.field.DOM.npt.addEventListener("input", ()=>{
            this.getPosts(this.field.DOM.npt.value);
        });
        this.field.DOM.npt.value = "";
        this.field.checkField();
        this.cat = "";
        await this.getPosts("");
        this.DOM.watchers = this.DOM.el.querySelectorAll(".iO");
        this.font = parseFloat(getComputedStyle(document.documentElement).fontSize);
        for (let a of this.DOM.cats)a.addEventListener("click", ()=>this.blocksClick(a));
        await this.loadImages();
        await this.createAnimations();
    }
    changeHeader() {
        const el = document.querySelector(".ch-latest_intro");
        const rect = el?.getBoundingClientRect();
        const viewportWidth = window.innerWidth || document.documentElement.clientWidth;
        const viewportHeight = window.innerHeight || document.documentElement.clientHeight;
        const navmenu = document.querySelector(".nav_box");
        const navlogo = document.querySelector(".nav_logo");
        if (rect?.bottom < 500 || rect?.top >= viewportHeight) navmenu.classList.add("nav_box--ch");
        else {
            navmenu.classList.remove("nav_box--ch");
            navlogo.href = "/";
        }
    }
    async ajaxImages() {
        let newpage = document.createElement("template");
        newpage.innerHTML = this.html;
        let paths = Array.from(newpage.content.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        return Promise.resolve();
    }
    async blocksClick(el) {
        this.DOM.el.querySelector(".catEl.act").classList.remove("act");
        const type = el.dataset.post;
        el.classList.add("act");
        // this.DOM.holder.classList.add('load')
        // await this.timeout(600)
        // if(type=='block'){
        //   this.DOM.holder.classList.add('blocks')
        // }
        // else{
        //   this.DOM.holder.classList.remove('blocks')
        // }
        // this.DOM.holder.classList.remove('load')
        this.cat = type;
        if (this.cat != "") {
            for (let el1 of this.DOM.el.querySelectorAll(".result"))if (this.cat == el1.dataset.post) el1.classList.remove("hide");
            else el1.classList.add("hide");
        } else for (let el2 of this.DOM.el.querySelectorAll(".result"))el2.classList.remove("hide");
        this.post_type = type;
        this.getPosts(this.field.DOM.npt.value);
    }
    async getJson(url) {
        this.DOM.holder.innerHTML = (0, _dialog.getLoadingWheel)();
        const posts = await fetch(url);
        const datap = await posts.json();
        this.html = _eta.render((0, _listEtaDefault.default), {
            global: this.main,
            type: this.cat,
            posts: datap.post
        });
        this.DOM.holder.innerHTML = this.html;
        if (this.DOM.el.querySelectorAll(".el:not(.hide)").length == 1) this.DOM.total.innerHTML = this.DOM.el.querySelectorAll(".el:not(.hide)").length + " result";
        else this.DOM.total.innerHTML = this.DOM.el.querySelectorAll(".el:not(.hide)").length + " results";
        await this.ajaxImages();
    }
    async getPosts(search) {
        this.DOM.holder.classList.add("load");
        const params = new URLSearchParams();
        params.set("search", search);
        if (this.post_type) params.set("post_type", this.post_type);
        Promise.all([
            this.timeout(600),
            this.getJson(`${this.main.acf.base}/wp-json/sdv/content-hub/v1/get-media?${params}`)
        ]).then(()=>{
            this.DOM.holder.classList.remove("load");
            this.emit("linkseventlisteners");
            this.emit("mousereset");
            this.resizeLimit();
        });
    }
    async loadImages() {
        let paths = Array.from(this.DOM.el.querySelectorAll("img"));
        const promises = [];
        paths.forEach((path)=>{
            promises.push(new Promise((resolve, reject)=>{
                const img = new Image();
                img.onload = ()=>resolve(path);
                img.onerror = ()=>reject(path);
                img.src = path.src;
            }));
        });
        let videos = Array.from(this.DOM.el.querySelectorAll("video.wait"));
        if (videos) Promise.all(videos).then((values)=>{
            for (let vid of values)vid.play();
        });
        return super.loadImages();
    }
    callBacks() {
        this.sticks = [];
        this.callback = (entries, observer)=>{
            entries.forEach((entry)=>{
                if (!entry.target.dataset.pos) return false;
                const pos = entry.target.dataset.pos;
                const id = this.anims[pos].id.substring(0, 1);
                id;
                if (!entry.isIntersecting) {
                    if (this.anims[pos].active == true && this.anims[pos].animated == 1) {
                        if (id == "s") {
                            // //  console.log(this.anims[pos])
                            this.anims[pos].stick.active = 0;
                            this.movestick = null;
                        } else if (id == "v") clearInterval(this.clockInt);
                        else if (id == "t") {
                            this.anims[pos].stick.active = 0;
                            this.movetext = null;
                        } else if (id == "c") document.documentElement.classList.remove("white-menu");
                        else if (id == "l") document.documentElement.classList.remove("logohide-menu");
                        else if (id == "q") document.documentElement.classList.remove("quick-menu");
                        else if (id == "e") {
                            this.anims[pos].classel.stop();
                            this.slidetext = null;
                        }
                    }
                    this.anims[pos].active = false;
                } else if (entry.isIntersecting) {
                    if (this.anims[pos].active == false && this.anims[pos].animated == 1) {
                        if (id == "e") {
                            this.anims[pos].classel.start();
                            this.slidetext = this.anims[pos];
                        } else if (id == "v") this.clockStart(this.anims[pos].el.parentNode.querySelector(".time"));
                        else if (id == "s") {
                            this.anims[pos].stick.active = 1;
                            this.movestick = this.anims[pos];
                        } else if (id == "t") {
                            this.anims[pos].stick.active = 1;
                            this.movetext = this.anims[pos];
                        } else if (id == "c") document.documentElement.classList.add("white-menu");
                        else if (id == "l") document.documentElement.classList.add("logohide-menu");
                        else if (id == "q") document.documentElement.classList.add("quick-menu");
                    }
                    this.anims[pos].active = true;
                    if (this.anims[pos].animated == 2) this.makeAnim(this.anims[pos], entry.boundingClientRect.y.toFixed(0), entry.intersectionRatio);
                    else if (this.anims[pos].animated == 0) {
                        if (entry.intersectionRatio > 0.8) {
                            entry.target.classList.add("inview");
                            if (this.anims[pos].classel != null) this.anims[pos].classel.start();
                            this.observer.unobserve(entry.target);
                        }
                    }
                }
            });
        };
        if (this.main.isTouch) this.optionsob = {
            root: document.body,
            threshold: this.buildThresholdList(500)
        };
        else this.optionsob = {
            root: null,
            threshold: this.buildThresholdList(500)
        };
        this.observer = new IntersectionObserver(this.callback, this.optionsob);
        if (this.DOM.watchers) this.DOM.watchers.forEach((el)=>{
            this.observer.observe(el);
        });
    }
    createAnimations() {
        if (this.DOM.watchers) for (let [index, anim] of this.DOM.watchers.entries()){
            let vocal = "";
            let animated = 0;
            let stick = null;
            let classel = null;
            let gsapanim = null;
            let delay = 0;
            if (anim.classList.contains("iO-stck")) {
                animated = 1;
                stick = {
                    parent: this.DOM.el.querySelector("#stck" + anim.dataset.stck),
                    son: this.DOM.el.querySelector("#stck" + anim.dataset.stck + " .stck_main"),
                    active: 0,
                    current: 0,
                    target: 0,
                    pos: 0,
                    prog: 0,
                    limit: 0
                };
                vocal = "s" + index;
            } else if (anim.classList.contains("iO-time")) {
                vocal = "v" + index;
                animated = 1;
            } else vocal = "n" + index;
            anim.dataset.pos = index;
            let animobj = {
                el: anim,
                pos: index,
                stick: stick,
                id: vocal + "s",
                animated: animated,
                gsapanim: gsapanim,
                classel: classel,
                active: false
            };
            this.anims.push(animobj);
        }
    }
    makeAnim(anim, y, ratio) {
        const id = anim.id.substring(0, 1);
        let prog = 0;
        //HAY que hacer algo con esto, que si no tiene el tamaño de la pantalla,peta
        if (y < 0) prog = 1 - ratio / 2;
        else prog = ratio / 2;
        if (id == "p" || id == "h" || id == "f") anim.gsapanim.progress(prog);
    }
    onResize() {
        return super.onResize();
    }
    smoothScroll() {
        if (this.isVisible == 1) {
            super.smoothScroll();
            this.changeHeader();
        }
    }
    mobileScroll() {
        this.isAutoScroll;
    }
    async show() {
        this.timeout(1);
        // gsap.to('.home',{opacity:1,ease:Power2.easeInOut,duration:.6})
        // await this.animScroll.play()
        return super.show();
    }
    async hide() {
        this.isVisible = 0;
        return super.hide();
    }
};

},{"../../../js🧠🧠🧠/defaults/Page":"98P6v","bundle-text:./template.eta":"f0Fzg","./Field.js":"ld7DI","bundle-text:./list.eta":"vtJ2X","gsap":"gS77a","/src/js🧠🧠🧠/basic/math.js":"bABGj","bundle-text:/src/views👁️👁️👁️/404/notlogged.eta":"hVbL7","../../Login🥸/LinkedinLogin/Dialog":"8Lgst","eta":"blnnU","bundle-text:/src/views👁️👁️👁️/404/noaccess.eta":"bPhIN","@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"f0Fzg":[function(require,module,exports) {
module.exports = "<main class=\"newsp\">\n  <% let item = it.data.acf.ch_intro; %>\n  <section class=\"ch-latest_intro\">\n    <div class=\"iO iO-slidetime\"></div>\n    <div class=\"left\">\n      <div class=\"left_el\">\n        <div class=\"left_el_hold\">\n          <% if(item){ %>\n            <img src=\"<%~ item.image %>\"/>\n          <% } %>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"right\">\n      <div class=\"right_hold\">\n        <% if(item){ %>\n          <h2 class=\"tit1\"><%~ item.heading %></h2>\n          <h3 class=\"tit4\">\n            <div class=\"line\">\n              <div class=\"word\"><%~ item.subheading %></div>\n            </div>\n          </h3>\n\n          <a class=\"btnmore mouseHover\" href=\"<%~ item.link ? item.link['url'] : '#' %>\">\n            <div class=\"btnmore_t\"><%~ item.link ? item.link['title'] : '' %></div>\n          </a>\n        <% } %>\n      </div>\n    </div>\n  </section>\n\n  <section class=\"newsp_intro\">\n    <div class=\"newsp_intro_field\">\n      <div class=\"field\"><label class=\"field_lbl\">Search</label><input class=\"field_npt\">\n        \n      </div>\n    </div>\n  </section>\n  <section class=\"newsp_tabs\">\n    <div class=\"tabs\">\n      <div class=\"tabs_els\">\n        <div class=\"simp catEl act\" data-post=\"\"><span>All</span></div>\n        <div class=\"simp catEl\" data-post=\"podcast\"><span>Pods</span></div>\n        <div class=\"simp catEl\" data-post=\"show\"><span>Shows</span></div>\n        <div class=\"simp catEl\" data-post=\"post\"><span>Articles</span></div>\n      </div>\n    </div>\n    <div class=\"totalSearch\">0 results</div>\n  </section>\n  <section class=\"newsp_results hPosts\">\n  </section>\n\n  <section class=\"m-cta signupmod\" style=\"--main:#DF80AC\">\n    <div class=\"c-vw\">\n      <div class=\"hold\">\n         <%\n          var randomNum = Math.floor((Math.random() * it.global.acf.signup_text.length) + 1);\n          var title = it.global.acf.signup_text[randomNum-1].title;\n          var text = it.global.acf.signup_text[randomNum-1].text;\n          \n        %>\n        <h2 class=\"tit1\"><%~ title %></h2>\n        <h3 class=\"tit4\"><%~ text %> </h3>\n        </h3>\n        <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\">\n          <div class=\"btn_t\">TAP IN</div>\n        </a>\n      </div>\n    </div>\n  </section>\n  <%~ it.footer %>\n</main>\n      ";

},{}],"ld7DI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
"use strict";
exports.default = class {
    constructor(el){
        this.DOM = {
            el: el
        };
        this.DOM.npt = this.DOM.el.querySelector(".field_npt");
        this.initEvents();
    }
    initEvents() {
        this.checkField = ()=>{
            if (this.DOM.npt.value == "") this.DOM.el.classList.add("fill");
            else this.DOM.el.classList.add("fill");
        };
        this.focusFn = ()=>{
            this.DOM.el.classList.remove("err");
            this.DOM.el.classList.add("foc");
        };
        this.focusoutFn = ()=>{
            this.DOM.el.classList.remove("foc");
            this.DOM.el.classList.remove("err");
        };
        // this.DOM.npt.addEventListener("input", ()=>this.checkField())
        this.DOM.npt.addEventListener("focusin", this.focusFn);
        this.DOM.npt.addEventListener("focusout", ()=>this.focusoutFn());
    }
    check() {
        if ("" == this.DOM.npt.value) return void this.DOM.el.classList.add("err");
        this.DOM.el.classList.remove("err");
    }
    clear() {
        this.DOM.el.classList.remove("foc");
        this.DOM.el.classList.remove("fill");
        this.DOM.el.classList.remove("err");
        this.DOM.npt.value = "";
    }
    removeEvents() {
        this.DOM.npt.removeEventListener("input", ()=>this.checkField());
        this.DOM.npt.removeEventListener("focusin", this.focusFn);
        this.DOM.npt.removeEventListener("focusout", ()=>this.focusoutFn());
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"i4gup"}],"vtJ2X":[function(require,module,exports) {
module.exports = "\n<% it.posts.forEach(function(w,key){ %>\n    <a class=\"el mouseFollow\" data-image=\"<%~ w.image_a %>\" data-type=\"article\" href=\"<%~ w.link %>\">\n        <h3 class=\"tit2\"><span><%~ w.title %></span></h3>\n    </a>\n<% }) %>";

},{}],"hVbL7":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! SIGN UP TO ACCESS THIS CONTENT</h2>\n<h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3>\n<a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"bPhIN":[function(require,module,exports) {
module.exports = "<main class=\"errorpage\">\n<section>\n<img src=\"<%~ it.global.acf.template %>/public/notlogged.png\">\n<div class=\"c-vw\">\n<div class=\"box\">\n<h2 class=\"tit1\">OOPS! YOU DON'T HAVE ACCESS TO THIS CONTENT</h2>\n<% /* <h3 class=\"tit4\">GET the full living corporate experience by signing-up FOR FREE</h3> */ %>\n<% /* <a class=\"btn mouseHover\" href=\"<%~ it.global.acf.login %>\"><div class=\"btn_t\">SIGN UP NOW</div></a> */ %>\n</div></div>\n</section>\n  <%~ it.footer %>\n</main>";

},{}],"h4C4A":[function(require,module,exports) {
/* Font Face Observer v2.3.0 - © Bram Stein. License: BSD-3-Clause */ (function() {
    function p(a, c) {
        document.addEventListener ? a.addEventListener("scroll", c, !1) : a.attachEvent("scroll", c);
    }
    function u(a) {
        document.body ? a() : document.addEventListener ? document.addEventListener("DOMContentLoaded", function b() {
            document.removeEventListener("DOMContentLoaded", b);
            a();
        }) : document.attachEvent("onreadystatechange", function g() {
            if ("interactive" == document.readyState || "complete" == document.readyState) document.detachEvent("onreadystatechange", g), a();
        });
    }
    function w(a) {
        this.g = document.createElement("div");
        this.g.setAttribute("aria-hidden", "true");
        this.g.appendChild(document.createTextNode(a));
        this.h = document.createElement("span");
        this.i = document.createElement("span");
        this.m = document.createElement("span");
        this.j = document.createElement("span");
        this.l = -1;
        this.h.style.cssText = "max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;";
        this.i.style.cssText = "max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;";
        this.j.style.cssText = "max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;";
        this.m.style.cssText = "display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;";
        this.h.appendChild(this.m);
        this.i.appendChild(this.j);
        this.g.appendChild(this.h);
        this.g.appendChild(this.i);
    }
    function x(a, c) {
        a.g.style.cssText = "max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;white-space:nowrap;font-synthesis:none;font:" + c + ";";
    }
    function B(a) {
        var c = a.g.offsetWidth, b = c + 100;
        a.j.style.width = b + "px";
        a.i.scrollLeft = b;
        a.h.scrollLeft = a.h.scrollWidth + 100;
        return a.l !== c ? (a.l = c, !0) : !1;
    }
    function C(a, c) {
        function b() {
            var e = g;
            B(e) && null !== e.g.parentNode && c(e.l);
        }
        var g = a;
        p(a.h, b);
        p(a.i, b);
        B(a);
    }
    function D(a, c, b) {
        c = c || {};
        b = b || window;
        this.family = a;
        this.style = c.style || "normal";
        this.weight = c.weight || "normal";
        this.stretch = c.stretch || "normal";
        this.context = b;
    }
    var E = null, F = null, G = null, H = null;
    function I(a) {
        null === F && (M(a) && /Apple/.test(window.navigator.vendor) ? (a = /AppleWebKit\/([0-9]+)(?:\.([0-9]+))(?:\.([0-9]+))/.exec(window.navigator.userAgent), F = !!a && 603 > parseInt(a[1], 10)) : F = !1);
        return F;
    }
    function M(a) {
        null === H && (H = !!a.document.fonts);
        return H;
    }
    function N(a, c) {
        var b = a.style, g = a.weight;
        if (null === G) {
            var e = document.createElement("div");
            try {
                e.style.font = "condensed 100px sans-serif";
            } catch (q) {}
            G = "" !== e.style.font;
        }
        return [
            b,
            g,
            G ? a.stretch : "",
            "100px",
            c
        ].join(" ");
    }
    D.prototype.load = function(a, c) {
        var b = this, g = a || "BESbswy", e = 0, q = c || 3E3, J = (new Date).getTime();
        return new Promise(function(K, L) {
            if (M(b.context) && !I(b.context)) {
                var O = new Promise(function(r, t) {
                    function h() {
                        (new Date).getTime() - J >= q ? t(Error("" + q + "ms timeout exceeded")) : b.context.document.fonts.load(N(b, '"' + b.family + '"'), g).then(function(n) {
                            1 <= n.length ? r() : setTimeout(h, 25);
                        }, t);
                    }
                    h();
                }), P = new Promise(function(r, t) {
                    e = setTimeout(function() {
                        t(Error("" + q + "ms timeout exceeded"));
                    }, q);
                });
                Promise.race([
                    P,
                    O
                ]).then(function() {
                    clearTimeout(e);
                    K(b);
                }, L);
            } else u(function() {
                function r() {
                    var d;
                    if (d = -1 != k && -1 != l || -1 != k && -1 != m || -1 != l && -1 != m) (d = k != l && k != m && l != m) || (null === E && (d = /AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent), E = !!d && (536 > parseInt(d[1], 10) || 536 === parseInt(d[1], 10) && 11 >= parseInt(d[2], 10))), d = E && (k == y && l == y && m == y || k == z && l == z && m == z || k == A && l == A && m == A)), d = !d;
                    d && (null !== f.parentNode && f.parentNode.removeChild(f), clearTimeout(e), K(b));
                }
                function t() {
                    if ((new Date).getTime() - J >= q) null !== f.parentNode && f.parentNode.removeChild(f), L(Error("" + q + "ms timeout exceeded"));
                    else {
                        var d = b.context.document.hidden;
                        if (!0 === d || void 0 === d) k = h.g.offsetWidth, l = n.g.offsetWidth, m = v.g.offsetWidth, r();
                        e = setTimeout(t, 50);
                    }
                }
                var h = new w(g), n = new w(g), v = new w(g), k = -1, l = -1, m = -1, y = -1, z = -1, A = -1, f = document.createElement("div");
                f.dir = "ltr";
                x(h, N(b, "sans-serif"));
                x(n, N(b, "serif"));
                x(v, N(b, "monospace"));
                f.appendChild(h.g);
                f.appendChild(n.g);
                f.appendChild(v.g);
                b.context.document.body.appendChild(f);
                y = h.g.offsetWidth;
                z = n.g.offsetWidth;
                A = v.g.offsetWidth;
                t();
                C(h, function(d) {
                    k = d;
                    r();
                });
                x(h, N(b, '"' + b.family + '",sans-serif'));
                C(n, function(d) {
                    l = d;
                    r();
                });
                x(n, N(b, '"' + b.family + '",serif'));
                C(v, function(d) {
                    m = d;
                    r();
                });
                x(v, N(b, '"' + b.family + '",monospace'));
            });
        });
    };
    module.exports = D;
})();

},{}]},["2Rr7r","hXVIw"], "hXVIw", "parcelRequirefb13")

